ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"IntQueueTimer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.vInitialiseTimerForIntQueueTest,"ax",%progbits
  19              		.align	2
  20              		.global	vInitialiseTimerForIntQueueTest
  21              		.thumb
  22              		.thumb_func
  23              		.type	vInitialiseTimerForIntQueueTest, %function
  24              	vInitialiseTimerForIntQueueTest:
  25              	.LFB68:
  26              		.file 1 "IntQueueTimer.c"
   1:IntQueueTimer.c **** /*
   2:IntQueueTimer.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:IntQueueTimer.c ****     All rights reserved
   4:IntQueueTimer.c **** 
   5:IntQueueTimer.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:IntQueueTimer.c **** 
   7:IntQueueTimer.c ****     This file is part of the FreeRTOS distribution.
   8:IntQueueTimer.c **** 
   9:IntQueueTimer.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:IntQueueTimer.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:IntQueueTimer.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:IntQueueTimer.c **** 
  13:IntQueueTimer.c ****     ***************************************************************************
  14:IntQueueTimer.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:IntQueueTimer.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:IntQueueTimer.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:IntQueueTimer.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:IntQueueTimer.c ****     ***************************************************************************
  19:IntQueueTimer.c **** 
  20:IntQueueTimer.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:IntQueueTimer.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:IntQueueTimer.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:IntQueueTimer.c ****     link: http://www.freertos.org/a00114.html
  24:IntQueueTimer.c **** 
  25:IntQueueTimer.c ****     ***************************************************************************
  26:IntQueueTimer.c ****      *                                                                       *
  27:IntQueueTimer.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:IntQueueTimer.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:IntQueueTimer.c ****      *    platform software that is more than just the market leader, it     *
  30:IntQueueTimer.c ****      *    is the industry's de facto standard.                               *
  31:IntQueueTimer.c ****      *                                                                       *
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 2


  32:IntQueueTimer.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:IntQueueTimer.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:IntQueueTimer.c ****      *    tutorial book, reference manual, or both:                          *
  35:IntQueueTimer.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:IntQueueTimer.c ****      *                                                                       *
  37:IntQueueTimer.c ****     ***************************************************************************
  38:IntQueueTimer.c **** 
  39:IntQueueTimer.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:IntQueueTimer.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:IntQueueTimer.c ****     defined configASSERT()?
  42:IntQueueTimer.c **** 
  43:IntQueueTimer.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:IntQueueTimer.c ****     embedded software for free we request you assist our global community by
  45:IntQueueTimer.c ****     participating in the support forum.
  46:IntQueueTimer.c **** 
  47:IntQueueTimer.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:IntQueueTimer.c ****     be as productive as possible as early as possible.  Now you can receive
  49:IntQueueTimer.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:IntQueueTimer.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:IntQueueTimer.c **** 
  52:IntQueueTimer.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:IntQueueTimer.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:IntQueueTimer.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:IntQueueTimer.c **** 
  56:IntQueueTimer.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:IntQueueTimer.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:IntQueueTimer.c **** 
  59:IntQueueTimer.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:IntQueueTimer.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:IntQueueTimer.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:IntQueueTimer.c **** 
  63:IntQueueTimer.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:IntQueueTimer.c ****     engineered and independently SIL3 certified version for use in safety and
  65:IntQueueTimer.c ****     mission critical applications that require provable dependability.
  66:IntQueueTimer.c **** 
  67:IntQueueTimer.c ****     1 tab == 4 spaces!
  68:IntQueueTimer.c **** */
  69:IntQueueTimer.c **** 
  70:IntQueueTimer.c **** #include <device.h>
  71:IntQueueTimer.c **** #include "FreeRTOS.h"
  72:IntQueueTimer.c **** #include "task.h"
  73:IntQueueTimer.c **** /*---------------------------------------------------------------------------*/
  74:IntQueueTimer.c **** 
  75:IntQueueTimer.c **** extern portBASE_TYPE xFirstTimerHandler( void );
  76:IntQueueTimer.c **** extern portBASE_TYPE xSecondTimerHandler( void );
  77:IntQueueTimer.c **** /*---------------------------------------------------------------------------*/
  78:IntQueueTimer.c **** 
  79:IntQueueTimer.c **** CY_ISR_PROTO( vHighFrequencyFirstISR );
  80:IntQueueTimer.c **** CY_ISR_PROTO( vHighFrequencySecondISR );
  81:IntQueueTimer.c **** /*---------------------------------------------------------------------------*/
  82:IntQueueTimer.c **** 
  83:IntQueueTimer.c **** /**
  84:IntQueueTimer.c ****  * Installs and starts the ISRs that drive the Interupt Queue Tests.
  85:IntQueueTimer.c ****  */
  86:IntQueueTimer.c **** void vInitialiseTimerForIntQueueTest( void )
  87:IntQueueTimer.c **** {
  27              		.loc 1 87 0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 3


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  88:IntQueueTimer.c **** 	taskENTER_CRITICAL();
  37              		.loc 1 88 0
  38 0004 FFF7FEFF 		bl	vPortEnterCritical
  89:IntQueueTimer.c **** 	{
  90:IntQueueTimer.c **** 		/* Initialise and start the First Timer ISR. */
  91:IntQueueTimer.c **** 		isr_High_Frequency_2000Hz_ClearPending();
  39              		.loc 1 91 0
  40 0008 FFF7FEFF 		bl	isr_High_Frequency_2000Hz_ClearPending
  92:IntQueueTimer.c **** 		isr_High_Frequency_2000Hz_StartEx( ( cyisraddress ) vHighFrequencyFirstISR );
  41              		.loc 1 92 0
  42 000c 0548     		ldr	r0, .L2
  43 000e FFF7FEFF 		bl	isr_High_Frequency_2000Hz_StartEx
  93:IntQueueTimer.c **** 
  94:IntQueueTimer.c **** 		/* Initialise and start the Second Timer ISR. */
  95:IntQueueTimer.c **** 		isr_High_Frequency_2001Hz_ClearPending();
  44              		.loc 1 95 0
  45 0012 FFF7FEFF 		bl	isr_High_Frequency_2001Hz_ClearPending
  96:IntQueueTimer.c **** 		isr_High_Frequency_2001Hz_StartEx( ( cyisraddress ) vHighFrequencySecondISR );
  46              		.loc 1 96 0
  47 0016 0448     		ldr	r0, .L2+4
  48 0018 FFF7FEFF 		bl	isr_High_Frequency_2001Hz_StartEx
  97:IntQueueTimer.c **** 	}
  98:IntQueueTimer.c **** 	taskEXIT_CRITICAL();
  49              		.loc 1 98 0
  50 001c FFF7FEFF 		bl	vPortExitCritical
  99:IntQueueTimer.c **** }
  51              		.loc 1 99 0
  52 0020 80BD     		pop	{r7, pc}
  53              	.L3:
  54 0022 00BF     		.align	2
  55              	.L2:
  56 0024 00000000 		.word	vHighFrequencyFirstISR
  57 0028 00000000 		.word	vHighFrequencySecondISR
  58              		.cfi_endproc
  59              	.LFE68:
  60              		.size	vInitialiseTimerForIntQueueTest, .-vInitialiseTimerForIntQueueTest
  61              		.section	.text.vHighFrequencyFirstISR,"ax",%progbits
  62              		.align	2
  63              		.global	vHighFrequencyFirstISR
  64              		.thumb
  65              		.thumb_func
  66              		.type	vHighFrequencyFirstISR, %function
  67              	vHighFrequencyFirstISR:
  68              	.LFB69:
 100:IntQueueTimer.c **** /*---------------------------------------------------------------------------*/
 101:IntQueueTimer.c **** 
 102:IntQueueTimer.c **** CY_ISR(vHighFrequencyFirstISR)
 103:IntQueueTimer.c **** {
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 4


  69              		.loc 1 103 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
 104:IntQueueTimer.c **** 	/* Call back into the test code and context switch if necessary. */
 105:IntQueueTimer.c **** 	portEND_SWITCHING_ISR( xFirstTimerHandler() );
  79              		.loc 1 105 0
  80 0004 FFF7FEFF 		bl	xFirstTimerHandler
  81 0008 0346     		mov	r3, r0
  82 000a 002B     		cmp	r3, #0
  83 000c 07D0     		beq	.L4
  84              		.loc 1 105 0 is_stmt 0 discriminator 1
  85 000e 044B     		ldr	r3, .L6
  86 0010 4FF08052 		mov	r2, #268435456
  87 0014 1A60     		str	r2, [r3]
  88              	@ 105 "IntQueueTimer.c" 1
  89 0016 BFF34F8F 		dsb
  90              	@ 0 "" 2
  91              	@ 105 "IntQueueTimer.c" 1
  92 001a BFF36F8F 		isb
  93              	@ 0 "" 2
  94              		.thumb
  95              	.L4:
 106:IntQueueTimer.c **** }
  96              		.loc 1 106 0 is_stmt 1
  97 001e 80BD     		pop	{r7, pc}
  98              	.L7:
  99              		.align	2
 100              	.L6:
 101 0020 04ED00E0 		.word	-536810236
 102              		.cfi_endproc
 103              	.LFE69:
 104              		.size	vHighFrequencyFirstISR, .-vHighFrequencyFirstISR
 105              		.section	.text.vHighFrequencySecondISR,"ax",%progbits
 106              		.align	2
 107              		.global	vHighFrequencySecondISR
 108              		.thumb
 109              		.thumb_func
 110              		.type	vHighFrequencySecondISR, %function
 111              	vHighFrequencySecondISR:
 112              	.LFB70:
 107:IntQueueTimer.c **** /*---------------------------------------------------------------------------*/
 108:IntQueueTimer.c **** 
 109:IntQueueTimer.c **** CY_ISR(vHighFrequencySecondISR)
 110:IntQueueTimer.c **** {
 113              		.loc 1 110 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 5


 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 111:IntQueueTimer.c **** 	/* Call back into the test code and context switch if necessary. */
 112:IntQueueTimer.c **** 	portEND_SWITCHING_ISR( xSecondTimerHandler() );
 123              		.loc 1 112 0
 124 0004 FFF7FEFF 		bl	xSecondTimerHandler
 125 0008 0346     		mov	r3, r0
 126 000a 002B     		cmp	r3, #0
 127 000c 07D0     		beq	.L8
 128              		.loc 1 112 0 is_stmt 0 discriminator 1
 129 000e 044B     		ldr	r3, .L10
 130 0010 4FF08052 		mov	r2, #268435456
 131 0014 1A60     		str	r2, [r3]
 132              	@ 112 "IntQueueTimer.c" 1
 133 0016 BFF34F8F 		dsb
 134              	@ 0 "" 2
 135              	@ 112 "IntQueueTimer.c" 1
 136 001a BFF36F8F 		isb
 137              	@ 0 "" 2
 138              		.thumb
 139              	.L8:
 113:IntQueueTimer.c **** }
 140              		.loc 1 113 0 is_stmt 1
 141 001e 80BD     		pop	{r7, pc}
 142              	.L11:
 143              		.align	2
 144              	.L10:
 145 0020 04ED00E0 		.word	-536810236
 146              		.cfi_endproc
 147              	.LFE70:
 148              		.size	vHighFrequencySecondISR, .-vHighFrequencySecondISR
 149              		.text
 150              	.Letext0:
 151              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 152              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 153              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 154              		.file 5 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 155              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 156              		.section	.debug_info,"",%progbits
 157              	.Ldebug_info0:
 158 0000 12010000 		.4byte	0x112
 159 0004 0400     		.2byte	0x4
 160 0006 00000000 		.4byte	.Ldebug_abbrev0
 161 000a 04       		.byte	0x4
 162 000b 01       		.uleb128 0x1
 163 000c DB000000 		.4byte	.LASF22
 164 0010 01       		.byte	0x1
 165 0011 A7000000 		.4byte	.LASF23
 166 0015 D7010000 		.4byte	.LASF24
 167 0019 00000000 		.4byte	.Ldebug_ranges0+0
 168 001d 00000000 		.4byte	0
 169 0021 00000000 		.4byte	.Ldebug_line0
 170 0025 02       		.uleb128 0x2
 171 0026 01       		.byte	0x1
 172 0027 06       		.byte	0x6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 6


 173 0028 95010000 		.4byte	.LASF0
 174 002c 02       		.uleb128 0x2
 175 002d 01       		.byte	0x1
 176 002e 08       		.byte	0x8
 177 002f 2E000000 		.4byte	.LASF1
 178 0033 02       		.uleb128 0x2
 179 0034 02       		.byte	0x2
 180 0035 05       		.byte	0x5
 181 0036 B1010000 		.4byte	.LASF2
 182 003a 02       		.uleb128 0x2
 183 003b 02       		.byte	0x2
 184 003c 07       		.byte	0x7
 185 003d 0E000000 		.4byte	.LASF3
 186 0041 03       		.uleb128 0x3
 187 0042 A1010000 		.4byte	.LASF5
 188 0046 02       		.byte	0x2
 189 0047 3F       		.byte	0x3f
 190 0048 4C000000 		.4byte	0x4c
 191 004c 02       		.uleb128 0x2
 192 004d 04       		.byte	0x4
 193 004e 05       		.byte	0x5
 194 004f D2000000 		.4byte	.LASF4
 195 0053 03       		.uleb128 0x3
 196 0054 3C000000 		.4byte	.LASF6
 197 0058 02       		.byte	0x2
 198 0059 41       		.byte	0x41
 199 005a 5E000000 		.4byte	0x5e
 200 005e 02       		.uleb128 0x2
 201 005f 04       		.byte	0x4
 202 0060 07       		.byte	0x7
 203 0061 67000000 		.4byte	.LASF7
 204 0065 02       		.uleb128 0x2
 205 0066 08       		.byte	0x8
 206 0067 05       		.byte	0x5
 207 0068 00000000 		.4byte	.LASF8
 208 006c 02       		.uleb128 0x2
 209 006d 08       		.byte	0x8
 210 006e 07       		.byte	0x7
 211 006f 79000000 		.4byte	.LASF9
 212 0073 04       		.uleb128 0x4
 213 0074 04       		.byte	0x4
 214 0075 05       		.byte	0x5
 215 0076 696E7400 		.ascii	"int\000"
 216 007a 02       		.uleb128 0x2
 217 007b 04       		.byte	0x4
 218 007c 07       		.byte	0x7
 219 007d 21000000 		.4byte	.LASF10
 220 0081 03       		.uleb128 0x3
 221 0082 BB010000 		.4byte	.LASF11
 222 0086 03       		.byte	0x3
 223 0087 2C       		.byte	0x2c
 224 0088 41000000 		.4byte	0x41
 225 008c 03       		.uleb128 0x3
 226 008d C9000000 		.4byte	.LASF12
 227 0091 03       		.byte	0x3
 228 0092 2D       		.byte	0x2d
 229 0093 53000000 		.4byte	0x53
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 7


 230 0097 02       		.uleb128 0x2
 231 0098 04       		.byte	0x4
 232 0099 04       		.byte	0x4
 233 009a AB010000 		.4byte	.LASF13
 234 009e 02       		.uleb128 0x2
 235 009f 08       		.byte	0x8
 236 00a0 04       		.byte	0x4
 237 00a1 69010000 		.4byte	.LASF14
 238 00a5 02       		.uleb128 0x2
 239 00a6 01       		.byte	0x1
 240 00a7 08       		.byte	0x8
 241 00a8 C4000000 		.4byte	.LASF15
 242 00ac 05       		.uleb128 0x5
 243 00ad B7000000 		.4byte	.LASF16
 244 00b1 04       		.byte	0x4
 245 00b2 4E02     		.2byte	0x24e
 246 00b4 B8000000 		.4byte	0xb8
 247 00b8 06       		.uleb128 0x6
 248 00b9 04       		.byte	0x4
 249 00ba BE000000 		.4byte	0xbe
 250 00be 07       		.uleb128 0x7
 251 00bf 02       		.uleb128 0x2
 252 00c0 04       		.byte	0x4
 253 00c1 07       		.byte	0x7
 254 00c2 CE010000 		.4byte	.LASF17
 255 00c6 03       		.uleb128 0x3
 256 00c7 C3010000 		.4byte	.LASF18
 257 00cb 05       		.byte	0x5
 258 00cc 62       		.byte	0x62
 259 00cd 4C000000 		.4byte	0x4c
 260 00d1 08       		.uleb128 0x8
 261 00d2 47000000 		.4byte	.LASF19
 262 00d6 01       		.byte	0x1
 263 00d7 56       		.byte	0x56
 264 00d8 00000000 		.4byte	.LFB68
 265 00dc 2C000000 		.4byte	.LFE68-.LFB68
 266 00e0 01       		.uleb128 0x1
 267 00e1 9C       		.byte	0x9c
 268 00e2 08       		.uleb128 0x8
 269 00e3 90000000 		.4byte	.LASF20
 270 00e7 01       		.byte	0x1
 271 00e8 66       		.byte	0x66
 272 00e9 00000000 		.4byte	.LFB69
 273 00ed 24000000 		.4byte	.LFE69-.LFB69
 274 00f1 01       		.uleb128 0x1
 275 00f2 9C       		.byte	0x9c
 276 00f3 08       		.uleb128 0x8
 277 00f4 70010000 		.4byte	.LASF21
 278 00f8 01       		.byte	0x1
 279 00f9 6D       		.byte	0x6d
 280 00fa 00000000 		.4byte	.LFB70
 281 00fe 24000000 		.4byte	.LFE70-.LFB70
 282 0102 01       		.uleb128 0x1
 283 0103 9C       		.byte	0x9c
 284 0104 09       		.uleb128 0x9
 285 0105 88010000 		.4byte	.LASF25
 286 0109 06       		.byte	0x6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 8


 287 010a 9606     		.2byte	0x696
 288 010c 10010000 		.4byte	0x110
 289 0110 0A       		.uleb128 0xa
 290 0111 81000000 		.4byte	0x81
 291 0115 00       		.byte	0
 292              		.section	.debug_abbrev,"",%progbits
 293              	.Ldebug_abbrev0:
 294 0000 01       		.uleb128 0x1
 295 0001 11       		.uleb128 0x11
 296 0002 01       		.byte	0x1
 297 0003 25       		.uleb128 0x25
 298 0004 0E       		.uleb128 0xe
 299 0005 13       		.uleb128 0x13
 300 0006 0B       		.uleb128 0xb
 301 0007 03       		.uleb128 0x3
 302 0008 0E       		.uleb128 0xe
 303 0009 1B       		.uleb128 0x1b
 304 000a 0E       		.uleb128 0xe
 305 000b 55       		.uleb128 0x55
 306 000c 17       		.uleb128 0x17
 307 000d 11       		.uleb128 0x11
 308 000e 01       		.uleb128 0x1
 309 000f 10       		.uleb128 0x10
 310 0010 17       		.uleb128 0x17
 311 0011 00       		.byte	0
 312 0012 00       		.byte	0
 313 0013 02       		.uleb128 0x2
 314 0014 24       		.uleb128 0x24
 315 0015 00       		.byte	0
 316 0016 0B       		.uleb128 0xb
 317 0017 0B       		.uleb128 0xb
 318 0018 3E       		.uleb128 0x3e
 319 0019 0B       		.uleb128 0xb
 320 001a 03       		.uleb128 0x3
 321 001b 0E       		.uleb128 0xe
 322 001c 00       		.byte	0
 323 001d 00       		.byte	0
 324 001e 03       		.uleb128 0x3
 325 001f 16       		.uleb128 0x16
 326 0020 00       		.byte	0
 327 0021 03       		.uleb128 0x3
 328 0022 0E       		.uleb128 0xe
 329 0023 3A       		.uleb128 0x3a
 330 0024 0B       		.uleb128 0xb
 331 0025 3B       		.uleb128 0x3b
 332 0026 0B       		.uleb128 0xb
 333 0027 49       		.uleb128 0x49
 334 0028 13       		.uleb128 0x13
 335 0029 00       		.byte	0
 336 002a 00       		.byte	0
 337 002b 04       		.uleb128 0x4
 338 002c 24       		.uleb128 0x24
 339 002d 00       		.byte	0
 340 002e 0B       		.uleb128 0xb
 341 002f 0B       		.uleb128 0xb
 342 0030 3E       		.uleb128 0x3e
 343 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 9


 344 0032 03       		.uleb128 0x3
 345 0033 08       		.uleb128 0x8
 346 0034 00       		.byte	0
 347 0035 00       		.byte	0
 348 0036 05       		.uleb128 0x5
 349 0037 16       		.uleb128 0x16
 350 0038 00       		.byte	0
 351 0039 03       		.uleb128 0x3
 352 003a 0E       		.uleb128 0xe
 353 003b 3A       		.uleb128 0x3a
 354 003c 0B       		.uleb128 0xb
 355 003d 3B       		.uleb128 0x3b
 356 003e 05       		.uleb128 0x5
 357 003f 49       		.uleb128 0x49
 358 0040 13       		.uleb128 0x13
 359 0041 00       		.byte	0
 360 0042 00       		.byte	0
 361 0043 06       		.uleb128 0x6
 362 0044 0F       		.uleb128 0xf
 363 0045 00       		.byte	0
 364 0046 0B       		.uleb128 0xb
 365 0047 0B       		.uleb128 0xb
 366 0048 49       		.uleb128 0x49
 367 0049 13       		.uleb128 0x13
 368 004a 00       		.byte	0
 369 004b 00       		.byte	0
 370 004c 07       		.uleb128 0x7
 371 004d 15       		.uleb128 0x15
 372 004e 00       		.byte	0
 373 004f 27       		.uleb128 0x27
 374 0050 19       		.uleb128 0x19
 375 0051 00       		.byte	0
 376 0052 00       		.byte	0
 377 0053 08       		.uleb128 0x8
 378 0054 2E       		.uleb128 0x2e
 379 0055 00       		.byte	0
 380 0056 3F       		.uleb128 0x3f
 381 0057 19       		.uleb128 0x19
 382 0058 03       		.uleb128 0x3
 383 0059 0E       		.uleb128 0xe
 384 005a 3A       		.uleb128 0x3a
 385 005b 0B       		.uleb128 0xb
 386 005c 3B       		.uleb128 0x3b
 387 005d 0B       		.uleb128 0xb
 388 005e 27       		.uleb128 0x27
 389 005f 19       		.uleb128 0x19
 390 0060 11       		.uleb128 0x11
 391 0061 01       		.uleb128 0x1
 392 0062 12       		.uleb128 0x12
 393 0063 06       		.uleb128 0x6
 394 0064 40       		.uleb128 0x40
 395 0065 18       		.uleb128 0x18
 396 0066 9642     		.uleb128 0x2116
 397 0068 19       		.uleb128 0x19
 398 0069 00       		.byte	0
 399 006a 00       		.byte	0
 400 006b 09       		.uleb128 0x9
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 10


 401 006c 34       		.uleb128 0x34
 402 006d 00       		.byte	0
 403 006e 03       		.uleb128 0x3
 404 006f 0E       		.uleb128 0xe
 405 0070 3A       		.uleb128 0x3a
 406 0071 0B       		.uleb128 0xb
 407 0072 3B       		.uleb128 0x3b
 408 0073 05       		.uleb128 0x5
 409 0074 49       		.uleb128 0x49
 410 0075 13       		.uleb128 0x13
 411 0076 3F       		.uleb128 0x3f
 412 0077 19       		.uleb128 0x19
 413 0078 3C       		.uleb128 0x3c
 414 0079 19       		.uleb128 0x19
 415 007a 00       		.byte	0
 416 007b 00       		.byte	0
 417 007c 0A       		.uleb128 0xa
 418 007d 35       		.uleb128 0x35
 419 007e 00       		.byte	0
 420 007f 49       		.uleb128 0x49
 421 0080 13       		.uleb128 0x13
 422 0081 00       		.byte	0
 423 0082 00       		.byte	0
 424 0083 00       		.byte	0
 425              		.section	.debug_aranges,"",%progbits
 426 0000 2C000000 		.4byte	0x2c
 427 0004 0200     		.2byte	0x2
 428 0006 00000000 		.4byte	.Ldebug_info0
 429 000a 04       		.byte	0x4
 430 000b 00       		.byte	0
 431 000c 0000     		.2byte	0
 432 000e 0000     		.2byte	0
 433 0010 00000000 		.4byte	.LFB68
 434 0014 2C000000 		.4byte	.LFE68-.LFB68
 435 0018 00000000 		.4byte	.LFB69
 436 001c 24000000 		.4byte	.LFE69-.LFB69
 437 0020 00000000 		.4byte	.LFB70
 438 0024 24000000 		.4byte	.LFE70-.LFB70
 439 0028 00000000 		.4byte	0
 440 002c 00000000 		.4byte	0
 441              		.section	.debug_ranges,"",%progbits
 442              	.Ldebug_ranges0:
 443 0000 00000000 		.4byte	.LFB68
 444 0004 2C000000 		.4byte	.LFE68
 445 0008 00000000 		.4byte	.LFB69
 446 000c 24000000 		.4byte	.LFE69
 447 0010 00000000 		.4byte	.LFB70
 448 0014 24000000 		.4byte	.LFE70
 449 0018 00000000 		.4byte	0
 450 001c 00000000 		.4byte	0
 451              		.section	.debug_line,"",%progbits
 452              	.Ldebug_line0:
 453 0000 CD010000 		.section	.debug_str,"MS",%progbits,1
 453      02007E01 
 453      00000201 
 453      FB0E0D00 
 453      01010101 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 11


 454              	.LASF8:
 455 0000 6C6F6E67 		.ascii	"long long int\000"
 455      206C6F6E 
 455      6720696E 
 455      7400
 456              	.LASF3:
 457 000e 73686F72 		.ascii	"short unsigned int\000"
 457      7420756E 
 457      7369676E 
 457      65642069 
 457      6E7400
 458              	.LASF10:
 459 0021 756E7369 		.ascii	"unsigned int\000"
 459      676E6564 
 459      20696E74 
 459      00
 460              	.LASF1:
 461 002e 756E7369 		.ascii	"unsigned char\000"
 461      676E6564 
 461      20636861 
 461      7200
 462              	.LASF6:
 463 003c 5F5F7569 		.ascii	"__uint32_t\000"
 463      6E743332 
 463      5F7400
 464              	.LASF19:
 465 0047 76496E69 		.ascii	"vInitialiseTimerForIntQueueTest\000"
 465      7469616C 
 465      69736554 
 465      696D6572 
 465      466F7249 
 466              	.LASF7:
 467 0067 6C6F6E67 		.ascii	"long unsigned int\000"
 467      20756E73 
 467      69676E65 
 467      6420696E 
 467      7400
 468              	.LASF9:
 469 0079 6C6F6E67 		.ascii	"long long unsigned int\000"
 469      206C6F6E 
 469      6720756E 
 469      7369676E 
 469      65642069 
 470              	.LASF20:
 471 0090 76486967 		.ascii	"vHighFrequencyFirstISR\000"
 471      68467265 
 471      7175656E 
 471      63794669 
 471      72737449 
 472              	.LASF23:
 473 00a7 496E7451 		.ascii	"IntQueueTimer.c\000"
 473      75657565 
 473      54696D65 
 473      722E6300 
 474              	.LASF16:
 475 00b7 63796973 		.ascii	"cyisraddress\000"
 475      72616464 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 12


 475      72657373 
 475      00
 476              	.LASF15:
 477 00c4 63686172 		.ascii	"char\000"
 477      00
 478              	.LASF12:
 479 00c9 75696E74 		.ascii	"uint32_t\000"
 479      33325F74 
 479      00
 480              	.LASF4:
 481 00d2 6C6F6E67 		.ascii	"long int\000"
 481      20696E74 
 481      00
 482              	.LASF22:
 483 00db 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 483      4320342E 
 483      392E3320 
 483      32303135 
 483      30333033 
 484 010e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 484      20726576 
 484      6973696F 
 484      6E203232 
 484      31323230 
 485 0141 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 485      66756E63 
 485      74696F6E 
 485      2D736563 
 485      74696F6E 
 486              	.LASF14:
 487 0169 646F7562 		.ascii	"double\000"
 487      6C6500
 488              	.LASF21:
 489 0170 76486967 		.ascii	"vHighFrequencySecondISR\000"
 489      68467265 
 489      7175656E 
 489      63795365 
 489      636F6E64 
 490              	.LASF25:
 491 0188 49544D5F 		.ascii	"ITM_RxBuffer\000"
 491      52784275 
 491      66666572 
 491      00
 492              	.LASF0:
 493 0195 7369676E 		.ascii	"signed char\000"
 493      65642063 
 493      68617200 
 494              	.LASF5:
 495 01a1 5F5F696E 		.ascii	"__int32_t\000"
 495      7433325F 
 495      7400
 496              	.LASF13:
 497 01ab 666C6F61 		.ascii	"float\000"
 497      7400
 498              	.LASF2:
 499 01b1 73686F72 		.ascii	"short int\000"
 499      7420696E 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccf4nOK0.s 			page 13


 499      7400
 500              	.LASF11:
 501 01bb 696E7433 		.ascii	"int32_t\000"
 501      325F7400 
 502              	.LASF18:
 503 01c3 42617365 		.ascii	"BaseType_t\000"
 503      54797065 
 503      5F7400
 504              	.LASF17:
 505 01ce 73697A65 		.ascii	"sizetype\000"
 505      74797065 
 505      00
 506              	.LASF24:
 507 01d7 433A5C55 		.ascii	"C:\\Users\\bmt\\Documents\\GitHub\\FreeRTOS_CY8CKIT"
 507      73657273 
 507      5C626D74 
 507      5C446F63 
 507      756D656E 
 508 0205 5F303539 		.ascii	"_059\\FreeRTOS_Demo.cydsn\000"
 508      5C467265 
 508      6552544F 
 508      535F4465 
 508      6D6F2E63 
 509              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
