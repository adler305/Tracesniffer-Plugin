ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"heap_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	ucHeap:
  21 0000 00000000 		.space	32768
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.rodata
  23              		.align	1
  24              		.type	heapSTRUCT_SIZE, %object
  25              		.size	heapSTRUCT_SIZE, 2
  26              	heapSTRUCT_SIZE:
  27 0000 0800     		.short	8
  28              		.bss
  29              		.align	2
  30              	xStart:
  31 8000 00000000 		.space	8
  31      00000000 
  32              		.align	2
  33              	xEnd:
  34 8008 00000000 		.space	8
  34      00000000 
  35              		.data
  36              		.align	2
  37              		.type	xFreeBytesRemaining, %object
  38              		.size	xFreeBytesRemaining, 4
  39              	xFreeBytesRemaining:
  40 0000 F87F0000 		.word	32760
  41              		.section	.text.pvPortMalloc,"ax",%progbits
  42              		.align	2
  43              		.global	pvPortMalloc
  44              		.thumb
  45              		.thumb_func
  46              		.type	pvPortMalloc, %function
  47              	pvPortMalloc:
  48              	.LFB68:
  49              		.file 1 "..\\Source\\portable\\MemMang\\heap_2.c"
   1:..\Source\portable\MemMang/heap_2.c **** /*
   2:..\Source\portable\MemMang/heap_2.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 2


   3:..\Source\portable\MemMang/heap_2.c ****     All rights reserved
   4:..\Source\portable\MemMang/heap_2.c **** 
   5:..\Source\portable\MemMang/heap_2.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Source\portable\MemMang/heap_2.c **** 
   7:..\Source\portable\MemMang/heap_2.c ****     This file is part of the FreeRTOS distribution.
   8:..\Source\portable\MemMang/heap_2.c **** 
   9:..\Source\portable\MemMang/heap_2.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Source\portable\MemMang/heap_2.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Source\portable\MemMang/heap_2.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Source\portable\MemMang/heap_2.c **** 
  13:..\Source\portable\MemMang/heap_2.c ****     ***************************************************************************
  14:..\Source\portable\MemMang/heap_2.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Source\portable\MemMang/heap_2.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Source\portable\MemMang/heap_2.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Source\portable\MemMang/heap_2.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Source\portable\MemMang/heap_2.c ****     ***************************************************************************
  19:..\Source\portable\MemMang/heap_2.c **** 
  20:..\Source\portable\MemMang/heap_2.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Source\portable\MemMang/heap_2.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Source\portable\MemMang/heap_2.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Source\portable\MemMang/heap_2.c ****     link: http://www.freertos.org/a00114.html
  24:..\Source\portable\MemMang/heap_2.c **** 
  25:..\Source\portable\MemMang/heap_2.c ****     ***************************************************************************
  26:..\Source\portable\MemMang/heap_2.c ****      *                                                                       *
  27:..\Source\portable\MemMang/heap_2.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Source\portable\MemMang/heap_2.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Source\portable\MemMang/heap_2.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Source\portable\MemMang/heap_2.c ****      *    is the industry's de facto standard.                               *
  31:..\Source\portable\MemMang/heap_2.c ****      *                                                                       *
  32:..\Source\portable\MemMang/heap_2.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Source\portable\MemMang/heap_2.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Source\portable\MemMang/heap_2.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Source\portable\MemMang/heap_2.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Source\portable\MemMang/heap_2.c ****      *                                                                       *
  37:..\Source\portable\MemMang/heap_2.c ****     ***************************************************************************
  38:..\Source\portable\MemMang/heap_2.c **** 
  39:..\Source\portable\MemMang/heap_2.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Source\portable\MemMang/heap_2.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Source\portable\MemMang/heap_2.c ****     defined configASSERT()?
  42:..\Source\portable\MemMang/heap_2.c **** 
  43:..\Source\portable\MemMang/heap_2.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Source\portable\MemMang/heap_2.c ****     embedded software for free we request you assist our global community by
  45:..\Source\portable\MemMang/heap_2.c ****     participating in the support forum.
  46:..\Source\portable\MemMang/heap_2.c **** 
  47:..\Source\portable\MemMang/heap_2.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Source\portable\MemMang/heap_2.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Source\portable\MemMang/heap_2.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Source\portable\MemMang/heap_2.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Source\portable\MemMang/heap_2.c **** 
  52:..\Source\portable\MemMang/heap_2.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Source\portable\MemMang/heap_2.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Source\portable\MemMang/heap_2.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Source\portable\MemMang/heap_2.c **** 
  56:..\Source\portable\MemMang/heap_2.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Source\portable\MemMang/heap_2.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Source\portable\MemMang/heap_2.c **** 
  59:..\Source\portable\MemMang/heap_2.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 3


  60:..\Source\portable\MemMang/heap_2.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Source\portable\MemMang/heap_2.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Source\portable\MemMang/heap_2.c **** 
  63:..\Source\portable\MemMang/heap_2.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Source\portable\MemMang/heap_2.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Source\portable\MemMang/heap_2.c ****     mission critical applications that require provable dependability.
  66:..\Source\portable\MemMang/heap_2.c **** 
  67:..\Source\portable\MemMang/heap_2.c ****     1 tab == 4 spaces!
  68:..\Source\portable\MemMang/heap_2.c **** */
  69:..\Source\portable\MemMang/heap_2.c **** 
  70:..\Source\portable\MemMang/heap_2.c **** /*
  71:..\Source\portable\MemMang/heap_2.c ****  * A sample implementation of pvPortMalloc() and vPortFree() that permits
  72:..\Source\portable\MemMang/heap_2.c ****  * allocated blocks to be freed, but does not combine adjacent free blocks
  73:..\Source\portable\MemMang/heap_2.c ****  * into a single larger block (and so will fragment memory).  See heap_4.c for
  74:..\Source\portable\MemMang/heap_2.c ****  * an equivalent that does combine adjacent blocks into single larger blocks.
  75:..\Source\portable\MemMang/heap_2.c ****  *
  76:..\Source\portable\MemMang/heap_2.c ****  * See heap_1.c, heap_3.c and heap_4.c for alternative implementations, and the
  77:..\Source\portable\MemMang/heap_2.c ****  * memory management pages of http://www.FreeRTOS.org for more information.
  78:..\Source\portable\MemMang/heap_2.c ****  */
  79:..\Source\portable\MemMang/heap_2.c **** #include <stdlib.h>
  80:..\Source\portable\MemMang/heap_2.c **** 
  81:..\Source\portable\MemMang/heap_2.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  82:..\Source\portable\MemMang/heap_2.c **** all the API functions to use the MPU wrappers.  That should only be done when
  83:..\Source\portable\MemMang/heap_2.c **** task.h is included from an application file. */
  84:..\Source\portable\MemMang/heap_2.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  85:..\Source\portable\MemMang/heap_2.c **** 
  86:..\Source\portable\MemMang/heap_2.c **** #include "FreeRTOS.h"
  87:..\Source\portable\MemMang/heap_2.c **** #include "task.h"
  88:..\Source\portable\MemMang/heap_2.c **** 
  89:..\Source\portable\MemMang/heap_2.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  90:..\Source\portable\MemMang/heap_2.c **** 
  91:..\Source\portable\MemMang/heap_2.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  92:..\Source\portable\MemMang/heap_2.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  93:..\Source\portable\MemMang/heap_2.c **** #endif
  94:..\Source\portable\MemMang/heap_2.c **** 
  95:..\Source\portable\MemMang/heap_2.c **** /* A few bytes might be lost to byte aligning the heap start address. */
  96:..\Source\portable\MemMang/heap_2.c **** #define configADJUSTED_HEAP_SIZE	( configTOTAL_HEAP_SIZE - portBYTE_ALIGNMENT )
  97:..\Source\portable\MemMang/heap_2.c **** 
  98:..\Source\portable\MemMang/heap_2.c **** /*
  99:..\Source\portable\MemMang/heap_2.c ****  * Initialises the heap structures before their first use.
 100:..\Source\portable\MemMang/heap_2.c ****  */
 101:..\Source\portable\MemMang/heap_2.c **** static void prvHeapInit( void );
 102:..\Source\portable\MemMang/heap_2.c **** 
 103:..\Source\portable\MemMang/heap_2.c **** /* Allocate the memory for the heap. */
 104:..\Source\portable\MemMang/heap_2.c **** #if( configAPPLICATION_ALLOCATED_HEAP == 1 )
 105:..\Source\portable\MemMang/heap_2.c **** 	/* The application writer has already defined the array used for the RTOS
 106:..\Source\portable\MemMang/heap_2.c **** 	heap - probably so it can be placed in a special segment or address. */
 107:..\Source\portable\MemMang/heap_2.c **** 	extern uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 108:..\Source\portable\MemMang/heap_2.c **** #else
 109:..\Source\portable\MemMang/heap_2.c **** 	static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
 110:..\Source\portable\MemMang/heap_2.c **** #endif /* configAPPLICATION_ALLOCATED_HEAP */
 111:..\Source\portable\MemMang/heap_2.c **** 
 112:..\Source\portable\MemMang/heap_2.c **** 
 113:..\Source\portable\MemMang/heap_2.c **** /* Define the linked list structure.  This is used to link free blocks in order
 114:..\Source\portable\MemMang/heap_2.c **** of their size. */
 115:..\Source\portable\MemMang/heap_2.c **** typedef struct A_BLOCK_LINK
 116:..\Source\portable\MemMang/heap_2.c **** {
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 4


 117:..\Source\portable\MemMang/heap_2.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
 118:..\Source\portable\MemMang/heap_2.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
 119:..\Source\portable\MemMang/heap_2.c **** } BlockLink_t;
 120:..\Source\portable\MemMang/heap_2.c **** 
 121:..\Source\portable\MemMang/heap_2.c **** 
 122:..\Source\portable\MemMang/heap_2.c **** static const uint16_t heapSTRUCT_SIZE	= ( ( sizeof ( BlockLink_t ) + ( portBYTE_ALIGNMENT - 1 ) ) &
 123:..\Source\portable\MemMang/heap_2.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( heapSTRUCT_SIZE * 2 ) )
 124:..\Source\portable\MemMang/heap_2.c **** 
 125:..\Source\portable\MemMang/heap_2.c **** /* Create a couple of list links to mark the start and end of the list. */
 126:..\Source\portable\MemMang/heap_2.c **** static BlockLink_t xStart, xEnd;
 127:..\Source\portable\MemMang/heap_2.c **** 
 128:..\Source\portable\MemMang/heap_2.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
 129:..\Source\portable\MemMang/heap_2.c **** fragmentation. */
 130:..\Source\portable\MemMang/heap_2.c **** static size_t xFreeBytesRemaining = configADJUSTED_HEAP_SIZE;
 131:..\Source\portable\MemMang/heap_2.c **** 
 132:..\Source\portable\MemMang/heap_2.c **** /* STATIC FUNCTIONS ARE DEFINED AS MACROS TO MINIMIZE THE FUNCTION CALL DEPTH. */
 133:..\Source\portable\MemMang/heap_2.c **** 
 134:..\Source\portable\MemMang/heap_2.c **** /*
 135:..\Source\portable\MemMang/heap_2.c ****  * Insert a block into the list of free blocks - which is ordered by size of
 136:..\Source\portable\MemMang/heap_2.c ****  * the block.  Small blocks at the start of the list and large blocks at the end
 137:..\Source\portable\MemMang/heap_2.c ****  * of the list.
 138:..\Source\portable\MemMang/heap_2.c ****  */
 139:..\Source\portable\MemMang/heap_2.c **** #define prvInsertBlockIntoFreeList( pxBlockToInsert )								\
 140:..\Source\portable\MemMang/heap_2.c **** {																					\
 141:..\Source\portable\MemMang/heap_2.c **** BlockLink_t *pxIterator;															\
 142:..\Source\portable\MemMang/heap_2.c **** size_t xBlockSize;																	\
 143:..\Source\portable\MemMang/heap_2.c **** 																					\
 144:..\Source\portable\MemMang/heap_2.c **** 	xBlockSize = pxBlockToInsert->xBlockSize;										\
 145:..\Source\portable\MemMang/heap_2.c **** 																					\
 146:..\Source\portable\MemMang/heap_2.c **** 	/* Iterate through the list until a block is found that has a larger size */	\
 147:..\Source\portable\MemMang/heap_2.c **** 	/* than the block we are inserting. */											\
 148:..\Source\portable\MemMang/heap_2.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock->xBlockSize < xBlockSize; pxIterator = pxIt
 149:..\Source\portable\MemMang/heap_2.c **** 	{																				\
 150:..\Source\portable\MemMang/heap_2.c **** 		/* There is nothing to do here - just iterate to the correct position. */	\
 151:..\Source\portable\MemMang/heap_2.c **** 	}																				\
 152:..\Source\portable\MemMang/heap_2.c **** 																					\
 153:..\Source\portable\MemMang/heap_2.c **** 	/* Update the list to include the block being inserted in the correct */		\
 154:..\Source\portable\MemMang/heap_2.c **** 	/* position. */																	\
 155:..\Source\portable\MemMang/heap_2.c **** 	pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;					\
 156:..\Source\portable\MemMang/heap_2.c **** 	pxIterator->pxNextFreeBlock = pxBlockToInsert;									\
 157:..\Source\portable\MemMang/heap_2.c **** }
 158:..\Source\portable\MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 159:..\Source\portable\MemMang/heap_2.c **** 
 160:..\Source\portable\MemMang/heap_2.c **** void *pvPortMalloc( size_t xWantedSize )
 161:..\Source\portable\MemMang/heap_2.c **** {
  50              		.loc 1 161 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 32
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              		.cfi_def_cfa_offset 8
  56              		.cfi_offset 7, -8
  57              		.cfi_offset 14, -4
  58 0002 88B0     		sub	sp, sp, #32
  59              		.cfi_def_cfa_offset 40
  60 0004 00AF     		add	r7, sp, #0
  61              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 5


  62 0006 7860     		str	r0, [r7, #4]
 162:..\Source\portable\MemMang/heap_2.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 163:..\Source\portable\MemMang/heap_2.c **** static BaseType_t xHeapHasBeenInitialised = pdFALSE;
 164:..\Source\portable\MemMang/heap_2.c **** void *pvReturn = NULL;
  63              		.loc 1 164 0
  64 0008 0023     		movs	r3, #0
  65 000a 7B61     		str	r3, [r7, #20]
 165:..\Source\portable\MemMang/heap_2.c **** 
 166:..\Source\portable\MemMang/heap_2.c **** 	vTaskSuspendAll();
  66              		.loc 1 166 0
  67 000c FFF7FEFF 		bl	vTaskSuspendAll
 167:..\Source\portable\MemMang/heap_2.c **** 	{
 168:..\Source\portable\MemMang/heap_2.c **** 		/* If this is the first call to malloc then the heap will require
 169:..\Source\portable\MemMang/heap_2.c **** 		initialisation to setup the list of free blocks. */
 170:..\Source\portable\MemMang/heap_2.c **** 		if( xHeapHasBeenInitialised == pdFALSE )
  68              		.loc 1 170 0
  69 0010 404B     		ldr	r3, .L13
  70 0012 1B68     		ldr	r3, [r3]
  71 0014 002B     		cmp	r3, #0
  72 0016 04D1     		bne	.L2
 171:..\Source\portable\MemMang/heap_2.c **** 		{
 172:..\Source\portable\MemMang/heap_2.c **** 			prvHeapInit();
  73              		.loc 1 172 0
  74 0018 FFF7FEFF 		bl	prvHeapInit
 173:..\Source\portable\MemMang/heap_2.c **** 			xHeapHasBeenInitialised = pdTRUE;
  75              		.loc 1 173 0
  76 001c 3D4B     		ldr	r3, .L13
  77 001e 0122     		movs	r2, #1
  78 0020 1A60     		str	r2, [r3]
  79              	.L2:
 174:..\Source\portable\MemMang/heap_2.c **** 		}
 175:..\Source\portable\MemMang/heap_2.c **** 
 176:..\Source\portable\MemMang/heap_2.c **** 		/* The wanted size is increased so it can contain a BlockLink_t
 177:..\Source\portable\MemMang/heap_2.c **** 		structure in addition to the requested amount of bytes. */
 178:..\Source\portable\MemMang/heap_2.c **** 		if( xWantedSize > 0 )
  80              		.loc 1 178 0
  81 0022 7B68     		ldr	r3, [r7, #4]
  82 0024 002B     		cmp	r3, #0
  83 0026 0ED0     		beq	.L3
 179:..\Source\portable\MemMang/heap_2.c **** 		{
 180:..\Source\portable\MemMang/heap_2.c **** 			xWantedSize += heapSTRUCT_SIZE;
  84              		.loc 1 180 0
  85 0028 0823     		movs	r3, #8
  86 002a 1A46     		mov	r2, r3
  87 002c 7B68     		ldr	r3, [r7, #4]
  88 002e 1344     		add	r3, r3, r2
  89 0030 7B60     		str	r3, [r7, #4]
 181:..\Source\portable\MemMang/heap_2.c **** 
 182:..\Source\portable\MemMang/heap_2.c **** 			/* Ensure that blocks are always aligned to the required number of bytes. */
 183:..\Source\portable\MemMang/heap_2.c **** 			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
  90              		.loc 1 183 0
  91 0032 7B68     		ldr	r3, [r7, #4]
  92 0034 03F00703 		and	r3, r3, #7
  93 0038 002B     		cmp	r3, #0
  94 003a 04D0     		beq	.L3
 184:..\Source\portable\MemMang/heap_2.c **** 			{
 185:..\Source\portable\MemMang/heap_2.c **** 				/* Byte alignment required. */
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 6


 186:..\Source\portable\MemMang/heap_2.c **** 				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
  95              		.loc 1 186 0
  96 003c 7B68     		ldr	r3, [r7, #4]
  97 003e 23F00703 		bic	r3, r3, #7
  98 0042 0833     		adds	r3, r3, #8
  99 0044 7B60     		str	r3, [r7, #4]
 100              	.L3:
 187:..\Source\portable\MemMang/heap_2.c **** 			}
 188:..\Source\portable\MemMang/heap_2.c **** 		}
 189:..\Source\portable\MemMang/heap_2.c **** 
 190:..\Source\portable\MemMang/heap_2.c **** 		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
 101              		.loc 1 190 0
 102 0046 7B68     		ldr	r3, [r7, #4]
 103 0048 002B     		cmp	r3, #0
 104 004a 57D0     		beq	.L4
 105              		.loc 1 190 0 is_stmt 0 discriminator 1
 106 004c 7B68     		ldr	r3, [r7, #4]
 107 004e 47F6F772 		movw	r2, #32759
 108 0052 9342     		cmp	r3, r2
 109 0054 52D8     		bhi	.L4
 191:..\Source\portable\MemMang/heap_2.c **** 		{
 192:..\Source\portable\MemMang/heap_2.c **** 			/* Blocks are stored in byte order - traverse the list from the start
 193:..\Source\portable\MemMang/heap_2.c **** 			(smallest) block until one of adequate size is found. */
 194:..\Source\portable\MemMang/heap_2.c **** 			pxPreviousBlock = &xStart;
 110              		.loc 1 194 0 is_stmt 1
 111 0056 304B     		ldr	r3, .L13+4
 112 0058 BB61     		str	r3, [r7, #24]
 195:..\Source\portable\MemMang/heap_2.c **** 			pxBlock = xStart.pxNextFreeBlock;
 113              		.loc 1 195 0
 114 005a 2F4B     		ldr	r3, .L13+4
 115 005c 1B68     		ldr	r3, [r3]
 116 005e FB61     		str	r3, [r7, #28]
 196:..\Source\portable\MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 117              		.loc 1 196 0
 118 0060 04E0     		b	.L5
 119              	.L7:
 197:..\Source\portable\MemMang/heap_2.c **** 			{
 198:..\Source\portable\MemMang/heap_2.c **** 				pxPreviousBlock = pxBlock;
 120              		.loc 1 198 0
 121 0062 FB69     		ldr	r3, [r7, #28]
 122 0064 BB61     		str	r3, [r7, #24]
 199:..\Source\portable\MemMang/heap_2.c **** 				pxBlock = pxBlock->pxNextFreeBlock;
 123              		.loc 1 199 0
 124 0066 FB69     		ldr	r3, [r7, #28]
 125 0068 1B68     		ldr	r3, [r3]
 126 006a FB61     		str	r3, [r7, #28]
 127              	.L5:
 196:..\Source\portable\MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 128              		.loc 1 196 0
 129 006c FB69     		ldr	r3, [r7, #28]
 130 006e 5A68     		ldr	r2, [r3, #4]
 131 0070 7B68     		ldr	r3, [r7, #4]
 132 0072 9A42     		cmp	r2, r3
 133 0074 03D2     		bcs	.L6
 196:..\Source\portable\MemMang/heap_2.c **** 			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 134              		.loc 1 196 0 is_stmt 0 discriminator 1
 135 0076 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 7


 136 0078 1B68     		ldr	r3, [r3]
 137 007a 002B     		cmp	r3, #0
 138 007c F1D1     		bne	.L7
 139              	.L6:
 200:..\Source\portable\MemMang/heap_2.c **** 			}
 201:..\Source\portable\MemMang/heap_2.c **** 
 202:..\Source\portable\MemMang/heap_2.c **** 			/* If we found the end marker then a block of adequate size was not found. */
 203:..\Source\portable\MemMang/heap_2.c **** 			if( pxBlock != &xEnd )
 140              		.loc 1 203 0 is_stmt 1
 141 007e FB69     		ldr	r3, [r7, #28]
 142 0080 264A     		ldr	r2, .L13+8
 143 0082 9342     		cmp	r3, r2
 144 0084 3AD0     		beq	.L4
 204:..\Source\portable\MemMang/heap_2.c **** 			{
 205:..\Source\portable\MemMang/heap_2.c **** 				/* Return the memory space - jumping over the BlockLink_t structure
 206:..\Source\portable\MemMang/heap_2.c **** 				at its start. */
 207:..\Source\portable\MemMang/heap_2.c **** 				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
 145              		.loc 1 207 0
 146 0086 BB69     		ldr	r3, [r7, #24]
 147 0088 1B68     		ldr	r3, [r3]
 148 008a 0822     		movs	r2, #8
 149 008c 1344     		add	r3, r3, r2
 150 008e 7B61     		str	r3, [r7, #20]
 208:..\Source\portable\MemMang/heap_2.c **** 
 209:..\Source\portable\MemMang/heap_2.c **** 				/* This block is being returned for use so must be taken out of the
 210:..\Source\portable\MemMang/heap_2.c **** 				list of free blocks. */
 211:..\Source\portable\MemMang/heap_2.c **** 				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 151              		.loc 1 211 0
 152 0090 FB69     		ldr	r3, [r7, #28]
 153 0092 1A68     		ldr	r2, [r3]
 154 0094 BB69     		ldr	r3, [r7, #24]
 155 0096 1A60     		str	r2, [r3]
 212:..\Source\portable\MemMang/heap_2.c **** 
 213:..\Source\portable\MemMang/heap_2.c **** 				/* If the block is larger than required it can be split into two. */
 214:..\Source\portable\MemMang/heap_2.c **** 				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 156              		.loc 1 214 0
 157 0098 FB69     		ldr	r3, [r7, #28]
 158 009a 5A68     		ldr	r2, [r3, #4]
 159 009c 7B68     		ldr	r3, [r7, #4]
 160 009e D31A     		subs	r3, r2, r3
 161 00a0 0822     		movs	r2, #8
 162 00a2 5200     		lsls	r2, r2, #1
 163 00a4 9342     		cmp	r3, r2
 164 00a6 22D9     		bls	.L8
 215:..\Source\portable\MemMang/heap_2.c **** 				{
 216:..\Source\portable\MemMang/heap_2.c **** 					/* This block is to be split into two.  Create a new block
 217:..\Source\portable\MemMang/heap_2.c **** 					following the number of bytes requested. The void cast is
 218:..\Source\portable\MemMang/heap_2.c **** 					used to prevent byte alignment warnings from the compiler. */
 219:..\Source\portable\MemMang/heap_2.c **** 					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 165              		.loc 1 219 0
 166 00a8 FA69     		ldr	r2, [r7, #28]
 167 00aa 7B68     		ldr	r3, [r7, #4]
 168 00ac 1344     		add	r3, r3, r2
 169 00ae FB60     		str	r3, [r7, #12]
 220:..\Source\portable\MemMang/heap_2.c **** 
 221:..\Source\portable\MemMang/heap_2.c **** 					/* Calculate the sizes of two blocks split from the single
 222:..\Source\portable\MemMang/heap_2.c **** 					block. */
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 8


 223:..\Source\portable\MemMang/heap_2.c **** 					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 170              		.loc 1 223 0
 171 00b0 FB69     		ldr	r3, [r7, #28]
 172 00b2 5A68     		ldr	r2, [r3, #4]
 173 00b4 7B68     		ldr	r3, [r7, #4]
 174 00b6 D21A     		subs	r2, r2, r3
 175 00b8 FB68     		ldr	r3, [r7, #12]
 176 00ba 5A60     		str	r2, [r3, #4]
 224:..\Source\portable\MemMang/heap_2.c **** 					pxBlock->xBlockSize = xWantedSize;
 177              		.loc 1 224 0
 178 00bc FB69     		ldr	r3, [r7, #28]
 179 00be 7A68     		ldr	r2, [r7, #4]
 180 00c0 5A60     		str	r2, [r3, #4]
 181              	.LBB2:
 225:..\Source\portable\MemMang/heap_2.c **** 
 226:..\Source\portable\MemMang/heap_2.c **** 					/* Insert the new block into the list of free blocks. */
 227:..\Source\portable\MemMang/heap_2.c **** 					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
 182              		.loc 1 227 0
 183 00c2 FB68     		ldr	r3, [r7, #12]
 184 00c4 5B68     		ldr	r3, [r3, #4]
 185 00c6 BB60     		str	r3, [r7, #8]
 186 00c8 134B     		ldr	r3, .L13+4
 187 00ca 3B61     		str	r3, [r7, #16]
 188 00cc 02E0     		b	.L9
 189              	.L10:
 190              		.loc 1 227 0 is_stmt 0 discriminator 3
 191 00ce 3B69     		ldr	r3, [r7, #16]
 192 00d0 1B68     		ldr	r3, [r3]
 193 00d2 3B61     		str	r3, [r7, #16]
 194              	.L9:
 195              		.loc 1 227 0 discriminator 1
 196 00d4 3B69     		ldr	r3, [r7, #16]
 197 00d6 1B68     		ldr	r3, [r3]
 198 00d8 5A68     		ldr	r2, [r3, #4]
 199 00da BB68     		ldr	r3, [r7, #8]
 200 00dc 9A42     		cmp	r2, r3
 201 00de F6D3     		bcc	.L10
 202              		.loc 1 227 0 discriminator 4
 203 00e0 3B69     		ldr	r3, [r7, #16]
 204 00e2 1A68     		ldr	r2, [r3]
 205 00e4 FB68     		ldr	r3, [r7, #12]
 206 00e6 1A60     		str	r2, [r3]
 207 00e8 3B69     		ldr	r3, [r7, #16]
 208 00ea FA68     		ldr	r2, [r7, #12]
 209 00ec 1A60     		str	r2, [r3]
 210              	.L8:
 211              	.LBE2:
 228:..\Source\portable\MemMang/heap_2.c **** 				}
 229:..\Source\portable\MemMang/heap_2.c **** 
 230:..\Source\portable\MemMang/heap_2.c **** 				xFreeBytesRemaining -= pxBlock->xBlockSize;
 212              		.loc 1 230 0 is_stmt 1
 213 00ee 0C4B     		ldr	r3, .L13+12
 214 00f0 1A68     		ldr	r2, [r3]
 215 00f2 FB69     		ldr	r3, [r7, #28]
 216 00f4 5B68     		ldr	r3, [r3, #4]
 217 00f6 D31A     		subs	r3, r2, r3
 218 00f8 094A     		ldr	r2, .L13+12
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 9


 219 00fa 1360     		str	r3, [r2]
 220              	.L4:
 231:..\Source\portable\MemMang/heap_2.c **** 			}
 232:..\Source\portable\MemMang/heap_2.c **** 		}
 233:..\Source\portable\MemMang/heap_2.c **** 
 234:..\Source\portable\MemMang/heap_2.c **** 		traceMALLOC( pvReturn, xWantedSize );
 235:..\Source\portable\MemMang/heap_2.c **** 	}
 236:..\Source\portable\MemMang/heap_2.c **** 	( void ) xTaskResumeAll();
 221              		.loc 1 236 0
 222 00fc FFF7FEFF 		bl	xTaskResumeAll
 237:..\Source\portable\MemMang/heap_2.c **** 
 238:..\Source\portable\MemMang/heap_2.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 239:..\Source\portable\MemMang/heap_2.c **** 	{
 240:..\Source\portable\MemMang/heap_2.c **** 		if( pvReturn == NULL )
 223              		.loc 1 240 0
 224 0100 7B69     		ldr	r3, [r7, #20]
 225 0102 002B     		cmp	r3, #0
 226 0104 01D1     		bne	.L11
 227              	.LBB3:
 241:..\Source\portable\MemMang/heap_2.c **** 		{
 242:..\Source\portable\MemMang/heap_2.c **** 			extern void vApplicationMallocFailedHook( void );
 243:..\Source\portable\MemMang/heap_2.c **** 			vApplicationMallocFailedHook();
 228              		.loc 1 243 0
 229 0106 FFF7FEFF 		bl	vApplicationMallocFailedHook
 230              	.L11:
 231              	.LBE3:
 244:..\Source\portable\MemMang/heap_2.c **** 		}
 245:..\Source\portable\MemMang/heap_2.c **** 	}
 246:..\Source\portable\MemMang/heap_2.c **** 	#endif
 247:..\Source\portable\MemMang/heap_2.c **** 
 248:..\Source\portable\MemMang/heap_2.c **** 	return pvReturn;
 232              		.loc 1 248 0
 233 010a 7B69     		ldr	r3, [r7, #20]
 249:..\Source\portable\MemMang/heap_2.c **** }
 234              		.loc 1 249 0
 235 010c 1846     		mov	r0, r3
 236 010e 2037     		adds	r7, r7, #32
 237              		.cfi_def_cfa_offset 8
 238 0110 BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 0112 80BD     		pop	{r7, pc}
 242              	.L14:
 243              		.align	2
 244              	.L13:
 245 0114 10800000 		.word	xHeapHasBeenInitialised.6952
 246 0118 00800000 		.word	xStart
 247 011c 08800000 		.word	xEnd
 248 0120 00000000 		.word	xFreeBytesRemaining
 249              		.cfi_endproc
 250              	.LFE68:
 251              		.size	pvPortMalloc, .-pvPortMalloc
 252              		.section	.text.vPortFree,"ax",%progbits
 253              		.align	2
 254              		.global	vPortFree
 255              		.thumb
 256              		.thumb_func
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 10


 257              		.type	vPortFree, %function
 258              	vPortFree:
 259              	.LFB69:
 250:..\Source\portable\MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 251:..\Source\portable\MemMang/heap_2.c **** 
 252:..\Source\portable\MemMang/heap_2.c **** void vPortFree( void *pv )
 253:..\Source\portable\MemMang/heap_2.c **** {
 260              		.loc 1 253 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 24
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 86B0     		sub	sp, sp, #24
 269              		.cfi_def_cfa_offset 32
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 254:..\Source\portable\MemMang/heap_2.c **** uint8_t *puc = ( uint8_t * ) pv;
 273              		.loc 1 254 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 3B61     		str	r3, [r7, #16]
 255:..\Source\portable\MemMang/heap_2.c **** BlockLink_t *pxLink;
 256:..\Source\portable\MemMang/heap_2.c **** 
 257:..\Source\portable\MemMang/heap_2.c **** 	if( pv != NULL )
 276              		.loc 1 257 0
 277 000c 7B68     		ldr	r3, [r7, #4]
 278 000e 002B     		cmp	r3, #0
 279 0010 27D0     		beq	.L15
 258:..\Source\portable\MemMang/heap_2.c **** 	{
 259:..\Source\portable\MemMang/heap_2.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 260:..\Source\portable\MemMang/heap_2.c **** 		before it. */
 261:..\Source\portable\MemMang/heap_2.c **** 		puc -= heapSTRUCT_SIZE;
 280              		.loc 1 261 0
 281 0012 0823     		movs	r3, #8
 282 0014 5B42     		negs	r3, r3
 283 0016 3A69     		ldr	r2, [r7, #16]
 284 0018 1344     		add	r3, r3, r2
 285 001a 3B61     		str	r3, [r7, #16]
 262:..\Source\portable\MemMang/heap_2.c **** 
 263:..\Source\portable\MemMang/heap_2.c **** 		/* This unexpected casting is to keep some compilers from issuing
 264:..\Source\portable\MemMang/heap_2.c **** 		byte alignment warnings. */
 265:..\Source\portable\MemMang/heap_2.c **** 		pxLink = ( void * ) puc;
 286              		.loc 1 265 0
 287 001c 3B69     		ldr	r3, [r7, #16]
 288 001e FB60     		str	r3, [r7, #12]
 266:..\Source\portable\MemMang/heap_2.c **** 
 267:..\Source\portable\MemMang/heap_2.c **** 		vTaskSuspendAll();
 289              		.loc 1 267 0
 290 0020 FFF7FEFF 		bl	vTaskSuspendAll
 291              	.LBB4:
 268:..\Source\portable\MemMang/heap_2.c **** 		{
 269:..\Source\portable\MemMang/heap_2.c **** 			/* Add this block to the list of free blocks. */
 270:..\Source\portable\MemMang/heap_2.c **** 			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 292              		.loc 1 270 0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 11


 293 0024 FB68     		ldr	r3, [r7, #12]
 294 0026 5B68     		ldr	r3, [r3, #4]
 295 0028 BB60     		str	r3, [r7, #8]
 296 002a 0F4B     		ldr	r3, .L19
 297 002c 7B61     		str	r3, [r7, #20]
 298 002e 02E0     		b	.L17
 299              	.L18:
 300              		.loc 1 270 0 is_stmt 0 discriminator 3
 301 0030 7B69     		ldr	r3, [r7, #20]
 302 0032 1B68     		ldr	r3, [r3]
 303 0034 7B61     		str	r3, [r7, #20]
 304              	.L17:
 305              		.loc 1 270 0 discriminator 1
 306 0036 7B69     		ldr	r3, [r7, #20]
 307 0038 1B68     		ldr	r3, [r3]
 308 003a 5A68     		ldr	r2, [r3, #4]
 309 003c BB68     		ldr	r3, [r7, #8]
 310 003e 9A42     		cmp	r2, r3
 311 0040 F6D3     		bcc	.L18
 312              		.loc 1 270 0 discriminator 4
 313 0042 7B69     		ldr	r3, [r7, #20]
 314 0044 1A68     		ldr	r2, [r3]
 315 0046 FB68     		ldr	r3, [r7, #12]
 316 0048 1A60     		str	r2, [r3]
 317 004a 7B69     		ldr	r3, [r7, #20]
 318 004c FA68     		ldr	r2, [r7, #12]
 319 004e 1A60     		str	r2, [r3]
 320              	.LBE4:
 271:..\Source\portable\MemMang/heap_2.c **** 			xFreeBytesRemaining += pxLink->xBlockSize;
 321              		.loc 1 271 0 is_stmt 1 discriminator 4
 322 0050 FB68     		ldr	r3, [r7, #12]
 323 0052 5A68     		ldr	r2, [r3, #4]
 324 0054 054B     		ldr	r3, .L19+4
 325 0056 1B68     		ldr	r3, [r3]
 326 0058 1344     		add	r3, r3, r2
 327 005a 044A     		ldr	r2, .L19+4
 328 005c 1360     		str	r3, [r2]
 272:..\Source\portable\MemMang/heap_2.c **** 			traceFREE( pv, pxLink->xBlockSize );
 273:..\Source\portable\MemMang/heap_2.c **** 		}
 274:..\Source\portable\MemMang/heap_2.c **** 		( void ) xTaskResumeAll();
 329              		.loc 1 274 0 discriminator 4
 330 005e FFF7FEFF 		bl	xTaskResumeAll
 331              	.L15:
 275:..\Source\portable\MemMang/heap_2.c **** 	}
 276:..\Source\portable\MemMang/heap_2.c **** }
 332              		.loc 1 276 0
 333 0062 1837     		adds	r7, r7, #24
 334              		.cfi_def_cfa_offset 8
 335 0064 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0066 80BD     		pop	{r7, pc}
 339              	.L20:
 340              		.align	2
 341              	.L19:
 342 0068 00800000 		.word	xStart
 343 006c 00000000 		.word	xFreeBytesRemaining
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 12


 344              		.cfi_endproc
 345              	.LFE69:
 346              		.size	vPortFree, .-vPortFree
 347              		.section	.text.xPortGetFreeHeapSize,"ax",%progbits
 348              		.align	2
 349              		.global	xPortGetFreeHeapSize
 350              		.thumb
 351              		.thumb_func
 352              		.type	xPortGetFreeHeapSize, %function
 353              	xPortGetFreeHeapSize:
 354              	.LFB70:
 277:..\Source\portable\MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 278:..\Source\portable\MemMang/heap_2.c **** 
 279:..\Source\portable\MemMang/heap_2.c **** size_t xPortGetFreeHeapSize( void )
 280:..\Source\portable\MemMang/heap_2.c **** {
 355              		.loc 1 280 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 00AF     		add	r7, sp, #0
 364              		.cfi_def_cfa_register 7
 281:..\Source\portable\MemMang/heap_2.c **** 	return xFreeBytesRemaining;
 365              		.loc 1 281 0
 366 0004 034B     		ldr	r3, .L23
 367 0006 1B68     		ldr	r3, [r3]
 282:..\Source\portable\MemMang/heap_2.c **** }
 368              		.loc 1 282 0
 369 0008 1846     		mov	r0, r3
 370 000a BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000c 5DF8047B 		ldr	r7, [sp], #4
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0010 7047     		bx	lr
 377              	.L24:
 378 0012 00BF     		.align	2
 379              	.L23:
 380 0014 00000000 		.word	xFreeBytesRemaining
 381              		.cfi_endproc
 382              	.LFE70:
 383              		.size	xPortGetFreeHeapSize, .-xPortGetFreeHeapSize
 384              		.section	.text.vPortInitialiseBlocks,"ax",%progbits
 385              		.align	2
 386              		.global	vPortInitialiseBlocks
 387              		.thumb
 388              		.thumb_func
 389              		.type	vPortInitialiseBlocks, %function
 390              	vPortInitialiseBlocks:
 391              	.LFB71:
 283:..\Source\portable\MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 284:..\Source\portable\MemMang/heap_2.c **** 
 285:..\Source\portable\MemMang/heap_2.c **** void vPortInitialiseBlocks( void )
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 13


 286:..\Source\portable\MemMang/heap_2.c **** {
 392              		.loc 1 286 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 287:..\Source\portable\MemMang/heap_2.c **** 	/* This just exists to keep the linker quiet. */
 288:..\Source\portable\MemMang/heap_2.c **** }
 402              		.loc 1 288 0
 403 0004 BD46     		mov	sp, r7
 404              		.cfi_def_cfa_register 13
 405              		@ sp needed
 406 0006 5DF8047B 		ldr	r7, [sp], #4
 407              		.cfi_restore 7
 408              		.cfi_def_cfa_offset 0
 409 000a 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE71:
 412              		.size	vPortInitialiseBlocks, .-vPortInitialiseBlocks
 413              		.section	.text.prvHeapInit,"ax",%progbits
 414              		.align	2
 415              		.thumb
 416              		.thumb_func
 417              		.type	prvHeapInit, %function
 418              	prvHeapInit:
 419              	.LFB72:
 289:..\Source\portable\MemMang/heap_2.c **** /*-----------------------------------------------------------*/
 290:..\Source\portable\MemMang/heap_2.c **** 
 291:..\Source\portable\MemMang/heap_2.c **** static void prvHeapInit( void )
 292:..\Source\portable\MemMang/heap_2.c **** {
 420              		.loc 1 292 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 80B4     		push	{r7}
 426              		.cfi_def_cfa_offset 4
 427              		.cfi_offset 7, -4
 428 0002 83B0     		sub	sp, sp, #12
 429              		.cfi_def_cfa_offset 16
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_def_cfa_register 7
 293:..\Source\portable\MemMang/heap_2.c **** BlockLink_t *pxFirstFreeBlock;
 294:..\Source\portable\MemMang/heap_2.c **** uint8_t *pucAlignedHeap;
 295:..\Source\portable\MemMang/heap_2.c **** 
 296:..\Source\portable\MemMang/heap_2.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 297:..\Source\portable\MemMang/heap_2.c **** 	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~
 432              		.loc 1 297 0
 433 0006 0F4B     		ldr	r3, .L27
 434 0008 23F00703 		bic	r3, r3, #7
 435 000c 7B60     		str	r3, [r7, #4]
 298:..\Source\portable\MemMang/heap_2.c **** 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 14


 299:..\Source\portable\MemMang/heap_2.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 300:..\Source\portable\MemMang/heap_2.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 301:..\Source\portable\MemMang/heap_2.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 436              		.loc 1 301 0
 437 000e 0E4A     		ldr	r2, .L27+4
 438 0010 7B68     		ldr	r3, [r7, #4]
 439 0012 1360     		str	r3, [r2]
 302:..\Source\portable\MemMang/heap_2.c **** 	xStart.xBlockSize = ( size_t ) 0;
 440              		.loc 1 302 0
 441 0014 0C4B     		ldr	r3, .L27+4
 442 0016 0022     		movs	r2, #0
 443 0018 5A60     		str	r2, [r3, #4]
 303:..\Source\portable\MemMang/heap_2.c **** 
 304:..\Source\portable\MemMang/heap_2.c **** 	/* xEnd is used to mark the end of the list of free blocks. */
 305:..\Source\portable\MemMang/heap_2.c **** 	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
 444              		.loc 1 305 0
 445 001a 0C4B     		ldr	r3, .L27+8
 446 001c 47F6F872 		movw	r2, #32760
 447 0020 5A60     		str	r2, [r3, #4]
 306:..\Source\portable\MemMang/heap_2.c **** 	xEnd.pxNextFreeBlock = NULL;
 448              		.loc 1 306 0
 449 0022 0A4B     		ldr	r3, .L27+8
 450 0024 0022     		movs	r2, #0
 451 0026 1A60     		str	r2, [r3]
 307:..\Source\portable\MemMang/heap_2.c **** 
 308:..\Source\portable\MemMang/heap_2.c **** 	/* To start with there is a single free block that is sized to take up the
 309:..\Source\portable\MemMang/heap_2.c **** 	entire heap space. */
 310:..\Source\portable\MemMang/heap_2.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
 452              		.loc 1 310 0
 453 0028 7B68     		ldr	r3, [r7, #4]
 454 002a 3B60     		str	r3, [r7]
 311:..\Source\portable\MemMang/heap_2.c **** 	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
 455              		.loc 1 311 0
 456 002c 3B68     		ldr	r3, [r7]
 457 002e 47F6F872 		movw	r2, #32760
 458 0032 5A60     		str	r2, [r3, #4]
 312:..\Source\portable\MemMang/heap_2.c **** 	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
 459              		.loc 1 312 0
 460 0034 3B68     		ldr	r3, [r7]
 461 0036 054A     		ldr	r2, .L27+8
 462 0038 1A60     		str	r2, [r3]
 313:..\Source\portable\MemMang/heap_2.c **** }
 463              		.loc 1 313 0
 464 003a 0C37     		adds	r7, r7, #12
 465              		.cfi_def_cfa_offset 4
 466 003c BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 003e 5DF8047B 		ldr	r7, [sp], #4
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 0042 7047     		bx	lr
 473              	.L28:
 474              		.align	2
 475              	.L27:
 476 0044 08000000 		.word	ucHeap+8
 477 0048 00800000 		.word	xStart
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 15


 478 004c 08800000 		.word	xEnd
 479              		.cfi_endproc
 480              	.LFE72:
 481              		.size	prvHeapInit, .-prvHeapInit
 482              		.bss
 483              		.align	2
 484              	xHeapHasBeenInitialised.6952:
 485 8010 00000000 		.space	4
 486              		.text
 487              	.Letext0:
 488              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 489              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 490              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 491              		.file 5 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 492              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 493              		.section	.debug_info,"",%progbits
 494              	.Ldebug_info0:
 495 0000 22030000 		.4byte	0x322
 496 0004 0400     		.2byte	0x4
 497 0006 00000000 		.4byte	.Ldebug_abbrev0
 498 000a 04       		.byte	0x4
 499 000b 01       		.uleb128 0x1
 500 000c 64000000 		.4byte	.LASF41
 501 0010 01       		.byte	0x1
 502 0011 11000000 		.4byte	.LASF42
 503 0015 18030000 		.4byte	.LASF43
 504 0019 00000000 		.4byte	.Ldebug_ranges0+0
 505 001d 00000000 		.4byte	0
 506 0021 00000000 		.4byte	.Ldebug_line0
 507 0025 02       		.uleb128 0x2
 508 0026 0A000000 		.4byte	.LASF2
 509 002a 02       		.byte	0x2
 510 002b D4       		.byte	0xd4
 511 002c 30000000 		.4byte	0x30
 512 0030 03       		.uleb128 0x3
 513 0031 04       		.byte	0x4
 514 0032 07       		.byte	0x7
 515 0033 01020000 		.4byte	.LASF0
 516 0037 04       		.uleb128 0x4
 517 0038 04       		.byte	0x4
 518 0039 05       		.byte	0x5
 519 003a 696E7400 		.ascii	"int\000"
 520 003e 03       		.uleb128 0x3
 521 003f 01       		.byte	0x1
 522 0040 06       		.byte	0x6
 523 0041 F1020000 		.4byte	.LASF1
 524 0045 02       		.uleb128 0x2
 525 0046 00000000 		.4byte	.LASF3
 526 004a 03       		.byte	0x3
 527 004b 1D       		.byte	0x1d
 528 004c 50000000 		.4byte	0x50
 529 0050 03       		.uleb128 0x3
 530 0051 01       		.byte	0x1
 531 0052 08       		.byte	0x8
 532 0053 33010000 		.4byte	.LASF4
 533 0057 03       		.uleb128 0x3
 534 0058 02       		.byte	0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 16


 535 0059 05       		.byte	0x5
 536 005a B5020000 		.4byte	.LASF5
 537 005e 02       		.uleb128 0x2
 538 005f 9B010000 		.4byte	.LASF6
 539 0063 03       		.byte	0x3
 540 0064 2B       		.byte	0x2b
 541 0065 69000000 		.4byte	0x69
 542 0069 03       		.uleb128 0x3
 543 006a 02       		.byte	0x2
 544 006b 07       		.byte	0x7
 545 006c 5E010000 		.4byte	.LASF7
 546 0070 02       		.uleb128 0x2
 547 0071 35000000 		.4byte	.LASF8
 548 0075 03       		.byte	0x3
 549 0076 3F       		.byte	0x3f
 550 0077 7B000000 		.4byte	0x7b
 551 007b 03       		.uleb128 0x3
 552 007c 04       		.byte	0x4
 553 007d 05       		.byte	0x5
 554 007e 5B000000 		.4byte	.LASF9
 555 0082 02       		.uleb128 0x2
 556 0083 C0010000 		.4byte	.LASF10
 557 0087 03       		.byte	0x3
 558 0088 41       		.byte	0x41
 559 0089 8D000000 		.4byte	0x8d
 560 008d 03       		.uleb128 0x3
 561 008e 04       		.byte	0x4
 562 008f 07       		.byte	0x7
 563 0090 4C010000 		.4byte	.LASF11
 564 0094 03       		.uleb128 0x3
 565 0095 08       		.byte	0x8
 566 0096 05       		.byte	0x5
 567 0097 67020000 		.4byte	.LASF12
 568 009b 03       		.uleb128 0x3
 569 009c 08       		.byte	0x8
 570 009d 07       		.byte	0x7
 571 009e 0E020000 		.4byte	.LASF13
 572 00a2 03       		.uleb128 0x3
 573 00a3 04       		.byte	0x4
 574 00a4 07       		.byte	0x7
 575 00a5 5E020000 		.4byte	.LASF14
 576 00a9 05       		.uleb128 0x5
 577 00aa 04       		.byte	0x4
 578 00ab 03       		.uleb128 0x3
 579 00ac 01       		.byte	0x1
 580 00ad 08       		.byte	0x8
 581 00ae 81020000 		.4byte	.LASF15
 582 00b2 02       		.uleb128 0x2
 583 00b3 25020000 		.4byte	.LASF16
 584 00b7 04       		.byte	0x4
 585 00b8 15       		.byte	0x15
 586 00b9 45000000 		.4byte	0x45
 587 00bd 02       		.uleb128 0x2
 588 00be BF020000 		.4byte	.LASF17
 589 00c2 04       		.byte	0x4
 590 00c3 21       		.byte	0x21
 591 00c4 5E000000 		.4byte	0x5e
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 17


 592 00c8 02       		.uleb128 0x2
 593 00c9 4A020000 		.4byte	.LASF18
 594 00cd 04       		.byte	0x4
 595 00ce 2C       		.byte	0x2c
 596 00cf 70000000 		.4byte	0x70
 597 00d3 02       		.uleb128 0x2
 598 00d4 DC020000 		.4byte	.LASF19
 599 00d8 04       		.byte	0x4
 600 00d9 2D       		.byte	0x2d
 601 00da 82000000 		.4byte	0x82
 602 00de 03       		.uleb128 0x3
 603 00df 04       		.byte	0x4
 604 00e0 04       		.byte	0x4
 605 00e1 2D010000 		.4byte	.LASF20
 606 00e5 03       		.uleb128 0x3
 607 00e6 08       		.byte	0x8
 608 00e7 04       		.byte	0x4
 609 00e8 F2000000 		.4byte	.LASF21
 610 00ec 02       		.uleb128 0x2
 611 00ed 0D030000 		.4byte	.LASF22
 612 00f1 05       		.byte	0x5
 613 00f2 62       		.byte	0x62
 614 00f3 7B000000 		.4byte	0x7b
 615 00f7 06       		.uleb128 0x6
 616 00f8 04       		.byte	0x4
 617 00f9 B2000000 		.4byte	0xb2
 618 00fd 07       		.uleb128 0x7
 619 00fe 4E000000 		.4byte	.LASF44
 620 0102 08       		.byte	0x8
 621 0103 01       		.byte	0x1
 622 0104 73       		.byte	0x73
 623 0105 22010000 		.4byte	0x122
 624 0109 08       		.uleb128 0x8
 625 010a FD020000 		.4byte	.LASF23
 626 010e 01       		.byte	0x1
 627 010f 75       		.byte	0x75
 628 0110 22010000 		.4byte	0x122
 629 0114 00       		.byte	0
 630 0115 08       		.uleb128 0x8
 631 0116 41010000 		.4byte	.LASF24
 632 011a 01       		.byte	0x1
 633 011b 76       		.byte	0x76
 634 011c 25000000 		.4byte	0x25
 635 0120 04       		.byte	0x4
 636 0121 00       		.byte	0
 637 0122 06       		.uleb128 0x6
 638 0123 04       		.byte	0x4
 639 0124 FD000000 		.4byte	0xfd
 640 0128 02       		.uleb128 0x2
 641 0129 52020000 		.4byte	.LASF25
 642 012d 01       		.byte	0x1
 643 012e 77       		.byte	0x77
 644 012f FD000000 		.4byte	0xfd
 645 0133 09       		.uleb128 0x9
 646 0134 08010000 		.4byte	.LASF45
 647 0138 01       		.byte	0x1
 648 0139 A0       		.byte	0xa0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 18


 649 013a A9000000 		.4byte	0xa9
 650 013e 00000000 		.4byte	.LFB68
 651 0142 24010000 		.4byte	.LFE68-.LFB68
 652 0146 01       		.uleb128 0x1
 653 0147 9C       		.byte	0x9c
 654 0148 DF010000 		.4byte	0x1df
 655 014c 0A       		.uleb128 0xa
 656 014d 75020000 		.4byte	.LASF32
 657 0151 01       		.byte	0x1
 658 0152 A0       		.byte	0xa0
 659 0153 25000000 		.4byte	0x25
 660 0157 02       		.uleb128 0x2
 661 0158 91       		.byte	0x91
 662 0159 5C       		.sleb128 -36
 663 015a 0B       		.uleb128 0xb
 664 015b F9000000 		.4byte	.LASF26
 665 015f 01       		.byte	0x1
 666 0160 A2       		.byte	0xa2
 667 0161 DF010000 		.4byte	0x1df
 668 0165 02       		.uleb128 0x2
 669 0166 91       		.byte	0x91
 670 0167 74       		.sleb128 -12
 671 0168 0B       		.uleb128 0xb
 672 0169 A6010000 		.4byte	.LASF27
 673 016d 01       		.byte	0x1
 674 016e A2       		.byte	0xa2
 675 016f DF010000 		.4byte	0x1df
 676 0173 02       		.uleb128 0x2
 677 0174 91       		.byte	0x91
 678 0175 70       		.sleb128 -16
 679 0176 0B       		.uleb128 0xb
 680 0177 3F000000 		.4byte	.LASF28
 681 017b 01       		.byte	0x1
 682 017c A2       		.byte	0xa2
 683 017d DF010000 		.4byte	0x1df
 684 0181 02       		.uleb128 0x2
 685 0182 91       		.byte	0x91
 686 0183 64       		.sleb128 -28
 687 0184 0B       		.uleb128 0xb
 688 0185 71010000 		.4byte	.LASF29
 689 0189 01       		.byte	0x1
 690 018a A3       		.byte	0xa3
 691 018b EC000000 		.4byte	0xec
 692 018f 05       		.uleb128 0x5
 693 0190 03       		.byte	0x3
 694 0191 10800000 		.4byte	xHeapHasBeenInitialised.6952
 695 0195 0B       		.uleb128 0xb
 696 0196 CB010000 		.4byte	.LASF30
 697 019a 01       		.byte	0x1
 698 019b A4       		.byte	0xa4
 699 019c A9000000 		.4byte	0xa9
 700 01a0 02       		.uleb128 0x2
 701 01a1 91       		.byte	0x91
 702 01a2 6C       		.sleb128 -20
 703 01a3 0C       		.uleb128 0xc
 704 01a4 C2000000 		.4byte	.LBB2
 705 01a8 2C000000 		.4byte	.LBE2-.LBB2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 19


 706 01ac CD010000 		.4byte	0x1cd
 707 01b0 0B       		.uleb128 0xb
 708 01b1 AA020000 		.4byte	.LASF31
 709 01b5 01       		.byte	0x1
 710 01b6 E3       		.byte	0xe3
 711 01b7 DF010000 		.4byte	0x1df
 712 01bb 02       		.uleb128 0x2
 713 01bc 91       		.byte	0x91
 714 01bd 68       		.sleb128 -24
 715 01be 0B       		.uleb128 0xb
 716 01bf 41010000 		.4byte	.LASF24
 717 01c3 01       		.byte	0x1
 718 01c4 E3       		.byte	0xe3
 719 01c5 25000000 		.4byte	0x25
 720 01c9 02       		.uleb128 0x2
 721 01ca 91       		.byte	0x91
 722 01cb 60       		.sleb128 -32
 723 01cc 00       		.byte	0
 724 01cd 0D       		.uleb128 0xd
 725 01ce 06010000 		.4byte	.LBB3
 726 01d2 04000000 		.4byte	.LBE3-.LBB3
 727 01d6 0E       		.uleb128 0xe
 728 01d7 2D020000 		.4byte	.LASF46
 729 01db 01       		.byte	0x1
 730 01dc F2       		.byte	0xf2
 731 01dd 00       		.byte	0
 732 01de 00       		.byte	0
 733 01df 06       		.uleb128 0x6
 734 01e0 04       		.byte	0x4
 735 01e1 28010000 		.4byte	0x128
 736 01e5 0F       		.uleb128 0xf
 737 01e6 B6010000 		.4byte	.LASF47
 738 01ea 01       		.byte	0x1
 739 01eb FC       		.byte	0xfc
 740 01ec 00000000 		.4byte	.LFB69
 741 01f0 70000000 		.4byte	.LFE69-.LFB69
 742 01f4 01       		.uleb128 0x1
 743 01f5 9C       		.byte	0x9c
 744 01f6 4C020000 		.4byte	0x24c
 745 01fa 10       		.uleb128 0x10
 746 01fb 707600   		.ascii	"pv\000"
 747 01fe 01       		.byte	0x1
 748 01ff FC       		.byte	0xfc
 749 0200 A9000000 		.4byte	0xa9
 750 0204 02       		.uleb128 0x2
 751 0205 91       		.byte	0x91
 752 0206 64       		.sleb128 -28
 753 0207 11       		.uleb128 0x11
 754 0208 70756300 		.ascii	"puc\000"
 755 020c 01       		.byte	0x1
 756 020d FE       		.byte	0xfe
 757 020e F7000000 		.4byte	0xf7
 758 0212 02       		.uleb128 0x2
 759 0213 91       		.byte	0x91
 760 0214 70       		.sleb128 -16
 761 0215 0B       		.uleb128 0xb
 762 0216 01010000 		.4byte	.LASF33
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 20


 763 021a 01       		.byte	0x1
 764 021b FF       		.byte	0xff
 765 021c DF010000 		.4byte	0x1df
 766 0220 02       		.uleb128 0x2
 767 0221 91       		.byte	0x91
 768 0222 6C       		.sleb128 -20
 769 0223 0D       		.uleb128 0xd
 770 0224 24000000 		.4byte	.LBB4
 771 0228 2C000000 		.4byte	.LBE4-.LBB4
 772 022c 12       		.uleb128 0x12
 773 022d AA020000 		.4byte	.LASF31
 774 0231 01       		.byte	0x1
 775 0232 0E01     		.2byte	0x10e
 776 0234 DF010000 		.4byte	0x1df
 777 0238 02       		.uleb128 0x2
 778 0239 91       		.byte	0x91
 779 023a 74       		.sleb128 -12
 780 023b 12       		.uleb128 0x12
 781 023c 41010000 		.4byte	.LASF24
 782 0240 01       		.byte	0x1
 783 0241 0E01     		.2byte	0x10e
 784 0243 25000000 		.4byte	0x25
 785 0247 02       		.uleb128 0x2
 786 0248 91       		.byte	0x91
 787 0249 68       		.sleb128 -24
 788 024a 00       		.byte	0
 789 024b 00       		.byte	0
 790 024c 13       		.uleb128 0x13
 791 024d 86020000 		.4byte	.LASF48
 792 0251 01       		.byte	0x1
 793 0252 1701     		.2byte	0x117
 794 0254 25000000 		.4byte	0x25
 795 0258 00000000 		.4byte	.LFB70
 796 025c 18000000 		.4byte	.LFE70-.LFB70
 797 0260 01       		.uleb128 0x1
 798 0261 9C       		.byte	0x9c
 799 0262 14       		.uleb128 0x14
 800 0263 EB010000 		.4byte	.LASF49
 801 0267 01       		.byte	0x1
 802 0268 1D01     		.2byte	0x11d
 803 026a 00000000 		.4byte	.LFB71
 804 026e 0C000000 		.4byte	.LFE71-.LFB71
 805 0272 01       		.uleb128 0x1
 806 0273 9C       		.byte	0x9c
 807 0274 15       		.uleb128 0x15
 808 0275 E5020000 		.4byte	.LASF50
 809 0279 01       		.byte	0x1
 810 027a 2301     		.2byte	0x123
 811 027c 00000000 		.4byte	.LFB72
 812 0280 50000000 		.4byte	.LFE72-.LFB72
 813 0284 01       		.uleb128 0x1
 814 0285 9C       		.byte	0x9c
 815 0286 A9020000 		.4byte	0x2a9
 816 028a 12       		.uleb128 0x12
 817 028b 15010000 		.4byte	.LASF34
 818 028f 01       		.byte	0x1
 819 0290 2501     		.2byte	0x125
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 21


 820 0292 DF010000 		.4byte	0x1df
 821 0296 02       		.uleb128 0x2
 822 0297 91       		.byte	0x91
 823 0298 70       		.sleb128 -16
 824 0299 12       		.uleb128 0x12
 825 029a 9B020000 		.4byte	.LASF35
 826 029e 01       		.byte	0x1
 827 029f 2601     		.2byte	0x126
 828 02a1 F7000000 		.4byte	0xf7
 829 02a5 02       		.uleb128 0x2
 830 02a6 91       		.byte	0x91
 831 02a7 74       		.sleb128 -12
 832 02a8 00       		.byte	0
 833 02a9 16       		.uleb128 0x16
 834 02aa B2000000 		.4byte	0xb2
 835 02ae BA020000 		.4byte	0x2ba
 836 02b2 17       		.uleb128 0x17
 837 02b3 A2000000 		.4byte	0xa2
 838 02b7 FF7F     		.2byte	0x7fff
 839 02b9 00       		.byte	0
 840 02ba 0B       		.uleb128 0xb
 841 02bb 26010000 		.4byte	.LASF36
 842 02bf 01       		.byte	0x1
 843 02c0 6D       		.byte	0x6d
 844 02c1 A9020000 		.4byte	0x2a9
 845 02c5 05       		.uleb128 0x5
 846 02c6 03       		.byte	0x3
 847 02c7 00000000 		.4byte	ucHeap
 848 02cb 0B       		.uleb128 0xb
 849 02cc D4010000 		.4byte	.LASF37
 850 02d0 01       		.byte	0x1
 851 02d1 7A       		.byte	0x7a
 852 02d2 DC020000 		.4byte	0x2dc
 853 02d6 05       		.uleb128 0x5
 854 02d7 03       		.byte	0x3
 855 02d8 00000000 		.4byte	heapSTRUCT_SIZE
 856 02dc 18       		.uleb128 0x18
 857 02dd BD000000 		.4byte	0xbd
 858 02e1 0B       		.uleb128 0xb
 859 02e2 E4010000 		.4byte	.LASF38
 860 02e6 01       		.byte	0x1
 861 02e7 7E       		.byte	0x7e
 862 02e8 28010000 		.4byte	0x128
 863 02ec 05       		.uleb128 0x5
 864 02ed 03       		.byte	0x3
 865 02ee 00800000 		.4byte	xStart
 866 02f2 0B       		.uleb128 0xb
 867 02f3 96010000 		.4byte	.LASF39
 868 02f7 01       		.byte	0x1
 869 02f8 7E       		.byte	0x7e
 870 02f9 28010000 		.4byte	0x128
 871 02fd 05       		.uleb128 0x5
 872 02fe 03       		.byte	0x3
 873 02ff 08800000 		.4byte	xEnd
 874 0303 0B       		.uleb128 0xb
 875 0304 C8020000 		.4byte	.LASF40
 876 0308 01       		.byte	0x1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 22


 877 0309 82       		.byte	0x82
 878 030a 25000000 		.4byte	0x25
 879 030e 05       		.uleb128 0x5
 880 030f 03       		.byte	0x3
 881 0310 00000000 		.4byte	xFreeBytesRemaining
 882 0314 19       		.uleb128 0x19
 883 0315 89010000 		.4byte	.LASF51
 884 0319 06       		.byte	0x6
 885 031a 9606     		.2byte	0x696
 886 031c 20030000 		.4byte	0x320
 887 0320 1A       		.uleb128 0x1a
 888 0321 C8000000 		.4byte	0xc8
 889 0325 00       		.byte	0
 890              		.section	.debug_abbrev,"",%progbits
 891              	.Ldebug_abbrev0:
 892 0000 01       		.uleb128 0x1
 893 0001 11       		.uleb128 0x11
 894 0002 01       		.byte	0x1
 895 0003 25       		.uleb128 0x25
 896 0004 0E       		.uleb128 0xe
 897 0005 13       		.uleb128 0x13
 898 0006 0B       		.uleb128 0xb
 899 0007 03       		.uleb128 0x3
 900 0008 0E       		.uleb128 0xe
 901 0009 1B       		.uleb128 0x1b
 902 000a 0E       		.uleb128 0xe
 903 000b 55       		.uleb128 0x55
 904 000c 17       		.uleb128 0x17
 905 000d 11       		.uleb128 0x11
 906 000e 01       		.uleb128 0x1
 907 000f 10       		.uleb128 0x10
 908 0010 17       		.uleb128 0x17
 909 0011 00       		.byte	0
 910 0012 00       		.byte	0
 911 0013 02       		.uleb128 0x2
 912 0014 16       		.uleb128 0x16
 913 0015 00       		.byte	0
 914 0016 03       		.uleb128 0x3
 915 0017 0E       		.uleb128 0xe
 916 0018 3A       		.uleb128 0x3a
 917 0019 0B       		.uleb128 0xb
 918 001a 3B       		.uleb128 0x3b
 919 001b 0B       		.uleb128 0xb
 920 001c 49       		.uleb128 0x49
 921 001d 13       		.uleb128 0x13
 922 001e 00       		.byte	0
 923 001f 00       		.byte	0
 924 0020 03       		.uleb128 0x3
 925 0021 24       		.uleb128 0x24
 926 0022 00       		.byte	0
 927 0023 0B       		.uleb128 0xb
 928 0024 0B       		.uleb128 0xb
 929 0025 3E       		.uleb128 0x3e
 930 0026 0B       		.uleb128 0xb
 931 0027 03       		.uleb128 0x3
 932 0028 0E       		.uleb128 0xe
 933 0029 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 23


 934 002a 00       		.byte	0
 935 002b 04       		.uleb128 0x4
 936 002c 24       		.uleb128 0x24
 937 002d 00       		.byte	0
 938 002e 0B       		.uleb128 0xb
 939 002f 0B       		.uleb128 0xb
 940 0030 3E       		.uleb128 0x3e
 941 0031 0B       		.uleb128 0xb
 942 0032 03       		.uleb128 0x3
 943 0033 08       		.uleb128 0x8
 944 0034 00       		.byte	0
 945 0035 00       		.byte	0
 946 0036 05       		.uleb128 0x5
 947 0037 0F       		.uleb128 0xf
 948 0038 00       		.byte	0
 949 0039 0B       		.uleb128 0xb
 950 003a 0B       		.uleb128 0xb
 951 003b 00       		.byte	0
 952 003c 00       		.byte	0
 953 003d 06       		.uleb128 0x6
 954 003e 0F       		.uleb128 0xf
 955 003f 00       		.byte	0
 956 0040 0B       		.uleb128 0xb
 957 0041 0B       		.uleb128 0xb
 958 0042 49       		.uleb128 0x49
 959 0043 13       		.uleb128 0x13
 960 0044 00       		.byte	0
 961 0045 00       		.byte	0
 962 0046 07       		.uleb128 0x7
 963 0047 13       		.uleb128 0x13
 964 0048 01       		.byte	0x1
 965 0049 03       		.uleb128 0x3
 966 004a 0E       		.uleb128 0xe
 967 004b 0B       		.uleb128 0xb
 968 004c 0B       		.uleb128 0xb
 969 004d 3A       		.uleb128 0x3a
 970 004e 0B       		.uleb128 0xb
 971 004f 3B       		.uleb128 0x3b
 972 0050 0B       		.uleb128 0xb
 973 0051 01       		.uleb128 0x1
 974 0052 13       		.uleb128 0x13
 975 0053 00       		.byte	0
 976 0054 00       		.byte	0
 977 0055 08       		.uleb128 0x8
 978 0056 0D       		.uleb128 0xd
 979 0057 00       		.byte	0
 980 0058 03       		.uleb128 0x3
 981 0059 0E       		.uleb128 0xe
 982 005a 3A       		.uleb128 0x3a
 983 005b 0B       		.uleb128 0xb
 984 005c 3B       		.uleb128 0x3b
 985 005d 0B       		.uleb128 0xb
 986 005e 49       		.uleb128 0x49
 987 005f 13       		.uleb128 0x13
 988 0060 38       		.uleb128 0x38
 989 0061 0B       		.uleb128 0xb
 990 0062 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 24


 991 0063 00       		.byte	0
 992 0064 09       		.uleb128 0x9
 993 0065 2E       		.uleb128 0x2e
 994 0066 01       		.byte	0x1
 995 0067 3F       		.uleb128 0x3f
 996 0068 19       		.uleb128 0x19
 997 0069 03       		.uleb128 0x3
 998 006a 0E       		.uleb128 0xe
 999 006b 3A       		.uleb128 0x3a
 1000 006c 0B       		.uleb128 0xb
 1001 006d 3B       		.uleb128 0x3b
 1002 006e 0B       		.uleb128 0xb
 1003 006f 27       		.uleb128 0x27
 1004 0070 19       		.uleb128 0x19
 1005 0071 49       		.uleb128 0x49
 1006 0072 13       		.uleb128 0x13
 1007 0073 11       		.uleb128 0x11
 1008 0074 01       		.uleb128 0x1
 1009 0075 12       		.uleb128 0x12
 1010 0076 06       		.uleb128 0x6
 1011 0077 40       		.uleb128 0x40
 1012 0078 18       		.uleb128 0x18
 1013 0079 9642     		.uleb128 0x2116
 1014 007b 19       		.uleb128 0x19
 1015 007c 01       		.uleb128 0x1
 1016 007d 13       		.uleb128 0x13
 1017 007e 00       		.byte	0
 1018 007f 00       		.byte	0
 1019 0080 0A       		.uleb128 0xa
 1020 0081 05       		.uleb128 0x5
 1021 0082 00       		.byte	0
 1022 0083 03       		.uleb128 0x3
 1023 0084 0E       		.uleb128 0xe
 1024 0085 3A       		.uleb128 0x3a
 1025 0086 0B       		.uleb128 0xb
 1026 0087 3B       		.uleb128 0x3b
 1027 0088 0B       		.uleb128 0xb
 1028 0089 49       		.uleb128 0x49
 1029 008a 13       		.uleb128 0x13
 1030 008b 02       		.uleb128 0x2
 1031 008c 18       		.uleb128 0x18
 1032 008d 00       		.byte	0
 1033 008e 00       		.byte	0
 1034 008f 0B       		.uleb128 0xb
 1035 0090 34       		.uleb128 0x34
 1036 0091 00       		.byte	0
 1037 0092 03       		.uleb128 0x3
 1038 0093 0E       		.uleb128 0xe
 1039 0094 3A       		.uleb128 0x3a
 1040 0095 0B       		.uleb128 0xb
 1041 0096 3B       		.uleb128 0x3b
 1042 0097 0B       		.uleb128 0xb
 1043 0098 49       		.uleb128 0x49
 1044 0099 13       		.uleb128 0x13
 1045 009a 02       		.uleb128 0x2
 1046 009b 18       		.uleb128 0x18
 1047 009c 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 25


 1048 009d 00       		.byte	0
 1049 009e 0C       		.uleb128 0xc
 1050 009f 0B       		.uleb128 0xb
 1051 00a0 01       		.byte	0x1
 1052 00a1 11       		.uleb128 0x11
 1053 00a2 01       		.uleb128 0x1
 1054 00a3 12       		.uleb128 0x12
 1055 00a4 06       		.uleb128 0x6
 1056 00a5 01       		.uleb128 0x1
 1057 00a6 13       		.uleb128 0x13
 1058 00a7 00       		.byte	0
 1059 00a8 00       		.byte	0
 1060 00a9 0D       		.uleb128 0xd
 1061 00aa 0B       		.uleb128 0xb
 1062 00ab 01       		.byte	0x1
 1063 00ac 11       		.uleb128 0x11
 1064 00ad 01       		.uleb128 0x1
 1065 00ae 12       		.uleb128 0x12
 1066 00af 06       		.uleb128 0x6
 1067 00b0 00       		.byte	0
 1068 00b1 00       		.byte	0
 1069 00b2 0E       		.uleb128 0xe
 1070 00b3 2E       		.uleb128 0x2e
 1071 00b4 00       		.byte	0
 1072 00b5 3F       		.uleb128 0x3f
 1073 00b6 19       		.uleb128 0x19
 1074 00b7 03       		.uleb128 0x3
 1075 00b8 0E       		.uleb128 0xe
 1076 00b9 3A       		.uleb128 0x3a
 1077 00ba 0B       		.uleb128 0xb
 1078 00bb 3B       		.uleb128 0x3b
 1079 00bc 0B       		.uleb128 0xb
 1080 00bd 27       		.uleb128 0x27
 1081 00be 19       		.uleb128 0x19
 1082 00bf 3C       		.uleb128 0x3c
 1083 00c0 19       		.uleb128 0x19
 1084 00c1 00       		.byte	0
 1085 00c2 00       		.byte	0
 1086 00c3 0F       		.uleb128 0xf
 1087 00c4 2E       		.uleb128 0x2e
 1088 00c5 01       		.byte	0x1
 1089 00c6 3F       		.uleb128 0x3f
 1090 00c7 19       		.uleb128 0x19
 1091 00c8 03       		.uleb128 0x3
 1092 00c9 0E       		.uleb128 0xe
 1093 00ca 3A       		.uleb128 0x3a
 1094 00cb 0B       		.uleb128 0xb
 1095 00cc 3B       		.uleb128 0x3b
 1096 00cd 0B       		.uleb128 0xb
 1097 00ce 27       		.uleb128 0x27
 1098 00cf 19       		.uleb128 0x19
 1099 00d0 11       		.uleb128 0x11
 1100 00d1 01       		.uleb128 0x1
 1101 00d2 12       		.uleb128 0x12
 1102 00d3 06       		.uleb128 0x6
 1103 00d4 40       		.uleb128 0x40
 1104 00d5 18       		.uleb128 0x18
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 26


 1105 00d6 9642     		.uleb128 0x2116
 1106 00d8 19       		.uleb128 0x19
 1107 00d9 01       		.uleb128 0x1
 1108 00da 13       		.uleb128 0x13
 1109 00db 00       		.byte	0
 1110 00dc 00       		.byte	0
 1111 00dd 10       		.uleb128 0x10
 1112 00de 05       		.uleb128 0x5
 1113 00df 00       		.byte	0
 1114 00e0 03       		.uleb128 0x3
 1115 00e1 08       		.uleb128 0x8
 1116 00e2 3A       		.uleb128 0x3a
 1117 00e3 0B       		.uleb128 0xb
 1118 00e4 3B       		.uleb128 0x3b
 1119 00e5 0B       		.uleb128 0xb
 1120 00e6 49       		.uleb128 0x49
 1121 00e7 13       		.uleb128 0x13
 1122 00e8 02       		.uleb128 0x2
 1123 00e9 18       		.uleb128 0x18
 1124 00ea 00       		.byte	0
 1125 00eb 00       		.byte	0
 1126 00ec 11       		.uleb128 0x11
 1127 00ed 34       		.uleb128 0x34
 1128 00ee 00       		.byte	0
 1129 00ef 03       		.uleb128 0x3
 1130 00f0 08       		.uleb128 0x8
 1131 00f1 3A       		.uleb128 0x3a
 1132 00f2 0B       		.uleb128 0xb
 1133 00f3 3B       		.uleb128 0x3b
 1134 00f4 0B       		.uleb128 0xb
 1135 00f5 49       		.uleb128 0x49
 1136 00f6 13       		.uleb128 0x13
 1137 00f7 02       		.uleb128 0x2
 1138 00f8 18       		.uleb128 0x18
 1139 00f9 00       		.byte	0
 1140 00fa 00       		.byte	0
 1141 00fb 12       		.uleb128 0x12
 1142 00fc 34       		.uleb128 0x34
 1143 00fd 00       		.byte	0
 1144 00fe 03       		.uleb128 0x3
 1145 00ff 0E       		.uleb128 0xe
 1146 0100 3A       		.uleb128 0x3a
 1147 0101 0B       		.uleb128 0xb
 1148 0102 3B       		.uleb128 0x3b
 1149 0103 05       		.uleb128 0x5
 1150 0104 49       		.uleb128 0x49
 1151 0105 13       		.uleb128 0x13
 1152 0106 02       		.uleb128 0x2
 1153 0107 18       		.uleb128 0x18
 1154 0108 00       		.byte	0
 1155 0109 00       		.byte	0
 1156 010a 13       		.uleb128 0x13
 1157 010b 2E       		.uleb128 0x2e
 1158 010c 00       		.byte	0
 1159 010d 3F       		.uleb128 0x3f
 1160 010e 19       		.uleb128 0x19
 1161 010f 03       		.uleb128 0x3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 27


 1162 0110 0E       		.uleb128 0xe
 1163 0111 3A       		.uleb128 0x3a
 1164 0112 0B       		.uleb128 0xb
 1165 0113 3B       		.uleb128 0x3b
 1166 0114 05       		.uleb128 0x5
 1167 0115 27       		.uleb128 0x27
 1168 0116 19       		.uleb128 0x19
 1169 0117 49       		.uleb128 0x49
 1170 0118 13       		.uleb128 0x13
 1171 0119 11       		.uleb128 0x11
 1172 011a 01       		.uleb128 0x1
 1173 011b 12       		.uleb128 0x12
 1174 011c 06       		.uleb128 0x6
 1175 011d 40       		.uleb128 0x40
 1176 011e 18       		.uleb128 0x18
 1177 011f 9742     		.uleb128 0x2117
 1178 0121 19       		.uleb128 0x19
 1179 0122 00       		.byte	0
 1180 0123 00       		.byte	0
 1181 0124 14       		.uleb128 0x14
 1182 0125 2E       		.uleb128 0x2e
 1183 0126 00       		.byte	0
 1184 0127 3F       		.uleb128 0x3f
 1185 0128 19       		.uleb128 0x19
 1186 0129 03       		.uleb128 0x3
 1187 012a 0E       		.uleb128 0xe
 1188 012b 3A       		.uleb128 0x3a
 1189 012c 0B       		.uleb128 0xb
 1190 012d 3B       		.uleb128 0x3b
 1191 012e 05       		.uleb128 0x5
 1192 012f 27       		.uleb128 0x27
 1193 0130 19       		.uleb128 0x19
 1194 0131 11       		.uleb128 0x11
 1195 0132 01       		.uleb128 0x1
 1196 0133 12       		.uleb128 0x12
 1197 0134 06       		.uleb128 0x6
 1198 0135 40       		.uleb128 0x40
 1199 0136 18       		.uleb128 0x18
 1200 0137 9742     		.uleb128 0x2117
 1201 0139 19       		.uleb128 0x19
 1202 013a 00       		.byte	0
 1203 013b 00       		.byte	0
 1204 013c 15       		.uleb128 0x15
 1205 013d 2E       		.uleb128 0x2e
 1206 013e 01       		.byte	0x1
 1207 013f 03       		.uleb128 0x3
 1208 0140 0E       		.uleb128 0xe
 1209 0141 3A       		.uleb128 0x3a
 1210 0142 0B       		.uleb128 0xb
 1211 0143 3B       		.uleb128 0x3b
 1212 0144 05       		.uleb128 0x5
 1213 0145 27       		.uleb128 0x27
 1214 0146 19       		.uleb128 0x19
 1215 0147 11       		.uleb128 0x11
 1216 0148 01       		.uleb128 0x1
 1217 0149 12       		.uleb128 0x12
 1218 014a 06       		.uleb128 0x6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 28


 1219 014b 40       		.uleb128 0x40
 1220 014c 18       		.uleb128 0x18
 1221 014d 9742     		.uleb128 0x2117
 1222 014f 19       		.uleb128 0x19
 1223 0150 01       		.uleb128 0x1
 1224 0151 13       		.uleb128 0x13
 1225 0152 00       		.byte	0
 1226 0153 00       		.byte	0
 1227 0154 16       		.uleb128 0x16
 1228 0155 01       		.uleb128 0x1
 1229 0156 01       		.byte	0x1
 1230 0157 49       		.uleb128 0x49
 1231 0158 13       		.uleb128 0x13
 1232 0159 01       		.uleb128 0x1
 1233 015a 13       		.uleb128 0x13
 1234 015b 00       		.byte	0
 1235 015c 00       		.byte	0
 1236 015d 17       		.uleb128 0x17
 1237 015e 21       		.uleb128 0x21
 1238 015f 00       		.byte	0
 1239 0160 49       		.uleb128 0x49
 1240 0161 13       		.uleb128 0x13
 1241 0162 2F       		.uleb128 0x2f
 1242 0163 05       		.uleb128 0x5
 1243 0164 00       		.byte	0
 1244 0165 00       		.byte	0
 1245 0166 18       		.uleb128 0x18
 1246 0167 26       		.uleb128 0x26
 1247 0168 00       		.byte	0
 1248 0169 49       		.uleb128 0x49
 1249 016a 13       		.uleb128 0x13
 1250 016b 00       		.byte	0
 1251 016c 00       		.byte	0
 1252 016d 19       		.uleb128 0x19
 1253 016e 34       		.uleb128 0x34
 1254 016f 00       		.byte	0
 1255 0170 03       		.uleb128 0x3
 1256 0171 0E       		.uleb128 0xe
 1257 0172 3A       		.uleb128 0x3a
 1258 0173 0B       		.uleb128 0xb
 1259 0174 3B       		.uleb128 0x3b
 1260 0175 05       		.uleb128 0x5
 1261 0176 49       		.uleb128 0x49
 1262 0177 13       		.uleb128 0x13
 1263 0178 3F       		.uleb128 0x3f
 1264 0179 19       		.uleb128 0x19
 1265 017a 3C       		.uleb128 0x3c
 1266 017b 19       		.uleb128 0x19
 1267 017c 00       		.byte	0
 1268 017d 00       		.byte	0
 1269 017e 1A       		.uleb128 0x1a
 1270 017f 35       		.uleb128 0x35
 1271 0180 00       		.byte	0
 1272 0181 49       		.uleb128 0x49
 1273 0182 13       		.uleb128 0x13
 1274 0183 00       		.byte	0
 1275 0184 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 29


 1276 0185 00       		.byte	0
 1277              		.section	.debug_aranges,"",%progbits
 1278 0000 3C000000 		.4byte	0x3c
 1279 0004 0200     		.2byte	0x2
 1280 0006 00000000 		.4byte	.Ldebug_info0
 1281 000a 04       		.byte	0x4
 1282 000b 00       		.byte	0
 1283 000c 0000     		.2byte	0
 1284 000e 0000     		.2byte	0
 1285 0010 00000000 		.4byte	.LFB68
 1286 0014 24010000 		.4byte	.LFE68-.LFB68
 1287 0018 00000000 		.4byte	.LFB69
 1288 001c 70000000 		.4byte	.LFE69-.LFB69
 1289 0020 00000000 		.4byte	.LFB70
 1290 0024 18000000 		.4byte	.LFE70-.LFB70
 1291 0028 00000000 		.4byte	.LFB71
 1292 002c 0C000000 		.4byte	.LFE71-.LFB71
 1293 0030 00000000 		.4byte	.LFB72
 1294 0034 50000000 		.4byte	.LFE72-.LFB72
 1295 0038 00000000 		.4byte	0
 1296 003c 00000000 		.4byte	0
 1297              		.section	.debug_ranges,"",%progbits
 1298              	.Ldebug_ranges0:
 1299 0000 00000000 		.4byte	.LFB68
 1300 0004 24010000 		.4byte	.LFE68
 1301 0008 00000000 		.4byte	.LFB69
 1302 000c 70000000 		.4byte	.LFE69
 1303 0010 00000000 		.4byte	.LFB70
 1304 0014 18000000 		.4byte	.LFE70
 1305 0018 00000000 		.4byte	.LFB71
 1306 001c 0C000000 		.4byte	.LFE71
 1307 0020 00000000 		.4byte	.LFB72
 1308 0024 50000000 		.4byte	.LFE72
 1309 0028 00000000 		.4byte	0
 1310 002c 00000000 		.4byte	0
 1311              		.section	.debug_line,"",%progbits
 1312              	.Ldebug_line0:
 1313 0000 C8020000 		.section	.debug_str,"MS",%progbits,1
 1313      02000702 
 1313      00000201 
 1313      FB0E0D00 
 1313      01010101 
 1314              	.LASF3:
 1315 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1315      6E74385F 
 1315      7400
 1316              	.LASF2:
 1317 000a 73697A65 		.ascii	"size_t\000"
 1317      5F7400
 1318              	.LASF42:
 1319 0011 2E2E5C53 		.ascii	"..\\Source\\portable\\MemMang\\heap_2.c\000"
 1319      6F757263 
 1319      655C706F 
 1319      72746162 
 1319      6C655C4D 
 1320              	.LASF8:
 1321 0035 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 30


 1321      7433325F 
 1321      7400
 1322              	.LASF28:
 1323 003f 70784E65 		.ascii	"pxNewBlockLink\000"
 1323      77426C6F 
 1323      636B4C69 
 1323      6E6B00
 1324              	.LASF44:
 1325 004e 415F424C 		.ascii	"A_BLOCK_LINK\000"
 1325      4F434B5F 
 1325      4C494E4B 
 1325      00
 1326              	.LASF9:
 1327 005b 6C6F6E67 		.ascii	"long int\000"
 1327      20696E74 
 1327      00
 1328              	.LASF41:
 1329 0064 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1329      4320342E 
 1329      392E3320 
 1329      32303135 
 1329      30333033 
 1330 0097 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1330      20726576 
 1330      6973696F 
 1330      6E203232 
 1330      31323230 
 1331 00ca 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1331      66756E63 
 1331      74696F6E 
 1331      2D736563 
 1331      74696F6E 
 1332              	.LASF21:
 1333 00f2 646F7562 		.ascii	"double\000"
 1333      6C6500
 1334              	.LASF26:
 1335 00f9 7078426C 		.ascii	"pxBlock\000"
 1335      6F636B00 
 1336              	.LASF33:
 1337 0101 70784C69 		.ascii	"pxLink\000"
 1337      6E6B00
 1338              	.LASF45:
 1339 0108 7076506F 		.ascii	"pvPortMalloc\000"
 1339      72744D61 
 1339      6C6C6F63 
 1339      00
 1340              	.LASF34:
 1341 0115 70784669 		.ascii	"pxFirstFreeBlock\000"
 1341      72737446 
 1341      72656542 
 1341      6C6F636B 
 1341      00
 1342              	.LASF36:
 1343 0126 75634865 		.ascii	"ucHeap\000"
 1343      617000
 1344              	.LASF20:
 1345 012d 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 31


 1345      7400
 1346              	.LASF4:
 1347 0133 756E7369 		.ascii	"unsigned char\000"
 1347      676E6564 
 1347      20636861 
 1347      7200
 1348              	.LASF24:
 1349 0141 78426C6F 		.ascii	"xBlockSize\000"
 1349      636B5369 
 1349      7A6500
 1350              	.LASF11:
 1351 014c 6C6F6E67 		.ascii	"long unsigned int\000"
 1351      20756E73 
 1351      69676E65 
 1351      6420696E 
 1351      7400
 1352              	.LASF7:
 1353 015e 73686F72 		.ascii	"short unsigned int\000"
 1353      7420756E 
 1353      7369676E 
 1353      65642069 
 1353      6E7400
 1354              	.LASF29:
 1355 0171 78486561 		.ascii	"xHeapHasBeenInitialised\000"
 1355      70486173 
 1355      4265656E 
 1355      496E6974 
 1355      69616C69 
 1356              	.LASF51:
 1357 0189 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1357      52784275 
 1357      66666572 
 1357      00
 1358              	.LASF39:
 1359 0196 78456E64 		.ascii	"xEnd\000"
 1359      00
 1360              	.LASF6:
 1361 019b 5F5F7569 		.ascii	"__uint16_t\000"
 1361      6E743136 
 1361      5F7400
 1362              	.LASF27:
 1363 01a6 70785072 		.ascii	"pxPreviousBlock\000"
 1363      6576696F 
 1363      7573426C 
 1363      6F636B00 
 1364              	.LASF47:
 1365 01b6 76506F72 		.ascii	"vPortFree\000"
 1365      74467265 
 1365      6500
 1366              	.LASF10:
 1367 01c0 5F5F7569 		.ascii	"__uint32_t\000"
 1367      6E743332 
 1367      5F7400
 1368              	.LASF30:
 1369 01cb 70765265 		.ascii	"pvReturn\000"
 1369      7475726E 
 1369      00
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 32


 1370              	.LASF37:
 1371 01d4 68656170 		.ascii	"heapSTRUCT_SIZE\000"
 1371      53545255 
 1371      43545F53 
 1371      495A4500 
 1372              	.LASF38:
 1373 01e4 78537461 		.ascii	"xStart\000"
 1373      727400
 1374              	.LASF49:
 1375 01eb 76506F72 		.ascii	"vPortInitialiseBlocks\000"
 1375      74496E69 
 1375      7469616C 
 1375      69736542 
 1375      6C6F636B 
 1376              	.LASF0:
 1377 0201 756E7369 		.ascii	"unsigned int\000"
 1377      676E6564 
 1377      20696E74 
 1377      00
 1378              	.LASF13:
 1379 020e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1379      206C6F6E 
 1379      6720756E 
 1379      7369676E 
 1379      65642069 
 1380              	.LASF16:
 1381 0225 75696E74 		.ascii	"uint8_t\000"
 1381      385F7400 
 1382              	.LASF46:
 1383 022d 76417070 		.ascii	"vApplicationMallocFailedHook\000"
 1383      6C696361 
 1383      74696F6E 
 1383      4D616C6C 
 1383      6F634661 
 1384              	.LASF18:
 1385 024a 696E7433 		.ascii	"int32_t\000"
 1385      325F7400 
 1386              	.LASF25:
 1387 0252 426C6F63 		.ascii	"BlockLink_t\000"
 1387      6B4C696E 
 1387      6B5F7400 
 1388              	.LASF14:
 1389 025e 73697A65 		.ascii	"sizetype\000"
 1389      74797065 
 1389      00
 1390              	.LASF12:
 1391 0267 6C6F6E67 		.ascii	"long long int\000"
 1391      206C6F6E 
 1391      6720696E 
 1391      7400
 1392              	.LASF32:
 1393 0275 7857616E 		.ascii	"xWantedSize\000"
 1393      74656453 
 1393      697A6500 
 1394              	.LASF15:
 1395 0281 63686172 		.ascii	"char\000"
 1395      00
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 33


 1396              	.LASF48:
 1397 0286 78506F72 		.ascii	"xPortGetFreeHeapSize\000"
 1397      74476574 
 1397      46726565 
 1397      48656170 
 1397      53697A65 
 1398              	.LASF35:
 1399 029b 70756341 		.ascii	"pucAlignedHeap\000"
 1399      6C69676E 
 1399      65644865 
 1399      617000
 1400              	.LASF31:
 1401 02aa 70784974 		.ascii	"pxIterator\000"
 1401      65726174 
 1401      6F7200
 1402              	.LASF5:
 1403 02b5 73686F72 		.ascii	"short int\000"
 1403      7420696E 
 1403      7400
 1404              	.LASF17:
 1405 02bf 75696E74 		.ascii	"uint16_t\000"
 1405      31365F74 
 1405      00
 1406              	.LASF40:
 1407 02c8 78467265 		.ascii	"xFreeBytesRemaining\000"
 1407      65427974 
 1407      65735265 
 1407      6D61696E 
 1407      696E6700 
 1408              	.LASF19:
 1409 02dc 75696E74 		.ascii	"uint32_t\000"
 1409      33325F74 
 1409      00
 1410              	.LASF50:
 1411 02e5 70727648 		.ascii	"prvHeapInit\000"
 1411      65617049 
 1411      6E697400 
 1412              	.LASF1:
 1413 02f1 7369676E 		.ascii	"signed char\000"
 1413      65642063 
 1413      68617200 
 1414              	.LASF23:
 1415 02fd 70784E65 		.ascii	"pxNextFreeBlock\000"
 1415      78744672 
 1415      6565426C 
 1415      6F636B00 
 1416              	.LASF22:
 1417 030d 42617365 		.ascii	"BaseType_t\000"
 1417      54797065 
 1417      5F7400
 1418              	.LASF43:
 1419 0318 433A5C55 		.ascii	"C:\\Users\\bmt\\Documents\\GitHub\\FreeRTOS_CY8CKIT"
 1419      73657273 
 1419      5C626D74 
 1419      5C446F63 
 1419      756D656E 
 1420 0346 5F303539 		.ascii	"_059\\FreeRTOS_Demo.cydsn\000"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccsmUBIq.s 			page 34


 1420      5C467265 
 1420      6552544F 
 1420      535F4465 
 1420      6D6F2E63 
 1421              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
