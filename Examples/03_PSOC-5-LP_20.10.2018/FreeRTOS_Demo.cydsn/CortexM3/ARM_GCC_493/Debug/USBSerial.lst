ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBSerial.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	xDelay
  19              		.section	.rodata
  20              		.align	2
  21              		.type	xDelay, %object
  22              		.size	xDelay, 4
  23              	xDelay:
  24 0000 64000000 		.word	100
  25              		.global	mDelay
  26              		.align	2
  27              		.type	mDelay, %object
  28              		.size	mDelay, 4
  29              	mDelay:
  30 0004 88130000 		.word	5000
  31              		.comm	USBMutex,4,4
  32              		.section	.text.usbserial_putString,"ax",%progbits
  33              		.align	2
  34              		.global	usbserial_putString
  35              		.thumb
  36              		.thumb_func
  37              		.type	usbserial_putString, %function
  38              	usbserial_putString:
  39              	.LFB68:
  40              		.file 1 "USBSerial.c"
   1:USBSerial.c   **** /*
   2:USBSerial.c   ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:USBSerial.c   ****     All rights reserved
   4:USBSerial.c   **** 
   5:USBSerial.c   ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:USBSerial.c   **** 
   7:USBSerial.c   ****     This file is part of the FreeRTOS distribution.
   8:USBSerial.c   **** 
   9:USBSerial.c   ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:USBSerial.c   ****     the terms of the GNU General Public License (version 2) as published by the
  11:USBSerial.c   ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:USBSerial.c   **** 
  13:USBSerial.c   ****     ***************************************************************************
  14:USBSerial.c   ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:USBSerial.c   ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:USBSerial.c   ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:USBSerial.c   ****     >>!   outside of the FreeRTOS kernel.                                   !<<
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 2


  18:USBSerial.c   ****     ***************************************************************************
  19:USBSerial.c   **** 
  20:USBSerial.c   ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:USBSerial.c   ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:USBSerial.c   ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:USBSerial.c   ****     link: http://www.freertos.org/a00114.html
  24:USBSerial.c   **** 
  25:USBSerial.c   ****     ***************************************************************************
  26:USBSerial.c   ****      *                                                                       *
  27:USBSerial.c   ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:USBSerial.c   ****      *    robust, strictly quality controlled, supported, and cross          *
  29:USBSerial.c   ****      *    platform software that is more than just the market leader, it     *
  30:USBSerial.c   ****      *    is the industry's de facto standard.                               *
  31:USBSerial.c   ****      *                                                                       *
  32:USBSerial.c   ****      *    Help yourself get started quickly while simultaneously helping     *
  33:USBSerial.c   ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:USBSerial.c   ****      *    tutorial book, reference manual, or both:                          *
  35:USBSerial.c   ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:USBSerial.c   ****      *                                                                       *
  37:USBSerial.c   ****     ***************************************************************************
  38:USBSerial.c   **** 
  39:USBSerial.c   ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:USBSerial.c   ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:USBSerial.c   ****     defined configASSERT()?
  42:USBSerial.c   **** 
  43:USBSerial.c   ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:USBSerial.c   ****     embedded software for free we request you assist our global community by
  45:USBSerial.c   ****     participating in the support forum.
  46:USBSerial.c   **** 
  47:USBSerial.c   ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:USBSerial.c   ****     be as productive as possible as early as possible.  Now you can receive
  49:USBSerial.c   ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:USBSerial.c   ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:USBSerial.c   **** 
  52:USBSerial.c   ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:USBSerial.c   ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:USBSerial.c   ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:USBSerial.c   **** 
  56:USBSerial.c   ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:USBSerial.c   ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:USBSerial.c   **** 
  59:USBSerial.c   ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:USBSerial.c   ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:USBSerial.c   ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:USBSerial.c   **** 
  63:USBSerial.c   ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:USBSerial.c   ****     engineered and independently SIL3 certified version for use in safety and
  65:USBSerial.c   ****     mission critical applications that require provable dependability.
  66:USBSerial.c   **** 
  67:USBSerial.c   ****     1 tab == 4 spaces!
  68:USBSerial.c   **** */
  69:USBSerial.c   **** 
  70:USBSerial.c   **** /**
  71:USBSerial.c   ****  * This version of flash .c is for use on systems that have limited stack space
  72:USBSerial.c   ****  * and no display facilities.  The complete version can be found in the 
  73:USBSerial.c   ****  * Demo/Common/Full directory.
  74:USBSerial.c   ****  * 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 3


  75:USBSerial.c   ****  * Three tasks are created, each of which flash an LED at a different rate.  The first 
  76:USBSerial.c   ****  * LED flashes every 200ms, the second every 400ms, the third every 600ms.
  77:USBSerial.c   ****  *
  78:USBSerial.c   ****  * The LED flash tasks provide instant visual feedback.  They show that the scheduler 
  79:USBSerial.c   ****  * is still operational.
  80:USBSerial.c   ****  *
  81:USBSerial.c   ****  */
  82:USBSerial.c   **** 
  83:USBSerial.c   **** 
  84:USBSerial.c   **** #include <stdlib.h>
  85:USBSerial.c   **** 
  86:USBSerial.c   **** /* Scheduler include files. */
  87:USBSerial.c   **** #include "FreeRTOS.h"
  88:USBSerial.c   **** #include "task.h"
  89:USBSerial.c   **** #include "semphr.h"
  90:USBSerial.c   **** 
  91:USBSerial.c   **** /* Demo program include files. */
  92:USBSerial.c   **** #include "partest.h"
  93:USBSerial.c   **** #include "USBSerial.h"
  94:USBSerial.c   **** 
  95:USBSerial.c   **** #define USBSerialSTACK_SIZE		configMINIMAL_STACK_SIZE
  96:USBSerial.c   **** const TickType_t xDelay = 100 / portTICK_PERIOD_MS;
  97:USBSerial.c   **** const TickType_t mDelay = 5000 / portTICK_PERIOD_MS;
  98:USBSerial.c   ****     
  99:USBSerial.c   **** /* The task that is created three times. */
 100:USBSerial.c   **** static portTASK_FUNCTION_PROTO( vUSBSerialTask, pvParameters );
 101:USBSerial.c   **** 
 102:USBSerial.c   **** SemaphoreHandle_t USBMutex;
 103:USBSerial.c   **** 
 104:USBSerial.c   **** /*-----------------------------------------------------------*/
 105:USBSerial.c   **** 
 106:USBSerial.c   **** void usbserial_putString(const char msg[])
 107:USBSerial.c   **** {
  41              		.loc 1 107 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 8
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 82B0     		sub	sp, sp, #8
  50              		.cfi_def_cfa_offset 16
  51 0004 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  53 0006 7860     		str	r0, [r7, #4]
 108:USBSerial.c   ****     if(0 == USBUART_GetConfiguration()) return;
  54              		.loc 1 108 0
  55 0008 FFF7FEFF 		bl	USBUART_GetConfiguration
  56 000c 0346     		mov	r3, r0
  57 000e 002B     		cmp	r3, #0
  58 0010 00D1     		bne	.L2
  59 0012 1DE0     		b	.L1
  60              	.L2:
 109:USBSerial.c   ****     xSemaphoreTake(USBMutex,portMAX_DELAY);
  61              		.loc 1 109 0
  62 0014 104B     		ldr	r3, .L6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 4


  63 0016 1B68     		ldr	r3, [r3]
  64 0018 1846     		mov	r0, r3
  65 001a 0021     		movs	r1, #0
  66 001c 4FF0FF32 		mov	r2, #-1
  67 0020 0023     		movs	r3, #0
  68 0022 FFF7FEFF 		bl	xQueueGenericReceive
 110:USBSerial.c   ****     while(0 == USBUART_CDCIsReady()) vTaskDelay(xDelay);
  69              		.loc 1 110 0
  70 0026 03E0     		b	.L4
  71              	.L5:
  72              		.loc 1 110 0 is_stmt 0 discriminator 2
  73 0028 6423     		movs	r3, #100
  74 002a 1846     		mov	r0, r3
  75 002c FFF7FEFF 		bl	vTaskDelay
  76              	.L4:
  77              		.loc 1 110 0 discriminator 1
  78 0030 FFF7FEFF 		bl	USBUART_CDCIsReady
  79 0034 0346     		mov	r3, r0
  80 0036 002B     		cmp	r3, #0
  81 0038 F6D0     		beq	.L5
 111:USBSerial.c   ****     USBUART_PutString(msg);
  82              		.loc 1 111 0 is_stmt 1
  83 003a 7868     		ldr	r0, [r7, #4]
  84 003c FFF7FEFF 		bl	USBUART_PutString
 112:USBSerial.c   ****     xSemaphoreGive(USBMutex);
  85              		.loc 1 112 0
  86 0040 054B     		ldr	r3, .L6
  87 0042 1B68     		ldr	r3, [r3]
  88 0044 1846     		mov	r0, r3
  89 0046 0021     		movs	r1, #0
  90 0048 0022     		movs	r2, #0
  91 004a 0023     		movs	r3, #0
  92 004c FFF7FEFF 		bl	xQueueGenericSend
  93              	.L1:
 113:USBSerial.c   **** }
  94              		.loc 1 113 0
  95 0050 0837     		adds	r7, r7, #8
  96              		.cfi_def_cfa_offset 8
  97 0052 BD46     		mov	sp, r7
  98              		.cfi_def_cfa_register 13
  99              		@ sp needed
 100 0054 80BD     		pop	{r7, pc}
 101              	.L7:
 102 0056 00BF     		.align	2
 103              	.L6:
 104 0058 00000000 		.word	USBMutex
 105              		.cfi_endproc
 106              	.LFE68:
 107              		.size	usbserial_putString, .-usbserial_putString
 108              		.section	.rodata
 109              		.align	2
 110              	.LC0:
 111 0008 55534253 		.ascii	"USBSerial\000"
 111      65726961 
 111      6C00
 112 0012 0000     		.section	.text.vStartUSBSerialTasks,"ax",%progbits
 113              		.align	2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 5


 114              		.global	vStartUSBSerialTasks
 115              		.thumb
 116              		.thumb_func
 117              		.type	vStartUSBSerialTasks, %function
 118              	vStartUSBSerialTasks:
 119              	.LFB69:
 114:USBSerial.c   **** 
 115:USBSerial.c   **** void vStartUSBSerialTasks( UBaseType_t uxPriority )
 116:USBSerial.c   **** {
 120              		.loc 1 116 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 84B0     		sub	sp, sp, #16
 129              		.cfi_def_cfa_offset 24
 130 0004 02AF     		add	r7, sp, #8
 131              		.cfi_def_cfa 7, 16
 132 0006 7860     		str	r0, [r7, #4]
 117:USBSerial.c   ****     /*Setup the mutex to control port access*/
 118:USBSerial.c   ****     USBMutex = xSemaphoreCreateMutex();
 133              		.loc 1 118 0
 134 0008 0120     		movs	r0, #1
 135 000a FFF7FEFF 		bl	xQueueCreateMutex
 136 000e 0246     		mov	r2, r0
 137 0010 074B     		ldr	r3, .L9
 138 0012 1A60     		str	r2, [r3]
 119:USBSerial.c   **** 	/* Spawn the task. */
 120:USBSerial.c   **** 	xTaskCreate( vUSBSerialTask, "USBSerial", USBSerialSTACK_SIZE, NULL, uxPriority, ( TaskHandle_t * 
 139              		.loc 1 120 0
 140 0014 7B68     		ldr	r3, [r7, #4]
 141 0016 0093     		str	r3, [sp]
 142 0018 0023     		movs	r3, #0
 143 001a 0193     		str	r3, [sp, #4]
 144 001c 0548     		ldr	r0, .L9+4
 145 001e 0649     		ldr	r1, .L9+8
 146 0020 6422     		movs	r2, #100
 147 0022 0023     		movs	r3, #0
 148 0024 FFF7FEFF 		bl	xTaskCreate
 121:USBSerial.c   **** 
 122:USBSerial.c   **** }
 149              		.loc 1 122 0
 150 0028 0837     		adds	r7, r7, #8
 151              		.cfi_def_cfa_offset 8
 152 002a BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 002c 80BD     		pop	{r7, pc}
 156              	.L10:
 157 002e 00BF     		.align	2
 158              	.L9:
 159 0030 00000000 		.word	USBMutex
 160 0034 00000000 		.word	vUSBSerialTask
 161 0038 08000000 		.word	.LC0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 6


 162              		.cfi_endproc
 163              	.LFE69:
 164              		.size	vStartUSBSerialTasks, .-vStartUSBSerialTasks
 165              		.section	.text.vUSBSerialTask,"ax",%progbits
 166              		.align	2
 167              		.thumb
 168              		.thumb_func
 169              		.type	vUSBSerialTask, %function
 170              	vUSBSerialTask:
 171              	.LFB70:
 123:USBSerial.c   **** /*-----------------------------------------------------------*/
 124:USBSerial.c   **** 
 125:USBSerial.c   **** static portTASK_FUNCTION( vUSBSerialTask, pvParameters )
 126:USBSerial.c   **** {
 172              		.loc 1 126 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 127:USBSerial.c   ****    	/* The parameters are not used. */
 128:USBSerial.c   **** 	( void ) pvParameters;
 129:USBSerial.c   **** 
 130:USBSerial.c   ****     /* Start the USB_UART */
 131:USBSerial.c   ****     /* Start USBFS operation with 5-V operation. */
 132:USBSerial.c   ****     USBUART_Start(0, USBUART_5V_OPERATION);
 185              		.loc 1 132 0
 186 0008 0020     		movs	r0, #0
 187 000a 0121     		movs	r1, #1
 188 000c FFF7FEFF 		bl	USBUART_Start
 189              	.L14:
 133:USBSerial.c   **** 
 134:USBSerial.c   ****     
 135:USBSerial.c   **** 	for(;;)
 136:USBSerial.c   **** 	{
 137:USBSerial.c   ****         /* Host can send double SET_INTERFACE request. */
 138:USBSerial.c   ****         if (0u != USBUART_IsConfigurationChanged())
 190              		.loc 1 138 0
 191 0010 FFF7FEFF 		bl	USBUART_IsConfigurationChanged
 192 0014 0346     		mov	r3, r0
 193 0016 002B     		cmp	r3, #0
 194 0018 06D0     		beq	.L12
 139:USBSerial.c   ****         {
 140:USBSerial.c   ****             /* Initialize IN endpoints when device is configured. */
 141:USBSerial.c   ****             if (0u != USBUART_GetConfiguration())
 195              		.loc 1 141 0
 196 001a FFF7FEFF 		bl	USBUART_GetConfiguration
 197 001e 0346     		mov	r3, r0
 198 0020 002B     		cmp	r3, #0
 199 0022 01D0     		beq	.L12
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 7


 142:USBSerial.c   ****             {
 143:USBSerial.c   ****                 /* Enumeration is done, enable OUT endpoint to receive data 
 144:USBSerial.c   ****                  * from host. */
 145:USBSerial.c   ****                 USBUART_CDC_Init();
 200              		.loc 1 145 0
 201 0024 FFF7FEFF 		bl	USBUART_CDC_Init
 202              	.L12:
 146:USBSerial.c   ****             }
 147:USBSerial.c   ****         }
 148:USBSerial.c   ****         
 149:USBSerial.c   ****         if(0 != USBUART_GetConfiguration())
 203              		.loc 1 149 0
 204 0028 FFF7FEFF 		bl	USBUART_GetConfiguration
 205 002c 0346     		mov	r3, r0
 206 002e 002B     		cmp	r3, #0
 207 0030 04D0     		beq	.L13
 150:USBSerial.c   ****         {
 151:USBSerial.c   ****             /* Get and process inputs here */
 152:USBSerial.c   ****             vTaskDelay(mDelay);
 208              		.loc 1 152 0
 209 0032 41F28833 		movw	r3, #5000
 210 0036 1846     		mov	r0, r3
 211 0038 FFF7FEFF 		bl	vTaskDelay
 212              	.L13:
 153:USBSerial.c   ****         }
 154:USBSerial.c   ****         vTaskDelay(xDelay);
 213              		.loc 1 154 0
 214 003c 6423     		movs	r3, #100
 215 003e 1846     		mov	r0, r3
 216 0040 FFF7FEFF 		bl	vTaskDelay
 155:USBSerial.c   **** 	}
 217              		.loc 1 155 0
 218 0044 E4E7     		b	.L14
 219              		.cfi_endproc
 220              	.LFE70:
 221              		.size	vUSBSerialTask, .-vUSBSerialTask
 222 0046 00BF     		.text
 223              	.Letext0:
 224              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 225              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 226              		.file 4 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 227              		.file 5 "..\\Source\\include/task.h"
 228              		.file 6 "..\\Source\\include/queue.h"
 229              		.file 7 "..\\Source\\include/semphr.h"
 230              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 231              		.section	.debug_info,"",%progbits
 232              	.Ldebug_info0:
 233 0000 CA010000 		.4byte	0x1ca
 234 0004 0400     		.2byte	0x4
 235 0006 00000000 		.4byte	.Ldebug_abbrev0
 236 000a 04       		.byte	0x4
 237 000b 01       		.uleb128 0x1
 238 000c 34000000 		.4byte	.LASF33
 239 0010 01       		.byte	0x1
 240 0011 D7000000 		.4byte	.LASF34
 241 0015 34020000 		.4byte	.LASF35
 242 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 8


 243 001d 00000000 		.4byte	0
 244 0021 00000000 		.4byte	.Ldebug_line0
 245 0025 02       		.uleb128 0x2
 246 0026 04       		.byte	0x4
 247 0027 07       		.byte	0x7
 248 0028 64010000 		.4byte	.LASF0
 249 002c 03       		.uleb128 0x3
 250 002d 04       		.byte	0x4
 251 002e 05       		.byte	0x5
 252 002f 696E7400 		.ascii	"int\000"
 253 0033 02       		.uleb128 0x2
 254 0034 01       		.byte	0x1
 255 0035 06       		.byte	0x6
 256 0036 E9000000 		.4byte	.LASF1
 257 003a 04       		.uleb128 0x4
 258 003b 00000000 		.4byte	.LASF5
 259 003f 02       		.byte	0x2
 260 0040 1D       		.byte	0x1d
 261 0041 45000000 		.4byte	0x45
 262 0045 02       		.uleb128 0x2
 263 0046 01       		.byte	0x1
 264 0047 08       		.byte	0x8
 265 0048 F5000000 		.4byte	.LASF2
 266 004c 02       		.uleb128 0x2
 267 004d 02       		.byte	0x2
 268 004e 05       		.byte	0x5
 269 004f D7010000 		.4byte	.LASF3
 270 0053 02       		.uleb128 0x2
 271 0054 02       		.byte	0x2
 272 0055 07       		.byte	0x7
 273 0056 15010000 		.4byte	.LASF4
 274 005a 04       		.uleb128 0x4
 275 005b 15000000 		.4byte	.LASF6
 276 005f 02       		.byte	0x2
 277 0060 3F       		.byte	0x3f
 278 0061 65000000 		.4byte	0x65
 279 0065 02       		.uleb128 0x2
 280 0066 04       		.byte	0x4
 281 0067 05       		.byte	0x5
 282 0068 00020000 		.4byte	.LASF7
 283 006c 04       		.uleb128 0x4
 284 006d 4E010000 		.4byte	.LASF8
 285 0071 02       		.byte	0x2
 286 0072 41       		.byte	0x41
 287 0073 77000000 		.4byte	0x77
 288 0077 02       		.uleb128 0x2
 289 0078 04       		.byte	0x4
 290 0079 07       		.byte	0x7
 291 007a 03010000 		.4byte	.LASF9
 292 007e 02       		.uleb128 0x2
 293 007f 08       		.byte	0x8
 294 0080 05       		.byte	0x5
 295 0081 B7010000 		.4byte	.LASF10
 296 0085 02       		.uleb128 0x2
 297 0086 08       		.byte	0x8
 298 0087 07       		.byte	0x7
 299 0088 80010000 		.4byte	.LASF11
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 9


 300 008c 02       		.uleb128 0x2
 301 008d 04       		.byte	0x4
 302 008e 07       		.byte	0x7
 303 008f A7010000 		.4byte	.LASF12
 304 0093 05       		.uleb128 0x5
 305 0094 04       		.byte	0x4
 306 0095 02       		.uleb128 0x2
 307 0096 01       		.byte	0x1
 308 0097 08       		.byte	0x8
 309 0098 C5010000 		.4byte	.LASF13
 310 009c 06       		.uleb128 0x6
 311 009d 04       		.byte	0x4
 312 009e A2000000 		.4byte	0xa2
 313 00a2 07       		.uleb128 0x7
 314 00a3 95000000 		.4byte	0x95
 315 00a7 04       		.uleb128 0x4
 316 00a8 97010000 		.4byte	.LASF14
 317 00ac 03       		.byte	0x3
 318 00ad 15       		.byte	0x15
 319 00ae 3A000000 		.4byte	0x3a
 320 00b2 04       		.uleb128 0x4
 321 00b3 9F010000 		.4byte	.LASF15
 322 00b7 03       		.byte	0x3
 323 00b8 2C       		.byte	0x2c
 324 00b9 5A000000 		.4byte	0x5a
 325 00bd 04       		.uleb128 0x4
 326 00be F7010000 		.4byte	.LASF16
 327 00c2 03       		.byte	0x3
 328 00c3 2D       		.byte	0x2d
 329 00c4 6C000000 		.4byte	0x6c
 330 00c8 02       		.uleb128 0x2
 331 00c9 04       		.byte	0x4
 332 00ca 04       		.byte	0x4
 333 00cb E3000000 		.4byte	.LASF17
 334 00cf 02       		.uleb128 0x2
 335 00d0 08       		.byte	0x8
 336 00d1 04       		.byte	0x4
 337 00d2 35010000 		.4byte	.LASF18
 338 00d6 04       		.uleb128 0x4
 339 00d7 29020000 		.4byte	.LASF19
 340 00db 04       		.byte	0x4
 341 00dc 62       		.byte	0x62
 342 00dd 65000000 		.4byte	0x65
 343 00e1 04       		.uleb128 0x4
 344 00e2 1D020000 		.4byte	.LASF20
 345 00e6 04       		.byte	0x4
 346 00e7 63       		.byte	0x63
 347 00e8 77000000 		.4byte	0x77
 348 00ec 04       		.uleb128 0x4
 349 00ed 0A000000 		.4byte	.LASF21
 350 00f1 04       		.byte	0x4
 351 00f2 69       		.byte	0x69
 352 00f3 BD000000 		.4byte	0xbd
 353 00f7 04       		.uleb128 0x4
 354 00f8 EA010000 		.4byte	.LASF22
 355 00fc 05       		.byte	0x5
 356 00fd 67       		.byte	0x67
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 10


 357 00fe 93000000 		.4byte	0x93
 358 0102 04       		.uleb128 0x4
 359 0103 C2000000 		.4byte	.LASF23
 360 0107 06       		.byte	0x6
 361 0108 58       		.byte	0x58
 362 0109 93000000 		.4byte	0x93
 363 010d 04       		.uleb128 0x4
 364 010e 3C010000 		.4byte	.LASF24
 365 0112 07       		.byte	0x7
 366 0113 4F       		.byte	0x4f
 367 0114 02010000 		.4byte	0x102
 368 0118 08       		.uleb128 0x8
 369 0119 09020000 		.4byte	.LASF25
 370 011d 01       		.byte	0x1
 371 011e 6A       		.byte	0x6a
 372 011f 00000000 		.4byte	.LFB68
 373 0123 5C000000 		.4byte	.LFE68-.LFB68
 374 0127 01       		.uleb128 0x1
 375 0128 9C       		.byte	0x9c
 376 0129 3C010000 		.4byte	0x13c
 377 012d 09       		.uleb128 0x9
 378 012e 6D736700 		.ascii	"msg\000"
 379 0132 01       		.byte	0x1
 380 0133 6A       		.byte	0x6a
 381 0134 9C000000 		.4byte	0x9c
 382 0138 02       		.uleb128 0x2
 383 0139 91       		.byte	0x91
 384 013a 74       		.sleb128 -12
 385 013b 00       		.byte	0
 386 013c 08       		.uleb128 0x8
 387 013d 1F000000 		.4byte	.LASF26
 388 0141 01       		.byte	0x1
 389 0142 73       		.byte	0x73
 390 0143 00000000 		.4byte	.LFB69
 391 0147 3C000000 		.4byte	.LFE69-.LFB69
 392 014b 01       		.uleb128 0x1
 393 014c 9C       		.byte	0x9c
 394 014d 60010000 		.4byte	0x160
 395 0151 0A       		.uleb128 0xa
 396 0152 59010000 		.4byte	.LASF27
 397 0156 01       		.byte	0x1
 398 0157 73       		.byte	0x73
 399 0158 E1000000 		.4byte	0xe1
 400 015c 02       		.uleb128 0x2
 401 015d 91       		.byte	0x91
 402 015e 74       		.sleb128 -12
 403 015f 00       		.byte	0
 404 0160 0B       		.uleb128 0xb
 405 0161 71010000 		.4byte	.LASF36
 406 0165 01       		.byte	0x1
 407 0166 7D       		.byte	0x7d
 408 0167 00000000 		.4byte	.LFB70
 409 016b 46000000 		.4byte	.LFE70-.LFB70
 410 016f 01       		.uleb128 0x1
 411 0170 9C       		.byte	0x9c
 412 0171 84010000 		.4byte	0x184
 413 0175 0A       		.uleb128 0xa
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 11


 414 0176 CA010000 		.4byte	.LASF28
 415 017a 01       		.byte	0x1
 416 017b 7D       		.byte	0x7d
 417 017c 93000000 		.4byte	0x93
 418 0180 02       		.uleb128 0x2
 419 0181 91       		.byte	0x91
 420 0182 74       		.sleb128 -12
 421 0183 00       		.byte	0
 422 0184 0C       		.uleb128 0xc
 423 0185 28010000 		.4byte	.LASF29
 424 0189 08       		.byte	0x8
 425 018a 9606     		.2byte	0x696
 426 018c 90010000 		.4byte	0x190
 427 0190 0D       		.uleb128 0xd
 428 0191 B2000000 		.4byte	0xb2
 429 0195 0E       		.uleb128 0xe
 430 0196 B0010000 		.4byte	.LASF30
 431 019a 01       		.byte	0x1
 432 019b 60       		.byte	0x60
 433 019c A6010000 		.4byte	0x1a6
 434 01a0 05       		.uleb128 0x5
 435 01a1 03       		.byte	0x3
 436 01a2 00000000 		.4byte	xDelay
 437 01a6 07       		.uleb128 0x7
 438 01a7 EC000000 		.4byte	0xec
 439 01ab 0E       		.uleb128 0xe
 440 01ac D0000000 		.4byte	.LASF31
 441 01b0 01       		.byte	0x1
 442 01b1 61       		.byte	0x61
 443 01b2 A6010000 		.4byte	0x1a6
 444 01b6 05       		.uleb128 0x5
 445 01b7 03       		.byte	0x3
 446 01b8 00000000 		.4byte	mDelay
 447 01bc 0E       		.uleb128 0xe
 448 01bd E1010000 		.4byte	.LASF32
 449 01c1 01       		.byte	0x1
 450 01c2 66       		.byte	0x66
 451 01c3 0D010000 		.4byte	0x10d
 452 01c7 05       		.uleb128 0x5
 453 01c8 03       		.byte	0x3
 454 01c9 00000000 		.4byte	USBMutex
 455 01cd 00       		.byte	0
 456              		.section	.debug_abbrev,"",%progbits
 457              	.Ldebug_abbrev0:
 458 0000 01       		.uleb128 0x1
 459 0001 11       		.uleb128 0x11
 460 0002 01       		.byte	0x1
 461 0003 25       		.uleb128 0x25
 462 0004 0E       		.uleb128 0xe
 463 0005 13       		.uleb128 0x13
 464 0006 0B       		.uleb128 0xb
 465 0007 03       		.uleb128 0x3
 466 0008 0E       		.uleb128 0xe
 467 0009 1B       		.uleb128 0x1b
 468 000a 0E       		.uleb128 0xe
 469 000b 55       		.uleb128 0x55
 470 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 12


 471 000d 11       		.uleb128 0x11
 472 000e 01       		.uleb128 0x1
 473 000f 10       		.uleb128 0x10
 474 0010 17       		.uleb128 0x17
 475 0011 00       		.byte	0
 476 0012 00       		.byte	0
 477 0013 02       		.uleb128 0x2
 478 0014 24       		.uleb128 0x24
 479 0015 00       		.byte	0
 480 0016 0B       		.uleb128 0xb
 481 0017 0B       		.uleb128 0xb
 482 0018 3E       		.uleb128 0x3e
 483 0019 0B       		.uleb128 0xb
 484 001a 03       		.uleb128 0x3
 485 001b 0E       		.uleb128 0xe
 486 001c 00       		.byte	0
 487 001d 00       		.byte	0
 488 001e 03       		.uleb128 0x3
 489 001f 24       		.uleb128 0x24
 490 0020 00       		.byte	0
 491 0021 0B       		.uleb128 0xb
 492 0022 0B       		.uleb128 0xb
 493 0023 3E       		.uleb128 0x3e
 494 0024 0B       		.uleb128 0xb
 495 0025 03       		.uleb128 0x3
 496 0026 08       		.uleb128 0x8
 497 0027 00       		.byte	0
 498 0028 00       		.byte	0
 499 0029 04       		.uleb128 0x4
 500 002a 16       		.uleb128 0x16
 501 002b 00       		.byte	0
 502 002c 03       		.uleb128 0x3
 503 002d 0E       		.uleb128 0xe
 504 002e 3A       		.uleb128 0x3a
 505 002f 0B       		.uleb128 0xb
 506 0030 3B       		.uleb128 0x3b
 507 0031 0B       		.uleb128 0xb
 508 0032 49       		.uleb128 0x49
 509 0033 13       		.uleb128 0x13
 510 0034 00       		.byte	0
 511 0035 00       		.byte	0
 512 0036 05       		.uleb128 0x5
 513 0037 0F       		.uleb128 0xf
 514 0038 00       		.byte	0
 515 0039 0B       		.uleb128 0xb
 516 003a 0B       		.uleb128 0xb
 517 003b 00       		.byte	0
 518 003c 00       		.byte	0
 519 003d 06       		.uleb128 0x6
 520 003e 0F       		.uleb128 0xf
 521 003f 00       		.byte	0
 522 0040 0B       		.uleb128 0xb
 523 0041 0B       		.uleb128 0xb
 524 0042 49       		.uleb128 0x49
 525 0043 13       		.uleb128 0x13
 526 0044 00       		.byte	0
 527 0045 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 13


 528 0046 07       		.uleb128 0x7
 529 0047 26       		.uleb128 0x26
 530 0048 00       		.byte	0
 531 0049 49       		.uleb128 0x49
 532 004a 13       		.uleb128 0x13
 533 004b 00       		.byte	0
 534 004c 00       		.byte	0
 535 004d 08       		.uleb128 0x8
 536 004e 2E       		.uleb128 0x2e
 537 004f 01       		.byte	0x1
 538 0050 3F       		.uleb128 0x3f
 539 0051 19       		.uleb128 0x19
 540 0052 03       		.uleb128 0x3
 541 0053 0E       		.uleb128 0xe
 542 0054 3A       		.uleb128 0x3a
 543 0055 0B       		.uleb128 0xb
 544 0056 3B       		.uleb128 0x3b
 545 0057 0B       		.uleb128 0xb
 546 0058 27       		.uleb128 0x27
 547 0059 19       		.uleb128 0x19
 548 005a 11       		.uleb128 0x11
 549 005b 01       		.uleb128 0x1
 550 005c 12       		.uleb128 0x12
 551 005d 06       		.uleb128 0x6
 552 005e 40       		.uleb128 0x40
 553 005f 18       		.uleb128 0x18
 554 0060 9642     		.uleb128 0x2116
 555 0062 19       		.uleb128 0x19
 556 0063 01       		.uleb128 0x1
 557 0064 13       		.uleb128 0x13
 558 0065 00       		.byte	0
 559 0066 00       		.byte	0
 560 0067 09       		.uleb128 0x9
 561 0068 05       		.uleb128 0x5
 562 0069 00       		.byte	0
 563 006a 03       		.uleb128 0x3
 564 006b 08       		.uleb128 0x8
 565 006c 3A       		.uleb128 0x3a
 566 006d 0B       		.uleb128 0xb
 567 006e 3B       		.uleb128 0x3b
 568 006f 0B       		.uleb128 0xb
 569 0070 49       		.uleb128 0x49
 570 0071 13       		.uleb128 0x13
 571 0072 02       		.uleb128 0x2
 572 0073 18       		.uleb128 0x18
 573 0074 00       		.byte	0
 574 0075 00       		.byte	0
 575 0076 0A       		.uleb128 0xa
 576 0077 05       		.uleb128 0x5
 577 0078 00       		.byte	0
 578 0079 03       		.uleb128 0x3
 579 007a 0E       		.uleb128 0xe
 580 007b 3A       		.uleb128 0x3a
 581 007c 0B       		.uleb128 0xb
 582 007d 3B       		.uleb128 0x3b
 583 007e 0B       		.uleb128 0xb
 584 007f 49       		.uleb128 0x49
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 14


 585 0080 13       		.uleb128 0x13
 586 0081 02       		.uleb128 0x2
 587 0082 18       		.uleb128 0x18
 588 0083 00       		.byte	0
 589 0084 00       		.byte	0
 590 0085 0B       		.uleb128 0xb
 591 0086 2E       		.uleb128 0x2e
 592 0087 01       		.byte	0x1
 593 0088 03       		.uleb128 0x3
 594 0089 0E       		.uleb128 0xe
 595 008a 3A       		.uleb128 0x3a
 596 008b 0B       		.uleb128 0xb
 597 008c 3B       		.uleb128 0x3b
 598 008d 0B       		.uleb128 0xb
 599 008e 27       		.uleb128 0x27
 600 008f 19       		.uleb128 0x19
 601 0090 11       		.uleb128 0x11
 602 0091 01       		.uleb128 0x1
 603 0092 12       		.uleb128 0x12
 604 0093 06       		.uleb128 0x6
 605 0094 40       		.uleb128 0x40
 606 0095 18       		.uleb128 0x18
 607 0096 9642     		.uleb128 0x2116
 608 0098 19       		.uleb128 0x19
 609 0099 01       		.uleb128 0x1
 610 009a 13       		.uleb128 0x13
 611 009b 00       		.byte	0
 612 009c 00       		.byte	0
 613 009d 0C       		.uleb128 0xc
 614 009e 34       		.uleb128 0x34
 615 009f 00       		.byte	0
 616 00a0 03       		.uleb128 0x3
 617 00a1 0E       		.uleb128 0xe
 618 00a2 3A       		.uleb128 0x3a
 619 00a3 0B       		.uleb128 0xb
 620 00a4 3B       		.uleb128 0x3b
 621 00a5 05       		.uleb128 0x5
 622 00a6 49       		.uleb128 0x49
 623 00a7 13       		.uleb128 0x13
 624 00a8 3F       		.uleb128 0x3f
 625 00a9 19       		.uleb128 0x19
 626 00aa 3C       		.uleb128 0x3c
 627 00ab 19       		.uleb128 0x19
 628 00ac 00       		.byte	0
 629 00ad 00       		.byte	0
 630 00ae 0D       		.uleb128 0xd
 631 00af 35       		.uleb128 0x35
 632 00b0 00       		.byte	0
 633 00b1 49       		.uleb128 0x49
 634 00b2 13       		.uleb128 0x13
 635 00b3 00       		.byte	0
 636 00b4 00       		.byte	0
 637 00b5 0E       		.uleb128 0xe
 638 00b6 34       		.uleb128 0x34
 639 00b7 00       		.byte	0
 640 00b8 03       		.uleb128 0x3
 641 00b9 0E       		.uleb128 0xe
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 15


 642 00ba 3A       		.uleb128 0x3a
 643 00bb 0B       		.uleb128 0xb
 644 00bc 3B       		.uleb128 0x3b
 645 00bd 0B       		.uleb128 0xb
 646 00be 49       		.uleb128 0x49
 647 00bf 13       		.uleb128 0x13
 648 00c0 3F       		.uleb128 0x3f
 649 00c1 19       		.uleb128 0x19
 650 00c2 02       		.uleb128 0x2
 651 00c3 18       		.uleb128 0x18
 652 00c4 00       		.byte	0
 653 00c5 00       		.byte	0
 654 00c6 00       		.byte	0
 655              		.section	.debug_aranges,"",%progbits
 656 0000 2C000000 		.4byte	0x2c
 657 0004 0200     		.2byte	0x2
 658 0006 00000000 		.4byte	.Ldebug_info0
 659 000a 04       		.byte	0x4
 660 000b 00       		.byte	0
 661 000c 0000     		.2byte	0
 662 000e 0000     		.2byte	0
 663 0010 00000000 		.4byte	.LFB68
 664 0014 5C000000 		.4byte	.LFE68-.LFB68
 665 0018 00000000 		.4byte	.LFB69
 666 001c 3C000000 		.4byte	.LFE69-.LFB69
 667 0020 00000000 		.4byte	.LFB70
 668 0024 46000000 		.4byte	.LFE70-.LFB70
 669 0028 00000000 		.4byte	0
 670 002c 00000000 		.4byte	0
 671              		.section	.debug_ranges,"",%progbits
 672              	.Ldebug_ranges0:
 673 0000 00000000 		.4byte	.LFB68
 674 0004 5C000000 		.4byte	.LFE68
 675 0008 00000000 		.4byte	.LFB69
 676 000c 3C000000 		.4byte	.LFE69
 677 0010 00000000 		.4byte	.LFB70
 678 0014 46000000 		.4byte	.LFE70
 679 0018 00000000 		.4byte	0
 680 001c 00000000 		.4byte	0
 681              		.section	.debug_line,"",%progbits
 682              	.Ldebug_line0:
 683 0000 F3010000 		.section	.debug_str,"MS",%progbits,1
 683      0200A001 
 683      00000201 
 683      FB0E0D00 
 683      01010101 
 684              	.LASF5:
 685 0000 5F5F7569 		.ascii	"__uint8_t\000"
 685      6E74385F 
 685      7400
 686              	.LASF21:
 687 000a 5469636B 		.ascii	"TickType_t\000"
 687      54797065 
 687      5F7400
 688              	.LASF6:
 689 0015 5F5F696E 		.ascii	"__int32_t\000"
 689      7433325F 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 16


 689      7400
 690              	.LASF26:
 691 001f 76537461 		.ascii	"vStartUSBSerialTasks\000"
 691      72745553 
 691      42536572 
 691      69616C54 
 691      61736B73 
 692              	.LASF33:
 693 0034 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 693      4320342E 
 693      392E3320 
 693      32303135 
 693      30333033 
 694 0067 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 694      20726576 
 694      6973696F 
 694      6E203232 
 694      31323230 
 695 009a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 695      66756E63 
 695      74696F6E 
 695      2D736563 
 695      74696F6E 
 696              	.LASF23:
 697 00c2 51756575 		.ascii	"QueueHandle_t\000"
 697      6548616E 
 697      646C655F 
 697      7400
 698              	.LASF31:
 699 00d0 6D44656C 		.ascii	"mDelay\000"
 699      617900
 700              	.LASF34:
 701 00d7 55534253 		.ascii	"USBSerial.c\000"
 701      65726961 
 701      6C2E6300 
 702              	.LASF17:
 703 00e3 666C6F61 		.ascii	"float\000"
 703      7400
 704              	.LASF1:
 705 00e9 7369676E 		.ascii	"signed char\000"
 705      65642063 
 705      68617200 
 706              	.LASF2:
 707 00f5 756E7369 		.ascii	"unsigned char\000"
 707      676E6564 
 707      20636861 
 707      7200
 708              	.LASF9:
 709 0103 6C6F6E67 		.ascii	"long unsigned int\000"
 709      20756E73 
 709      69676E65 
 709      6420696E 
 709      7400
 710              	.LASF4:
 711 0115 73686F72 		.ascii	"short unsigned int\000"
 711      7420756E 
 711      7369676E 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 17


 711      65642069 
 711      6E7400
 712              	.LASF29:
 713 0128 49544D5F 		.ascii	"ITM_RxBuffer\000"
 713      52784275 
 713      66666572 
 713      00
 714              	.LASF18:
 715 0135 646F7562 		.ascii	"double\000"
 715      6C6500
 716              	.LASF24:
 717 013c 53656D61 		.ascii	"SemaphoreHandle_t\000"
 717      70686F72 
 717      6548616E 
 717      646C655F 
 717      7400
 718              	.LASF8:
 719 014e 5F5F7569 		.ascii	"__uint32_t\000"
 719      6E743332 
 719      5F7400
 720              	.LASF27:
 721 0159 75785072 		.ascii	"uxPriority\000"
 721      696F7269 
 721      747900
 722              	.LASF0:
 723 0164 756E7369 		.ascii	"unsigned int\000"
 723      676E6564 
 723      20696E74 
 723      00
 724              	.LASF36:
 725 0171 76555342 		.ascii	"vUSBSerialTask\000"
 725      53657269 
 725      616C5461 
 725      736B00
 726              	.LASF11:
 727 0180 6C6F6E67 		.ascii	"long long unsigned int\000"
 727      206C6F6E 
 727      6720756E 
 727      7369676E 
 727      65642069 
 728              	.LASF14:
 729 0197 75696E74 		.ascii	"uint8_t\000"
 729      385F7400 
 730              	.LASF15:
 731 019f 696E7433 		.ascii	"int32_t\000"
 731      325F7400 
 732              	.LASF12:
 733 01a7 73697A65 		.ascii	"sizetype\000"
 733      74797065 
 733      00
 734              	.LASF30:
 735 01b0 7844656C 		.ascii	"xDelay\000"
 735      617900
 736              	.LASF10:
 737 01b7 6C6F6E67 		.ascii	"long long int\000"
 737      206C6F6E 
 737      6720696E 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccBCsY1e.s 			page 18


 737      7400
 738              	.LASF13:
 739 01c5 63686172 		.ascii	"char\000"
 739      00
 740              	.LASF28:
 741 01ca 70765061 		.ascii	"pvParameters\000"
 741      72616D65 
 741      74657273 
 741      00
 742              	.LASF3:
 743 01d7 73686F72 		.ascii	"short int\000"
 743      7420696E 
 743      7400
 744              	.LASF32:
 745 01e1 5553424D 		.ascii	"USBMutex\000"
 745      75746578 
 745      00
 746              	.LASF22:
 747 01ea 5461736B 		.ascii	"TaskHandle_t\000"
 747      48616E64 
 747      6C655F74 
 747      00
 748              	.LASF16:
 749 01f7 75696E74 		.ascii	"uint32_t\000"
 749      33325F74 
 749      00
 750              	.LASF7:
 751 0200 6C6F6E67 		.ascii	"long int\000"
 751      20696E74 
 751      00
 752              	.LASF25:
 753 0209 75736273 		.ascii	"usbserial_putString\000"
 753      65726961 
 753      6C5F7075 
 753      74537472 
 753      696E6700 
 754              	.LASF20:
 755 021d 55426173 		.ascii	"UBaseType_t\000"
 755      65547970 
 755      655F7400 
 756              	.LASF19:
 757 0229 42617365 		.ascii	"BaseType_t\000"
 757      54797065 
 757      5F7400
 758              	.LASF35:
 759 0234 433A5C55 		.ascii	"C:\\Users\\bmt\\Documents\\GitHub\\FreeRTOS_CY8CKIT"
 759      73657273 
 759      5C626D74 
 759      5C446F63 
 759      756D656E 
 760 0262 5F303539 		.ascii	"_059\\FreeRTOS_Demo.cydsn\000"
 760      5C467265 
 760      6552544F 
 760      535F4465 
 760      6D6F2E63 
 761              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
