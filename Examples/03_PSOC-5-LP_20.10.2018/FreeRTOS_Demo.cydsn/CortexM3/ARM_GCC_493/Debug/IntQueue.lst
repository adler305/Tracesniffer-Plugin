ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"IntQueue.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	xNormallyEmptyQueue:
  21 0000 00000000 		.space	4
  22              		.align	2
  23              	xNormallyFullQueue:
  24 0004 00000000 		.space	4
  25              		.align	2
  26              	uxHighPriorityLoops1:
  27 0008 00000000 		.space	4
  28              		.align	2
  29              	uxHighPriorityLoops2:
  30 000c 00000000 		.space	4
  31              		.align	2
  32              	uxLowPriorityLoops1:
  33 0010 00000000 		.space	4
  34              		.align	2
  35              	uxLowPriorityLoops2:
  36 0014 00000000 		.space	4
  37              		.data
  38              		.align	2
  39              		.type	xErrorStatus, %object
  40              		.size	xErrorStatus, 4
  41              	xErrorStatus:
  42 0000 01000000 		.word	1
  43              		.bss
  44              		.align	2
  45              	xErrorLine:
  46 0018 00000000 		.space	4
  47              		.align	2
  48              	xWasSuspended:
  49 001c 00000000 		.space	4
  50              		.align	2
  51              	uxValueForNormallyEmptyQueue:
  52 0020 00000000 		.space	4
  53              		.align	2
  54              	uxValueForNormallyFullQueue:
  55 0024 00000000 		.space	4
  56              		.comm	xHighPriorityNormallyEmptyTask1,4,4
  57              		.comm	xHighPriorityNormallyEmptyTask2,4,4
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 2


  58              		.comm	xHighPriorityNormallyFullTask1,4,4
  59              		.comm	xHighPriorityNormallyFullTask2,4,4
  60              		.align	2
  61              	ucNormallyEmptyReceivedValues:
  62 0028 00000000 		.space	200
  62      00000000 
  62      00000000 
  62      00000000 
  62      00000000 
  63              		.align	2
  64              	ucNormallyFullReceivedValues:
  65 00f0 00000000 		.space	200
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.section	.rodata
  67              		.align	2
  68              	.LC0:
  69 0000 48315152 		.ascii	"H1QRx\000"
  69      7800
  70 0006 0000     		.align	2
  71              	.LC1:
  72 0008 48325152 		.ascii	"H2QRx\000"
  72      7800
  73 000e 0000     		.align	2
  74              	.LC2:
  75 0010 4C315152 		.ascii	"L1QRx\000"
  75      7800
  76 0016 0000     		.align	2
  77              	.LC3:
  78 0018 48315154 		.ascii	"H1QTx\000"
  78      7800
  79 001e 0000     		.align	2
  80              	.LC4:
  81 0020 48325154 		.ascii	"H2QTx\000"
  81      7800
  82 0026 0000     		.align	2
  83              	.LC5:
  84 0028 4C325152 		.ascii	"L2QRx\000"
  84      7800
  85 002e 0000     		.align	2
  86              	.LC6:
  87 0030 4E6F726D 		.ascii	"NormallyFull\000"
  87      616C6C79 
  87      46756C6C 
  87      00
  88 003d 000000   		.align	2
  89              	.LC7:
  90 0040 4E6F726D 		.ascii	"NormallyEmpty\000"
  90      616C6C79 
  90      456D7074 
  90      7900
  91 004e 0000     		.section	.text.vStartInterruptQueueTasks,"ax",%progbits
  92              		.align	2
  93              		.global	vStartInterruptQueueTasks
  94              		.thumb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 3


  95              		.thumb_func
  96              		.type	vStartInterruptQueueTasks, %function
  97              	vStartInterruptQueueTasks:
  98              	.LFB68:
  99              		.file 1 "..\\Common\\Minimal\\IntQueue.c"
   1:..\Common\Minimal/IntQueue.c **** /*
   2:..\Common\Minimal/IntQueue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Common\Minimal/IntQueue.c ****     All rights reserved
   4:..\Common\Minimal/IntQueue.c **** 
   5:..\Common\Minimal/IntQueue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Common\Minimal/IntQueue.c **** 
   7:..\Common\Minimal/IntQueue.c ****     This file is part of the FreeRTOS distribution.
   8:..\Common\Minimal/IntQueue.c **** 
   9:..\Common\Minimal/IntQueue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Common\Minimal/IntQueue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Common\Minimal/IntQueue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Common\Minimal/IntQueue.c **** 
  13:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  14:..\Common\Minimal/IntQueue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Common\Minimal/IntQueue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Common\Minimal/IntQueue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Common\Minimal/IntQueue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  19:..\Common\Minimal/IntQueue.c **** 
  20:..\Common\Minimal/IntQueue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Common\Minimal/IntQueue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Common\Minimal/IntQueue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Common\Minimal/IntQueue.c ****     link: http://www.freertos.org/a00114.html
  24:..\Common\Minimal/IntQueue.c **** 
  25:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  26:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  27:..\Common\Minimal/IntQueue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Common\Minimal/IntQueue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Common\Minimal/IntQueue.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Common\Minimal/IntQueue.c ****      *    is the industry's de facto standard.                               *
  31:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  32:..\Common\Minimal/IntQueue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Common\Minimal/IntQueue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Common\Minimal/IntQueue.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Common\Minimal/IntQueue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  37:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  38:..\Common\Minimal/IntQueue.c **** 
  39:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Common\Minimal/IntQueue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Common\Minimal/IntQueue.c ****     defined configASSERT()?
  42:..\Common\Minimal/IntQueue.c **** 
  43:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Common\Minimal/IntQueue.c ****     embedded software for free we request you assist our global community by
  45:..\Common\Minimal/IntQueue.c ****     participating in the support forum.
  46:..\Common\Minimal/IntQueue.c **** 
  47:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Common\Minimal/IntQueue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Common\Minimal/IntQueue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Common\Minimal/IntQueue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Common\Minimal/IntQueue.c **** 
  52:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 4


  53:..\Common\Minimal/IntQueue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Common\Minimal/IntQueue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Common\Minimal/IntQueue.c **** 
  56:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Common\Minimal/IntQueue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Common\Minimal/IntQueue.c **** 
  59:..\Common\Minimal/IntQueue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Common\Minimal/IntQueue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Common\Minimal/IntQueue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Common\Minimal/IntQueue.c **** 
  63:..\Common\Minimal/IntQueue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Common\Minimal/IntQueue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Common\Minimal/IntQueue.c ****     mission critical applications that require provable dependability.
  66:..\Common\Minimal/IntQueue.c **** 
  67:..\Common\Minimal/IntQueue.c ****     1 tab == 4 spaces!
  68:..\Common\Minimal/IntQueue.c **** */
  69:..\Common\Minimal/IntQueue.c **** 
  70:..\Common\Minimal/IntQueue.c **** /*
  71:..\Common\Minimal/IntQueue.c ****  * This file defines one of the more complex set of demo/test tasks.  They are
  72:..\Common\Minimal/IntQueue.c ****  * designed to stress test the queue implementation though pseudo simultaneous
  73:..\Common\Minimal/IntQueue.c ****  * multiple reads and multiple writes from both tasks of varying priority and
  74:..\Common\Minimal/IntQueue.c ****  * interrupts.  The interrupts are prioritised such to ensure that nesting
  75:..\Common\Minimal/IntQueue.c ****  * occurs (for those ports that support it).
  76:..\Common\Minimal/IntQueue.c ****  *
  77:..\Common\Minimal/IntQueue.c ****  * The test ensures that, while being accessed from three tasks and two
  78:..\Common\Minimal/IntQueue.c ****  * interrupts, all the data sent to the queues is also received from
  79:..\Common\Minimal/IntQueue.c ****  * the same queue, and that no duplicate items are either sent or received.
  80:..\Common\Minimal/IntQueue.c ****  * The tests also ensure that a low priority task is never able to successfully
  81:..\Common\Minimal/IntQueue.c ****  * read from or write to a queue when a task of higher priority is attempting
  82:..\Common\Minimal/IntQueue.c ****  * the same operation.
  83:..\Common\Minimal/IntQueue.c ****  */
  84:..\Common\Minimal/IntQueue.c **** 
  85:..\Common\Minimal/IntQueue.c **** /* Standard includes. */
  86:..\Common\Minimal/IntQueue.c **** #include <string.h>
  87:..\Common\Minimal/IntQueue.c **** 
  88:..\Common\Minimal/IntQueue.c **** /* SafeRTOS includes. */
  89:..\Common\Minimal/IntQueue.c **** #include "FreeRTOS.h"
  90:..\Common\Minimal/IntQueue.c **** #include "queue.h"
  91:..\Common\Minimal/IntQueue.c **** #include "task.h"
  92:..\Common\Minimal/IntQueue.c **** 
  93:..\Common\Minimal/IntQueue.c **** /* Demo app includes. */
  94:..\Common\Minimal/IntQueue.c **** #include "IntQueue.h"
  95:..\Common\Minimal/IntQueue.c **** #include "IntQueueTimer.h"
  96:..\Common\Minimal/IntQueue.c **** 
  97:..\Common\Minimal/IntQueue.c **** #if( INCLUDE_eTaskGetState != 1 )
  98:..\Common\Minimal/IntQueue.c **** 	#error INCLUDE_eTaskGetState must be set to 1 in FreeRTOSConfig.h to use this demo file.
  99:..\Common\Minimal/IntQueue.c **** #endif
 100:..\Common\Minimal/IntQueue.c **** 
 101:..\Common\Minimal/IntQueue.c **** /* Priorities used by test tasks. */
 102:..\Common\Minimal/IntQueue.c **** #ifndef intqHIGHER_PRIORITY
 103:..\Common\Minimal/IntQueue.c **** 	#define intqHIGHER_PRIORITY		( configMAX_PRIORITIES - 2 )
 104:..\Common\Minimal/IntQueue.c **** #endif
 105:..\Common\Minimal/IntQueue.c **** #define intqLOWER_PRIORITY		( tskIDLE_PRIORITY )
 106:..\Common\Minimal/IntQueue.c **** 
 107:..\Common\Minimal/IntQueue.c **** /* The number of values to send/receive before checking that all values were
 108:..\Common\Minimal/IntQueue.c **** processed as expected. */
 109:..\Common\Minimal/IntQueue.c **** #define intqNUM_VALUES_TO_LOG	( 200 )
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 5


 110:..\Common\Minimal/IntQueue.c **** #define intqSHORT_DELAY			( 140 )
 111:..\Common\Minimal/IntQueue.c **** 
 112:..\Common\Minimal/IntQueue.c **** /* The value by which the value being sent to or received from a queue should
 113:..\Common\Minimal/IntQueue.c **** increment past intqNUM_VALUES_TO_LOG before we check that all values have been
 114:..\Common\Minimal/IntQueue.c **** sent/received correctly.  This is done to ensure that all tasks and interrupts
 115:..\Common\Minimal/IntQueue.c **** accessing the queue have completed their accesses with the
 116:..\Common\Minimal/IntQueue.c **** intqNUM_VALUES_TO_LOG range. */
 117:..\Common\Minimal/IntQueue.c **** #define intqVALUE_OVERRUN		( 50 )
 118:..\Common\Minimal/IntQueue.c **** 
 119:..\Common\Minimal/IntQueue.c **** /* The delay used by the polling task.  A short delay is used for code
 120:..\Common\Minimal/IntQueue.c **** coverage. */
 121:..\Common\Minimal/IntQueue.c **** #define intqONE_TICK_DELAY		( 1 )
 122:..\Common\Minimal/IntQueue.c **** 
 123:..\Common\Minimal/IntQueue.c **** /* Each task and interrupt is given a unique identifier.  This value is used to
 124:..\Common\Minimal/IntQueue.c **** identify which task sent or received each value.  The identifier is also used
 125:..\Common\Minimal/IntQueue.c **** to distinguish between two tasks that are running the same task function. */
 126:..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK1	( ( UBaseType_t ) 1 )
 127:..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK2	( ( UBaseType_t ) 2 )
 128:..\Common\Minimal/IntQueue.c **** #define intqLOW_PRIORITY_TASK	( ( UBaseType_t ) 3 )
 129:..\Common\Minimal/IntQueue.c **** #define intqFIRST_INTERRUPT		( ( UBaseType_t ) 4 )
 130:..\Common\Minimal/IntQueue.c **** #define intqSECOND_INTERRUPT	( ( UBaseType_t ) 5 )
 131:..\Common\Minimal/IntQueue.c **** #define intqQUEUE_LENGTH		( ( UBaseType_t ) 10 )
 132:..\Common\Minimal/IntQueue.c **** 
 133:..\Common\Minimal/IntQueue.c **** /* At least intqMIN_ACCEPTABLE_TASK_COUNT values should be sent to/received
 134:..\Common\Minimal/IntQueue.c **** from each queue by each task, otherwise an error is detected. */
 135:..\Common\Minimal/IntQueue.c **** #define intqMIN_ACCEPTABLE_TASK_COUNT		( 5 )
 136:..\Common\Minimal/IntQueue.c **** 
 137:..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally empty.  This is called
 138:..\Common\Minimal/IntQueue.c **** from within the interrupts. */
 139:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_TX()																							\
 140:..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyEmptyQueue ) != pdTRUE )															\
 141:..\Common\Minimal/IntQueue.c **** 	{																														\
 142:..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 143:..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 144:..\Common\Minimal/IntQueue.c **** 		{																													\
 145:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyEmptyQueue++;																					\
 146:..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyEmptyQueue, ( void * ) &uxValueForNormallyEmptyQueue, &xHigherPr
 147:..\Common\Minimal/IntQueue.c **** 			{																												\
 148:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue--;																				\
 149:..\Common\Minimal/IntQueue.c **** 			}																												\
 150:..\Common\Minimal/IntQueue.c **** 		}																													\
 151:..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
 152:..\Common\Minimal/IntQueue.c **** 	}																														\
 153:..\Common\Minimal/IntQueue.c **** 
 154:..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally full.  This is called
 155:..\Common\Minimal/IntQueue.c **** from within the interrupts. */
 156:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_TX()																								\
 157:..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyFullQueue ) != pdTRUE )															\
 158:..\Common\Minimal/IntQueue.c **** 	{																														\
 159:..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 160:..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 161:..\Common\Minimal/IntQueue.c **** 		{																													\
 162:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;																					\
 163:..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyFullQueue, ( void * ) &uxValueForNormallyFullQueue, &xHigherPrio
 164:..\Common\Minimal/IntQueue.c **** 			{																												\
 165:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyFullQueue--;																				\
 166:..\Common\Minimal/IntQueue.c **** 			} 																												\
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 6


 167:..\Common\Minimal/IntQueue.c **** 		}																													\
 168:..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
 169:..\Common\Minimal/IntQueue.c **** 	}																														\
 170:..\Common\Minimal/IntQueue.c **** 
 171:..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally empty queue.  This is called from within
 172:..\Common\Minimal/IntQueue.c **** an interrupt. */
 173:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_RX()																			\
 174:..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyEmptyQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) != pdPASS
 175:..\Common\Minimal/IntQueue.c **** 	{																										\
 176:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );																	\
 177:..\Common\Minimal/IntQueue.c **** 	}																										\
 178:..\Common\Minimal/IntQueue.c **** 	else																									\
 179:..\Common\Minimal/IntQueue.c **** 	{																										\
 180:..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyEmpty( uxRxedValue, intqSECOND_INTERRUPT );									\
 181:..\Common\Minimal/IntQueue.c **** 	}
 182:..\Common\Minimal/IntQueue.c **** 
 183:..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally full queue.  This is called from within
 184:..\Common\Minimal/IntQueue.c **** an interrupt. */
 185:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_RX()																				\
 186:..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyFullQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) == pdPASS 
 187:..\Common\Minimal/IntQueue.c **** 	{																										\
 188:..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyFull( uxRxedValue, intqSECOND_INTERRUPT );									\
 189:..\Common\Minimal/IntQueue.c **** 	}																										\
 190:..\Common\Minimal/IntQueue.c **** 
 191:..\Common\Minimal/IntQueue.c **** 
 192:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 193:..\Common\Minimal/IntQueue.c **** 
 194:..\Common\Minimal/IntQueue.c **** /* The two queues used by the test. */
 195:..\Common\Minimal/IntQueue.c **** static QueueHandle_t xNormallyEmptyQueue, xNormallyFullQueue;
 196:..\Common\Minimal/IntQueue.c **** 
 197:..\Common\Minimal/IntQueue.c **** /* Variables used to detect a stall in one of the tasks. */
 198:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxHighPriorityLoops1 = 0, uxHighPriorityLoops2 = 0, uxLowPriorityLoops1
 199:..\Common\Minimal/IntQueue.c **** 
 200:..\Common\Minimal/IntQueue.c **** /* Any unexpected behaviour sets xErrorStatus to fail and log the line that
 201:..\Common\Minimal/IntQueue.c **** caused the error in xErrorLine. */
 202:..\Common\Minimal/IntQueue.c **** static BaseType_t xErrorStatus = pdPASS;
 203:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t xErrorLine = ( UBaseType_t ) 0;
 204:..\Common\Minimal/IntQueue.c **** 
 205:..\Common\Minimal/IntQueue.c **** /* Used for sequencing between tasks. */
 206:..\Common\Minimal/IntQueue.c **** static BaseType_t xWasSuspended = pdFALSE;
 207:..\Common\Minimal/IntQueue.c **** 
 208:..\Common\Minimal/IntQueue.c **** /* The values that are sent to the queues.  An incremented value is sent each
 209:..\Common\Minimal/IntQueue.c **** time to each queue. */
 210:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxValueForNormallyEmptyQueue = 0, uxValueForNormallyFullQueue = 0;
 211:..\Common\Minimal/IntQueue.c **** 
 212:..\Common\Minimal/IntQueue.c **** /* A handle to some of the tasks is required so they can be suspended/resumed. */
 213:..\Common\Minimal/IntQueue.c **** TaskHandle_t xHighPriorityNormallyEmptyTask1, xHighPriorityNormallyEmptyTask2, xHighPriorityNormall
 214:..\Common\Minimal/IntQueue.c **** 
 215:..\Common\Minimal/IntQueue.c **** /* When a value is received in a queue the value is ticked off in the array
 216:..\Common\Minimal/IntQueue.c **** the array position of the value is set to a the identifier of the task or
 217:..\Common\Minimal/IntQueue.c **** interrupt that accessed the queue.  This way missing or duplicate values can be
 218:..\Common\Minimal/IntQueue.c **** detected. */
 219:..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyEmptyReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
 220:..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyFullReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
 221:..\Common\Minimal/IntQueue.c **** 
 222:..\Common\Minimal/IntQueue.c **** /* The test tasks themselves. */
 223:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters );
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 7


 224:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters );
 225:..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters );
 226:..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters );
 227:..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters );
 228:..\Common\Minimal/IntQueue.c **** 
 229:..\Common\Minimal/IntQueue.c **** /* Used to mark the positions within the ucNormallyEmptyReceivedValues and
 230:..\Common\Minimal/IntQueue.c **** ucNormallyFullReceivedValues arrays, while checking for duplicates. */
 231:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource );
 232:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource );
 233:..\Common\Minimal/IntQueue.c **** 
 234:..\Common\Minimal/IntQueue.c **** /* Logs the line on which an error occurred. */
 235:..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine );
 236:..\Common\Minimal/IntQueue.c **** 
 237:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 238:..\Common\Minimal/IntQueue.c **** 
 239:..\Common\Minimal/IntQueue.c **** void vStartInterruptQueueTasks( void )
 240:..\Common\Minimal/IntQueue.c **** {
 100              		.loc 1 240 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 82B0     		sub	sp, sp, #8
 109              		.cfi_def_cfa_offset 16
 110 0004 02AF     		add	r7, sp, #8
 111              		.cfi_def_cfa 7, 8
 241:..\Common\Minimal/IntQueue.c **** 	/* Start the test tasks. */
 242:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H1QRx", configMINIMAL_STACK_SIZE, ( void * ) int
 112              		.loc 1 242 0
 113 0006 0323     		movs	r3, #3
 114 0008 0093     		str	r3, [sp]
 115 000a 2C4B     		ldr	r3, .L2
 116 000c 0193     		str	r3, [sp, #4]
 117 000e 2C48     		ldr	r0, .L2+4
 118 0010 2C49     		ldr	r1, .L2+8
 119 0012 6422     		movs	r2, #100
 120 0014 0123     		movs	r3, #1
 121 0016 FFF7FEFF 		bl	xTaskCreate
 243:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H2QRx", configMINIMAL_STACK_SIZE, ( void * ) int
 122              		.loc 1 243 0
 123 001a 0323     		movs	r3, #3
 124 001c 0093     		str	r3, [sp]
 125 001e 2A4B     		ldr	r3, .L2+12
 126 0020 0193     		str	r3, [sp, #4]
 127 0022 2748     		ldr	r0, .L2+4
 128 0024 2949     		ldr	r1, .L2+16
 129 0026 6422     		movs	r2, #100
 130 0028 0223     		movs	r3, #2
 131 002a FFF7FEFF 		bl	xTaskCreate
 244:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyEmptyTask, "L1QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER
 132              		.loc 1 244 0
 133 002e 0023     		movs	r3, #0
 134 0030 0093     		str	r3, [sp]
 135 0032 0023     		movs	r3, #0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 8


 136 0034 0193     		str	r3, [sp, #4]
 137 0036 2648     		ldr	r0, .L2+20
 138 0038 2649     		ldr	r1, .L2+24
 139 003a 6422     		movs	r2, #100
 140 003c 0023     		movs	r3, #0
 141 003e FFF7FEFF 		bl	xTaskCreate
 245:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv1stHigherPriorityNormallyFullTask, "H1QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 142              		.loc 1 245 0
 143 0042 0323     		movs	r3, #3
 144 0044 0093     		str	r3, [sp]
 145 0046 244B     		ldr	r3, .L2+28
 146 0048 0193     		str	r3, [sp, #4]
 147 004a 2448     		ldr	r0, .L2+32
 148 004c 2449     		ldr	r1, .L2+36
 149 004e 6422     		movs	r2, #100
 150 0050 0123     		movs	r3, #1
 151 0052 FFF7FEFF 		bl	xTaskCreate
 246:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv2ndHigherPriorityNormallyFullTask, "H2QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 152              		.loc 1 246 0
 153 0056 0323     		movs	r3, #3
 154 0058 0093     		str	r3, [sp]
 155 005a 224B     		ldr	r3, .L2+40
 156 005c 0193     		str	r3, [sp, #4]
 157 005e 2248     		ldr	r0, .L2+44
 158 0060 2249     		ldr	r1, .L2+48
 159 0062 6422     		movs	r2, #100
 160 0064 0223     		movs	r3, #2
 161 0066 FFF7FEFF 		bl	xTaskCreate
 247:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyFullTask, "L2QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER_
 162              		.loc 1 247 0
 163 006a 0023     		movs	r3, #0
 164 006c 0093     		str	r3, [sp]
 165 006e 0023     		movs	r3, #0
 166 0070 0193     		str	r3, [sp, #4]
 167 0072 1F48     		ldr	r0, .L2+52
 168 0074 1F49     		ldr	r1, .L2+56
 169 0076 6422     		movs	r2, #100
 170 0078 0023     		movs	r3, #0
 171 007a FFF7FEFF 		bl	xTaskCreate
 248:..\Common\Minimal/IntQueue.c **** 
 249:..\Common\Minimal/IntQueue.c **** 	/* Create the queues that are accessed by multiple tasks and multiple
 250:..\Common\Minimal/IntQueue.c **** 	interrupts. */
 251:..\Common\Minimal/IntQueue.c **** 	xNormallyFullQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 172              		.loc 1 251 0
 173 007e 0A20     		movs	r0, #10
 174 0080 0421     		movs	r1, #4
 175 0082 0022     		movs	r2, #0
 176 0084 FFF7FEFF 		bl	xQueueGenericCreate
 177 0088 0246     		mov	r2, r0
 178 008a 1B4B     		ldr	r3, .L2+60
 179 008c 1A60     		str	r2, [r3]
 252:..\Common\Minimal/IntQueue.c **** 	xNormallyEmptyQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 180              		.loc 1 252 0
 181 008e 0A20     		movs	r0, #10
 182 0090 0421     		movs	r1, #4
 183 0092 0022     		movs	r2, #0
 184 0094 FFF7FEFF 		bl	xQueueGenericCreate
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 9


 185 0098 0246     		mov	r2, r0
 186 009a 184B     		ldr	r3, .L2+64
 187 009c 1A60     		str	r2, [r3]
 253:..\Common\Minimal/IntQueue.c **** 
 254:..\Common\Minimal/IntQueue.c **** 	/* vQueueAddToRegistry() adds the queue to the queue registry, if one is
 255:..\Common\Minimal/IntQueue.c **** 	in use.  The queue registry is provided as a means for kernel aware
 256:..\Common\Minimal/IntQueue.c **** 	debuggers to locate queues and has no purpose if a kernel aware debugger
 257:..\Common\Minimal/IntQueue.c **** 	is not being used.  The call to vQueueAddToRegistry() will be removed
 258:..\Common\Minimal/IntQueue.c **** 	by the pre-processor if configQUEUE_REGISTRY_SIZE is not defined or is
 259:..\Common\Minimal/IntQueue.c **** 	defined to be less than 1. */
 260:..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyFullQueue, "NormallyFull" );
 188              		.loc 1 260 0
 189 009e 164B     		ldr	r3, .L2+60
 190 00a0 1B68     		ldr	r3, [r3]
 191 00a2 1846     		mov	r0, r3
 192 00a4 1649     		ldr	r1, .L2+68
 193 00a6 FFF7FEFF 		bl	vQueueAddToRegistry
 261:..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyEmptyQueue, "NormallyEmpty" );
 194              		.loc 1 261 0
 195 00aa 144B     		ldr	r3, .L2+64
 196 00ac 1B68     		ldr	r3, [r3]
 197 00ae 1846     		mov	r0, r3
 198 00b0 1449     		ldr	r1, .L2+72
 199 00b2 FFF7FEFF 		bl	vQueueAddToRegistry
 262:..\Common\Minimal/IntQueue.c **** }
 200              		.loc 1 262 0
 201 00b6 BD46     		mov	sp, r7
 202              		.cfi_def_cfa_register 13
 203              		@ sp needed
 204 00b8 80BD     		pop	{r7, pc}
 205              	.L3:
 206 00ba 00BF     		.align	2
 207              	.L2:
 208 00bc 00000000 		.word	xHighPriorityNormallyEmptyTask1
 209 00c0 00000000 		.word	prvHigherPriorityNormallyEmptyTask
 210 00c4 00000000 		.word	.LC0
 211 00c8 00000000 		.word	xHighPriorityNormallyEmptyTask2
 212 00cc 08000000 		.word	.LC1
 213 00d0 00000000 		.word	prvLowerPriorityNormallyEmptyTask
 214 00d4 10000000 		.word	.LC2
 215 00d8 00000000 		.word	xHighPriorityNormallyFullTask1
 216 00dc 00000000 		.word	prv1stHigherPriorityNormallyFullTask
 217 00e0 18000000 		.word	.LC3
 218 00e4 00000000 		.word	xHighPriorityNormallyFullTask2
 219 00e8 00000000 		.word	prv2ndHigherPriorityNormallyFullTask
 220 00ec 20000000 		.word	.LC4
 221 00f0 00000000 		.word	prvLowerPriorityNormallyFullTask
 222 00f4 28000000 		.word	.LC5
 223 00f8 04000000 		.word	xNormallyFullQueue
 224 00fc 00000000 		.word	xNormallyEmptyQueue
 225 0100 30000000 		.word	.LC6
 226 0104 40000000 		.word	.LC7
 227              		.cfi_endproc
 228              	.LFE68:
 229              		.size	vStartInterruptQueueTasks, .-vStartInterruptQueueTasks
 230              		.section	.text.prvRecordValue_NormallyFull,"ax",%progbits
 231              		.align	2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 10


 232              		.thumb
 233              		.thumb_func
 234              		.type	prvRecordValue_NormallyFull, %function
 235              	prvRecordValue_NormallyFull:
 236              	.LFB69:
 263:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 264:..\Common\Minimal/IntQueue.c **** 
 265:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource )
 266:..\Common\Minimal/IntQueue.c **** {
 237              		.loc 1 266 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 82B0     		sub	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
 250 0008 3960     		str	r1, [r7]
 267:..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 251              		.loc 1 267 0
 252 000a 7B68     		ldr	r3, [r7, #4]
 253 000c C72B     		cmp	r3, #199
 254 000e 10D8     		bhi	.L4
 268:..\Common\Minimal/IntQueue.c **** 	{
 269:..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 270:..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 271:..\Common\Minimal/IntQueue.c **** 		if( ucNormallyFullReceivedValues[ uxValue ] != 0x00 )
 255              		.loc 1 271 0
 256 0010 094A     		ldr	r2, .L7
 257 0012 7B68     		ldr	r3, [r7, #4]
 258 0014 1344     		add	r3, r3, r2
 259 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 260 0018 002B     		cmp	r3, #0
 261 001a 03D0     		beq	.L6
 272:..\Common\Minimal/IntQueue.c **** 		{
 273:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 262              		.loc 1 273 0
 263 001c 40F21110 		movw	r0, #273
 264 0020 FFF7FEFF 		bl	prvQueueAccessLogError
 265              	.L6:
 274:..\Common\Minimal/IntQueue.c **** 		}
 275:..\Common\Minimal/IntQueue.c **** 
 276:..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 277:..\Common\Minimal/IntQueue.c **** 		ucNormallyFullReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 266              		.loc 1 277 0
 267 0024 3B68     		ldr	r3, [r7]
 268 0026 D9B2     		uxtb	r1, r3
 269 0028 034A     		ldr	r2, .L7
 270 002a 7B68     		ldr	r3, [r7, #4]
 271 002c 1344     		add	r3, r3, r2
 272 002e 0A46     		mov	r2, r1
 273 0030 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 11


 274              	.L4:
 278:..\Common\Minimal/IntQueue.c **** 	}
 279:..\Common\Minimal/IntQueue.c **** }
 275              		.loc 1 279 0
 276 0032 0837     		adds	r7, r7, #8
 277              		.cfi_def_cfa_offset 8
 278 0034 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0036 80BD     		pop	{r7, pc}
 282              	.L8:
 283              		.align	2
 284              	.L7:
 285 0038 F0000000 		.word	ucNormallyFullReceivedValues
 286              		.cfi_endproc
 287              	.LFE69:
 288              		.size	prvRecordValue_NormallyFull, .-prvRecordValue_NormallyFull
 289              		.section	.text.prvRecordValue_NormallyEmpty,"ax",%progbits
 290              		.align	2
 291              		.thumb
 292              		.thumb_func
 293              		.type	prvRecordValue_NormallyEmpty, %function
 294              	prvRecordValue_NormallyEmpty:
 295              	.LFB70:
 280:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 281:..\Common\Minimal/IntQueue.c **** 
 282:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource )
 283:..\Common\Minimal/IntQueue.c **** {
 296              		.loc 1 283 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 82B0     		sub	sp, sp, #8
 305              		.cfi_def_cfa_offset 16
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
 309 0008 3960     		str	r1, [r7]
 284:..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 310              		.loc 1 284 0
 311 000a 7B68     		ldr	r3, [r7, #4]
 312 000c C72B     		cmp	r3, #199
 313 000e 10D8     		bhi	.L9
 285:..\Common\Minimal/IntQueue.c **** 	{
 286:..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 287:..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 288:..\Common\Minimal/IntQueue.c **** 		if( ucNormallyEmptyReceivedValues[ uxValue ] != 0x00 )
 314              		.loc 1 288 0
 315 0010 094A     		ldr	r2, .L12
 316 0012 7B68     		ldr	r3, [r7, #4]
 317 0014 1344     		add	r3, r3, r2
 318 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319 0018 002B     		cmp	r3, #0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 12


 320 001a 03D0     		beq	.L11
 289:..\Common\Minimal/IntQueue.c **** 		{
 290:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 321              		.loc 1 290 0
 322 001c 4FF49170 		mov	r0, #290
 323 0020 FFF7FEFF 		bl	prvQueueAccessLogError
 324              	.L11:
 291:..\Common\Minimal/IntQueue.c **** 		}
 292:..\Common\Minimal/IntQueue.c **** 
 293:..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 294:..\Common\Minimal/IntQueue.c **** 		ucNormallyEmptyReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 325              		.loc 1 294 0
 326 0024 3B68     		ldr	r3, [r7]
 327 0026 D9B2     		uxtb	r1, r3
 328 0028 034A     		ldr	r2, .L12
 329 002a 7B68     		ldr	r3, [r7, #4]
 330 002c 1344     		add	r3, r3, r2
 331 002e 0A46     		mov	r2, r1
 332 0030 1A70     		strb	r2, [r3]
 333              	.L9:
 295:..\Common\Minimal/IntQueue.c **** 	}
 296:..\Common\Minimal/IntQueue.c **** }
 334              		.loc 1 296 0
 335 0032 0837     		adds	r7, r7, #8
 336              		.cfi_def_cfa_offset 8
 337 0034 BD46     		mov	sp, r7
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 0036 80BD     		pop	{r7, pc}
 341              	.L13:
 342              		.align	2
 343              	.L12:
 344 0038 28000000 		.word	ucNormallyEmptyReceivedValues
 345              		.cfi_endproc
 346              	.LFE70:
 347              		.size	prvRecordValue_NormallyEmpty, .-prvRecordValue_NormallyEmpty
 348              		.section	.text.prvQueueAccessLogError,"ax",%progbits
 349              		.align	2
 350              		.thumb
 351              		.thumb_func
 352              		.type	prvQueueAccessLogError, %function
 353              	prvQueueAccessLogError:
 354              	.LFB71:
 297:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 298:..\Common\Minimal/IntQueue.c **** 
 299:..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine )
 300:..\Common\Minimal/IntQueue.c **** {
 355              		.loc 1 300 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              		.cfi_def_cfa_offset 4
 362              		.cfi_offset 7, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 13


 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 301:..\Common\Minimal/IntQueue.c **** 	/* Latch the line number that caused the error. */
 302:..\Common\Minimal/IntQueue.c **** 	xErrorLine = uxLine;
 368              		.loc 1 302 0
 369 0008 054A     		ldr	r2, .L15
 370 000a 7B68     		ldr	r3, [r7, #4]
 371 000c 1360     		str	r3, [r2]
 303:..\Common\Minimal/IntQueue.c **** 	xErrorStatus = pdFAIL;
 372              		.loc 1 303 0
 373 000e 054B     		ldr	r3, .L15+4
 374 0010 0022     		movs	r2, #0
 375 0012 1A60     		str	r2, [r3]
 304:..\Common\Minimal/IntQueue.c **** }
 376              		.loc 1 304 0
 377 0014 0C37     		adds	r7, r7, #12
 378              		.cfi_def_cfa_offset 4
 379 0016 BD46     		mov	sp, r7
 380              		.cfi_def_cfa_register 13
 381              		@ sp needed
 382 0018 5DF8047B 		ldr	r7, [sp], #4
 383              		.cfi_restore 7
 384              		.cfi_def_cfa_offset 0
 385 001c 7047     		bx	lr
 386              	.L16:
 387 001e 00BF     		.align	2
 388              	.L15:
 389 0020 18000000 		.word	xErrorLine
 390 0024 00000000 		.word	xErrorStatus
 391              		.cfi_endproc
 392              	.LFE71:
 393              		.size	prvQueueAccessLogError, .-prvQueueAccessLogError
 394              		.section	.text.prvHigherPriorityNormallyEmptyTask,"ax",%progbits
 395              		.align	2
 396              		.thumb
 397              		.thumb_func
 398              		.type	prvHigherPriorityNormallyEmptyTask, %function
 399              	prvHigherPriorityNormallyEmptyTask:
 400              	.LFB72:
 305:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 306:..\Common\Minimal/IntQueue.c **** 
 307:..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters )
 308:..\Common\Minimal/IntQueue.c **** {
 401              		.loc 1 308 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 40
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 8AB0     		sub	sp, sp, #40
 410              		.cfi_def_cfa_offset 48
 411 0004 00AF     		add	r7, sp, #0
 412              		.cfi_def_cfa_register 7
 413 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 14


 309:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxed, ux, uxTask1, uxTask2, uxInterrupts, uxErrorCount1 = 0, uxErrorCount2 = 0;
 414              		.loc 1 309 0
 415 0008 0023     		movs	r3, #0
 416 000a 7B61     		str	r3, [r7, #20]
 417 000c 0023     		movs	r3, #0
 418 000e 3B61     		str	r3, [r7, #16]
 310:..\Common\Minimal/IntQueue.c **** 
 311:..\Common\Minimal/IntQueue.c **** 	/* The timer should not be started until after the scheduler has started.
 312:..\Common\Minimal/IntQueue.c **** 	More than one task is running this code so we check the parameter value
 313:..\Common\Minimal/IntQueue.c **** 	to determine which task should start the timer. */
 314:..\Common\Minimal/IntQueue.c **** 	if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 419              		.loc 1 314 0
 420 0010 7B68     		ldr	r3, [r7, #4]
 421 0012 012B     		cmp	r3, #1
 422 0014 01D1     		bne	.L18
 315:..\Common\Minimal/IntQueue.c **** 	{
 316:..\Common\Minimal/IntQueue.c **** 		vInitialiseTimerForIntQueueTest();
 423              		.loc 1 316 0
 424 0016 FFF7FEFF 		bl	vInitialiseTimerForIntQueueTest
 425              	.L18:
 317:..\Common\Minimal/IntQueue.c **** 	}
 318:..\Common\Minimal/IntQueue.c **** 
 319:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 320:..\Common\Minimal/IntQueue.c **** 	{
 321:..\Common\Minimal/IntQueue.c **** 		/* Block waiting to receive a value from the normally empty queue.
 322:..\Common\Minimal/IntQueue.c **** 		Interrupts will write to the queue so we should receive a value. */
 323:..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqSHORT_DELAY ) != pdPASS )
 426              		.loc 1 323 0
 427 001a 504B     		ldr	r3, .L35
 428 001c 1A68     		ldr	r2, [r3]
 429 001e 07F10C03 		add	r3, r7, #12
 430 0022 1046     		mov	r0, r2
 431 0024 1946     		mov	r1, r3
 432 0026 8C22     		movs	r2, #140
 433 0028 0023     		movs	r3, #0
 434 002a FFF7FEFF 		bl	xQueueGenericReceive
 435 002e 0346     		mov	r3, r0
 436 0030 012B     		cmp	r3, #1
 437 0032 04D0     		beq	.L19
 324:..\Common\Minimal/IntQueue.c **** 		{
 325:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 438              		.loc 1 325 0
 439 0034 40F24510 		movw	r0, #325
 440 0038 FFF7FEFF 		bl	prvQueueAccessLogError
 441 003c 05E0     		b	.L20
 442              	.L19:
 326:..\Common\Minimal/IntQueue.c **** 		}
 327:..\Common\Minimal/IntQueue.c **** 		else
 328:..\Common\Minimal/IntQueue.c **** 		{
 329:..\Common\Minimal/IntQueue.c **** 			/* Note which value was received so we can check all expected
 330:..\Common\Minimal/IntQueue.c **** 			values are received and no values are duplicated. */
 331:..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, ( UBaseType_t ) pvParameters );
 443              		.loc 1 331 0
 444 003e FA68     		ldr	r2, [r7, #12]
 445 0040 7B68     		ldr	r3, [r7, #4]
 446 0042 1046     		mov	r0, r2
 447 0044 1946     		mov	r1, r3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 15


 448 0046 FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 449              	.L20:
 332:..\Common\Minimal/IntQueue.c **** 		}
 333:..\Common\Minimal/IntQueue.c **** 
 334:..\Common\Minimal/IntQueue.c **** 		/* Ensure the other task running this code gets a chance to execute. */
 335:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 450              		.loc 1 335 0
 451 004a 454B     		ldr	r3, .L35+4
 452 004c 4FF08052 		mov	r2, #268435456
 453 0050 1A60     		str	r2, [r3]
 454              	@ 335 "..\Common\Minimal\IntQueue.c" 1
 455 0052 BFF34F8F 		dsb
 456              	@ 0 "" 2
 457              	@ 335 "..\Common\Minimal\IntQueue.c" 1
 458 0056 BFF36F8F 		isb
 459              	@ 0 "" 2
 336:..\Common\Minimal/IntQueue.c **** 
 337:..\Common\Minimal/IntQueue.c **** 		if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 460              		.loc 1 337 0
 461              		.thumb
 462 005a 7B68     		ldr	r3, [r7, #4]
 463 005c 012B     		cmp	r3, #1
 464 005e 7BD1     		bne	.L21
 338:..\Common\Minimal/IntQueue.c **** 		{
 339:..\Common\Minimal/IntQueue.c **** 			/* Have we received all the expected values? */
 340:..\Common\Minimal/IntQueue.c **** 			if( uxValueForNormallyEmptyQueue > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 465              		.loc 1 340 0
 466 0060 404B     		ldr	r3, .L35+8
 467 0062 1B68     		ldr	r3, [r3]
 468 0064 FA2B     		cmp	r3, #250
 469 0066 77D9     		bls	.L21
 341:..\Common\Minimal/IntQueue.c **** 			{
 342:..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( xHighPriorityNormallyEmptyTask2 );
 470              		.loc 1 342 0
 471 0068 3F4B     		ldr	r3, .L35+12
 472 006a 1B68     		ldr	r3, [r3]
 473 006c 1846     		mov	r0, r3
 474 006e FFF7FEFF 		bl	vTaskSuspend
 343:..\Common\Minimal/IntQueue.c **** 
 344:..\Common\Minimal/IntQueue.c **** 				uxTask1 = 0;
 475              		.loc 1 344 0
 476 0072 0023     		movs	r3, #0
 477 0074 3B62     		str	r3, [r7, #32]
 345:..\Common\Minimal/IntQueue.c **** 				uxTask2 = 0;
 478              		.loc 1 345 0
 479 0076 0023     		movs	r3, #0
 480 0078 FB61     		str	r3, [r7, #28]
 346:..\Common\Minimal/IntQueue.c **** 				uxInterrupts = 0;
 481              		.loc 1 346 0
 482 007a 0023     		movs	r3, #0
 483 007c BB61     		str	r3, [r7, #24]
 347:..\Common\Minimal/IntQueue.c **** 
 348:..\Common\Minimal/IntQueue.c **** 				/* Loop through the array, checking that both tasks have
 349:..\Common\Minimal/IntQueue.c **** 				placed values into the array, and that no values are missing.
 350:..\Common\Minimal/IntQueue.c **** 				Start at 1 as we expect position 0 to be unused. */
 351:..\Common\Minimal/IntQueue.c **** 				for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 484              		.loc 1 351 0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 16


 485 007e 0123     		movs	r3, #1
 486 0080 7B62     		str	r3, [r7, #36]
 487 0082 2AE0     		b	.L22
 488              	.L27:
 352:..\Common\Minimal/IntQueue.c **** 				{
 353:..\Common\Minimal/IntQueue.c **** 					if( ucNormallyEmptyReceivedValues[ ux ] == 0 )
 489              		.loc 1 353 0
 490 0084 394A     		ldr	r2, .L35+16
 491 0086 7B6A     		ldr	r3, [r7, #36]
 492 0088 1344     		add	r3, r3, r2
 493 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 008c 002B     		cmp	r3, #0
 495 008e 04D1     		bne	.L23
 354:..\Common\Minimal/IntQueue.c **** 					{
 355:..\Common\Minimal/IntQueue.c **** 						/* A value is missing. */
 356:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 496              		.loc 1 356 0
 497 0090 4FF4B270 		mov	r0, #356
 498 0094 FFF7FEFF 		bl	prvQueueAccessLogError
 499 0098 1CE0     		b	.L24
 500              	.L23:
 357:..\Common\Minimal/IntQueue.c **** 					}
 358:..\Common\Minimal/IntQueue.c **** 					else
 359:..\Common\Minimal/IntQueue.c **** 					{
 360:..\Common\Minimal/IntQueue.c **** 						if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK1 )
 501              		.loc 1 360 0
 502 009a 344A     		ldr	r2, .L35+16
 503 009c 7B6A     		ldr	r3, [r7, #36]
 504 009e 1344     		add	r3, r3, r2
 505 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 00a2 012B     		cmp	r3, #1
 507 00a4 03D1     		bne	.L25
 361:..\Common\Minimal/IntQueue.c **** 						{
 362:..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 1. */
 363:..\Common\Minimal/IntQueue.c **** 							uxTask1++;
 508              		.loc 1 363 0
 509 00a6 3B6A     		ldr	r3, [r7, #32]
 510 00a8 0133     		adds	r3, r3, #1
 511 00aa 3B62     		str	r3, [r7, #32]
 512 00ac 12E0     		b	.L24
 513              	.L25:
 364:..\Common\Minimal/IntQueue.c **** 						}
 365:..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK2 )
 514              		.loc 1 365 0
 515 00ae 2F4A     		ldr	r2, .L35+16
 516 00b0 7B6A     		ldr	r3, [r7, #36]
 517 00b2 1344     		add	r3, r3, r2
 518 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519 00b6 022B     		cmp	r3, #2
 520 00b8 03D1     		bne	.L26
 366:..\Common\Minimal/IntQueue.c **** 						{
 367:..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 2. */
 368:..\Common\Minimal/IntQueue.c **** 							uxTask2++;
 521              		.loc 1 368 0
 522 00ba FB69     		ldr	r3, [r7, #28]
 523 00bc 0133     		adds	r3, r3, #1
 524 00be FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 17


 525 00c0 08E0     		b	.L24
 526              	.L26:
 369:..\Common\Minimal/IntQueue.c **** 						}
 370:..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 527              		.loc 1 370 0
 528 00c2 2A4A     		ldr	r2, .L35+16
 529 00c4 7B6A     		ldr	r3, [r7, #36]
 530 00c6 1344     		add	r3, r3, r2
 531 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 00ca 052B     		cmp	r3, #5
 533 00cc 02D1     		bne	.L24
 371:..\Common\Minimal/IntQueue.c **** 						{
 372:..\Common\Minimal/IntQueue.c **** 							uxInterrupts++;
 534              		.loc 1 372 0
 535 00ce BB69     		ldr	r3, [r7, #24]
 536 00d0 0133     		adds	r3, r3, #1
 537 00d2 BB61     		str	r3, [r7, #24]
 538              	.L24:
 351:..\Common\Minimal/IntQueue.c **** 				{
 539              		.loc 1 351 0 discriminator 2
 540 00d4 7B6A     		ldr	r3, [r7, #36]
 541 00d6 0133     		adds	r3, r3, #1
 542 00d8 7B62     		str	r3, [r7, #36]
 543              	.L22:
 351:..\Common\Minimal/IntQueue.c **** 				{
 544              		.loc 1 351 0 is_stmt 0 discriminator 1
 545 00da 7B6A     		ldr	r3, [r7, #36]
 546 00dc C72B     		cmp	r3, #199
 547 00de D1D9     		bls	.L27
 373:..\Common\Minimal/IntQueue.c **** 						}
 374:..\Common\Minimal/IntQueue.c **** 					}
 375:..\Common\Minimal/IntQueue.c **** 				}
 376:..\Common\Minimal/IntQueue.c **** 
 377:..\Common\Minimal/IntQueue.c **** 				if( uxTask1 < intqMIN_ACCEPTABLE_TASK_COUNT )
 548              		.loc 1 377 0 is_stmt 1
 549 00e0 3B6A     		ldr	r3, [r7, #32]
 550 00e2 042B     		cmp	r3, #4
 551 00e4 0AD8     		bhi	.L28
 378:..\Common\Minimal/IntQueue.c **** 				{
 379:..\Common\Minimal/IntQueue.c **** 					/* Only task 2 seemed to log any values. */
 380:..\Common\Minimal/IntQueue.c **** 					uxErrorCount1++;
 552              		.loc 1 380 0
 553 00e6 7B69     		ldr	r3, [r7, #20]
 554 00e8 0133     		adds	r3, r3, #1
 555 00ea 7B61     		str	r3, [r7, #20]
 381:..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount1 > 2 )
 556              		.loc 1 381 0
 557 00ec 7B69     		ldr	r3, [r7, #20]
 558 00ee 022B     		cmp	r3, #2
 559 00f0 06D9     		bls	.L30
 382:..\Common\Minimal/IntQueue.c **** 					{
 383:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 560              		.loc 1 383 0
 561 00f2 40F27F10 		movw	r0, #383
 562 00f6 FFF7FEFF 		bl	prvQueueAccessLogError
 563 00fa 01E0     		b	.L30
 564              	.L28:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 18


 384:..\Common\Minimal/IntQueue.c **** 					}
 385:..\Common\Minimal/IntQueue.c **** 				}
 386:..\Common\Minimal/IntQueue.c **** 				else
 387:..\Common\Minimal/IntQueue.c **** 				{
 388:..\Common\Minimal/IntQueue.c **** 					uxErrorCount1 = 0;
 565              		.loc 1 388 0
 566 00fc 0023     		movs	r3, #0
 567 00fe 7B61     		str	r3, [r7, #20]
 568              	.L30:
 389:..\Common\Minimal/IntQueue.c **** 				}
 390:..\Common\Minimal/IntQueue.c **** 
 391:..\Common\Minimal/IntQueue.c **** 				if( uxTask2 < intqMIN_ACCEPTABLE_TASK_COUNT  )
 569              		.loc 1 391 0
 570 0100 FB69     		ldr	r3, [r7, #28]
 571 0102 042B     		cmp	r3, #4
 572 0104 0AD8     		bhi	.L31
 392:..\Common\Minimal/IntQueue.c **** 				{
 393:..\Common\Minimal/IntQueue.c **** 					/* Only task 1 seemed to log any values. */
 394:..\Common\Minimal/IntQueue.c **** 					uxErrorCount2++;
 573              		.loc 1 394 0
 574 0106 3B69     		ldr	r3, [r7, #16]
 575 0108 0133     		adds	r3, r3, #1
 576 010a 3B61     		str	r3, [r7, #16]
 395:..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount2 > 2 )
 577              		.loc 1 395 0
 578 010c 3B69     		ldr	r3, [r7, #16]
 579 010e 022B     		cmp	r3, #2
 580 0110 06D9     		bls	.L33
 396:..\Common\Minimal/IntQueue.c **** 					{
 397:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 581              		.loc 1 397 0
 582 0112 40F28D10 		movw	r0, #397
 583 0116 FFF7FEFF 		bl	prvQueueAccessLogError
 584 011a 01E0     		b	.L33
 585              	.L31:
 398:..\Common\Minimal/IntQueue.c **** 					}
 399:..\Common\Minimal/IntQueue.c **** 				}
 400:..\Common\Minimal/IntQueue.c **** 				else
 401:..\Common\Minimal/IntQueue.c **** 				{
 402:..\Common\Minimal/IntQueue.c **** 					uxErrorCount2 = 0;
 586              		.loc 1 402 0
 587 011c 0023     		movs	r3, #0
 588 011e 3B61     		str	r3, [r7, #16]
 589              	.L33:
 403:..\Common\Minimal/IntQueue.c **** 				}
 404:..\Common\Minimal/IntQueue.c **** 
 405:..\Common\Minimal/IntQueue.c **** 				if( uxInterrupts == 0 )
 590              		.loc 1 405 0
 591 0120 BB69     		ldr	r3, [r7, #24]
 592 0122 002B     		cmp	r3, #0
 593 0124 03D1     		bne	.L34
 406:..\Common\Minimal/IntQueue.c **** 				{
 407:..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 594              		.loc 1 407 0
 595 0126 40F29710 		movw	r0, #407
 596 012a FFF7FEFF 		bl	prvQueueAccessLogError
 597              	.L34:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 19


 408:..\Common\Minimal/IntQueue.c **** 				}
 409:..\Common\Minimal/IntQueue.c **** 
 410:..\Common\Minimal/IntQueue.c **** 				/* Clear the array again, ready to start a new cycle. */
 411:..\Common\Minimal/IntQueue.c **** 				memset( ucNormallyEmptyReceivedValues, 0x00, sizeof( ucNormallyEmptyReceivedValues ) );
 598              		.loc 1 411 0
 599 012e 0F48     		ldr	r0, .L35+16
 600 0130 0021     		movs	r1, #0
 601 0132 C822     		movs	r2, #200
 602 0134 FFF7FEFF 		bl	memset
 412:..\Common\Minimal/IntQueue.c **** 
 413:..\Common\Minimal/IntQueue.c **** 				uxHighPriorityLoops1++;
 603              		.loc 1 413 0
 604 0138 0D4B     		ldr	r3, .L35+20
 605 013a 1B68     		ldr	r3, [r3]
 606 013c 0133     		adds	r3, r3, #1
 607 013e 0C4A     		ldr	r2, .L35+20
 608 0140 1360     		str	r3, [r2]
 414:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue = 0;
 609              		.loc 1 414 0
 610 0142 084B     		ldr	r3, .L35+8
 611 0144 0022     		movs	r2, #0
 612 0146 1A60     		str	r2, [r3]
 415:..\Common\Minimal/IntQueue.c **** 
 416:..\Common\Minimal/IntQueue.c **** 				/* Suspend ourselves, allowing the lower priority task to
 417:..\Common\Minimal/IntQueue.c **** 				actually receive something from the queue.  Until now it
 418:..\Common\Minimal/IntQueue.c **** 				will have been prevented from doing so by the higher
 419:..\Common\Minimal/IntQueue.c **** 				priority tasks.  The lower priority task will resume us
 420:..\Common\Minimal/IntQueue.c **** 				if it receives something.  We will then resume the other
 421:..\Common\Minimal/IntQueue.c **** 				higher priority task. */
 422:..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( NULL );
 613              		.loc 1 422 0
 614 0148 0020     		movs	r0, #0
 615 014a FFF7FEFF 		bl	vTaskSuspend
 423:..\Common\Minimal/IntQueue.c **** 				vTaskResume( xHighPriorityNormallyEmptyTask2 );
 616              		.loc 1 423 0
 617 014e 064B     		ldr	r3, .L35+12
 618 0150 1B68     		ldr	r3, [r3]
 619 0152 1846     		mov	r0, r3
 620 0154 FFF7FEFF 		bl	vTaskResume
 621              	.L21:
 424:..\Common\Minimal/IntQueue.c **** 			}
 425:..\Common\Minimal/IntQueue.c **** 		}
 426:..\Common\Minimal/IntQueue.c **** 	}
 622              		.loc 1 426 0
 623 0158 5FE7     		b	.L18
 624              	.L36:
 625 015a 00BF     		.align	2
 626              	.L35:
 627 015c 00000000 		.word	xNormallyEmptyQueue
 628 0160 04ED00E0 		.word	-536810236
 629 0164 20000000 		.word	uxValueForNormallyEmptyQueue
 630 0168 00000000 		.word	xHighPriorityNormallyEmptyTask2
 631 016c 28000000 		.word	ucNormallyEmptyReceivedValues
 632 0170 08000000 		.word	uxHighPriorityLoops1
 633              		.cfi_endproc
 634              	.LFE72:
 635              		.size	prvHigherPriorityNormallyEmptyTask, .-prvHigherPriorityNormallyEmptyTask
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 20


 636              		.section	.text.prvLowerPriorityNormallyEmptyTask,"ax",%progbits
 637              		.align	2
 638              		.thumb
 639              		.thumb_func
 640              		.type	prvLowerPriorityNormallyEmptyTask, %function
 641              	prvLowerPriorityNormallyEmptyTask:
 642              	.LFB73:
 427:..\Common\Minimal/IntQueue.c **** }
 428:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 429:..\Common\Minimal/IntQueue.c **** 
 430:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters )
 431:..\Common\Minimal/IntQueue.c **** {
 643              		.loc 1 431 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 16
 646              		@ frame_needed = 1, uses_anonymous_args = 0
 647 0000 80B5     		push	{r7, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 84B0     		sub	sp, sp, #16
 652              		.cfi_def_cfa_offset 24
 653 0004 00AF     		add	r7, sp, #0
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 656              	.L42:
 432:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxRxed;
 433:..\Common\Minimal/IntQueue.c **** 
 434:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 435:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 436:..\Common\Minimal/IntQueue.c **** 
 437:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 438:..\Common\Minimal/IntQueue.c **** 	{
 439:..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqONE_TICK_DELAY ) != errQUEUE_EMPTY )
 657              		.loc 1 439 0
 658 0008 274B     		ldr	r3, .L43
 659 000a 1A68     		ldr	r2, [r3]
 660 000c 07F10803 		add	r3, r7, #8
 661 0010 1046     		mov	r0, r2
 662 0012 1946     		mov	r1, r3
 663 0014 0122     		movs	r2, #1
 664 0016 0023     		movs	r3, #0
 665 0018 FFF7FEFF 		bl	xQueueGenericReceive
 666 001c 0346     		mov	r3, r0
 667 001e 002B     		cmp	r3, #0
 668 0020 1BD0     		beq	.L38
 440:..\Common\Minimal/IntQueue.c **** 		{
 441:..\Common\Minimal/IntQueue.c **** 			/* A value should only be obtained when the high priority task is
 442:..\Common\Minimal/IntQueue.c **** 			suspended. */
 443:..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyEmptyTask1 ) != eSuspended )
 669              		.loc 1 443 0
 670 0022 224B     		ldr	r3, .L43+4
 671 0024 1B68     		ldr	r3, [r3]
 672 0026 1846     		mov	r0, r3
 673 0028 FFF7FEFF 		bl	eTaskGetState
 674 002c 0346     		mov	r3, r0
 675 002e 032B     		cmp	r3, #3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 21


 676 0030 03D0     		beq	.L39
 444:..\Common\Minimal/IntQueue.c **** 			{
 445:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 677              		.loc 1 445 0
 678 0032 40F2BD10 		movw	r0, #445
 679 0036 FFF7FEFF 		bl	prvQueueAccessLogError
 680              	.L39:
 446:..\Common\Minimal/IntQueue.c **** 			}
 447:..\Common\Minimal/IntQueue.c **** 
 448:..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, intqLOW_PRIORITY_TASK );
 681              		.loc 1 448 0
 682 003a BB68     		ldr	r3, [r7, #8]
 683 003c 1846     		mov	r0, r3
 684 003e 0321     		movs	r1, #3
 685 0040 FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 449:..\Common\Minimal/IntQueue.c **** 
 450:..\Common\Minimal/IntQueue.c **** 			/* Wake the higher priority task again. */
 451:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyEmptyTask1 );
 686              		.loc 1 451 0
 687 0044 194B     		ldr	r3, .L43+4
 688 0046 1B68     		ldr	r3, [r3]
 689 0048 1846     		mov	r0, r3
 690 004a FFF7FEFF 		bl	vTaskResume
 452:..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops1++;
 691              		.loc 1 452 0
 692 004e 184B     		ldr	r3, .L43+8
 693 0050 1B68     		ldr	r3, [r3]
 694 0052 0133     		adds	r3, r3, #1
 695 0054 164A     		ldr	r2, .L43+8
 696 0056 1360     		str	r3, [r2]
 697 0058 25E0     		b	.L40
 698              	.L38:
 453:..\Common\Minimal/IntQueue.c **** 		}
 454:..\Common\Minimal/IntQueue.c **** 		else
 455:..\Common\Minimal/IntQueue.c **** 		{
 456:..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we send so we can preempt the higher
 457:..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the Tx value into the queue. */
 458:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 699              		.loc 1 458 0
 700 005a 0020     		movs	r0, #0
 701 005c 0421     		movs	r1, #4
 702 005e FFF7FEFF 		bl	vTaskPrioritySet
 459:..\Common\Minimal/IntQueue.c **** 
 460:..\Common\Minimal/IntQueue.c **** 			portENTER_CRITICAL();
 703              		.loc 1 460 0
 704 0062 FFF7FEFF 		bl	vPortEnterCritical
 461:..\Common\Minimal/IntQueue.c **** 			{
 462:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue++;
 705              		.loc 1 462 0
 706 0066 134B     		ldr	r3, .L43+12
 707 0068 1B68     		ldr	r3, [r3]
 708 006a 0133     		adds	r3, r3, #1
 709 006c 114A     		ldr	r2, .L43+12
 710 006e 1360     		str	r3, [r2]
 463:..\Common\Minimal/IntQueue.c **** 				uxValue = uxValueForNormallyEmptyQueue;
 711              		.loc 1 463 0
 712 0070 104B     		ldr	r3, .L43+12
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 22


 713 0072 1B68     		ldr	r3, [r3]
 714 0074 FB60     		str	r3, [r7, #12]
 464:..\Common\Minimal/IntQueue.c **** 			}
 465:..\Common\Minimal/IntQueue.c **** 			portEXIT_CRITICAL();
 715              		.loc 1 465 0
 716 0076 FFF7FEFF 		bl	vPortExitCritical
 466:..\Common\Minimal/IntQueue.c **** 
 467:..\Common\Minimal/IntQueue.c **** 			if( xQueueSend( xNormallyEmptyQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 717              		.loc 1 467 0
 718 007a 0B4B     		ldr	r3, .L43
 719 007c 1A68     		ldr	r2, [r3]
 720 007e 07F10C03 		add	r3, r7, #12
 721 0082 1046     		mov	r0, r2
 722 0084 1946     		mov	r1, r3
 723 0086 4FF0FF32 		mov	r2, #-1
 724 008a 0023     		movs	r3, #0
 725 008c FFF7FEFF 		bl	xQueueGenericSend
 726 0090 0346     		mov	r3, r0
 727 0092 012B     		cmp	r3, #1
 728 0094 03D0     		beq	.L41
 468:..\Common\Minimal/IntQueue.c **** 			{
 469:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 729              		.loc 1 469 0
 730 0096 40F2D510 		movw	r0, #469
 731 009a FFF7FEFF 		bl	prvQueueAccessLogError
 732              	.L41:
 470:..\Common\Minimal/IntQueue.c **** 			}
 471:..\Common\Minimal/IntQueue.c **** 
 472:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 733              		.loc 1 472 0
 734 009e 0020     		movs	r0, #0
 735 00a0 0021     		movs	r1, #0
 736 00a2 FFF7FEFF 		bl	vTaskPrioritySet
 737              	.L40:
 473:..\Common\Minimal/IntQueue.c **** 		}
 474:..\Common\Minimal/IntQueue.c **** 	}
 738              		.loc 1 474 0
 739 00a6 AFE7     		b	.L42
 740              	.L44:
 741              		.align	2
 742              	.L43:
 743 00a8 00000000 		.word	xNormallyEmptyQueue
 744 00ac 00000000 		.word	xHighPriorityNormallyEmptyTask1
 745 00b0 10000000 		.word	uxLowPriorityLoops1
 746 00b4 20000000 		.word	uxValueForNormallyEmptyQueue
 747              		.cfi_endproc
 748              	.LFE73:
 749              		.size	prvLowerPriorityNormallyEmptyTask, .-prvLowerPriorityNormallyEmptyTask
 750              		.section	.text.prv1stHigherPriorityNormallyFullTask,"ax",%progbits
 751              		.align	2
 752              		.thumb
 753              		.thumb_func
 754              		.type	prv1stHigherPriorityNormallyFullTask, %function
 755              	prv1stHigherPriorityNormallyFullTask:
 756              	.LFB74:
 475:..\Common\Minimal/IntQueue.c **** }
 476:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 23


 477:..\Common\Minimal/IntQueue.c **** 
 478:..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters )
 479:..\Common\Minimal/IntQueue.c **** {
 757              		.loc 1 479 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 24
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761 0000 80B5     		push	{r7, lr}
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 86B0     		sub	sp, sp, #24
 766              		.cfi_def_cfa_offset 32
 767 0004 00AF     		add	r7, sp, #0
 768              		.cfi_def_cfa_register 7
 769 0006 7860     		str	r0, [r7, #4]
 480:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux, uxInterrupts;
 481:..\Common\Minimal/IntQueue.c **** 
 482:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 483:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 484:..\Common\Minimal/IntQueue.c **** 
 485:..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 486:..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
 487:..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
 770              		.loc 1 487 0
 771 0008 0023     		movs	r3, #0
 772 000a 7B61     		str	r3, [r7, #20]
 773 000c 18E0     		b	.L46
 774              	.L47:
 488:..\Common\Minimal/IntQueue.c **** 	{
 489:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 775              		.loc 1 489 0 discriminator 3
 776 000e FFF7FEFF 		bl	vPortEnterCritical
 490:..\Common\Minimal/IntQueue.c **** 		{
 491:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 777              		.loc 1 491 0 discriminator 3
 778 0012 484B     		ldr	r3, .L57
 779 0014 1B68     		ldr	r3, [r3]
 780 0016 0133     		adds	r3, r3, #1
 781 0018 464A     		ldr	r2, .L57
 782 001a 1360     		str	r3, [r2]
 492:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 783              		.loc 1 492 0 discriminator 3
 784 001c 454B     		ldr	r3, .L57
 785 001e 1B68     		ldr	r3, [r3]
 786 0020 FB60     		str	r3, [r7, #12]
 493:..\Common\Minimal/IntQueue.c **** 		}
 494:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 787              		.loc 1 494 0 discriminator 3
 788 0022 FFF7FEFF 		bl	vPortExitCritical
 495:..\Common\Minimal/IntQueue.c **** 
 496:..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 789              		.loc 1 496 0 discriminator 3
 790 0026 444B     		ldr	r3, .L57+4
 791 0028 1A68     		ldr	r2, [r3]
 792 002a 07F10C03 		add	r3, r7, #12
 793 002e 1046     		mov	r0, r2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 24


 794 0030 1946     		mov	r1, r3
 795 0032 8C22     		movs	r2, #140
 796 0034 0023     		movs	r3, #0
 797 0036 FFF7FEFF 		bl	xQueueGenericSend
 487:..\Common\Minimal/IntQueue.c **** 	{
 798              		.loc 1 487 0 discriminator 3
 799 003a 7B69     		ldr	r3, [r7, #20]
 800 003c 0133     		adds	r3, r3, #1
 801 003e 7B61     		str	r3, [r7, #20]
 802              	.L46:
 487:..\Common\Minimal/IntQueue.c **** 	{
 803              		.loc 1 487 0 is_stmt 0 discriminator 1
 804 0040 7B69     		ldr	r3, [r7, #20]
 805 0042 042B     		cmp	r3, #4
 806 0044 E3D9     		bls	.L47
 807              	.L56:
 497:..\Common\Minimal/IntQueue.c **** 	}
 498:..\Common\Minimal/IntQueue.c **** 
 499:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 500:..\Common\Minimal/IntQueue.c **** 	{
 501:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 808              		.loc 1 501 0 is_stmt 1
 809 0046 FFF7FEFF 		bl	vPortEnterCritical
 502:..\Common\Minimal/IntQueue.c **** 		{
 503:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 810              		.loc 1 503 0
 811 004a 3A4B     		ldr	r3, .L57
 812 004c 1B68     		ldr	r3, [r3]
 813 004e 0133     		adds	r3, r3, #1
 814 0050 384A     		ldr	r2, .L57
 815 0052 1360     		str	r3, [r2]
 504:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 816              		.loc 1 504 0
 817 0054 374B     		ldr	r3, .L57
 818 0056 1B68     		ldr	r3, [r3]
 819 0058 FB60     		str	r3, [r7, #12]
 505:..\Common\Minimal/IntQueue.c **** 		}
 506:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 820              		.loc 1 506 0
 821 005a FFF7FEFF 		bl	vPortExitCritical
 507:..\Common\Minimal/IntQueue.c **** 
 508:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 822              		.loc 1 508 0
 823 005e 364B     		ldr	r3, .L57+4
 824 0060 1A68     		ldr	r2, [r3]
 825 0062 07F10C03 		add	r3, r7, #12
 826 0066 1046     		mov	r0, r2
 827 0068 1946     		mov	r1, r3
 828 006a 8C22     		movs	r2, #140
 829 006c 0023     		movs	r3, #0
 830 006e FFF7FEFF 		bl	xQueueGenericSend
 831 0072 0346     		mov	r3, r0
 832 0074 012B     		cmp	r3, #1
 833 0076 03D0     		beq	.L48
 509:..\Common\Minimal/IntQueue.c **** 		{
 510:..\Common\Minimal/IntQueue.c **** 			/* intqHIGH_PRIORITY_TASK2 is never suspended so we would not
 511:..\Common\Minimal/IntQueue.c **** 			expect it to ever time out. */
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 25


 512:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 834              		.loc 1 512 0
 835 0078 4FF40070 		mov	r0, #512
 836 007c FFF7FEFF 		bl	prvQueueAccessLogError
 837              	.L48:
 513:..\Common\Minimal/IntQueue.c **** 		}
 514:..\Common\Minimal/IntQueue.c **** 
 515:..\Common\Minimal/IntQueue.c **** 		/* Allow the other task running this code to run. */
 516:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 838              		.loc 1 516 0
 839 0080 2E4B     		ldr	r3, .L57+8
 840 0082 4FF08052 		mov	r2, #268435456
 841 0086 1A60     		str	r2, [r3]
 842              	@ 516 "..\Common\Minimal\IntQueue.c" 1
 843 0088 BFF34F8F 		dsb
 844              	@ 0 "" 2
 845              	@ 516 "..\Common\Minimal\IntQueue.c" 1
 846 008c BFF36F8F 		isb
 847              	@ 0 "" 2
 517:..\Common\Minimal/IntQueue.c **** 
 518:..\Common\Minimal/IntQueue.c **** 		/* Have all the expected values been sent to the queue? */
 519:..\Common\Minimal/IntQueue.c **** 		if( uxValueToTx > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 848              		.loc 1 519 0
 849              		.thumb
 850 0090 FB68     		ldr	r3, [r7, #12]
 851 0092 FA2B     		cmp	r3, #250
 852 0094 4DD9     		bls	.L49
 520:..\Common\Minimal/IntQueue.c **** 		{
 521:..\Common\Minimal/IntQueue.c **** 			/* Make sure the other high priority task completes its send of
 522:..\Common\Minimal/IntQueue.c **** 			any values below intqNUM_VALUE_TO_LOG. */
 523:..\Common\Minimal/IntQueue.c **** 			vTaskDelay( intqSHORT_DELAY );
 853              		.loc 1 523 0
 854 0096 8C20     		movs	r0, #140
 855 0098 FFF7FEFF 		bl	vTaskDelay
 524:..\Common\Minimal/IntQueue.c **** 
 525:..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( xHighPriorityNormallyFullTask2 );
 856              		.loc 1 525 0
 857 009c 284B     		ldr	r3, .L57+12
 858 009e 1B68     		ldr	r3, [r3]
 859 00a0 1846     		mov	r0, r3
 860 00a2 FFF7FEFF 		bl	vTaskSuspend
 526:..\Common\Minimal/IntQueue.c **** 
 527:..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended == pdTRUE )
 861              		.loc 1 527 0
 862 00a6 274B     		ldr	r3, .L57+16
 863 00a8 1B68     		ldr	r3, [r3]
 864 00aa 012B     		cmp	r3, #1
 865 00ac 03D1     		bne	.L50
 528:..\Common\Minimal/IntQueue.c **** 			{
 529:..\Common\Minimal/IntQueue.c **** 				/* We would have expected the other high priority task to have
 530:..\Common\Minimal/IntQueue.c **** 				set this back to false by now. */
 531:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 866              		.loc 1 531 0
 867 00ae 40F21320 		movw	r0, #531
 868 00b2 FFF7FEFF 		bl	prvQueueAccessLogError
 869              	.L50:
 532:..\Common\Minimal/IntQueue.c **** 			}
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 26


 533:..\Common\Minimal/IntQueue.c **** 
 534:..\Common\Minimal/IntQueue.c **** 			/* Set the suspended flag so an error is not logged if the other
 535:..\Common\Minimal/IntQueue.c **** 			task recognises a time out when it is unsuspended. */
 536:..\Common\Minimal/IntQueue.c **** 			xWasSuspended = pdTRUE;
 870              		.loc 1 536 0
 871 00b6 234B     		ldr	r3, .L57+16
 872 00b8 0122     		movs	r2, #1
 873 00ba 1A60     		str	r2, [r3]
 537:..\Common\Minimal/IntQueue.c **** 
 538:..\Common\Minimal/IntQueue.c **** 			/* Check interrupts are also sending. */
 539:..\Common\Minimal/IntQueue.c **** 			uxInterrupts = 0U;
 874              		.loc 1 539 0
 875 00bc 0023     		movs	r3, #0
 876 00be 3B61     		str	r3, [r7, #16]
 540:..\Common\Minimal/IntQueue.c **** 
 541:..\Common\Minimal/IntQueue.c **** 			/* Start at 1 as we expect position 0 to be unused. */
 542:..\Common\Minimal/IntQueue.c **** 			for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 877              		.loc 1 542 0
 878 00c0 0123     		movs	r3, #1
 879 00c2 7B61     		str	r3, [r7, #20]
 880 00c4 16E0     		b	.L51
 881              	.L54:
 543:..\Common\Minimal/IntQueue.c **** 			{
 544:..\Common\Minimal/IntQueue.c **** 				if( ucNormallyFullReceivedValues[ ux ] == 0 )
 882              		.loc 1 544 0
 883 00c6 204A     		ldr	r2, .L57+20
 884 00c8 7B69     		ldr	r3, [r7, #20]
 885 00ca 1344     		add	r3, r3, r2
 886 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 00ce 002B     		cmp	r3, #0
 888 00d0 04D1     		bne	.L52
 545:..\Common\Minimal/IntQueue.c **** 				{
 546:..\Common\Minimal/IntQueue.c **** 					/* A value was missing. */
 547:..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 889              		.loc 1 547 0
 890 00d2 40F22320 		movw	r0, #547
 891 00d6 FFF7FEFF 		bl	prvQueueAccessLogError
 892 00da 08E0     		b	.L53
 893              	.L52:
 548:..\Common\Minimal/IntQueue.c **** 				}
 549:..\Common\Minimal/IntQueue.c **** 				else if( ucNormallyFullReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 894              		.loc 1 549 0
 895 00dc 1A4A     		ldr	r2, .L57+20
 896 00de 7B69     		ldr	r3, [r7, #20]
 897 00e0 1344     		add	r3, r3, r2
 898 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 00e4 052B     		cmp	r3, #5
 900 00e6 02D1     		bne	.L53
 550:..\Common\Minimal/IntQueue.c **** 				{
 551:..\Common\Minimal/IntQueue.c **** 					uxInterrupts++;
 901              		.loc 1 551 0
 902 00e8 3B69     		ldr	r3, [r7, #16]
 903 00ea 0133     		adds	r3, r3, #1
 904 00ec 3B61     		str	r3, [r7, #16]
 905              	.L53:
 542:..\Common\Minimal/IntQueue.c **** 			{
 906              		.loc 1 542 0 discriminator 2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 27


 907 00ee 7B69     		ldr	r3, [r7, #20]
 908 00f0 0133     		adds	r3, r3, #1
 909 00f2 7B61     		str	r3, [r7, #20]
 910              	.L51:
 542:..\Common\Minimal/IntQueue.c **** 			{
 911              		.loc 1 542 0 is_stmt 0 discriminator 1
 912 00f4 7B69     		ldr	r3, [r7, #20]
 913 00f6 C72B     		cmp	r3, #199
 914 00f8 E5D9     		bls	.L54
 552:..\Common\Minimal/IntQueue.c **** 				}
 553:..\Common\Minimal/IntQueue.c **** 			}
 554:..\Common\Minimal/IntQueue.c **** 
 555:..\Common\Minimal/IntQueue.c **** 			if( uxInterrupts == 0 )
 915              		.loc 1 555 0 is_stmt 1
 916 00fa 3B69     		ldr	r3, [r7, #16]
 917 00fc 002B     		cmp	r3, #0
 918 00fe 03D1     		bne	.L55
 556:..\Common\Minimal/IntQueue.c **** 			{
 557:..\Common\Minimal/IntQueue.c **** 				/* No writes from interrupts were found.  Are interrupts
 558:..\Common\Minimal/IntQueue.c **** 				actually running? */
 559:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 919              		.loc 1 559 0
 920 0100 40F22F20 		movw	r0, #559
 921 0104 FFF7FEFF 		bl	prvQueueAccessLogError
 922              	.L55:
 560:..\Common\Minimal/IntQueue.c **** 			}
 561:..\Common\Minimal/IntQueue.c **** 
 562:..\Common\Minimal/IntQueue.c **** 			/* Reset the array ready for the next cycle. */
 563:..\Common\Minimal/IntQueue.c **** 			memset( ucNormallyFullReceivedValues, 0x00, sizeof( ucNormallyFullReceivedValues ) );
 923              		.loc 1 563 0
 924 0108 0F48     		ldr	r0, .L57+20
 925 010a 0021     		movs	r1, #0
 926 010c C822     		movs	r2, #200
 927 010e FFF7FEFF 		bl	memset
 564:..\Common\Minimal/IntQueue.c **** 
 565:..\Common\Minimal/IntQueue.c **** 			uxHighPriorityLoops2++;
 928              		.loc 1 565 0
 929 0112 0E4B     		ldr	r3, .L57+24
 930 0114 1B68     		ldr	r3, [r3]
 931 0116 0133     		adds	r3, r3, #1
 932 0118 0C4A     		ldr	r2, .L57+24
 933 011a 1360     		str	r3, [r2]
 566:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue = 0;
 934              		.loc 1 566 0
 935 011c 054B     		ldr	r3, .L57
 936 011e 0022     		movs	r2, #0
 937 0120 1A60     		str	r2, [r3]
 567:..\Common\Minimal/IntQueue.c **** 
 568:..\Common\Minimal/IntQueue.c **** 			/* Suspend ourselves, allowing the lower priority task to
 569:..\Common\Minimal/IntQueue.c **** 			actually receive something from the queue.  Until now it
 570:..\Common\Minimal/IntQueue.c **** 			will have been prevented from doing so by the higher
 571:..\Common\Minimal/IntQueue.c **** 			priority tasks.  The lower priority task will resume us
 572:..\Common\Minimal/IntQueue.c **** 			if it receives something.  We will then resume the other
 573:..\Common\Minimal/IntQueue.c **** 			higher priority task. */
 574:..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( NULL );
 938              		.loc 1 574 0
 939 0122 0020     		movs	r0, #0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 28


 940 0124 FFF7FEFF 		bl	vTaskSuspend
 575:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask2 );
 941              		.loc 1 575 0
 942 0128 054B     		ldr	r3, .L57+12
 943 012a 1B68     		ldr	r3, [r3]
 944 012c 1846     		mov	r0, r3
 945 012e FFF7FEFF 		bl	vTaskResume
 946              	.L49:
 576:..\Common\Minimal/IntQueue.c **** 		}
 577:..\Common\Minimal/IntQueue.c **** 	}
 947              		.loc 1 577 0
 948 0132 88E7     		b	.L56
 949              	.L58:
 950              		.align	2
 951              	.L57:
 952 0134 24000000 		.word	uxValueForNormallyFullQueue
 953 0138 04000000 		.word	xNormallyFullQueue
 954 013c 04ED00E0 		.word	-536810236
 955 0140 00000000 		.word	xHighPriorityNormallyFullTask2
 956 0144 1C000000 		.word	xWasSuspended
 957 0148 F0000000 		.word	ucNormallyFullReceivedValues
 958 014c 0C000000 		.word	uxHighPriorityLoops2
 959              		.cfi_endproc
 960              	.LFE74:
 961              		.size	prv1stHigherPriorityNormallyFullTask, .-prv1stHigherPriorityNormallyFullTask
 962              		.section	.text.prv2ndHigherPriorityNormallyFullTask,"ax",%progbits
 963              		.align	2
 964              		.thumb
 965              		.thumb_func
 966              		.type	prv2ndHigherPriorityNormallyFullTask, %function
 967              	prv2ndHigherPriorityNormallyFullTask:
 968              	.LFB75:
 578:..\Common\Minimal/IntQueue.c **** }
 579:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 580:..\Common\Minimal/IntQueue.c **** 
 581:..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters )
 582:..\Common\Minimal/IntQueue.c **** {
 969              		.loc 1 582 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 16
 972              		@ frame_needed = 1, uses_anonymous_args = 0
 973 0000 80B5     		push	{r7, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 84B0     		sub	sp, sp, #16
 978              		.cfi_def_cfa_offset 24
 979 0004 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 981 0006 7860     		str	r0, [r7, #4]
 583:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux;
 584:..\Common\Minimal/IntQueue.c **** 
 585:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 586:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 587:..\Common\Minimal/IntQueue.c **** 
 588:..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 589:..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 29


 590:..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
 982              		.loc 1 590 0
 983 0008 0023     		movs	r3, #0
 984 000a FB60     		str	r3, [r7, #12]
 985 000c 18E0     		b	.L60
 986              	.L61:
 591:..\Common\Minimal/IntQueue.c **** 	{
 592:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 987              		.loc 1 592 0 discriminator 3
 988 000e FFF7FEFF 		bl	vPortEnterCritical
 593:..\Common\Minimal/IntQueue.c **** 		{
 594:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 989              		.loc 1 594 0 discriminator 3
 990 0012 234B     		ldr	r3, .L64
 991 0014 1B68     		ldr	r3, [r3]
 992 0016 0133     		adds	r3, r3, #1
 993 0018 214A     		ldr	r2, .L64
 994 001a 1360     		str	r3, [r2]
 595:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 995              		.loc 1 595 0 discriminator 3
 996 001c 204B     		ldr	r3, .L64
 997 001e 1B68     		ldr	r3, [r3]
 998 0020 BB60     		str	r3, [r7, #8]
 596:..\Common\Minimal/IntQueue.c **** 		}
 597:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 999              		.loc 1 597 0 discriminator 3
 1000 0022 FFF7FEFF 		bl	vPortExitCritical
 598:..\Common\Minimal/IntQueue.c **** 
 599:..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 1001              		.loc 1 599 0 discriminator 3
 1002 0026 1F4B     		ldr	r3, .L64+4
 1003 0028 1A68     		ldr	r2, [r3]
 1004 002a 07F10803 		add	r3, r7, #8
 1005 002e 1046     		mov	r0, r2
 1006 0030 1946     		mov	r1, r3
 1007 0032 8C22     		movs	r2, #140
 1008 0034 0023     		movs	r3, #0
 1009 0036 FFF7FEFF 		bl	xQueueGenericSend
 590:..\Common\Minimal/IntQueue.c **** 	{
 1010              		.loc 1 590 0 discriminator 3
 1011 003a FB68     		ldr	r3, [r7, #12]
 1012 003c 0133     		adds	r3, r3, #1
 1013 003e FB60     		str	r3, [r7, #12]
 1014              	.L60:
 590:..\Common\Minimal/IntQueue.c **** 	{
 1015              		.loc 1 590 0 is_stmt 0 discriminator 1
 1016 0040 FB68     		ldr	r3, [r7, #12]
 1017 0042 042B     		cmp	r3, #4
 1018 0044 E3D9     		bls	.L61
 1019              	.L63:
 600:..\Common\Minimal/IntQueue.c **** 	}
 601:..\Common\Minimal/IntQueue.c **** 
 602:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 603:..\Common\Minimal/IntQueue.c **** 	{
 604:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 1020              		.loc 1 604 0 is_stmt 1
 1021 0046 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 30


 605:..\Common\Minimal/IntQueue.c **** 		{
 606:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 1022              		.loc 1 606 0
 1023 004a 154B     		ldr	r3, .L64
 1024 004c 1B68     		ldr	r3, [r3]
 1025 004e 0133     		adds	r3, r3, #1
 1026 0050 134A     		ldr	r2, .L64
 1027 0052 1360     		str	r3, [r2]
 607:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 1028              		.loc 1 607 0
 1029 0054 124B     		ldr	r3, .L64
 1030 0056 1B68     		ldr	r3, [r3]
 1031 0058 BB60     		str	r3, [r7, #8]
 608:..\Common\Minimal/IntQueue.c **** 		}
 609:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 1032              		.loc 1 609 0
 1033 005a FFF7FEFF 		bl	vPortExitCritical
 610:..\Common\Minimal/IntQueue.c **** 
 611:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 1034              		.loc 1 611 0
 1035 005e 114B     		ldr	r3, .L64+4
 1036 0060 1A68     		ldr	r2, [r3]
 1037 0062 07F10803 		add	r3, r7, #8
 1038 0066 1046     		mov	r0, r2
 1039 0068 1946     		mov	r1, r3
 1040 006a 8C22     		movs	r2, #140
 1041 006c 0023     		movs	r3, #0
 1042 006e FFF7FEFF 		bl	xQueueGenericSend
 1043 0072 0346     		mov	r3, r0
 1044 0074 012B     		cmp	r3, #1
 1045 0076 07D0     		beq	.L62
 612:..\Common\Minimal/IntQueue.c **** 		{
 613:..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended != pdTRUE )
 1046              		.loc 1 613 0
 1047 0078 0B4B     		ldr	r3, .L64+8
 1048 007a 1B68     		ldr	r3, [r3]
 1049 007c 012B     		cmp	r3, #1
 1050 007e 03D0     		beq	.L62
 614:..\Common\Minimal/IntQueue.c **** 			{
 615:..\Common\Minimal/IntQueue.c **** 				/* It is ok to time out if the task has been suspended. */
 616:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1051              		.loc 1 616 0
 1052 0080 4FF41A70 		mov	r0, #616
 1053 0084 FFF7FEFF 		bl	prvQueueAccessLogError
 1054              	.L62:
 617:..\Common\Minimal/IntQueue.c **** 			}
 618:..\Common\Minimal/IntQueue.c **** 		}
 619:..\Common\Minimal/IntQueue.c **** 
 620:..\Common\Minimal/IntQueue.c **** 		xWasSuspended = pdFALSE;
 1055              		.loc 1 620 0
 1056 0088 074B     		ldr	r3, .L64+8
 1057 008a 0022     		movs	r2, #0
 1058 008c 1A60     		str	r2, [r3]
 621:..\Common\Minimal/IntQueue.c **** 
 622:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 1059              		.loc 1 622 0
 1060 008e 074B     		ldr	r3, .L64+12
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 31


 1061 0090 4FF08052 		mov	r2, #268435456
 1062 0094 1A60     		str	r2, [r3]
 1063              	@ 622 "..\Common\Minimal\IntQueue.c" 1
 1064 0096 BFF34F8F 		dsb
 1065              	@ 0 "" 2
 1066              	@ 622 "..\Common\Minimal\IntQueue.c" 1
 1067 009a BFF36F8F 		isb
 1068              	@ 0 "" 2
 623:..\Common\Minimal/IntQueue.c **** 	}
 1069              		.loc 1 623 0
 1070              		.thumb
 1071 009e D2E7     		b	.L63
 1072              	.L65:
 1073              		.align	2
 1074              	.L64:
 1075 00a0 24000000 		.word	uxValueForNormallyFullQueue
 1076 00a4 04000000 		.word	xNormallyFullQueue
 1077 00a8 1C000000 		.word	xWasSuspended
 1078 00ac 04ED00E0 		.word	-536810236
 1079              		.cfi_endproc
 1080              	.LFE75:
 1081              		.size	prv2ndHigherPriorityNormallyFullTask, .-prv2ndHigherPriorityNormallyFullTask
 1082              		.section	.text.prvLowerPriorityNormallyFullTask,"ax",%progbits
 1083              		.align	2
 1084              		.thumb
 1085              		.thumb_func
 1086              		.type	prvLowerPriorityNormallyFullTask, %function
 1087              	prvLowerPriorityNormallyFullTask:
 1088              	.LFB76:
 624:..\Common\Minimal/IntQueue.c **** }
 625:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 626:..\Common\Minimal/IntQueue.c **** 
 627:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters )
 628:..\Common\Minimal/IntQueue.c **** {
 1089              		.loc 1 628 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 16
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
 1093 0000 80B5     		push	{r7, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 7, -8
 1096              		.cfi_offset 14, -4
 1097 0002 84B0     		sub	sp, sp, #16
 1098              		.cfi_def_cfa_offset 24
 1099 0004 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 1101 0006 7860     		str	r0, [r7, #4]
 629:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxTxed = 9999;
 1102              		.loc 1 629 0
 1103 0008 42F20F73 		movw	r3, #9999
 1104 000c BB60     		str	r3, [r7, #8]
 1105              	.L72:
 630:..\Common\Minimal/IntQueue.c **** 
 631:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 632:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 633:..\Common\Minimal/IntQueue.c **** 
 634:..\Common\Minimal/IntQueue.c **** 	for( ;; )
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 32


 635:..\Common\Minimal/IntQueue.c **** 	{
 636:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxTxed, intqONE_TICK_DELAY ) != errQUEUE_FULL )
 1106              		.loc 1 636 0
 1107 000e 224B     		ldr	r3, .L73
 1108 0010 1A68     		ldr	r2, [r3]
 1109 0012 07F10803 		add	r3, r7, #8
 1110 0016 1046     		mov	r0, r2
 1111 0018 1946     		mov	r1, r3
 1112 001a 0122     		movs	r2, #1
 1113 001c 0023     		movs	r3, #0
 1114 001e FFF7FEFF 		bl	xQueueGenericSend
 1115 0022 0346     		mov	r3, r0
 1116 0024 002B     		cmp	r3, #0
 1117 0026 16D0     		beq	.L67
 637:..\Common\Minimal/IntQueue.c **** 		{
 638:..\Common\Minimal/IntQueue.c **** 			/* Should only succeed when the higher priority task is suspended */
 639:..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyFullTask1 ) != eSuspended )
 1118              		.loc 1 639 0
 1119 0028 1C4B     		ldr	r3, .L73+4
 1120 002a 1B68     		ldr	r3, [r3]
 1121 002c 1846     		mov	r0, r3
 1122 002e FFF7FEFF 		bl	eTaskGetState
 1123 0032 0346     		mov	r3, r0
 1124 0034 032B     		cmp	r3, #3
 1125 0036 03D0     		beq	.L68
 640:..\Common\Minimal/IntQueue.c **** 			{
 641:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1126              		.loc 1 641 0
 1127 0038 40F28120 		movw	r0, #641
 1128 003c FFF7FEFF 		bl	prvQueueAccessLogError
 1129              	.L68:
 642:..\Common\Minimal/IntQueue.c **** 			}
 643:..\Common\Minimal/IntQueue.c **** 
 644:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask1 );
 1130              		.loc 1 644 0
 1131 0040 164B     		ldr	r3, .L73+4
 1132 0042 1B68     		ldr	r3, [r3]
 1133 0044 1846     		mov	r0, r3
 1134 0046 FFF7FEFF 		bl	vTaskResume
 645:..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops2++;
 1135              		.loc 1 645 0
 1136 004a 154B     		ldr	r3, .L73+8
 1137 004c 1B68     		ldr	r3, [r3]
 1138 004e 0133     		adds	r3, r3, #1
 1139 0050 134A     		ldr	r2, .L73+8
 1140 0052 1360     		str	r3, [r2]
 1141 0054 1FE0     		b	.L69
 1142              	.L67:
 646:..\Common\Minimal/IntQueue.c **** 		}
 647:..\Common\Minimal/IntQueue.c **** 		else
 648:..\Common\Minimal/IntQueue.c **** 		{
 649:..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we receive so we can preempt the higher
 650:..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the value from the queue. */
 651:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 1143              		.loc 1 651 0
 1144 0056 0020     		movs	r0, #0
 1145 0058 0421     		movs	r1, #4
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 33


 1146 005a FFF7FEFF 		bl	vTaskPrioritySet
 652:..\Common\Minimal/IntQueue.c **** 
 653:..\Common\Minimal/IntQueue.c **** 			if( xQueueReceive( xNormallyFullQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 1147              		.loc 1 653 0
 1148 005e 0E4B     		ldr	r3, .L73
 1149 0060 1A68     		ldr	r2, [r3]
 1150 0062 07F10C03 		add	r3, r7, #12
 1151 0066 1046     		mov	r0, r2
 1152 0068 1946     		mov	r1, r3
 1153 006a 4FF0FF32 		mov	r2, #-1
 1154 006e 0023     		movs	r3, #0
 1155 0070 FFF7FEFF 		bl	xQueueGenericReceive
 1156 0074 0346     		mov	r3, r0
 1157 0076 012B     		cmp	r3, #1
 1158 0078 04D0     		beq	.L70
 654:..\Common\Minimal/IntQueue.c **** 			{
 655:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1159              		.loc 1 655 0
 1160 007a 40F28F20 		movw	r0, #655
 1161 007e FFF7FEFF 		bl	prvQueueAccessLogError
 1162 0082 04E0     		b	.L71
 1163              	.L70:
 656:..\Common\Minimal/IntQueue.c **** 			}
 657:..\Common\Minimal/IntQueue.c **** 			else
 658:..\Common\Minimal/IntQueue.c **** 			{
 659:..\Common\Minimal/IntQueue.c **** 				prvRecordValue_NormallyFull( uxValue, intqLOW_PRIORITY_TASK );
 1164              		.loc 1 659 0
 1165 0084 FB68     		ldr	r3, [r7, #12]
 1166 0086 1846     		mov	r0, r3
 1167 0088 0321     		movs	r1, #3
 1168 008a FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1169              	.L71:
 660:..\Common\Minimal/IntQueue.c **** 			}
 661:..\Common\Minimal/IntQueue.c **** 
 662:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 1170              		.loc 1 662 0
 1171 008e 0020     		movs	r0, #0
 1172 0090 0021     		movs	r1, #0
 1173 0092 FFF7FEFF 		bl	vTaskPrioritySet
 1174              	.L69:
 663:..\Common\Minimal/IntQueue.c **** 		}
 664:..\Common\Minimal/IntQueue.c **** 	}
 1175              		.loc 1 664 0
 1176 0096 BAE7     		b	.L72
 1177              	.L74:
 1178              		.align	2
 1179              	.L73:
 1180 0098 04000000 		.word	xNormallyFullQueue
 1181 009c 00000000 		.word	xHighPriorityNormallyFullTask1
 1182 00a0 14000000 		.word	uxLowPriorityLoops2
 1183              		.cfi_endproc
 1184              	.LFE76:
 1185              		.size	prvLowerPriorityNormallyFullTask, .-prvLowerPriorityNormallyFullTask
 1186              		.section	.text.xFirstTimerHandler,"ax",%progbits
 1187              		.align	2
 1188              		.global	xFirstTimerHandler
 1189              		.thumb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 34


 1190              		.thumb_func
 1191              		.type	xFirstTimerHandler, %function
 1192              	xFirstTimerHandler:
 1193              	.LFB77:
 665:..\Common\Minimal/IntQueue.c **** }
 666:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 667:..\Common\Minimal/IntQueue.c **** 
 668:..\Common\Minimal/IntQueue.c **** BaseType_t xFirstTimerHandler( void )
 669:..\Common\Minimal/IntQueue.c **** {
 1194              		.loc 1 669 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 56
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 8EB0     		sub	sp, sp, #56
 1203              		.cfi_def_cfa_offset 64
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 670:..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 1206              		.loc 1 670 0
 1207 0006 0023     		movs	r3, #0
 1208 0008 7B60     		str	r3, [r7, #4]
 671:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 672:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 673:..\Common\Minimal/IntQueue.c **** 
 674:..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 675:..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 676:..\Common\Minimal/IntQueue.c **** 
 677:..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1209              		.loc 1 677 0
 1210 000a 6C4B     		ldr	r3, .L90
 1211 000c 1B68     		ldr	r3, [r3]
 1212 000e 0133     		adds	r3, r3, #1
 1213 0010 6A4A     		ldr	r2, .L90
 1214 0012 1360     		str	r3, [r2]
 678:..\Common\Minimal/IntQueue.c **** 
 679:..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1215              		.loc 1 679 0
 1216 0014 694B     		ldr	r3, .L90
 1217 0016 1B68     		ldr	r3, [r3]
 1218 0018 03F00103 		and	r3, r3, #1
 1219 001c 002B     		cmp	r3, #0
 1220 001e 00F09480 		beq	.L76
 680:..\Common\Minimal/IntQueue.c **** 	{
 681:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1221              		.loc 1 681 0
 1222 0022 674B     		ldr	r3, .L90+4
 1223 0024 1B68     		ldr	r3, [r3]
 1224 0026 1846     		mov	r0, r3
 1225 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1226 002c 0346     		mov	r3, r0
 1227 002e 012B     		cmp	r3, #1
 1228 0030 28D0     		beq	.L77
 1229              	.LBB42:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 35


 1230              	.LBB43:
 1231              	.LBB44:
 1232              		.file 2 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     All rights reserved
   4:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   5:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   7:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   9:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  13:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  14:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  19:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  20:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  25:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  26:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  27:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  32:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  37:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  38:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  39:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  43:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     participating in the support forum.
  46:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  47:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  52:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 36


  55:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  56:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  63:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  67:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:..\Source\portable\GCC\ARM_CM3/portmacro.h **** */
  69:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  70:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  71:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  74:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  76:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  77:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  81:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  84:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  87:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  88:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  89:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  90:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  93:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  94:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  97:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 101:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
 105:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 37


 112:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 114:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 120:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
 123:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
 126:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 131:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 132:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
 139:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 148:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 150:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:..\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:..\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 157:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 158:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 162:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 164:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 38


 169:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 174:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 178:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 179:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 180:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 184:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 185:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 201:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 202:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 204:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 210:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 213:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:..\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 215:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 216:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 219:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 221:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 223:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 224:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 225:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 39


 226:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 227:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 228:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 229:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 230:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 231:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 233:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 235:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 236:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 237:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 238:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 239:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 242:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 243:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 245:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 246:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 247:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 248:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 249:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 250:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 251:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 252:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1233              		.loc 2 253 0 discriminator 1
 1234              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1235 0032 EFF31182 			mrs r2, basepri											
 1236 0036 4FF0A003 		mov r3, #160												
 1237 003a 83F31188 		msr basepri, r3											
 1238 003e BFF36F8F 		isb														
 1239 0042 BFF34F8F 		dsb														
 1240              	
 1241              	@ 0 "" 2
 1242              		.thumb
 1243 0046 BA62     		str	r2, [r7, #40]
 1244 0048 7B62     		str	r3, [r7, #36]
 254:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 255:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 259:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 260:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 262:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 263:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1245              		.loc 2 265 0 discriminator 1
 1246 004a BB6A     		ldr	r3, [r7, #40]
 1247              	.LBE44:
 1248              	.LBE43:
 1249              		.loc 1 681 0 discriminator 1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 40


 1250 004c 7B63     		str	r3, [r7, #52]
 1251 004e 5D4B     		ldr	r3, .L90+8
 1252 0050 1B68     		ldr	r3, [r3]
 1253 0052 0133     		adds	r3, r3, #1
 1254 0054 5B4A     		ldr	r2, .L90+8
 1255 0056 1360     		str	r3, [r2]
 1256 0058 594B     		ldr	r3, .L90+4
 1257 005a 1A68     		ldr	r2, [r3]
 1258 005c 3B1D     		adds	r3, r7, #4
 1259 005e 1046     		mov	r0, r2
 1260 0060 5849     		ldr	r1, .L90+8
 1261 0062 1A46     		mov	r2, r3
 1262 0064 0023     		movs	r3, #0
 1263 0066 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1264 006a 0346     		mov	r3, r0
 1265 006c 012B     		cmp	r3, #1
 1266 006e 04D0     		beq	.L79
 1267              		.loc 1 681 0 is_stmt 0 discriminator 2
 1268 0070 544B     		ldr	r3, .L90+8
 1269 0072 1B68     		ldr	r3, [r3]
 1270 0074 013B     		subs	r3, r3, #1
 1271 0076 534A     		ldr	r2, .L90+8
 1272 0078 1360     		str	r3, [r2]
 1273              	.L79:
 1274 007a 7B6B     		ldr	r3, [r7, #52]
 1275 007c 3B62     		str	r3, [r7, #32]
 1276              	.LBB45:
 1277              	.LBB46:
 266:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 267:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 268:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 269:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 270:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 271:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1278              		.loc 2 271 0 is_stmt 1 discriminator 4
 1279 007e 3B6A     		ldr	r3, [r7, #32]
 1280              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1281 0080 83F31188 			msr basepri, r3	
 1282              	@ 0 "" 2
 1283              		.thumb
 1284              	.L77:
 1285              	.LBE46:
 1286              	.LBE45:
 1287              	.LBE42:
 682:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1288              		.loc 1 682 0
 1289 0084 4E4B     		ldr	r3, .L90+4
 1290 0086 1B68     		ldr	r3, [r3]
 1291 0088 1846     		mov	r0, r3
 1292 008a FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1293 008e 0346     		mov	r3, r0
 1294 0090 012B     		cmp	r3, #1
 1295 0092 28D0     		beq	.L80
 1296              	.LBB47:
 1297              	.LBB48:
 1298              	.LBB49:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 41


 1299              		.loc 2 253 0 discriminator 1
 1300              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1301 0094 EFF31182 			mrs r2, basepri											
 1302 0098 4FF0A003 		mov r3, #160												
 1303 009c 83F31188 		msr basepri, r3											
 1304 00a0 BFF36F8F 		isb														
 1305 00a4 BFF34F8F 		dsb														
 1306              	
 1307              	@ 0 "" 2
 1308              		.thumb
 1309 00a8 FA61     		str	r2, [r7, #28]
 1310 00aa BB61     		str	r3, [r7, #24]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1311              		.loc 2 265 0 discriminator 1
 1312 00ac FB69     		ldr	r3, [r7, #28]
 1313              	.LBE49:
 1314              	.LBE48:
 1315              		.loc 1 682 0 discriminator 1
 1316 00ae 3B63     		str	r3, [r7, #48]
 1317 00b0 444B     		ldr	r3, .L90+8
 1318 00b2 1B68     		ldr	r3, [r3]
 1319 00b4 0133     		adds	r3, r3, #1
 1320 00b6 434A     		ldr	r2, .L90+8
 1321 00b8 1360     		str	r3, [r2]
 1322 00ba 414B     		ldr	r3, .L90+4
 1323 00bc 1A68     		ldr	r2, [r3]
 1324 00be 3B1D     		adds	r3, r7, #4
 1325 00c0 1046     		mov	r0, r2
 1326 00c2 4049     		ldr	r1, .L90+8
 1327 00c4 1A46     		mov	r2, r3
 1328 00c6 0023     		movs	r3, #0
 1329 00c8 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1330 00cc 0346     		mov	r3, r0
 1331 00ce 012B     		cmp	r3, #1
 1332 00d0 04D0     		beq	.L82
 1333              		.loc 1 682 0 is_stmt 0 discriminator 2
 1334 00d2 3C4B     		ldr	r3, .L90+8
 1335 00d4 1B68     		ldr	r3, [r3]
 1336 00d6 013B     		subs	r3, r3, #1
 1337 00d8 3A4A     		ldr	r2, .L90+8
 1338 00da 1360     		str	r3, [r2]
 1339              	.L82:
 1340 00dc 3B6B     		ldr	r3, [r7, #48]
 1341 00de 7B61     		str	r3, [r7, #20]
 1342              	.LBB50:
 1343              	.LBB51:
 1344              		.loc 2 271 0 is_stmt 1 discriminator 4
 1345 00e0 7B69     		ldr	r3, [r7, #20]
 1346              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1347 00e2 83F31188 			msr basepri, r3	
 1348              	@ 0 "" 2
 1349              		.thumb
 1350              	.L80:
 1351              	.LBE51:
 1352              	.LBE50:
 1353              	.LBE47:
 683:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 42


 1354              		.loc 1 683 0
 1355 00e6 364B     		ldr	r3, .L90+4
 1356 00e8 1B68     		ldr	r3, [r3]
 1357 00ea 1846     		mov	r0, r3
 1358 00ec FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1359 00f0 0346     		mov	r3, r0
 1360 00f2 012B     		cmp	r3, #1
 1361 00f4 5CD0     		beq	.L86
 1362              	.LBB52:
 1363              	.LBB53:
 1364              	.LBB54:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1365              		.loc 2 253 0 discriminator 1
 1366              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1367 00f6 EFF31182 			mrs r2, basepri											
 1368 00fa 4FF0A003 		mov r3, #160												
 1369 00fe 83F31188 		msr basepri, r3											
 1370 0102 BFF36F8F 		isb														
 1371 0106 BFF34F8F 		dsb														
 1372              	
 1373              	@ 0 "" 2
 1374              		.thumb
 1375 010a 3A61     		str	r2, [r7, #16]
 1376 010c FB60     		str	r3, [r7, #12]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1377              		.loc 2 265 0 discriminator 1
 1378 010e 3B69     		ldr	r3, [r7, #16]
 1379              	.LBE54:
 1380              	.LBE53:
 1381              		.loc 1 683 0 discriminator 1
 1382 0110 FB62     		str	r3, [r7, #44]
 1383 0112 2C4B     		ldr	r3, .L90+8
 1384 0114 1B68     		ldr	r3, [r3]
 1385 0116 0133     		adds	r3, r3, #1
 1386 0118 2A4A     		ldr	r2, .L90+8
 1387 011a 1360     		str	r3, [r2]
 1388 011c 284B     		ldr	r3, .L90+4
 1389 011e 1A68     		ldr	r2, [r3]
 1390 0120 3B1D     		adds	r3, r7, #4
 1391 0122 1046     		mov	r0, r2
 1392 0124 2749     		ldr	r1, .L90+8
 1393 0126 1A46     		mov	r2, r3
 1394 0128 0023     		movs	r3, #0
 1395 012a FFF7FEFF 		bl	xQueueGenericSendFromISR
 1396 012e 0346     		mov	r3, r0
 1397 0130 012B     		cmp	r3, #1
 1398 0132 04D0     		beq	.L85
 1399              		.loc 1 683 0 is_stmt 0 discriminator 2
 1400 0134 234B     		ldr	r3, .L90+8
 1401 0136 1B68     		ldr	r3, [r3]
 1402 0138 013B     		subs	r3, r3, #1
 1403 013a 224A     		ldr	r2, .L90+8
 1404 013c 1360     		str	r3, [r2]
 1405              	.L85:
 1406 013e FB6A     		ldr	r3, [r7, #44]
 1407 0140 BB60     		str	r3, [r7, #8]
 1408              	.LBB55:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 43


 1409              	.LBB56:
 1410              		.loc 2 271 0 is_stmt 1 discriminator 4
 1411 0142 BB68     		ldr	r3, [r7, #8]
 1412              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1413 0144 83F31188 			msr basepri, r3	
 1414              	@ 0 "" 2
 1415              		.thumb
 1416 0148 32E0     		b	.L86
 1417              	.L76:
 1418              	.LBE56:
 1419              	.LBE55:
 1420              	.LBE52:
 684:..\Common\Minimal/IntQueue.c **** 	}
 685:..\Common\Minimal/IntQueue.c **** 	else
 686:..\Common\Minimal/IntQueue.c **** 	{
 687:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1421              		.loc 1 687 0
 1422 014a 1F4B     		ldr	r3, .L90+12
 1423 014c 1968     		ldr	r1, [r3]
 1424 014e 3A46     		mov	r2, r7
 1425 0150 3B1D     		adds	r3, r7, #4
 1426 0152 0846     		mov	r0, r1
 1427 0154 1146     		mov	r1, r2
 1428 0156 1A46     		mov	r2, r3
 1429 0158 FFF7FEFF 		bl	xQueueReceiveFromISR
 1430 015c 0346     		mov	r3, r0
 1431 015e 012B     		cmp	r3, #1
 1432 0160 04D1     		bne	.L87
 1433              		.loc 1 687 0 is_stmt 0 discriminator 1
 1434 0162 3B68     		ldr	r3, [r7]
 1435 0164 1846     		mov	r0, r3
 1436 0166 0521     		movs	r1, #5
 1437 0168 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1438              	.L87:
 688:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1439              		.loc 1 688 0 is_stmt 1
 1440 016c 164B     		ldr	r3, .L90+12
 1441 016e 1968     		ldr	r1, [r3]
 1442 0170 3A46     		mov	r2, r7
 1443 0172 3B1D     		adds	r3, r7, #4
 1444 0174 0846     		mov	r0, r1
 1445 0176 1146     		mov	r1, r2
 1446 0178 1A46     		mov	r2, r3
 1447 017a FFF7FEFF 		bl	xQueueReceiveFromISR
 1448 017e 0346     		mov	r3, r0
 1449 0180 012B     		cmp	r3, #1
 1450 0182 04D1     		bne	.L88
 1451              		.loc 1 688 0 is_stmt 0 discriminator 1
 1452 0184 3B68     		ldr	r3, [r7]
 1453 0186 1846     		mov	r0, r3
 1454 0188 0521     		movs	r1, #5
 1455 018a FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1456              	.L88:
 689:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1457              		.loc 1 689 0 is_stmt 1
 1458 018e 0E4B     		ldr	r3, .L90+12
 1459 0190 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 44


 1460 0192 3A46     		mov	r2, r7
 1461 0194 3B1D     		adds	r3, r7, #4
 1462 0196 0846     		mov	r0, r1
 1463 0198 1146     		mov	r1, r2
 1464 019a 1A46     		mov	r2, r3
 1465 019c FFF7FEFF 		bl	xQueueReceiveFromISR
 1466 01a0 0346     		mov	r3, r0
 1467 01a2 012B     		cmp	r3, #1
 1468 01a4 04D1     		bne	.L86
 1469              		.loc 1 689 0 is_stmt 0 discriminator 1
 1470 01a6 3B68     		ldr	r3, [r7]
 1471 01a8 1846     		mov	r0, r3
 1472 01aa 0521     		movs	r1, #5
 1473 01ac FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1474              	.L86:
 690:..\Common\Minimal/IntQueue.c **** 	}
 691:..\Common\Minimal/IntQueue.c **** 
 692:..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1475              		.loc 1 692 0 is_stmt 1
 1476 01b0 7B68     		ldr	r3, [r7, #4]
 693:..\Common\Minimal/IntQueue.c **** }
 1477              		.loc 1 693 0
 1478 01b2 1846     		mov	r0, r3
 1479 01b4 3837     		adds	r7, r7, #56
 1480              		.cfi_def_cfa_offset 8
 1481 01b6 BD46     		mov	sp, r7
 1482              		.cfi_def_cfa_register 13
 1483              		@ sp needed
 1484 01b8 80BD     		pop	{r7, pc}
 1485              	.L91:
 1486 01ba 00BF     		.align	2
 1487              	.L90:
 1488 01bc B8010000 		.word	uxNextOperation.6740
 1489 01c0 00000000 		.word	xNormallyEmptyQueue
 1490 01c4 20000000 		.word	uxValueForNormallyEmptyQueue
 1491 01c8 04000000 		.word	xNormallyFullQueue
 1492              		.cfi_endproc
 1493              	.LFE77:
 1494              		.size	xFirstTimerHandler, .-xFirstTimerHandler
 1495              		.section	.text.xSecondTimerHandler,"ax",%progbits
 1496              		.align	2
 1497              		.global	xSecondTimerHandler
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	xSecondTimerHandler, %function
 1501              	xSecondTimerHandler:
 1502              	.LFB78:
 694:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 695:..\Common\Minimal/IntQueue.c **** 
 696:..\Common\Minimal/IntQueue.c **** BaseType_t xSecondTimerHandler( void )
 697:..\Common\Minimal/IntQueue.c **** {
 1503              		.loc 1 697 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 88
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 45


 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 96B0     		sub	sp, sp, #88
 1512              		.cfi_def_cfa_offset 96
 1513 0004 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
 698:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 699:..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 1515              		.loc 1 699 0
 1516 0006 0023     		movs	r3, #0
 1517 0008 3B60     		str	r3, [r7]
 700:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 701:..\Common\Minimal/IntQueue.c **** 
 702:..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 703:..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 704:..\Common\Minimal/IntQueue.c **** 
 705:..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1518              		.loc 1 705 0
 1519 000a A24B     		ldr	r3, .L115
 1520 000c 1B68     		ldr	r3, [r3]
 1521 000e 0133     		adds	r3, r3, #1
 1522 0010 A04A     		ldr	r2, .L115
 1523 0012 1360     		str	r3, [r2]
 706:..\Common\Minimal/IntQueue.c **** 
 707:..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1524              		.loc 1 707 0
 1525 0014 9F4B     		ldr	r3, .L115
 1526 0016 1B68     		ldr	r3, [r3]
 1527 0018 03F00103 		and	r3, r3, #1
 1528 001c 002B     		cmp	r3, #0
 1529 001e 00F08F80 		beq	.L93
 708:..\Common\Minimal/IntQueue.c **** 	{
 709:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1530              		.loc 1 709 0
 1531 0022 9D4B     		ldr	r3, .L115+4
 1532 0024 1B68     		ldr	r3, [r3]
 1533 0026 1846     		mov	r0, r3
 1534 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1535 002c 0346     		mov	r3, r0
 1536 002e 012B     		cmp	r3, #1
 1537 0030 28D0     		beq	.L94
 1538              	.LBB57:
 1539              	.LBB58:
 1540              	.LBB59:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1541              		.loc 2 253 0 discriminator 1
 1542              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1543 0032 EFF31182 			mrs r2, basepri											
 1544 0036 4FF0A003 		mov r3, #160												
 1545 003a 83F31188 		msr basepri, r3											
 1546 003e BFF36F8F 		isb														
 1547 0042 BFF34F8F 		dsb														
 1548              	
 1549              	@ 0 "" 2
 1550              		.thumb
 1551 0046 3A64     		str	r2, [r7, #64]
 1552 0048 FB63     		str	r3, [r7, #60]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 46


 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1553              		.loc 2 265 0 discriminator 1
 1554 004a 3B6C     		ldr	r3, [r7, #64]
 1555              	.LBE59:
 1556              	.LBE58:
 1557              		.loc 1 709 0 discriminator 1
 1558 004c 7B65     		str	r3, [r7, #84]
 1559 004e 934B     		ldr	r3, .L115+8
 1560 0050 1B68     		ldr	r3, [r3]
 1561 0052 0133     		adds	r3, r3, #1
 1562 0054 914A     		ldr	r2, .L115+8
 1563 0056 1360     		str	r3, [r2]
 1564 0058 8F4B     		ldr	r3, .L115+4
 1565 005a 1A68     		ldr	r2, [r3]
 1566 005c 3B46     		mov	r3, r7
 1567 005e 1046     		mov	r0, r2
 1568 0060 8E49     		ldr	r1, .L115+8
 1569 0062 1A46     		mov	r2, r3
 1570 0064 0023     		movs	r3, #0
 1571 0066 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1572 006a 0346     		mov	r3, r0
 1573 006c 012B     		cmp	r3, #1
 1574 006e 04D0     		beq	.L96
 1575              		.loc 1 709 0 is_stmt 0 discriminator 2
 1576 0070 8A4B     		ldr	r3, .L115+8
 1577 0072 1B68     		ldr	r3, [r3]
 1578 0074 013B     		subs	r3, r3, #1
 1579 0076 894A     		ldr	r2, .L115+8
 1580 0078 1360     		str	r3, [r2]
 1581              	.L96:
 1582 007a 7B6D     		ldr	r3, [r7, #84]
 1583 007c BB63     		str	r3, [r7, #56]
 1584              	.LBB60:
 1585              	.LBB61:
 1586              		.loc 2 271 0 is_stmt 1 discriminator 4
 1587 007e BB6B     		ldr	r3, [r7, #56]
 1588              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1589 0080 83F31188 			msr basepri, r3	
 1590              	@ 0 "" 2
 1591              		.thumb
 1592              	.L94:
 1593              	.LBE61:
 1594              	.LBE60:
 1595              	.LBE57:
 710:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1596              		.loc 1 710 0
 1597 0084 844B     		ldr	r3, .L115+4
 1598 0086 1B68     		ldr	r3, [r3]
 1599 0088 1846     		mov	r0, r3
 1600 008a FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1601 008e 0346     		mov	r3, r0
 1602 0090 012B     		cmp	r3, #1
 1603 0092 28D0     		beq	.L97
 1604              	.LBB62:
 1605              	.LBB63:
 1606              	.LBB64:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 47


 1607              		.loc 2 253 0 discriminator 1
 1608              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1609 0094 EFF31182 			mrs r2, basepri											
 1610 0098 4FF0A003 		mov r3, #160												
 1611 009c 83F31188 		msr basepri, r3											
 1612 00a0 BFF36F8F 		isb														
 1613 00a4 BFF34F8F 		dsb														
 1614              	
 1615              	@ 0 "" 2
 1616              		.thumb
 1617 00a8 7A63     		str	r2, [r7, #52]
 1618 00aa 3B63     		str	r3, [r7, #48]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1619              		.loc 2 265 0 discriminator 1
 1620 00ac 7B6B     		ldr	r3, [r7, #52]
 1621              	.LBE64:
 1622              	.LBE63:
 1623              		.loc 1 710 0 discriminator 1
 1624 00ae 3B65     		str	r3, [r7, #80]
 1625 00b0 7A4B     		ldr	r3, .L115+8
 1626 00b2 1B68     		ldr	r3, [r3]
 1627 00b4 0133     		adds	r3, r3, #1
 1628 00b6 794A     		ldr	r2, .L115+8
 1629 00b8 1360     		str	r3, [r2]
 1630 00ba 774B     		ldr	r3, .L115+4
 1631 00bc 1A68     		ldr	r2, [r3]
 1632 00be 3B46     		mov	r3, r7
 1633 00c0 1046     		mov	r0, r2
 1634 00c2 7649     		ldr	r1, .L115+8
 1635 00c4 1A46     		mov	r2, r3
 1636 00c6 0023     		movs	r3, #0
 1637 00c8 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1638 00cc 0346     		mov	r3, r0
 1639 00ce 012B     		cmp	r3, #1
 1640 00d0 04D0     		beq	.L99
 1641              		.loc 1 710 0 is_stmt 0 discriminator 2
 1642 00d2 724B     		ldr	r3, .L115+8
 1643 00d4 1B68     		ldr	r3, [r3]
 1644 00d6 013B     		subs	r3, r3, #1
 1645 00d8 704A     		ldr	r2, .L115+8
 1646 00da 1360     		str	r3, [r2]
 1647              	.L99:
 1648 00dc 3B6D     		ldr	r3, [r7, #80]
 1649 00de FB62     		str	r3, [r7, #44]
 1650              	.LBB65:
 1651              	.LBB66:
 1652              		.loc 2 271 0 is_stmt 1 discriminator 4
 1653 00e0 FB6A     		ldr	r3, [r7, #44]
 1654              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1655 00e2 83F31188 			msr basepri, r3	
 1656              	@ 0 "" 2
 1657              		.thumb
 1658              	.L97:
 1659              	.LBE66:
 1660              	.LBE65:
 1661              	.LBE62:
 711:..\Common\Minimal/IntQueue.c **** 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 48


 712:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1662              		.loc 1 712 0
 1663 00e6 6C4B     		ldr	r3, .L115+4
 1664 00e8 1968     		ldr	r1, [r3]
 1665 00ea 3A1D     		adds	r2, r7, #4
 1666 00ec 3B46     		mov	r3, r7
 1667 00ee 0846     		mov	r0, r1
 1668 00f0 1146     		mov	r1, r2
 1669 00f2 1A46     		mov	r2, r3
 1670 00f4 FFF7FEFF 		bl	xQueueReceiveFromISR
 1671 00f8 0346     		mov	r3, r0
 1672 00fa 012B     		cmp	r3, #1
 1673 00fc 04D0     		beq	.L100
 1674              		.loc 1 712 0 is_stmt 0 discriminator 1
 1675 00fe 4FF43270 		mov	r0, #712
 1676 0102 FFF7FEFF 		bl	prvQueueAccessLogError
 1677 0106 04E0     		b	.L101
 1678              	.L100:
 1679              		.loc 1 712 0 discriminator 2
 1680 0108 7B68     		ldr	r3, [r7, #4]
 1681 010a 1846     		mov	r0, r3
 1682 010c 0521     		movs	r1, #5
 1683 010e FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1684              	.L101:
 713:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1685              		.loc 1 713 0 is_stmt 1
 1686 0112 614B     		ldr	r3, .L115+4
 1687 0114 1968     		ldr	r1, [r3]
 1688 0116 3A1D     		adds	r2, r7, #4
 1689 0118 3B46     		mov	r3, r7
 1690 011a 0846     		mov	r0, r1
 1691 011c 1146     		mov	r1, r2
 1692 011e 1A46     		mov	r2, r3
 1693 0120 FFF7FEFF 		bl	xQueueReceiveFromISR
 1694 0124 0346     		mov	r3, r0
 1695 0126 012B     		cmp	r3, #1
 1696 0128 04D0     		beq	.L102
 1697              		.loc 1 713 0 is_stmt 0 discriminator 1
 1698 012a 40F2C920 		movw	r0, #713
 1699 012e FFF7FEFF 		bl	prvQueueAccessLogError
 1700 0132 A9E0     		b	.L104
 1701              	.L102:
 1702              		.loc 1 713 0 discriminator 2
 1703 0134 7B68     		ldr	r3, [r7, #4]
 1704 0136 1846     		mov	r0, r3
 1705 0138 0521     		movs	r1, #5
 1706 013a FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1707 013e A3E0     		b	.L104
 1708              	.L93:
 714:..\Common\Minimal/IntQueue.c **** 	}
 715:..\Common\Minimal/IntQueue.c **** 	else
 716:..\Common\Minimal/IntQueue.c **** 	{
 717:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1709              		.loc 1 717 0 is_stmt 1
 1710 0140 574B     		ldr	r3, .L115+12
 1711 0142 1968     		ldr	r1, [r3]
 1712 0144 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 49


 1713 0146 3B46     		mov	r3, r7
 1714 0148 0846     		mov	r0, r1
 1715 014a 1146     		mov	r1, r2
 1716 014c 1A46     		mov	r2, r3
 1717 014e FFF7FEFF 		bl	xQueueReceiveFromISR
 1718 0152 0346     		mov	r3, r0
 1719 0154 012B     		cmp	r3, #1
 1720 0156 04D1     		bne	.L105
 1721              		.loc 1 717 0 is_stmt 0 discriminator 1
 1722 0158 7B68     		ldr	r3, [r7, #4]
 1723 015a 1846     		mov	r0, r3
 1724 015c 0521     		movs	r1, #5
 1725 015e FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1726              	.L105:
 718:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1727              		.loc 1 718 0 is_stmt 1
 1728 0162 4F4B     		ldr	r3, .L115+12
 1729 0164 1B68     		ldr	r3, [r3]
 1730 0166 1846     		mov	r0, r3
 1731 0168 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1732 016c 0346     		mov	r3, r0
 1733 016e 012B     		cmp	r3, #1
 1734 0170 28D0     		beq	.L106
 1735              	.LBB67:
 1736              	.LBB68:
 1737              	.LBB69:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1738              		.loc 2 253 0 discriminator 1
 1739              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1740 0172 EFF31182 			mrs r2, basepri											
 1741 0176 4FF0A003 		mov r3, #160												
 1742 017a 83F31188 		msr basepri, r3											
 1743 017e BFF36F8F 		isb														
 1744 0182 BFF34F8F 		dsb														
 1745              	
 1746              	@ 0 "" 2
 1747              		.thumb
 1748 0186 BA62     		str	r2, [r7, #40]
 1749 0188 7B62     		str	r3, [r7, #36]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1750              		.loc 2 265 0 discriminator 1
 1751 018a BB6A     		ldr	r3, [r7, #40]
 1752              	.LBE69:
 1753              	.LBE68:
 1754              		.loc 1 718 0 discriminator 1
 1755 018c FB64     		str	r3, [r7, #76]
 1756 018e 454B     		ldr	r3, .L115+16
 1757 0190 1B68     		ldr	r3, [r3]
 1758 0192 0133     		adds	r3, r3, #1
 1759 0194 434A     		ldr	r2, .L115+16
 1760 0196 1360     		str	r3, [r2]
 1761 0198 414B     		ldr	r3, .L115+12
 1762 019a 1A68     		ldr	r2, [r3]
 1763 019c 3B46     		mov	r3, r7
 1764 019e 1046     		mov	r0, r2
 1765 01a0 4049     		ldr	r1, .L115+16
 1766 01a2 1A46     		mov	r2, r3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 50


 1767 01a4 0023     		movs	r3, #0
 1768 01a6 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1769 01aa 0346     		mov	r3, r0
 1770 01ac 012B     		cmp	r3, #1
 1771 01ae 04D0     		beq	.L108
 1772              		.loc 1 718 0 is_stmt 0 discriminator 2
 1773 01b0 3C4B     		ldr	r3, .L115+16
 1774 01b2 1B68     		ldr	r3, [r3]
 1775 01b4 013B     		subs	r3, r3, #1
 1776 01b6 3B4A     		ldr	r2, .L115+16
 1777 01b8 1360     		str	r3, [r2]
 1778              	.L108:
 1779 01ba FB6C     		ldr	r3, [r7, #76]
 1780 01bc 3B62     		str	r3, [r7, #32]
 1781              	.LBB70:
 1782              	.LBB71:
 1783              		.loc 2 271 0 is_stmt 1 discriminator 4
 1784 01be 3B6A     		ldr	r3, [r7, #32]
 1785              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1786 01c0 83F31188 			msr basepri, r3	
 1787              	@ 0 "" 2
 1788              		.thumb
 1789              	.L106:
 1790              	.LBE71:
 1791              	.LBE70:
 1792              	.LBE67:
 719:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1793              		.loc 1 719 0
 1794 01c4 364B     		ldr	r3, .L115+12
 1795 01c6 1B68     		ldr	r3, [r3]
 1796 01c8 1846     		mov	r0, r3
 1797 01ca FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1798 01ce 0346     		mov	r3, r0
 1799 01d0 012B     		cmp	r3, #1
 1800 01d2 28D0     		beq	.L109
 1801              	.LBB72:
 1802              	.LBB73:
 1803              	.LBB74:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1804              		.loc 2 253 0 discriminator 1
 1805              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1806 01d4 EFF31182 			mrs r2, basepri											
 1807 01d8 4FF0A003 		mov r3, #160												
 1808 01dc 83F31188 		msr basepri, r3											
 1809 01e0 BFF36F8F 		isb														
 1810 01e4 BFF34F8F 		dsb														
 1811              	
 1812              	@ 0 "" 2
 1813              		.thumb
 1814 01e8 FA61     		str	r2, [r7, #28]
 1815 01ea BB61     		str	r3, [r7, #24]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1816              		.loc 2 265 0 discriminator 1
 1817 01ec FB69     		ldr	r3, [r7, #28]
 1818              	.LBE74:
 1819              	.LBE73:
 1820              		.loc 1 719 0 discriminator 1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 51


 1821 01ee BB64     		str	r3, [r7, #72]
 1822 01f0 2C4B     		ldr	r3, .L115+16
 1823 01f2 1B68     		ldr	r3, [r3]
 1824 01f4 0133     		adds	r3, r3, #1
 1825 01f6 2B4A     		ldr	r2, .L115+16
 1826 01f8 1360     		str	r3, [r2]
 1827 01fa 294B     		ldr	r3, .L115+12
 1828 01fc 1A68     		ldr	r2, [r3]
 1829 01fe 3B46     		mov	r3, r7
 1830 0200 1046     		mov	r0, r2
 1831 0202 2849     		ldr	r1, .L115+16
 1832 0204 1A46     		mov	r2, r3
 1833 0206 0023     		movs	r3, #0
 1834 0208 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1835 020c 0346     		mov	r3, r0
 1836 020e 012B     		cmp	r3, #1
 1837 0210 04D0     		beq	.L111
 1838              		.loc 1 719 0 is_stmt 0 discriminator 2
 1839 0212 244B     		ldr	r3, .L115+16
 1840 0214 1B68     		ldr	r3, [r3]
 1841 0216 013B     		subs	r3, r3, #1
 1842 0218 224A     		ldr	r2, .L115+16
 1843 021a 1360     		str	r3, [r2]
 1844              	.L111:
 1845 021c BB6C     		ldr	r3, [r7, #72]
 1846 021e 7B61     		str	r3, [r7, #20]
 1847              	.LBB75:
 1848              	.LBB76:
 1849              		.loc 2 271 0 is_stmt 1 discriminator 4
 1850 0220 7B69     		ldr	r3, [r7, #20]
 1851              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1852 0222 83F31188 			msr basepri, r3	
 1853              	@ 0 "" 2
 1854              		.thumb
 1855              	.L109:
 1856              	.LBE76:
 1857              	.LBE75:
 1858              	.LBE72:
 720:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1859              		.loc 1 720 0
 1860 0226 1E4B     		ldr	r3, .L115+12
 1861 0228 1B68     		ldr	r3, [r3]
 1862 022a 1846     		mov	r0, r3
 1863 022c FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1864 0230 0346     		mov	r3, r0
 1865 0232 012B     		cmp	r3, #1
 1866 0234 28D0     		beq	.L104
 1867              	.LBB77:
 1868              	.LBB78:
 1869              	.LBB79:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1870              		.loc 2 253 0 discriminator 1
 1871              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1872 0236 EFF31182 			mrs r2, basepri											
 1873 023a 4FF0A003 		mov r3, #160												
 1874 023e 83F31188 		msr basepri, r3											
 1875 0242 BFF36F8F 		isb														
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 52


 1876 0246 BFF34F8F 		dsb														
 1877              	
 1878              	@ 0 "" 2
 1879              		.thumb
 1880 024a 3A61     		str	r2, [r7, #16]
 1881 024c FB60     		str	r3, [r7, #12]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1882              		.loc 2 265 0 discriminator 1
 1883 024e 3B69     		ldr	r3, [r7, #16]
 1884              	.LBE79:
 1885              	.LBE78:
 1886              		.loc 1 720 0 discriminator 1
 1887 0250 7B64     		str	r3, [r7, #68]
 1888 0252 144B     		ldr	r3, .L115+16
 1889 0254 1B68     		ldr	r3, [r3]
 1890 0256 0133     		adds	r3, r3, #1
 1891 0258 124A     		ldr	r2, .L115+16
 1892 025a 1360     		str	r3, [r2]
 1893 025c 104B     		ldr	r3, .L115+12
 1894 025e 1A68     		ldr	r2, [r3]
 1895 0260 3B46     		mov	r3, r7
 1896 0262 1046     		mov	r0, r2
 1897 0264 0F49     		ldr	r1, .L115+16
 1898 0266 1A46     		mov	r2, r3
 1899 0268 0023     		movs	r3, #0
 1900 026a FFF7FEFF 		bl	xQueueGenericSendFromISR
 1901 026e 0346     		mov	r3, r0
 1902 0270 012B     		cmp	r3, #1
 1903 0272 04D0     		beq	.L113
 1904              		.loc 1 720 0 is_stmt 0 discriminator 2
 1905 0274 0B4B     		ldr	r3, .L115+16
 1906 0276 1B68     		ldr	r3, [r3]
 1907 0278 013B     		subs	r3, r3, #1
 1908 027a 0A4A     		ldr	r2, .L115+16
 1909 027c 1360     		str	r3, [r2]
 1910              	.L113:
 1911 027e 7B6C     		ldr	r3, [r7, #68]
 1912 0280 BB60     		str	r3, [r7, #8]
 1913              	.LBB80:
 1914              	.LBB81:
 1915              		.loc 2 271 0 is_stmt 1 discriminator 4
 1916 0282 BB68     		ldr	r3, [r7, #8]
 1917              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1918 0284 83F31188 			msr basepri, r3	
 1919              	@ 0 "" 2
 1920              		.thumb
 1921              	.L104:
 1922              	.LBE81:
 1923              	.LBE80:
 1924              	.LBE77:
 721:..\Common\Minimal/IntQueue.c **** 	}
 722:..\Common\Minimal/IntQueue.c **** 
 723:..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1925              		.loc 1 723 0
 1926 0288 3B68     		ldr	r3, [r7]
 724:..\Common\Minimal/IntQueue.c **** }
 1927              		.loc 1 724 0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 53


 1928 028a 1846     		mov	r0, r3
 1929 028c 5837     		adds	r7, r7, #88
 1930              		.cfi_def_cfa_offset 8
 1931 028e BD46     		mov	sp, r7
 1932              		.cfi_def_cfa_register 13
 1933              		@ sp needed
 1934 0290 80BD     		pop	{r7, pc}
 1935              	.L116:
 1936 0292 00BF     		.align	2
 1937              	.L115:
 1938 0294 BC010000 		.word	uxNextOperation.6749
 1939 0298 00000000 		.word	xNormallyEmptyQueue
 1940 029c 20000000 		.word	uxValueForNormallyEmptyQueue
 1941 02a0 04000000 		.word	xNormallyFullQueue
 1942 02a4 24000000 		.word	uxValueForNormallyFullQueue
 1943              		.cfi_endproc
 1944              	.LFE78:
 1945              		.size	xSecondTimerHandler, .-xSecondTimerHandler
 1946              		.section	.text.xAreIntQueueTasksStillRunning,"ax",%progbits
 1947              		.align	2
 1948              		.global	xAreIntQueueTasksStillRunning
 1949              		.thumb
 1950              		.thumb_func
 1951              		.type	xAreIntQueueTasksStillRunning, %function
 1952              	xAreIntQueueTasksStillRunning:
 1953              	.LFB79:
 725:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 726:..\Common\Minimal/IntQueue.c **** 
 727:..\Common\Minimal/IntQueue.c **** 
 728:..\Common\Minimal/IntQueue.c **** BaseType_t xAreIntQueueTasksStillRunning( void )
 729:..\Common\Minimal/IntQueue.c **** {
 1954              		.loc 1 729 0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958 0000 80B5     		push	{r7, lr}
 1959              		.cfi_def_cfa_offset 8
 1960              		.cfi_offset 7, -8
 1961              		.cfi_offset 14, -4
 1962 0002 00AF     		add	r7, sp, #0
 1963              		.cfi_def_cfa_register 7
 730:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxLastHighPriorityLoops1 = 0, uxLastHighPriorityLoops2 = 0, uxLastLowPriorityLoo
 731:..\Common\Minimal/IntQueue.c **** 
 732:..\Common\Minimal/IntQueue.c **** 	/* xErrorStatus can be set outside of this function.  This function just
 733:..\Common\Minimal/IntQueue.c **** 	checks that all the tasks are still cycling. */
 734:..\Common\Minimal/IntQueue.c **** 
 735:..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops1 == uxLastHighPriorityLoops1 )
 1964              		.loc 1 735 0
 1965 0004 1D4B     		ldr	r3, .L123
 1966 0006 1A68     		ldr	r2, [r3]
 1967 0008 1D4B     		ldr	r3, .L123+4
 1968 000a 1B68     		ldr	r3, [r3]
 1969 000c 9A42     		cmp	r2, r3
 1970 000e 03D1     		bne	.L118
 736:..\Common\Minimal/IntQueue.c **** 	{
 737:..\Common\Minimal/IntQueue.c **** 		/* The high priority 1 task has stalled. */
 738:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 54


 1971              		.loc 1 738 0
 1972 0010 40F2E220 		movw	r0, #738
 1973 0014 FFF7FEFF 		bl	prvQueueAccessLogError
 1974              	.L118:
 739:..\Common\Minimal/IntQueue.c **** 	}
 740:..\Common\Minimal/IntQueue.c **** 
 741:..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops1 = uxHighPriorityLoops1;
 1975              		.loc 1 741 0
 1976 0018 184B     		ldr	r3, .L123
 1977 001a 1B68     		ldr	r3, [r3]
 1978 001c 184A     		ldr	r2, .L123+4
 1979 001e 1360     		str	r3, [r2]
 742:..\Common\Minimal/IntQueue.c **** 
 743:..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops2 == uxLastHighPriorityLoops2 )
 1980              		.loc 1 743 0
 1981 0020 184B     		ldr	r3, .L123+8
 1982 0022 1A68     		ldr	r2, [r3]
 1983 0024 184B     		ldr	r3, .L123+12
 1984 0026 1B68     		ldr	r3, [r3]
 1985 0028 9A42     		cmp	r2, r3
 1986 002a 03D1     		bne	.L119
 744:..\Common\Minimal/IntQueue.c **** 	{
 745:..\Common\Minimal/IntQueue.c **** 		/* The high priority 2 task has stalled. */
 746:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1987              		.loc 1 746 0
 1988 002c 40F2EA20 		movw	r0, #746
 1989 0030 FFF7FEFF 		bl	prvQueueAccessLogError
 1990              	.L119:
 747:..\Common\Minimal/IntQueue.c **** 	}
 748:..\Common\Minimal/IntQueue.c **** 
 749:..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops2 = uxHighPriorityLoops2;
 1991              		.loc 1 749 0
 1992 0034 134B     		ldr	r3, .L123+8
 1993 0036 1B68     		ldr	r3, [r3]
 1994 0038 134A     		ldr	r2, .L123+12
 1995 003a 1360     		str	r3, [r2]
 750:..\Common\Minimal/IntQueue.c **** 
 751:..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops1 == uxLastLowPriorityLoops1 )
 1996              		.loc 1 751 0
 1997 003c 134B     		ldr	r3, .L123+16
 1998 003e 1A68     		ldr	r2, [r3]
 1999 0040 134B     		ldr	r3, .L123+20
 2000 0042 1B68     		ldr	r3, [r3]
 2001 0044 9A42     		cmp	r2, r3
 2002 0046 03D1     		bne	.L120
 752:..\Common\Minimal/IntQueue.c **** 	{
 753:..\Common\Minimal/IntQueue.c **** 		/* The low priority 1 task has stalled. */
 754:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 2003              		.loc 1 754 0
 2004 0048 40F2F220 		movw	r0, #754
 2005 004c FFF7FEFF 		bl	prvQueueAccessLogError
 2006              	.L120:
 755:..\Common\Minimal/IntQueue.c **** 	}
 756:..\Common\Minimal/IntQueue.c **** 
 757:..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops1 = uxLowPriorityLoops1;
 2007              		.loc 1 757 0
 2008 0050 0E4B     		ldr	r3, .L123+16
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 55


 2009 0052 1B68     		ldr	r3, [r3]
 2010 0054 0E4A     		ldr	r2, .L123+20
 2011 0056 1360     		str	r3, [r2]
 758:..\Common\Minimal/IntQueue.c **** 
 759:..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops2 == uxLastLowPriorityLoops2 )
 2012              		.loc 1 759 0
 2013 0058 0E4B     		ldr	r3, .L123+24
 2014 005a 1A68     		ldr	r2, [r3]
 2015 005c 0E4B     		ldr	r3, .L123+28
 2016 005e 1B68     		ldr	r3, [r3]
 2017 0060 9A42     		cmp	r2, r3
 2018 0062 03D1     		bne	.L121
 760:..\Common\Minimal/IntQueue.c **** 	{
 761:..\Common\Minimal/IntQueue.c **** 		/* The low priority 2 task has stalled. */
 762:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 2019              		.loc 1 762 0
 2020 0064 40F2FA20 		movw	r0, #762
 2021 0068 FFF7FEFF 		bl	prvQueueAccessLogError
 2022              	.L121:
 763:..\Common\Minimal/IntQueue.c **** 	}
 764:..\Common\Minimal/IntQueue.c **** 
 765:..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops2 = uxLowPriorityLoops2;
 2023              		.loc 1 765 0
 2024 006c 094B     		ldr	r3, .L123+24
 2025 006e 1B68     		ldr	r3, [r3]
 2026 0070 094A     		ldr	r2, .L123+28
 2027 0072 1360     		str	r3, [r2]
 766:..\Common\Minimal/IntQueue.c **** 
 767:..\Common\Minimal/IntQueue.c **** 	return xErrorStatus;
 2028              		.loc 1 767 0
 2029 0074 094B     		ldr	r3, .L123+32
 2030 0076 1B68     		ldr	r3, [r3]
 768:..\Common\Minimal/IntQueue.c **** }
 2031              		.loc 1 768 0
 2032 0078 1846     		mov	r0, r3
 2033 007a 80BD     		pop	{r7, pc}
 2034              	.L124:
 2035              		.align	2
 2036              	.L123:
 2037 007c 08000000 		.word	uxHighPriorityLoops1
 2038 0080 C0010000 		.word	uxLastHighPriorityLoops1.6758
 2039 0084 0C000000 		.word	uxHighPriorityLoops2
 2040 0088 C4010000 		.word	uxLastHighPriorityLoops2.6759
 2041 008c 10000000 		.word	uxLowPriorityLoops1
 2042 0090 C8010000 		.word	uxLastLowPriorityLoops1.6760
 2043 0094 14000000 		.word	uxLowPriorityLoops2
 2044 0098 CC010000 		.word	uxLastLowPriorityLoops2.6761
 2045 009c 00000000 		.word	xErrorStatus
 2046              		.cfi_endproc
 2047              	.LFE79:
 2048              		.size	xAreIntQueueTasksStillRunning, .-xAreIntQueueTasksStillRunning
 2049              		.bss
 2050              		.align	2
 2051              	uxNextOperation.6740:
 2052 01b8 00000000 		.space	4
 2053              		.align	2
 2054              	uxNextOperation.6749:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 56


 2055 01bc 00000000 		.space	4
 2056              		.align	2
 2057              	uxLastHighPriorityLoops1.6758:
 2058 01c0 00000000 		.space	4
 2059              		.align	2
 2060              	uxLastHighPriorityLoops2.6759:
 2061 01c4 00000000 		.space	4
 2062              		.align	2
 2063              	uxLastLowPriorityLoops1.6760:
 2064 01c8 00000000 		.space	4
 2065              		.align	2
 2066              	uxLastLowPriorityLoops2.6761:
 2067 01cc 00000000 		.space	4
 2068              		.text
 2069              	.Letext0:
 2070              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2071              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 2072              		.file 5 "..\\Source\\include/queue.h"
 2073              		.file 6 "..\\Source\\include/task.h"
 2074              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 2075              		.section	.debug_info,"",%progbits
 2076              	.Ldebug_info0:
 2077 0000 21090000 		.4byte	0x921
 2078 0004 0400     		.2byte	0x4
 2079 0006 00000000 		.4byte	.Ldebug_abbrev0
 2080 000a 04       		.byte	0x4
 2081 000b 01       		.uleb128 0x1
 2082 000c 50020000 		.4byte	.LASF81
 2083 0010 01       		.byte	0x1
 2084 0011 33020000 		.4byte	.LASF82
 2085 0015 53040000 		.4byte	.LASF83
 2086 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2087 001d 00000000 		.4byte	0
 2088 0021 00000000 		.4byte	.Ldebug_line0
 2089 0025 02       		.uleb128 0x2
 2090 0026 04       		.byte	0x4
 2091 0027 05       		.byte	0x5
 2092 0028 696E7400 		.ascii	"int\000"
 2093 002c 03       		.uleb128 0x3
 2094 002d 04       		.byte	0x4
 2095 002e 07       		.byte	0x7
 2096 002f E6030000 		.4byte	.LASF0
 2097 0033 03       		.uleb128 0x3
 2098 0034 01       		.byte	0x1
 2099 0035 06       		.byte	0x6
 2100 0036 A1030000 		.4byte	.LASF1
 2101 003a 04       		.uleb128 0x4
 2102 003b 99060000 		.4byte	.LASF5
 2103 003f 03       		.byte	0x3
 2104 0040 1D       		.byte	0x1d
 2105 0041 45000000 		.4byte	0x45
 2106 0045 03       		.uleb128 0x3
 2107 0046 01       		.byte	0x1
 2108 0047 08       		.byte	0x8
 2109 0048 6E030000 		.4byte	.LASF2
 2110 004c 03       		.uleb128 0x3
 2111 004d 02       		.byte	0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 57


 2112 004e 05       		.byte	0x5
 2113 004f CD010000 		.4byte	.LASF3
 2114 0053 03       		.uleb128 0x3
 2115 0054 02       		.byte	0x2
 2116 0055 07       		.byte	0x7
 2117 0056 9A040000 		.4byte	.LASF4
 2118 005a 04       		.uleb128 0x4
 2119 005b 91050000 		.4byte	.LASF6
 2120 005f 03       		.byte	0x3
 2121 0060 3F       		.byte	0x3f
 2122 0061 65000000 		.4byte	0x65
 2123 0065 03       		.uleb128 0x3
 2124 0066 04       		.byte	0x4
 2125 0067 05       		.byte	0x5
 2126 0068 42040000 		.4byte	.LASF7
 2127 006c 04       		.uleb128 0x4
 2128 006d 6C050000 		.4byte	.LASF8
 2129 0071 03       		.byte	0x3
 2130 0072 41       		.byte	0x41
 2131 0073 77000000 		.4byte	0x77
 2132 0077 03       		.uleb128 0x3
 2133 0078 04       		.byte	0x4
 2134 0079 07       		.byte	0x7
 2135 007a 0E050000 		.4byte	.LASF9
 2136 007e 03       		.uleb128 0x3
 2137 007f 08       		.byte	0x8
 2138 0080 05       		.byte	0x5
 2139 0081 07020000 		.4byte	.LASF10
 2140 0085 03       		.uleb128 0x3
 2141 0086 08       		.byte	0x8
 2142 0087 07       		.byte	0x7
 2143 0088 AD030000 		.4byte	.LASF11
 2144 008c 03       		.uleb128 0x3
 2145 008d 04       		.byte	0x4
 2146 008e 07       		.byte	0x7
 2147 008f 75000000 		.4byte	.LASF12
 2148 0093 05       		.uleb128 0x5
 2149 0094 04       		.byte	0x4
 2150 0095 03       		.uleb128 0x3
 2151 0096 01       		.byte	0x1
 2152 0097 08       		.byte	0x8
 2153 0098 30040000 		.4byte	.LASF13
 2154 009c 04       		.uleb128 0x4
 2155 009d 6A010000 		.4byte	.LASF14
 2156 00a1 04       		.byte	0x4
 2157 00a2 15       		.byte	0x15
 2158 00a3 3A000000 		.4byte	0x3a
 2159 00a7 04       		.uleb128 0x4
 2160 00a8 4B040000 		.4byte	.LASF15
 2161 00ac 04       		.byte	0x4
 2162 00ad 2C       		.byte	0x2c
 2163 00ae 5A000000 		.4byte	0x5a
 2164 00b2 04       		.uleb128 0x4
 2165 00b3 DD030000 		.4byte	.LASF16
 2166 00b7 04       		.byte	0x4
 2167 00b8 2D       		.byte	0x2d
 2168 00b9 6C000000 		.4byte	0x6c
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 58


 2169 00bd 03       		.uleb128 0x3
 2170 00be 04       		.byte	0x4
 2171 00bf 04       		.byte	0x4
 2172 00c0 E0010000 		.4byte	.LASF17
 2173 00c4 03       		.uleb128 0x3
 2174 00c5 08       		.byte	0x8
 2175 00c6 04       		.byte	0x4
 2176 00c7 23010000 		.4byte	.LASF18
 2177 00cb 04       		.uleb128 0x4
 2178 00cc F3030000 		.4byte	.LASF19
 2179 00d0 02       		.byte	0x2
 2180 00d1 62       		.byte	0x62
 2181 00d2 65000000 		.4byte	0x65
 2182 00d6 04       		.uleb128 0x4
 2183 00d7 3C050000 		.4byte	.LASF20
 2184 00db 02       		.byte	0x2
 2185 00dc 63       		.byte	0x63
 2186 00dd 77000000 		.4byte	0x77
 2187 00e1 04       		.uleb128 0x4
 2188 00e2 55030000 		.4byte	.LASF21
 2189 00e6 02       		.byte	0x2
 2190 00e7 69       		.byte	0x69
 2191 00e8 B2000000 		.4byte	0xb2
 2192 00ec 04       		.uleb128 0x4
 2193 00ed FE050000 		.4byte	.LASF22
 2194 00f1 05       		.byte	0x5
 2195 00f2 58       		.byte	0x58
 2196 00f3 93000000 		.4byte	0x93
 2197 00f7 04       		.uleb128 0x4
 2198 00f8 85000000 		.4byte	.LASF23
 2199 00fc 06       		.byte	0x6
 2200 00fd 67       		.byte	0x67
 2201 00fe 93000000 		.4byte	0x93
 2202 0102 06       		.uleb128 0x6
 2203 0103 01       		.byte	0x1
 2204 0104 06       		.byte	0x6
 2205 0105 71       		.byte	0x71
 2206 0106 2F010000 		.4byte	0x12f
 2207 010a 07       		.uleb128 0x7
 2208 010b 48050000 		.4byte	.LASF24
 2209 010f 00       		.sleb128 0
 2210 0110 07       		.uleb128 0x7
 2211 0111 9A030000 		.4byte	.LASF25
 2212 0115 01       		.sleb128 1
 2213 0116 07       		.uleb128 0x7
 2214 0117 00000000 		.4byte	.LASF26
 2215 011b 02       		.sleb128 2
 2216 011c 07       		.uleb128 0x7
 2217 011d 9B050000 		.4byte	.LASF27
 2218 0121 03       		.sleb128 3
 2219 0122 07       		.uleb128 0x7
 2220 0123 6C000000 		.4byte	.LASF28
 2221 0127 04       		.sleb128 4
 2222 0128 07       		.uleb128 0x7
 2223 0129 2A010000 		.4byte	.LASF29
 2224 012d 05       		.sleb128 5
 2225 012e 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 59


 2226 012f 08       		.uleb128 0x8
 2227 0130 BA010000 		.4byte	.LASF84
 2228 0134 02       		.byte	0x2
 2229 0135 F9       		.byte	0xf9
 2230 0136 B2000000 		.4byte	0xb2
 2231 013a 03       		.byte	0x3
 2232 013b 56010000 		.4byte	0x156
 2233 013f 09       		.uleb128 0x9
 2234 0140 7C030000 		.4byte	.LASF30
 2235 0144 02       		.byte	0x2
 2236 0145 FB       		.byte	0xfb
 2237 0146 B2000000 		.4byte	0xb2
 2238 014a 09       		.uleb128 0x9
 2239 014b A3060000 		.4byte	.LASF31
 2240 014f 02       		.byte	0x2
 2241 0150 FB       		.byte	0xfb
 2242 0151 B2000000 		.4byte	0xb2
 2243 0155 00       		.byte	0
 2244 0156 0A       		.uleb128 0xa
 2245 0157 20040000 		.4byte	.LASF85
 2246 015b 02       		.byte	0x2
 2247 015c 0D01     		.2byte	0x10d
 2248 015e 03       		.byte	0x3
 2249 015f 70010000 		.4byte	0x170
 2250 0163 0B       		.uleb128 0xb
 2251 0164 5D050000 		.4byte	.LASF86
 2252 0168 02       		.byte	0x2
 2253 0169 0D01     		.2byte	0x10d
 2254 016b B2000000 		.4byte	0xb2
 2255 016f 00       		.byte	0
 2256 0170 0C       		.uleb128 0xc
 2257 0171 77050000 		.4byte	.LASF87
 2258 0175 01       		.byte	0x1
 2259 0176 EF       		.byte	0xef
 2260 0177 00000000 		.4byte	.LFB68
 2261 017b 08010000 		.4byte	.LFE68-.LFB68
 2262 017f 01       		.uleb128 0x1
 2263 0180 9C       		.byte	0x9c
 2264 0181 0D       		.uleb128 0xd
 2265 0182 92000000 		.4byte	.LASF34
 2266 0186 01       		.byte	0x1
 2267 0187 0901     		.2byte	0x109
 2268 0189 00000000 		.4byte	.LFB69
 2269 018d 3C000000 		.4byte	.LFE69-.LFB69
 2270 0191 01       		.uleb128 0x1
 2271 0192 9C       		.byte	0x9c
 2272 0193 B6010000 		.4byte	0x1b6
 2273 0197 0E       		.uleb128 0xe
 2274 0198 0B040000 		.4byte	.LASF32
 2275 019c 01       		.byte	0x1
 2276 019d 0901     		.2byte	0x109
 2277 019f D6000000 		.4byte	0xd6
 2278 01a3 02       		.uleb128 0x2
 2279 01a4 91       		.byte	0x91
 2280 01a5 74       		.sleb128 -12
 2281 01a6 0E       		.uleb128 0xe
 2282 01a7 D7010000 		.4byte	.LASF33
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 60


 2283 01ab 01       		.byte	0x1
 2284 01ac 0901     		.2byte	0x109
 2285 01ae D6000000 		.4byte	0xd6
 2286 01b2 02       		.uleb128 0x2
 2287 01b3 91       		.byte	0x91
 2288 01b4 70       		.sleb128 -16
 2289 01b5 00       		.byte	0
 2290 01b6 0D       		.uleb128 0xd
 2291 01b7 AD040000 		.4byte	.LASF35
 2292 01bb 01       		.byte	0x1
 2293 01bc 1A01     		.2byte	0x11a
 2294 01be 00000000 		.4byte	.LFB70
 2295 01c2 3C000000 		.4byte	.LFE70-.LFB70
 2296 01c6 01       		.uleb128 0x1
 2297 01c7 9C       		.byte	0x9c
 2298 01c8 EB010000 		.4byte	0x1eb
 2299 01cc 0E       		.uleb128 0xe
 2300 01cd 0B040000 		.4byte	.LASF32
 2301 01d1 01       		.byte	0x1
 2302 01d2 1A01     		.2byte	0x11a
 2303 01d4 D6000000 		.4byte	0xd6
 2304 01d8 02       		.uleb128 0x2
 2305 01d9 91       		.byte	0x91
 2306 01da 74       		.sleb128 -12
 2307 01db 0E       		.uleb128 0xe
 2308 01dc D7010000 		.4byte	.LASF33
 2309 01e0 01       		.byte	0x1
 2310 01e1 1A01     		.2byte	0x11a
 2311 01e3 D6000000 		.4byte	0xd6
 2312 01e7 02       		.uleb128 0x2
 2313 01e8 91       		.byte	0x91
 2314 01e9 70       		.sleb128 -16
 2315 01ea 00       		.byte	0
 2316 01eb 0F       		.uleb128 0xf
 2317 01ec F7040000 		.4byte	.LASF36
 2318 01f0 01       		.byte	0x1
 2319 01f1 2B01     		.2byte	0x12b
 2320 01f3 00000000 		.4byte	.LFB71
 2321 01f7 28000000 		.4byte	.LFE71-.LFB71
 2322 01fb 01       		.uleb128 0x1
 2323 01fc 9C       		.byte	0x9c
 2324 01fd 11020000 		.4byte	0x211
 2325 0201 0E       		.uleb128 0xe
 2326 0202 4E030000 		.4byte	.LASF37
 2327 0206 01       		.byte	0x1
 2328 0207 2B01     		.2byte	0x12b
 2329 0209 D6000000 		.4byte	0xd6
 2330 020d 02       		.uleb128 0x2
 2331 020e 91       		.byte	0x91
 2332 020f 74       		.sleb128 -12
 2333 0210 00       		.byte	0
 2334 0211 0D       		.uleb128 0xd
 2335 0212 41060000 		.4byte	.LASF38
 2336 0216 01       		.byte	0x1
 2337 0217 3301     		.2byte	0x133
 2338 0219 00000000 		.4byte	.LFB72
 2339 021d 74010000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 61


 2340 0221 01       		.uleb128 0x1
 2341 0222 9C       		.byte	0x9c
 2342 0223 9F020000 		.4byte	0x29f
 2343 0227 0E       		.uleb128 0xe
 2344 0228 FE030000 		.4byte	.LASF39
 2345 022c 01       		.byte	0x1
 2346 022d 3301     		.2byte	0x133
 2347 022f 93000000 		.4byte	0x93
 2348 0233 02       		.uleb128 0x2
 2349 0234 91       		.byte	0x91
 2350 0235 54       		.sleb128 -44
 2351 0236 10       		.uleb128 0x10
 2352 0237 A6050000 		.4byte	.LASF40
 2353 023b 01       		.byte	0x1
 2354 023c 3501     		.2byte	0x135
 2355 023e D6000000 		.4byte	0xd6
 2356 0242 02       		.uleb128 0x2
 2357 0243 91       		.byte	0x91
 2358 0244 5C       		.sleb128 -36
 2359 0245 11       		.uleb128 0x11
 2360 0246 757800   		.ascii	"ux\000"
 2361 0249 01       		.byte	0x1
 2362 024a 3501     		.2byte	0x135
 2363 024c D6000000 		.4byte	0xd6
 2364 0250 02       		.uleb128 0x2
 2365 0251 91       		.byte	0x91
 2366 0252 74       		.sleb128 -12
 2367 0253 10       		.uleb128 0x10
 2368 0254 5A010000 		.4byte	.LASF41
 2369 0258 01       		.byte	0x1
 2370 0259 3501     		.2byte	0x135
 2371 025b D6000000 		.4byte	0xd6
 2372 025f 02       		.uleb128 0x2
 2373 0260 91       		.byte	0x91
 2374 0261 70       		.sleb128 -16
 2375 0262 10       		.uleb128 0x10
 2376 0263 62010000 		.4byte	.LASF42
 2377 0267 01       		.byte	0x1
 2378 0268 3501     		.2byte	0x135
 2379 026a D6000000 		.4byte	0xd6
 2380 026e 02       		.uleb128 0x2
 2381 026f 91       		.byte	0x91
 2382 0270 6C       		.sleb128 -20
 2383 0271 10       		.uleb128 0x10
 2384 0272 13040000 		.4byte	.LASF43
 2385 0276 01       		.byte	0x1
 2386 0277 3501     		.2byte	0x135
 2387 0279 D6000000 		.4byte	0xd6
 2388 027d 02       		.uleb128 0x2
 2389 027e 91       		.byte	0x91
 2390 027f 68       		.sleb128 -24
 2391 0280 10       		.uleb128 0x10
 2392 0281 E2050000 		.4byte	.LASF44
 2393 0285 01       		.byte	0x1
 2394 0286 3501     		.2byte	0x135
 2395 0288 D6000000 		.4byte	0xd6
 2396 028c 02       		.uleb128 0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 62


 2397 028d 91       		.byte	0x91
 2398 028e 64       		.sleb128 -28
 2399 028f 10       		.uleb128 0x10
 2400 0290 F0050000 		.4byte	.LASF45
 2401 0294 01       		.byte	0x1
 2402 0295 3501     		.2byte	0x135
 2403 0297 D6000000 		.4byte	0xd6
 2404 029b 02       		.uleb128 0x2
 2405 029c 91       		.byte	0x91
 2406 029d 60       		.sleb128 -32
 2407 029e 00       		.byte	0
 2408 029f 0D       		.uleb128 0xd
 2409 02a0 D5040000 		.4byte	.LASF46
 2410 02a4 01       		.byte	0x1
 2411 02a5 AE01     		.2byte	0x1ae
 2412 02a7 00000000 		.4byte	.LFB73
 2413 02ab B8000000 		.4byte	.LFE73-.LFB73
 2414 02af 01       		.uleb128 0x1
 2415 02b0 9C       		.byte	0x9c
 2416 02b1 E3020000 		.4byte	0x2e3
 2417 02b5 0E       		.uleb128 0xe
 2418 02b6 FE030000 		.4byte	.LASF39
 2419 02ba 01       		.byte	0x1
 2420 02bb AE01     		.2byte	0x1ae
 2421 02bd 93000000 		.4byte	0x93
 2422 02c1 02       		.uleb128 0x2
 2423 02c2 91       		.byte	0x91
 2424 02c3 6C       		.sleb128 -20
 2425 02c4 10       		.uleb128 0x10
 2426 02c5 0B040000 		.4byte	.LASF32
 2427 02c9 01       		.byte	0x1
 2428 02ca B001     		.2byte	0x1b0
 2429 02cc D6000000 		.4byte	0xd6
 2430 02d0 02       		.uleb128 0x2
 2431 02d1 91       		.byte	0x91
 2432 02d2 74       		.sleb128 -12
 2433 02d3 10       		.uleb128 0x10
 2434 02d4 A6050000 		.4byte	.LASF40
 2435 02d8 01       		.byte	0x1
 2436 02d9 B001     		.2byte	0x1b0
 2437 02db D6000000 		.4byte	0xd6
 2438 02df 02       		.uleb128 0x2
 2439 02e0 91       		.byte	0x91
 2440 02e1 70       		.sleb128 -16
 2441 02e2 00       		.byte	0
 2442 02e3 0D       		.uleb128 0xd
 2443 02e4 47000000 		.4byte	.LASF47
 2444 02e8 01       		.byte	0x1
 2445 02e9 DE01     		.2byte	0x1de
 2446 02eb 00000000 		.4byte	.LFB74
 2447 02ef 50010000 		.4byte	.LFE74-.LFB74
 2448 02f3 01       		.uleb128 0x1
 2449 02f4 9C       		.byte	0x9c
 2450 02f5 35030000 		.4byte	0x335
 2451 02f9 0E       		.uleb128 0xe
 2452 02fa FE030000 		.4byte	.LASF39
 2453 02fe 01       		.byte	0x1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 63


 2454 02ff DE01     		.2byte	0x1de
 2455 0301 93000000 		.4byte	0x93
 2456 0305 02       		.uleb128 0x2
 2457 0306 91       		.byte	0x91
 2458 0307 64       		.sleb128 -28
 2459 0308 10       		.uleb128 0x10
 2460 0309 8E030000 		.4byte	.LASF48
 2461 030d 01       		.byte	0x1
 2462 030e E001     		.2byte	0x1e0
 2463 0310 D6000000 		.4byte	0xd6
 2464 0314 02       		.uleb128 0x2
 2465 0315 91       		.byte	0x91
 2466 0316 6C       		.sleb128 -20
 2467 0317 11       		.uleb128 0x11
 2468 0318 757800   		.ascii	"ux\000"
 2469 031b 01       		.byte	0x1
 2470 031c E001     		.2byte	0x1e0
 2471 031e D6000000 		.4byte	0xd6
 2472 0322 02       		.uleb128 0x2
 2473 0323 91       		.byte	0x91
 2474 0324 74       		.sleb128 -12
 2475 0325 10       		.uleb128 0x10
 2476 0326 13040000 		.4byte	.LASF43
 2477 032a 01       		.byte	0x1
 2478 032b E001     		.2byte	0x1e0
 2479 032d D6000000 		.4byte	0xd6
 2480 0331 02       		.uleb128 0x2
 2481 0332 91       		.byte	0x91
 2482 0333 70       		.sleb128 -16
 2483 0334 00       		.byte	0
 2484 0335 0D       		.uleb128 0xd
 2485 0336 72010000 		.4byte	.LASF49
 2486 033a 01       		.byte	0x1
 2487 033b 4502     		.2byte	0x245
 2488 033d 00000000 		.4byte	.LFB75
 2489 0341 B0000000 		.4byte	.LFE75-.LFB75
 2490 0345 01       		.uleb128 0x1
 2491 0346 9C       		.byte	0x9c
 2492 0347 78030000 		.4byte	0x378
 2493 034b 0E       		.uleb128 0xe
 2494 034c FE030000 		.4byte	.LASF39
 2495 0350 01       		.byte	0x1
 2496 0351 4502     		.2byte	0x245
 2497 0353 93000000 		.4byte	0x93
 2498 0357 02       		.uleb128 0x2
 2499 0358 91       		.byte	0x91
 2500 0359 6C       		.sleb128 -20
 2501 035a 10       		.uleb128 0x10
 2502 035b 8E030000 		.4byte	.LASF48
 2503 035f 01       		.byte	0x1
 2504 0360 4702     		.2byte	0x247
 2505 0362 D6000000 		.4byte	0xd6
 2506 0366 02       		.uleb128 0x2
 2507 0367 91       		.byte	0x91
 2508 0368 70       		.sleb128 -16
 2509 0369 11       		.uleb128 0x11
 2510 036a 757800   		.ascii	"ux\000"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 64


 2511 036d 01       		.byte	0x1
 2512 036e 4702     		.2byte	0x247
 2513 0370 D6000000 		.4byte	0xd6
 2514 0374 02       		.uleb128 0x2
 2515 0375 91       		.byte	0x91
 2516 0376 74       		.sleb128 -12
 2517 0377 00       		.byte	0
 2518 0378 0D       		.uleb128 0xd
 2519 0379 E6010000 		.4byte	.LASF50
 2520 037d 01       		.byte	0x1
 2521 037e 7302     		.2byte	0x273
 2522 0380 00000000 		.4byte	.LFB76
 2523 0384 A4000000 		.4byte	.LFE76-.LFB76
 2524 0388 01       		.uleb128 0x1
 2525 0389 9C       		.byte	0x9c
 2526 038a BC030000 		.4byte	0x3bc
 2527 038e 0E       		.uleb128 0xe
 2528 038f FE030000 		.4byte	.LASF39
 2529 0393 01       		.byte	0x1
 2530 0394 7302     		.2byte	0x273
 2531 0396 93000000 		.4byte	0x93
 2532 039a 02       		.uleb128 0x2
 2533 039b 91       		.byte	0x91
 2534 039c 6C       		.sleb128 -20
 2535 039d 10       		.uleb128 0x10
 2536 039e 0B040000 		.4byte	.LASF32
 2537 03a2 01       		.byte	0x1
 2538 03a3 7502     		.2byte	0x275
 2539 03a5 D6000000 		.4byte	0xd6
 2540 03a9 02       		.uleb128 0x2
 2541 03aa 91       		.byte	0x91
 2542 03ab 74       		.sleb128 -12
 2543 03ac 10       		.uleb128 0x10
 2544 03ad 7E000000 		.4byte	.LASF51
 2545 03b1 01       		.byte	0x1
 2546 03b2 7502     		.2byte	0x275
 2547 03b4 D6000000 		.4byte	0xd6
 2548 03b8 02       		.uleb128 0x2
 2549 03b9 91       		.byte	0x91
 2550 03ba 70       		.sleb128 -16
 2551 03bb 00       		.byte	0
 2552 03bc 12       		.uleb128 0x12
 2553 03bd 47010000 		.4byte	.LASF56
 2554 03c1 01       		.byte	0x1
 2555 03c2 9C02     		.2byte	0x29c
 2556 03c4 CB000000 		.4byte	0xcb
 2557 03c8 00000000 		.4byte	.LFB77
 2558 03cc CC010000 		.4byte	.LFE77-.LFB77
 2559 03d0 01       		.uleb128 0x1
 2560 03d1 9C       		.byte	0x9c
 2561 03d2 32050000 		.4byte	0x532
 2562 03d6 10       		.uleb128 0x10
 2563 03d7 C4030000 		.4byte	.LASF52
 2564 03db 01       		.byte	0x1
 2565 03dc 9E02     		.2byte	0x29e
 2566 03de CB000000 		.4byte	0xcb
 2567 03e2 02       		.uleb128 0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 65


 2568 03e3 91       		.byte	0x91
 2569 03e4 44       		.sleb128 -60
 2570 03e5 10       		.uleb128 0x10
 2571 03e6 51050000 		.4byte	.LASF53
 2572 03ea 01       		.byte	0x1
 2573 03eb 9F02     		.2byte	0x29f
 2574 03ed D6000000 		.4byte	0xd6
 2575 03f1 02       		.uleb128 0x2
 2576 03f2 91       		.byte	0x91
 2577 03f3 40       		.sleb128 -64
 2578 03f4 10       		.uleb128 0x10
 2579 03f5 AA010000 		.4byte	.LASF54
 2580 03f9 01       		.byte	0x1
 2581 03fa A002     		.2byte	0x2a0
 2582 03fc D6000000 		.4byte	0xd6
 2583 0400 05       		.uleb128 0x5
 2584 0401 03       		.byte	0x3
 2585 0402 B8010000 		.4byte	uxNextOperation.6740
 2586 0406 13       		.uleb128 0x13
 2587 0407 32000000 		.4byte	.LBB42
 2588 040b 52000000 		.4byte	.LBE42-.LBB42
 2589 040f 6B040000 		.4byte	0x46b
 2590 0413 10       		.uleb128 0x10
 2591 0414 AD050000 		.4byte	.LASF55
 2592 0418 01       		.byte	0x1
 2593 0419 A902     		.2byte	0x2a9
 2594 041b D6000000 		.4byte	0xd6
 2595 041f 02       		.uleb128 0x2
 2596 0420 91       		.byte	0x91
 2597 0421 74       		.sleb128 -12
 2598 0422 14       		.uleb128 0x14
 2599 0423 2F010000 		.4byte	0x12f
 2600 0427 32000000 		.4byte	.LBB43
 2601 042b 1A000000 		.4byte	.LBE43-.LBB43
 2602 042f 01       		.byte	0x1
 2603 0430 A902     		.2byte	0x2a9
 2604 0432 51040000 		.4byte	0x451
 2605 0436 15       		.uleb128 0x15
 2606 0437 32000000 		.4byte	.LBB44
 2607 043b 1A000000 		.4byte	.LBE44-.LBB44
 2608 043f 16       		.uleb128 0x16
 2609 0440 3F010000 		.4byte	0x13f
 2610 0444 02       		.uleb128 0x2
 2611 0445 91       		.byte	0x91
 2612 0446 68       		.sleb128 -24
 2613 0447 16       		.uleb128 0x16
 2614 0448 4A010000 		.4byte	0x14a
 2615 044c 02       		.uleb128 0x2
 2616 044d 91       		.byte	0x91
 2617 044e 64       		.sleb128 -28
 2618 044f 00       		.byte	0
 2619 0450 00       		.byte	0
 2620 0451 17       		.uleb128 0x17
 2621 0452 56010000 		.4byte	0x156
 2622 0456 7E000000 		.4byte	.LBB45
 2623 045a 06000000 		.4byte	.LBE45-.LBB45
 2624 045e 01       		.byte	0x1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 66


 2625 045f A902     		.2byte	0x2a9
 2626 0461 18       		.uleb128 0x18
 2627 0462 63010000 		.4byte	0x163
 2628 0466 02       		.uleb128 0x2
 2629 0467 91       		.byte	0x91
 2630 0468 60       		.sleb128 -32
 2631 0469 00       		.byte	0
 2632 046a 00       		.byte	0
 2633 046b 13       		.uleb128 0x13
 2634 046c 94000000 		.4byte	.LBB47
 2635 0470 52000000 		.4byte	.LBE47-.LBB47
 2636 0474 D0040000 		.4byte	0x4d0
 2637 0478 10       		.uleb128 0x10
 2638 0479 AD050000 		.4byte	.LASF55
 2639 047d 01       		.byte	0x1
 2640 047e AA02     		.2byte	0x2aa
 2641 0480 D6000000 		.4byte	0xd6
 2642 0484 02       		.uleb128 0x2
 2643 0485 91       		.byte	0x91
 2644 0486 70       		.sleb128 -16
 2645 0487 14       		.uleb128 0x14
 2646 0488 2F010000 		.4byte	0x12f
 2647 048c 94000000 		.4byte	.LBB48
 2648 0490 1A000000 		.4byte	.LBE48-.LBB48
 2649 0494 01       		.byte	0x1
 2650 0495 AA02     		.2byte	0x2aa
 2651 0497 B6040000 		.4byte	0x4b6
 2652 049b 15       		.uleb128 0x15
 2653 049c 94000000 		.4byte	.LBB49
 2654 04a0 1A000000 		.4byte	.LBE49-.LBB49
 2655 04a4 16       		.uleb128 0x16
 2656 04a5 3F010000 		.4byte	0x13f
 2657 04a9 02       		.uleb128 0x2
 2658 04aa 91       		.byte	0x91
 2659 04ab 5C       		.sleb128 -36
 2660 04ac 16       		.uleb128 0x16
 2661 04ad 4A010000 		.4byte	0x14a
 2662 04b1 02       		.uleb128 0x2
 2663 04b2 91       		.byte	0x91
 2664 04b3 58       		.sleb128 -40
 2665 04b4 00       		.byte	0
 2666 04b5 00       		.byte	0
 2667 04b6 17       		.uleb128 0x17
 2668 04b7 56010000 		.4byte	0x156
 2669 04bb E0000000 		.4byte	.LBB50
 2670 04bf 06000000 		.4byte	.LBE50-.LBB50
 2671 04c3 01       		.byte	0x1
 2672 04c4 AA02     		.2byte	0x2aa
 2673 04c6 18       		.uleb128 0x18
 2674 04c7 63010000 		.4byte	0x163
 2675 04cb 02       		.uleb128 0x2
 2676 04cc 91       		.byte	0x91
 2677 04cd 54       		.sleb128 -44
 2678 04ce 00       		.byte	0
 2679 04cf 00       		.byte	0
 2680 04d0 15       		.uleb128 0x15
 2681 04d1 F6000000 		.4byte	.LBB52
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 67


 2682 04d5 54000000 		.4byte	.LBE52-.LBB52
 2683 04d9 10       		.uleb128 0x10
 2684 04da AD050000 		.4byte	.LASF55
 2685 04de 01       		.byte	0x1
 2686 04df AB02     		.2byte	0x2ab
 2687 04e1 D6000000 		.4byte	0xd6
 2688 04e5 02       		.uleb128 0x2
 2689 04e6 91       		.byte	0x91
 2690 04e7 6C       		.sleb128 -20
 2691 04e8 14       		.uleb128 0x14
 2692 04e9 2F010000 		.4byte	0x12f
 2693 04ed F6000000 		.4byte	.LBB53
 2694 04f1 1A000000 		.4byte	.LBE53-.LBB53
 2695 04f5 01       		.byte	0x1
 2696 04f6 AB02     		.2byte	0x2ab
 2697 04f8 17050000 		.4byte	0x517
 2698 04fc 15       		.uleb128 0x15
 2699 04fd F6000000 		.4byte	.LBB54
 2700 0501 1A000000 		.4byte	.LBE54-.LBB54
 2701 0505 16       		.uleb128 0x16
 2702 0506 3F010000 		.4byte	0x13f
 2703 050a 02       		.uleb128 0x2
 2704 050b 91       		.byte	0x91
 2705 050c 50       		.sleb128 -48
 2706 050d 16       		.uleb128 0x16
 2707 050e 4A010000 		.4byte	0x14a
 2708 0512 02       		.uleb128 0x2
 2709 0513 91       		.byte	0x91
 2710 0514 4C       		.sleb128 -52
 2711 0515 00       		.byte	0
 2712 0516 00       		.byte	0
 2713 0517 17       		.uleb128 0x17
 2714 0518 56010000 		.4byte	0x156
 2715 051c 42010000 		.4byte	.LBB55
 2716 0520 08000000 		.4byte	.LBE55-.LBB55
 2717 0524 01       		.byte	0x1
 2718 0525 AB02     		.2byte	0x2ab
 2719 0527 18       		.uleb128 0x18
 2720 0528 63010000 		.4byte	0x163
 2721 052c 02       		.uleb128 0x2
 2722 052d 91       		.byte	0x91
 2723 052e 48       		.sleb128 -56
 2724 052f 00       		.byte	0
 2725 0530 00       		.byte	0
 2726 0531 00       		.byte	0
 2727 0532 12       		.uleb128 0x12
 2728 0533 10030000 		.4byte	.LASF57
 2729 0537 01       		.byte	0x1
 2730 0538 B802     		.2byte	0x2b8
 2731 053a CB000000 		.4byte	0xcb
 2732 053e 00000000 		.4byte	.LFB78
 2733 0542 A8020000 		.4byte	.LFE78-.LFB78
 2734 0546 01       		.uleb128 0x1
 2735 0547 9C       		.byte	0x9c
 2736 0548 7A070000 		.4byte	0x77a
 2737 054c 10       		.uleb128 0x10
 2738 054d 51050000 		.4byte	.LASF53
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 68


 2739 0551 01       		.byte	0x1
 2740 0552 BA02     		.2byte	0x2ba
 2741 0554 D6000000 		.4byte	0xd6
 2742 0558 03       		.uleb128 0x3
 2743 0559 91       		.byte	0x91
 2744 055a A47F     		.sleb128 -92
 2745 055c 10       		.uleb128 0x10
 2746 055d C4030000 		.4byte	.LASF52
 2747 0561 01       		.byte	0x1
 2748 0562 BB02     		.2byte	0x2bb
 2749 0564 CB000000 		.4byte	0xcb
 2750 0568 03       		.uleb128 0x3
 2751 0569 91       		.byte	0x91
 2752 056a A07F     		.sleb128 -96
 2753 056c 10       		.uleb128 0x10
 2754 056d AA010000 		.4byte	.LASF54
 2755 0571 01       		.byte	0x1
 2756 0572 BC02     		.2byte	0x2bc
 2757 0574 D6000000 		.4byte	0xd6
 2758 0578 05       		.uleb128 0x5
 2759 0579 03       		.byte	0x3
 2760 057a BC010000 		.4byte	uxNextOperation.6749
 2761 057e 13       		.uleb128 0x13
 2762 057f 32000000 		.4byte	.LBB57
 2763 0583 52000000 		.4byte	.LBE57-.LBB57
 2764 0587 E3050000 		.4byte	0x5e3
 2765 058b 10       		.uleb128 0x10
 2766 058c AD050000 		.4byte	.LASF55
 2767 0590 01       		.byte	0x1
 2768 0591 C502     		.2byte	0x2c5
 2769 0593 D6000000 		.4byte	0xd6
 2770 0597 02       		.uleb128 0x2
 2771 0598 91       		.byte	0x91
 2772 0599 74       		.sleb128 -12
 2773 059a 14       		.uleb128 0x14
 2774 059b 2F010000 		.4byte	0x12f
 2775 059f 32000000 		.4byte	.LBB58
 2776 05a3 1A000000 		.4byte	.LBE58-.LBB58
 2777 05a7 01       		.byte	0x1
 2778 05a8 C502     		.2byte	0x2c5
 2779 05aa C9050000 		.4byte	0x5c9
 2780 05ae 15       		.uleb128 0x15
 2781 05af 32000000 		.4byte	.LBB59
 2782 05b3 1A000000 		.4byte	.LBE59-.LBB59
 2783 05b7 16       		.uleb128 0x16
 2784 05b8 3F010000 		.4byte	0x13f
 2785 05bc 02       		.uleb128 0x2
 2786 05bd 91       		.byte	0x91
 2787 05be 60       		.sleb128 -32
 2788 05bf 16       		.uleb128 0x16
 2789 05c0 4A010000 		.4byte	0x14a
 2790 05c4 02       		.uleb128 0x2
 2791 05c5 91       		.byte	0x91
 2792 05c6 5C       		.sleb128 -36
 2793 05c7 00       		.byte	0
 2794 05c8 00       		.byte	0
 2795 05c9 17       		.uleb128 0x17
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 69


 2796 05ca 56010000 		.4byte	0x156
 2797 05ce 7E000000 		.4byte	.LBB60
 2798 05d2 06000000 		.4byte	.LBE60-.LBB60
 2799 05d6 01       		.byte	0x1
 2800 05d7 C502     		.2byte	0x2c5
 2801 05d9 18       		.uleb128 0x18
 2802 05da 63010000 		.4byte	0x163
 2803 05de 02       		.uleb128 0x2
 2804 05df 91       		.byte	0x91
 2805 05e0 58       		.sleb128 -40
 2806 05e1 00       		.byte	0
 2807 05e2 00       		.byte	0
 2808 05e3 13       		.uleb128 0x13
 2809 05e4 94000000 		.4byte	.LBB62
 2810 05e8 52000000 		.4byte	.LBE62-.LBB62
 2811 05ec 48060000 		.4byte	0x648
 2812 05f0 10       		.uleb128 0x10
 2813 05f1 AD050000 		.4byte	.LASF55
 2814 05f5 01       		.byte	0x1
 2815 05f6 C602     		.2byte	0x2c6
 2816 05f8 D6000000 		.4byte	0xd6
 2817 05fc 02       		.uleb128 0x2
 2818 05fd 91       		.byte	0x91
 2819 05fe 70       		.sleb128 -16
 2820 05ff 14       		.uleb128 0x14
 2821 0600 2F010000 		.4byte	0x12f
 2822 0604 94000000 		.4byte	.LBB63
 2823 0608 1A000000 		.4byte	.LBE63-.LBB63
 2824 060c 01       		.byte	0x1
 2825 060d C602     		.2byte	0x2c6
 2826 060f 2E060000 		.4byte	0x62e
 2827 0613 15       		.uleb128 0x15
 2828 0614 94000000 		.4byte	.LBB64
 2829 0618 1A000000 		.4byte	.LBE64-.LBB64
 2830 061c 16       		.uleb128 0x16
 2831 061d 3F010000 		.4byte	0x13f
 2832 0621 02       		.uleb128 0x2
 2833 0622 91       		.byte	0x91
 2834 0623 54       		.sleb128 -44
 2835 0624 16       		.uleb128 0x16
 2836 0625 4A010000 		.4byte	0x14a
 2837 0629 02       		.uleb128 0x2
 2838 062a 91       		.byte	0x91
 2839 062b 50       		.sleb128 -48
 2840 062c 00       		.byte	0
 2841 062d 00       		.byte	0
 2842 062e 17       		.uleb128 0x17
 2843 062f 56010000 		.4byte	0x156
 2844 0633 E0000000 		.4byte	.LBB65
 2845 0637 06000000 		.4byte	.LBE65-.LBB65
 2846 063b 01       		.byte	0x1
 2847 063c C602     		.2byte	0x2c6
 2848 063e 18       		.uleb128 0x18
 2849 063f 63010000 		.4byte	0x163
 2850 0643 02       		.uleb128 0x2
 2851 0644 91       		.byte	0x91
 2852 0645 4C       		.sleb128 -52
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 70


 2853 0646 00       		.byte	0
 2854 0647 00       		.byte	0
 2855 0648 13       		.uleb128 0x13
 2856 0649 72010000 		.4byte	.LBB67
 2857 064d 52000000 		.4byte	.LBE67-.LBB67
 2858 0651 AD060000 		.4byte	0x6ad
 2859 0655 10       		.uleb128 0x10
 2860 0656 AD050000 		.4byte	.LASF55
 2861 065a 01       		.byte	0x1
 2862 065b CE02     		.2byte	0x2ce
 2863 065d D6000000 		.4byte	0xd6
 2864 0661 02       		.uleb128 0x2
 2865 0662 91       		.byte	0x91
 2866 0663 6C       		.sleb128 -20
 2867 0664 14       		.uleb128 0x14
 2868 0665 2F010000 		.4byte	0x12f
 2869 0669 72010000 		.4byte	.LBB68
 2870 066d 1A000000 		.4byte	.LBE68-.LBB68
 2871 0671 01       		.byte	0x1
 2872 0672 CE02     		.2byte	0x2ce
 2873 0674 93060000 		.4byte	0x693
 2874 0678 15       		.uleb128 0x15
 2875 0679 72010000 		.4byte	.LBB69
 2876 067d 1A000000 		.4byte	.LBE69-.LBB69
 2877 0681 16       		.uleb128 0x16
 2878 0682 3F010000 		.4byte	0x13f
 2879 0686 02       		.uleb128 0x2
 2880 0687 91       		.byte	0x91
 2881 0688 48       		.sleb128 -56
 2882 0689 16       		.uleb128 0x16
 2883 068a 4A010000 		.4byte	0x14a
 2884 068e 02       		.uleb128 0x2
 2885 068f 91       		.byte	0x91
 2886 0690 44       		.sleb128 -60
 2887 0691 00       		.byte	0
 2888 0692 00       		.byte	0
 2889 0693 17       		.uleb128 0x17
 2890 0694 56010000 		.4byte	0x156
 2891 0698 BE010000 		.4byte	.LBB70
 2892 069c 06000000 		.4byte	.LBE70-.LBB70
 2893 06a0 01       		.byte	0x1
 2894 06a1 CE02     		.2byte	0x2ce
 2895 06a3 18       		.uleb128 0x18
 2896 06a4 63010000 		.4byte	0x163
 2897 06a8 02       		.uleb128 0x2
 2898 06a9 91       		.byte	0x91
 2899 06aa 40       		.sleb128 -64
 2900 06ab 00       		.byte	0
 2901 06ac 00       		.byte	0
 2902 06ad 13       		.uleb128 0x13
 2903 06ae D4010000 		.4byte	.LBB72
 2904 06b2 52000000 		.4byte	.LBE72-.LBB72
 2905 06b6 15070000 		.4byte	0x715
 2906 06ba 10       		.uleb128 0x10
 2907 06bb AD050000 		.4byte	.LASF55
 2908 06bf 01       		.byte	0x1
 2909 06c0 CF02     		.2byte	0x2cf
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 71


 2910 06c2 D6000000 		.4byte	0xd6
 2911 06c6 02       		.uleb128 0x2
 2912 06c7 91       		.byte	0x91
 2913 06c8 68       		.sleb128 -24
 2914 06c9 14       		.uleb128 0x14
 2915 06ca 2F010000 		.4byte	0x12f
 2916 06ce D4010000 		.4byte	.LBB73
 2917 06d2 1A000000 		.4byte	.LBE73-.LBB73
 2918 06d6 01       		.byte	0x1
 2919 06d7 CF02     		.2byte	0x2cf
 2920 06d9 FA060000 		.4byte	0x6fa
 2921 06dd 15       		.uleb128 0x15
 2922 06de D4010000 		.4byte	.LBB74
 2923 06e2 1A000000 		.4byte	.LBE74-.LBB74
 2924 06e6 16       		.uleb128 0x16
 2925 06e7 3F010000 		.4byte	0x13f
 2926 06eb 03       		.uleb128 0x3
 2927 06ec 91       		.byte	0x91
 2928 06ed BC7F     		.sleb128 -68
 2929 06ef 16       		.uleb128 0x16
 2930 06f0 4A010000 		.4byte	0x14a
 2931 06f4 03       		.uleb128 0x3
 2932 06f5 91       		.byte	0x91
 2933 06f6 B87F     		.sleb128 -72
 2934 06f8 00       		.byte	0
 2935 06f9 00       		.byte	0
 2936 06fa 17       		.uleb128 0x17
 2937 06fb 56010000 		.4byte	0x156
 2938 06ff 20020000 		.4byte	.LBB75
 2939 0703 06000000 		.4byte	.LBE75-.LBB75
 2940 0707 01       		.byte	0x1
 2941 0708 CF02     		.2byte	0x2cf
 2942 070a 18       		.uleb128 0x18
 2943 070b 63010000 		.4byte	0x163
 2944 070f 03       		.uleb128 0x3
 2945 0710 91       		.byte	0x91
 2946 0711 B47F     		.sleb128 -76
 2947 0713 00       		.byte	0
 2948 0714 00       		.byte	0
 2949 0715 15       		.uleb128 0x15
 2950 0716 36020000 		.4byte	.LBB77
 2951 071a 52000000 		.4byte	.LBE77-.LBB77
 2952 071e 10       		.uleb128 0x10
 2953 071f AD050000 		.4byte	.LASF55
 2954 0723 01       		.byte	0x1
 2955 0724 D002     		.2byte	0x2d0
 2956 0726 D6000000 		.4byte	0xd6
 2957 072a 02       		.uleb128 0x2
 2958 072b 91       		.byte	0x91
 2959 072c 64       		.sleb128 -28
 2960 072d 14       		.uleb128 0x14
 2961 072e 2F010000 		.4byte	0x12f
 2962 0732 36020000 		.4byte	.LBB78
 2963 0736 1A000000 		.4byte	.LBE78-.LBB78
 2964 073a 01       		.byte	0x1
 2965 073b D002     		.2byte	0x2d0
 2966 073d 5E070000 		.4byte	0x75e
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 72


 2967 0741 15       		.uleb128 0x15
 2968 0742 36020000 		.4byte	.LBB79
 2969 0746 1A000000 		.4byte	.LBE79-.LBB79
 2970 074a 16       		.uleb128 0x16
 2971 074b 3F010000 		.4byte	0x13f
 2972 074f 03       		.uleb128 0x3
 2973 0750 91       		.byte	0x91
 2974 0751 B07F     		.sleb128 -80
 2975 0753 16       		.uleb128 0x16
 2976 0754 4A010000 		.4byte	0x14a
 2977 0758 03       		.uleb128 0x3
 2978 0759 91       		.byte	0x91
 2979 075a AC7F     		.sleb128 -84
 2980 075c 00       		.byte	0
 2981 075d 00       		.byte	0
 2982 075e 17       		.uleb128 0x17
 2983 075f 56010000 		.4byte	0x156
 2984 0763 82020000 		.4byte	.LBB80
 2985 0767 06000000 		.4byte	.LBE80-.LBB80
 2986 076b 01       		.byte	0x1
 2987 076c D002     		.2byte	0x2d0
 2988 076e 18       		.uleb128 0x18
 2989 076f 63010000 		.4byte	0x163
 2990 0773 03       		.uleb128 0x3
 2991 0774 91       		.byte	0x91
 2992 0775 A87F     		.sleb128 -88
 2993 0777 00       		.byte	0
 2994 0778 00       		.byte	0
 2995 0779 00       		.byte	0
 2996 077a 12       		.uleb128 0x12
 2997 077b 15020000 		.4byte	.LASF58
 2998 077f 01       		.byte	0x1
 2999 0780 D802     		.2byte	0x2d8
 3000 0782 CB000000 		.4byte	0xcb
 3001 0786 00000000 		.4byte	.LFB79
 3002 078a A0000000 		.4byte	.LFE79-.LFB79
 3003 078e 01       		.uleb128 0x1
 3004 078f 9C       		.byte	0x9c
 3005 0790 DD070000 		.4byte	0x7dd
 3006 0794 10       		.uleb128 0x10
 3007 0795 DE020000 		.4byte	.LASF59
 3008 0799 01       		.byte	0x1
 3009 079a DA02     		.2byte	0x2da
 3010 079c D6000000 		.4byte	0xd6
 3011 07a0 05       		.uleb128 0x5
 3012 07a1 03       		.byte	0x3
 3013 07a2 C0010000 		.4byte	uxLastHighPriorityLoops1.6758
 3014 07a6 10       		.uleb128 0x10
 3015 07a7 F7020000 		.4byte	.LASF60
 3016 07ab 01       		.byte	0x1
 3017 07ac DA02     		.2byte	0x2da
 3018 07ae D6000000 		.4byte	0xd6
 3019 07b2 05       		.uleb128 0x5
 3020 07b3 03       		.byte	0x3
 3021 07b4 C4010000 		.4byte	uxLastHighPriorityLoops2.6759
 3022 07b8 10       		.uleb128 0x10
 3023 07b9 81060000 		.4byte	.LASF61
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 73


 3024 07bd 01       		.byte	0x1
 3025 07be DA02     		.2byte	0x2da
 3026 07c0 D6000000 		.4byte	0xd6
 3027 07c4 05       		.uleb128 0x5
 3028 07c5 03       		.byte	0x3
 3029 07c6 C8010000 		.4byte	uxLastLowPriorityLoops1.6760
 3030 07ca 10       		.uleb128 0x10
 3031 07cb 0B010000 		.4byte	.LASF62
 3032 07cf 01       		.byte	0x1
 3033 07d0 DA02     		.2byte	0x2da
 3034 07d2 D6000000 		.4byte	0xd6
 3035 07d6 05       		.uleb128 0x5
 3036 07d7 03       		.byte	0x3
 3037 07d8 CC010000 		.4byte	uxLastLowPriorityLoops2.6761
 3038 07dc 00       		.byte	0
 3039 07dd 19       		.uleb128 0x19
 3040 07de 33010000 		.4byte	.LASF63
 3041 07e2 01       		.byte	0x1
 3042 07e3 C3       		.byte	0xc3
 3043 07e4 EC000000 		.4byte	0xec
 3044 07e8 05       		.uleb128 0x5
 3045 07e9 03       		.byte	0x3
 3046 07ea 00000000 		.4byte	xNormallyEmptyQueue
 3047 07ee 19       		.uleb128 0x19
 3048 07ef 97010000 		.4byte	.LASF64
 3049 07f3 01       		.byte	0x1
 3050 07f4 C3       		.byte	0xc3
 3051 07f5 EC000000 		.4byte	0xec
 3052 07f9 05       		.uleb128 0x5
 3053 07fa 03       		.byte	0x3
 3054 07fb 04000000 		.4byte	xNormallyFullQueue
 3055 07ff 19       		.uleb128 0x19
 3056 0800 24030000 		.4byte	.LASF65
 3057 0804 01       		.byte	0x1
 3058 0805 C6       		.byte	0xc6
 3059 0806 10080000 		.4byte	0x810
 3060 080a 05       		.uleb128 0x5
 3061 080b 03       		.byte	0x3
 3062 080c 08000000 		.4byte	uxHighPriorityLoops1
 3063 0810 1A       		.uleb128 0x1a
 3064 0811 D6000000 		.4byte	0xd6
 3065 0815 19       		.uleb128 0x19
 3066 0816 39030000 		.4byte	.LASF66
 3067 081a 01       		.byte	0x1
 3068 081b C6       		.byte	0xc6
 3069 081c 10080000 		.4byte	0x810
 3070 0820 05       		.uleb128 0x5
 3071 0821 03       		.byte	0x3
 3072 0822 0C000000 		.4byte	uxHighPriorityLoops2
 3073 0826 19       		.uleb128 0x19
 3074 0827 0C060000 		.4byte	.LASF67
 3075 082b 01       		.byte	0x1
 3076 082c C6       		.byte	0xc6
 3077 082d 10080000 		.4byte	0x810
 3078 0831 05       		.uleb128 0x5
 3079 0832 03       		.byte	0x3
 3080 0833 10000000 		.4byte	uxLowPriorityLoops1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 74


 3081 0837 19       		.uleb128 0x19
 3082 0838 20060000 		.4byte	.LASF68
 3083 083c 01       		.byte	0x1
 3084 083d C6       		.byte	0xc6
 3085 083e 10080000 		.4byte	0x810
 3086 0842 05       		.uleb128 0x5
 3087 0843 03       		.byte	0x3
 3088 0844 14000000 		.4byte	uxLowPriorityLoops2
 3089 0848 19       		.uleb128 0x19
 3090 0849 34060000 		.4byte	.LASF69
 3091 084d 01       		.byte	0x1
 3092 084e CA       		.byte	0xca
 3093 084f CB000000 		.4byte	0xcb
 3094 0853 05       		.uleb128 0x5
 3095 0854 03       		.byte	0x3
 3096 0855 00000000 		.4byte	xErrorStatus
 3097 0859 19       		.uleb128 0x19
 3098 085a CA040000 		.4byte	.LASF70
 3099 085e 01       		.byte	0x1
 3100 085f CB       		.byte	0xcb
 3101 0860 10080000 		.4byte	0x810
 3102 0864 05       		.uleb128 0x5
 3103 0865 03       		.byte	0x3
 3104 0866 18000000 		.4byte	xErrorLine
 3105 086a 19       		.uleb128 0x19
 3106 086b 60030000 		.4byte	.LASF71
 3107 086f 01       		.byte	0x1
 3108 0870 CE       		.byte	0xce
 3109 0871 CB000000 		.4byte	0xcb
 3110 0875 05       		.uleb128 0x5
 3111 0876 03       		.byte	0x3
 3112 0877 1C000000 		.4byte	xWasSuspended
 3113 087b 19       		.uleb128 0x19
 3114 087c 64060000 		.4byte	.LASF72
 3115 0880 01       		.byte	0x1
 3116 0881 D2       		.byte	0xd2
 3117 0882 10080000 		.4byte	0x810
 3118 0886 05       		.uleb128 0x5
 3119 0887 03       		.byte	0x3
 3120 0888 20000000 		.4byte	uxValueForNormallyEmptyQueue
 3121 088c 19       		.uleb128 0x19
 3122 088d 20050000 		.4byte	.LASF73
 3123 0891 01       		.byte	0x1
 3124 0892 D2       		.byte	0xd2
 3125 0893 10080000 		.4byte	0x810
 3126 0897 05       		.uleb128 0x5
 3127 0898 03       		.byte	0x3
 3128 0899 24000000 		.4byte	uxValueForNormallyFullQueue
 3129 089d 1B       		.uleb128 0x1b
 3130 089e 9C000000 		.4byte	0x9c
 3131 08a2 AD080000 		.4byte	0x8ad
 3132 08a6 1C       		.uleb128 0x1c
 3133 08a7 8C000000 		.4byte	0x8c
 3134 08ab C7       		.byte	0xc7
 3135 08ac 00       		.byte	0
 3136 08ad 19       		.uleb128 0x19
 3137 08ae C4050000 		.4byte	.LASF74
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 75


 3138 08b2 01       		.byte	0x1
 3139 08b3 DB       		.byte	0xdb
 3140 08b4 9D080000 		.4byte	0x89d
 3141 08b8 05       		.uleb128 0x5
 3142 08b9 03       		.byte	0x3
 3143 08ba 28000000 		.4byte	ucNormallyEmptyReceivedValues
 3144 08be 19       		.uleb128 0x19
 3145 08bf EE000000 		.4byte	.LASF75
 3146 08c3 01       		.byte	0x1
 3147 08c4 DC       		.byte	0xdc
 3148 08c5 9D080000 		.4byte	0x89d
 3149 08c9 05       		.uleb128 0x5
 3150 08ca 03       		.byte	0x3
 3151 08cb F0000000 		.4byte	ucNormallyFullReceivedValues
 3152 08cf 1D       		.uleb128 0x1d
 3153 08d0 35040000 		.4byte	.LASF76
 3154 08d4 07       		.byte	0x7
 3155 08d5 9606     		.2byte	0x696
 3156 08d7 DB080000 		.4byte	0x8db
 3157 08db 1A       		.uleb128 0x1a
 3158 08dc A7000000 		.4byte	0xa7
 3159 08e0 1E       		.uleb128 0x1e
 3160 08e1 AE000000 		.4byte	.LASF77
 3161 08e5 01       		.byte	0x1
 3162 08e6 D5       		.byte	0xd5
 3163 08e7 F7000000 		.4byte	0xf7
 3164 08eb 05       		.uleb128 0x5
 3165 08ec 03       		.byte	0x3
 3166 08ed 00000000 		.4byte	xHighPriorityNormallyEmptyTask1
 3167 08f1 1E       		.uleb128 0x1e
 3168 08f2 CE000000 		.4byte	.LASF78
 3169 08f6 01       		.byte	0x1
 3170 08f7 D5       		.byte	0xd5
 3171 08f8 F7000000 		.4byte	0xf7
 3172 08fc 05       		.uleb128 0x5
 3173 08fd 03       		.byte	0x3
 3174 08fe 00000000 		.4byte	xHighPriorityNormallyEmptyTask2
 3175 0902 1E       		.uleb128 0x1e
 3176 0903 09000000 		.4byte	.LASF79
 3177 0907 01       		.byte	0x1
 3178 0908 D5       		.byte	0xd5
 3179 0909 F7000000 		.4byte	0xf7
 3180 090d 05       		.uleb128 0x5
 3181 090e 03       		.byte	0x3
 3182 090f 00000000 		.4byte	xHighPriorityNormallyFullTask1
 3183 0913 1E       		.uleb128 0x1e
 3184 0914 28000000 		.4byte	.LASF80
 3185 0918 01       		.byte	0x1
 3186 0919 D5       		.byte	0xd5
 3187 091a F7000000 		.4byte	0xf7
 3188 091e 05       		.uleb128 0x5
 3189 091f 03       		.byte	0x3
 3190 0920 00000000 		.4byte	xHighPriorityNormallyFullTask2
 3191 0924 00       		.byte	0
 3192              		.section	.debug_abbrev,"",%progbits
 3193              	.Ldebug_abbrev0:
 3194 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 76


 3195 0001 11       		.uleb128 0x11
 3196 0002 01       		.byte	0x1
 3197 0003 25       		.uleb128 0x25
 3198 0004 0E       		.uleb128 0xe
 3199 0005 13       		.uleb128 0x13
 3200 0006 0B       		.uleb128 0xb
 3201 0007 03       		.uleb128 0x3
 3202 0008 0E       		.uleb128 0xe
 3203 0009 1B       		.uleb128 0x1b
 3204 000a 0E       		.uleb128 0xe
 3205 000b 55       		.uleb128 0x55
 3206 000c 17       		.uleb128 0x17
 3207 000d 11       		.uleb128 0x11
 3208 000e 01       		.uleb128 0x1
 3209 000f 10       		.uleb128 0x10
 3210 0010 17       		.uleb128 0x17
 3211 0011 00       		.byte	0
 3212 0012 00       		.byte	0
 3213 0013 02       		.uleb128 0x2
 3214 0014 24       		.uleb128 0x24
 3215 0015 00       		.byte	0
 3216 0016 0B       		.uleb128 0xb
 3217 0017 0B       		.uleb128 0xb
 3218 0018 3E       		.uleb128 0x3e
 3219 0019 0B       		.uleb128 0xb
 3220 001a 03       		.uleb128 0x3
 3221 001b 08       		.uleb128 0x8
 3222 001c 00       		.byte	0
 3223 001d 00       		.byte	0
 3224 001e 03       		.uleb128 0x3
 3225 001f 24       		.uleb128 0x24
 3226 0020 00       		.byte	0
 3227 0021 0B       		.uleb128 0xb
 3228 0022 0B       		.uleb128 0xb
 3229 0023 3E       		.uleb128 0x3e
 3230 0024 0B       		.uleb128 0xb
 3231 0025 03       		.uleb128 0x3
 3232 0026 0E       		.uleb128 0xe
 3233 0027 00       		.byte	0
 3234 0028 00       		.byte	0
 3235 0029 04       		.uleb128 0x4
 3236 002a 16       		.uleb128 0x16
 3237 002b 00       		.byte	0
 3238 002c 03       		.uleb128 0x3
 3239 002d 0E       		.uleb128 0xe
 3240 002e 3A       		.uleb128 0x3a
 3241 002f 0B       		.uleb128 0xb
 3242 0030 3B       		.uleb128 0x3b
 3243 0031 0B       		.uleb128 0xb
 3244 0032 49       		.uleb128 0x49
 3245 0033 13       		.uleb128 0x13
 3246 0034 00       		.byte	0
 3247 0035 00       		.byte	0
 3248 0036 05       		.uleb128 0x5
 3249 0037 0F       		.uleb128 0xf
 3250 0038 00       		.byte	0
 3251 0039 0B       		.uleb128 0xb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 77


 3252 003a 0B       		.uleb128 0xb
 3253 003b 00       		.byte	0
 3254 003c 00       		.byte	0
 3255 003d 06       		.uleb128 0x6
 3256 003e 04       		.uleb128 0x4
 3257 003f 01       		.byte	0x1
 3258 0040 0B       		.uleb128 0xb
 3259 0041 0B       		.uleb128 0xb
 3260 0042 3A       		.uleb128 0x3a
 3261 0043 0B       		.uleb128 0xb
 3262 0044 3B       		.uleb128 0x3b
 3263 0045 0B       		.uleb128 0xb
 3264 0046 01       		.uleb128 0x1
 3265 0047 13       		.uleb128 0x13
 3266 0048 00       		.byte	0
 3267 0049 00       		.byte	0
 3268 004a 07       		.uleb128 0x7
 3269 004b 28       		.uleb128 0x28
 3270 004c 00       		.byte	0
 3271 004d 03       		.uleb128 0x3
 3272 004e 0E       		.uleb128 0xe
 3273 004f 1C       		.uleb128 0x1c
 3274 0050 0D       		.uleb128 0xd
 3275 0051 00       		.byte	0
 3276 0052 00       		.byte	0
 3277 0053 08       		.uleb128 0x8
 3278 0054 2E       		.uleb128 0x2e
 3279 0055 01       		.byte	0x1
 3280 0056 03       		.uleb128 0x3
 3281 0057 0E       		.uleb128 0xe
 3282 0058 3A       		.uleb128 0x3a
 3283 0059 0B       		.uleb128 0xb
 3284 005a 3B       		.uleb128 0x3b
 3285 005b 0B       		.uleb128 0xb
 3286 005c 27       		.uleb128 0x27
 3287 005d 19       		.uleb128 0x19
 3288 005e 49       		.uleb128 0x49
 3289 005f 13       		.uleb128 0x13
 3290 0060 20       		.uleb128 0x20
 3291 0061 0B       		.uleb128 0xb
 3292 0062 01       		.uleb128 0x1
 3293 0063 13       		.uleb128 0x13
 3294 0064 00       		.byte	0
 3295 0065 00       		.byte	0
 3296 0066 09       		.uleb128 0x9
 3297 0067 34       		.uleb128 0x34
 3298 0068 00       		.byte	0
 3299 0069 03       		.uleb128 0x3
 3300 006a 0E       		.uleb128 0xe
 3301 006b 3A       		.uleb128 0x3a
 3302 006c 0B       		.uleb128 0xb
 3303 006d 3B       		.uleb128 0x3b
 3304 006e 0B       		.uleb128 0xb
 3305 006f 49       		.uleb128 0x49
 3306 0070 13       		.uleb128 0x13
 3307 0071 00       		.byte	0
 3308 0072 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 78


 3309 0073 0A       		.uleb128 0xa
 3310 0074 2E       		.uleb128 0x2e
 3311 0075 01       		.byte	0x1
 3312 0076 03       		.uleb128 0x3
 3313 0077 0E       		.uleb128 0xe
 3314 0078 3A       		.uleb128 0x3a
 3315 0079 0B       		.uleb128 0xb
 3316 007a 3B       		.uleb128 0x3b
 3317 007b 05       		.uleb128 0x5
 3318 007c 27       		.uleb128 0x27
 3319 007d 19       		.uleb128 0x19
 3320 007e 20       		.uleb128 0x20
 3321 007f 0B       		.uleb128 0xb
 3322 0080 01       		.uleb128 0x1
 3323 0081 13       		.uleb128 0x13
 3324 0082 00       		.byte	0
 3325 0083 00       		.byte	0
 3326 0084 0B       		.uleb128 0xb
 3327 0085 05       		.uleb128 0x5
 3328 0086 00       		.byte	0
 3329 0087 03       		.uleb128 0x3
 3330 0088 0E       		.uleb128 0xe
 3331 0089 3A       		.uleb128 0x3a
 3332 008a 0B       		.uleb128 0xb
 3333 008b 3B       		.uleb128 0x3b
 3334 008c 05       		.uleb128 0x5
 3335 008d 49       		.uleb128 0x49
 3336 008e 13       		.uleb128 0x13
 3337 008f 00       		.byte	0
 3338 0090 00       		.byte	0
 3339 0091 0C       		.uleb128 0xc
 3340 0092 2E       		.uleb128 0x2e
 3341 0093 00       		.byte	0
 3342 0094 3F       		.uleb128 0x3f
 3343 0095 19       		.uleb128 0x19
 3344 0096 03       		.uleb128 0x3
 3345 0097 0E       		.uleb128 0xe
 3346 0098 3A       		.uleb128 0x3a
 3347 0099 0B       		.uleb128 0xb
 3348 009a 3B       		.uleb128 0x3b
 3349 009b 0B       		.uleb128 0xb
 3350 009c 27       		.uleb128 0x27
 3351 009d 19       		.uleb128 0x19
 3352 009e 11       		.uleb128 0x11
 3353 009f 01       		.uleb128 0x1
 3354 00a0 12       		.uleb128 0x12
 3355 00a1 06       		.uleb128 0x6
 3356 00a2 40       		.uleb128 0x40
 3357 00a3 18       		.uleb128 0x18
 3358 00a4 9642     		.uleb128 0x2116
 3359 00a6 19       		.uleb128 0x19
 3360 00a7 00       		.byte	0
 3361 00a8 00       		.byte	0
 3362 00a9 0D       		.uleb128 0xd
 3363 00aa 2E       		.uleb128 0x2e
 3364 00ab 01       		.byte	0x1
 3365 00ac 03       		.uleb128 0x3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 79


 3366 00ad 0E       		.uleb128 0xe
 3367 00ae 3A       		.uleb128 0x3a
 3368 00af 0B       		.uleb128 0xb
 3369 00b0 3B       		.uleb128 0x3b
 3370 00b1 05       		.uleb128 0x5
 3371 00b2 27       		.uleb128 0x27
 3372 00b3 19       		.uleb128 0x19
 3373 00b4 11       		.uleb128 0x11
 3374 00b5 01       		.uleb128 0x1
 3375 00b6 12       		.uleb128 0x12
 3376 00b7 06       		.uleb128 0x6
 3377 00b8 40       		.uleb128 0x40
 3378 00b9 18       		.uleb128 0x18
 3379 00ba 9642     		.uleb128 0x2116
 3380 00bc 19       		.uleb128 0x19
 3381 00bd 01       		.uleb128 0x1
 3382 00be 13       		.uleb128 0x13
 3383 00bf 00       		.byte	0
 3384 00c0 00       		.byte	0
 3385 00c1 0E       		.uleb128 0xe
 3386 00c2 05       		.uleb128 0x5
 3387 00c3 00       		.byte	0
 3388 00c4 03       		.uleb128 0x3
 3389 00c5 0E       		.uleb128 0xe
 3390 00c6 3A       		.uleb128 0x3a
 3391 00c7 0B       		.uleb128 0xb
 3392 00c8 3B       		.uleb128 0x3b
 3393 00c9 05       		.uleb128 0x5
 3394 00ca 49       		.uleb128 0x49
 3395 00cb 13       		.uleb128 0x13
 3396 00cc 02       		.uleb128 0x2
 3397 00cd 18       		.uleb128 0x18
 3398 00ce 00       		.byte	0
 3399 00cf 00       		.byte	0
 3400 00d0 0F       		.uleb128 0xf
 3401 00d1 2E       		.uleb128 0x2e
 3402 00d2 01       		.byte	0x1
 3403 00d3 03       		.uleb128 0x3
 3404 00d4 0E       		.uleb128 0xe
 3405 00d5 3A       		.uleb128 0x3a
 3406 00d6 0B       		.uleb128 0xb
 3407 00d7 3B       		.uleb128 0x3b
 3408 00d8 05       		.uleb128 0x5
 3409 00d9 27       		.uleb128 0x27
 3410 00da 19       		.uleb128 0x19
 3411 00db 11       		.uleb128 0x11
 3412 00dc 01       		.uleb128 0x1
 3413 00dd 12       		.uleb128 0x12
 3414 00de 06       		.uleb128 0x6
 3415 00df 40       		.uleb128 0x40
 3416 00e0 18       		.uleb128 0x18
 3417 00e1 9742     		.uleb128 0x2117
 3418 00e3 19       		.uleb128 0x19
 3419 00e4 01       		.uleb128 0x1
 3420 00e5 13       		.uleb128 0x13
 3421 00e6 00       		.byte	0
 3422 00e7 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 80


 3423 00e8 10       		.uleb128 0x10
 3424 00e9 34       		.uleb128 0x34
 3425 00ea 00       		.byte	0
 3426 00eb 03       		.uleb128 0x3
 3427 00ec 0E       		.uleb128 0xe
 3428 00ed 3A       		.uleb128 0x3a
 3429 00ee 0B       		.uleb128 0xb
 3430 00ef 3B       		.uleb128 0x3b
 3431 00f0 05       		.uleb128 0x5
 3432 00f1 49       		.uleb128 0x49
 3433 00f2 13       		.uleb128 0x13
 3434 00f3 02       		.uleb128 0x2
 3435 00f4 18       		.uleb128 0x18
 3436 00f5 00       		.byte	0
 3437 00f6 00       		.byte	0
 3438 00f7 11       		.uleb128 0x11
 3439 00f8 34       		.uleb128 0x34
 3440 00f9 00       		.byte	0
 3441 00fa 03       		.uleb128 0x3
 3442 00fb 08       		.uleb128 0x8
 3443 00fc 3A       		.uleb128 0x3a
 3444 00fd 0B       		.uleb128 0xb
 3445 00fe 3B       		.uleb128 0x3b
 3446 00ff 05       		.uleb128 0x5
 3447 0100 49       		.uleb128 0x49
 3448 0101 13       		.uleb128 0x13
 3449 0102 02       		.uleb128 0x2
 3450 0103 18       		.uleb128 0x18
 3451 0104 00       		.byte	0
 3452 0105 00       		.byte	0
 3453 0106 12       		.uleb128 0x12
 3454 0107 2E       		.uleb128 0x2e
 3455 0108 01       		.byte	0x1
 3456 0109 3F       		.uleb128 0x3f
 3457 010a 19       		.uleb128 0x19
 3458 010b 03       		.uleb128 0x3
 3459 010c 0E       		.uleb128 0xe
 3460 010d 3A       		.uleb128 0x3a
 3461 010e 0B       		.uleb128 0xb
 3462 010f 3B       		.uleb128 0x3b
 3463 0110 05       		.uleb128 0x5
 3464 0111 27       		.uleb128 0x27
 3465 0112 19       		.uleb128 0x19
 3466 0113 49       		.uleb128 0x49
 3467 0114 13       		.uleb128 0x13
 3468 0115 11       		.uleb128 0x11
 3469 0116 01       		.uleb128 0x1
 3470 0117 12       		.uleb128 0x12
 3471 0118 06       		.uleb128 0x6
 3472 0119 40       		.uleb128 0x40
 3473 011a 18       		.uleb128 0x18
 3474 011b 9642     		.uleb128 0x2116
 3475 011d 19       		.uleb128 0x19
 3476 011e 01       		.uleb128 0x1
 3477 011f 13       		.uleb128 0x13
 3478 0120 00       		.byte	0
 3479 0121 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 81


 3480 0122 13       		.uleb128 0x13
 3481 0123 0B       		.uleb128 0xb
 3482 0124 01       		.byte	0x1
 3483 0125 11       		.uleb128 0x11
 3484 0126 01       		.uleb128 0x1
 3485 0127 12       		.uleb128 0x12
 3486 0128 06       		.uleb128 0x6
 3487 0129 01       		.uleb128 0x1
 3488 012a 13       		.uleb128 0x13
 3489 012b 00       		.byte	0
 3490 012c 00       		.byte	0
 3491 012d 14       		.uleb128 0x14
 3492 012e 1D       		.uleb128 0x1d
 3493 012f 01       		.byte	0x1
 3494 0130 31       		.uleb128 0x31
 3495 0131 13       		.uleb128 0x13
 3496 0132 11       		.uleb128 0x11
 3497 0133 01       		.uleb128 0x1
 3498 0134 12       		.uleb128 0x12
 3499 0135 06       		.uleb128 0x6
 3500 0136 58       		.uleb128 0x58
 3501 0137 0B       		.uleb128 0xb
 3502 0138 59       		.uleb128 0x59
 3503 0139 05       		.uleb128 0x5
 3504 013a 01       		.uleb128 0x1
 3505 013b 13       		.uleb128 0x13
 3506 013c 00       		.byte	0
 3507 013d 00       		.byte	0
 3508 013e 15       		.uleb128 0x15
 3509 013f 0B       		.uleb128 0xb
 3510 0140 01       		.byte	0x1
 3511 0141 11       		.uleb128 0x11
 3512 0142 01       		.uleb128 0x1
 3513 0143 12       		.uleb128 0x12
 3514 0144 06       		.uleb128 0x6
 3515 0145 00       		.byte	0
 3516 0146 00       		.byte	0
 3517 0147 16       		.uleb128 0x16
 3518 0148 34       		.uleb128 0x34
 3519 0149 00       		.byte	0
 3520 014a 31       		.uleb128 0x31
 3521 014b 13       		.uleb128 0x13
 3522 014c 02       		.uleb128 0x2
 3523 014d 18       		.uleb128 0x18
 3524 014e 00       		.byte	0
 3525 014f 00       		.byte	0
 3526 0150 17       		.uleb128 0x17
 3527 0151 1D       		.uleb128 0x1d
 3528 0152 01       		.byte	0x1
 3529 0153 31       		.uleb128 0x31
 3530 0154 13       		.uleb128 0x13
 3531 0155 11       		.uleb128 0x11
 3532 0156 01       		.uleb128 0x1
 3533 0157 12       		.uleb128 0x12
 3534 0158 06       		.uleb128 0x6
 3535 0159 58       		.uleb128 0x58
 3536 015a 0B       		.uleb128 0xb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 82


 3537 015b 59       		.uleb128 0x59
 3538 015c 05       		.uleb128 0x5
 3539 015d 00       		.byte	0
 3540 015e 00       		.byte	0
 3541 015f 18       		.uleb128 0x18
 3542 0160 05       		.uleb128 0x5
 3543 0161 00       		.byte	0
 3544 0162 31       		.uleb128 0x31
 3545 0163 13       		.uleb128 0x13
 3546 0164 02       		.uleb128 0x2
 3547 0165 18       		.uleb128 0x18
 3548 0166 00       		.byte	0
 3549 0167 00       		.byte	0
 3550 0168 19       		.uleb128 0x19
 3551 0169 34       		.uleb128 0x34
 3552 016a 00       		.byte	0
 3553 016b 03       		.uleb128 0x3
 3554 016c 0E       		.uleb128 0xe
 3555 016d 3A       		.uleb128 0x3a
 3556 016e 0B       		.uleb128 0xb
 3557 016f 3B       		.uleb128 0x3b
 3558 0170 0B       		.uleb128 0xb
 3559 0171 49       		.uleb128 0x49
 3560 0172 13       		.uleb128 0x13
 3561 0173 02       		.uleb128 0x2
 3562 0174 18       		.uleb128 0x18
 3563 0175 00       		.byte	0
 3564 0176 00       		.byte	0
 3565 0177 1A       		.uleb128 0x1a
 3566 0178 35       		.uleb128 0x35
 3567 0179 00       		.byte	0
 3568 017a 49       		.uleb128 0x49
 3569 017b 13       		.uleb128 0x13
 3570 017c 00       		.byte	0
 3571 017d 00       		.byte	0
 3572 017e 1B       		.uleb128 0x1b
 3573 017f 01       		.uleb128 0x1
 3574 0180 01       		.byte	0x1
 3575 0181 49       		.uleb128 0x49
 3576 0182 13       		.uleb128 0x13
 3577 0183 01       		.uleb128 0x1
 3578 0184 13       		.uleb128 0x13
 3579 0185 00       		.byte	0
 3580 0186 00       		.byte	0
 3581 0187 1C       		.uleb128 0x1c
 3582 0188 21       		.uleb128 0x21
 3583 0189 00       		.byte	0
 3584 018a 49       		.uleb128 0x49
 3585 018b 13       		.uleb128 0x13
 3586 018c 2F       		.uleb128 0x2f
 3587 018d 0B       		.uleb128 0xb
 3588 018e 00       		.byte	0
 3589 018f 00       		.byte	0
 3590 0190 1D       		.uleb128 0x1d
 3591 0191 34       		.uleb128 0x34
 3592 0192 00       		.byte	0
 3593 0193 03       		.uleb128 0x3
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 83


 3594 0194 0E       		.uleb128 0xe
 3595 0195 3A       		.uleb128 0x3a
 3596 0196 0B       		.uleb128 0xb
 3597 0197 3B       		.uleb128 0x3b
 3598 0198 05       		.uleb128 0x5
 3599 0199 49       		.uleb128 0x49
 3600 019a 13       		.uleb128 0x13
 3601 019b 3F       		.uleb128 0x3f
 3602 019c 19       		.uleb128 0x19
 3603 019d 3C       		.uleb128 0x3c
 3604 019e 19       		.uleb128 0x19
 3605 019f 00       		.byte	0
 3606 01a0 00       		.byte	0
 3607 01a1 1E       		.uleb128 0x1e
 3608 01a2 34       		.uleb128 0x34
 3609 01a3 00       		.byte	0
 3610 01a4 03       		.uleb128 0x3
 3611 01a5 0E       		.uleb128 0xe
 3612 01a6 3A       		.uleb128 0x3a
 3613 01a7 0B       		.uleb128 0xb
 3614 01a8 3B       		.uleb128 0x3b
 3615 01a9 0B       		.uleb128 0xb
 3616 01aa 49       		.uleb128 0x49
 3617 01ab 13       		.uleb128 0x13
 3618 01ac 3F       		.uleb128 0x3f
 3619 01ad 19       		.uleb128 0x19
 3620 01ae 02       		.uleb128 0x2
 3621 01af 18       		.uleb128 0x18
 3622 01b0 00       		.byte	0
 3623 01b1 00       		.byte	0
 3624 01b2 00       		.byte	0
 3625              		.section	.debug_aranges,"",%progbits
 3626 0000 74000000 		.4byte	0x74
 3627 0004 0200     		.2byte	0x2
 3628 0006 00000000 		.4byte	.Ldebug_info0
 3629 000a 04       		.byte	0x4
 3630 000b 00       		.byte	0
 3631 000c 0000     		.2byte	0
 3632 000e 0000     		.2byte	0
 3633 0010 00000000 		.4byte	.LFB68
 3634 0014 08010000 		.4byte	.LFE68-.LFB68
 3635 0018 00000000 		.4byte	.LFB69
 3636 001c 3C000000 		.4byte	.LFE69-.LFB69
 3637 0020 00000000 		.4byte	.LFB70
 3638 0024 3C000000 		.4byte	.LFE70-.LFB70
 3639 0028 00000000 		.4byte	.LFB71
 3640 002c 28000000 		.4byte	.LFE71-.LFB71
 3641 0030 00000000 		.4byte	.LFB72
 3642 0034 74010000 		.4byte	.LFE72-.LFB72
 3643 0038 00000000 		.4byte	.LFB73
 3644 003c B8000000 		.4byte	.LFE73-.LFB73
 3645 0040 00000000 		.4byte	.LFB74
 3646 0044 50010000 		.4byte	.LFE74-.LFB74
 3647 0048 00000000 		.4byte	.LFB75
 3648 004c B0000000 		.4byte	.LFE75-.LFB75
 3649 0050 00000000 		.4byte	.LFB76
 3650 0054 A4000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 84


 3651 0058 00000000 		.4byte	.LFB77
 3652 005c CC010000 		.4byte	.LFE77-.LFB77
 3653 0060 00000000 		.4byte	.LFB78
 3654 0064 A8020000 		.4byte	.LFE78-.LFB78
 3655 0068 00000000 		.4byte	.LFB79
 3656 006c A0000000 		.4byte	.LFE79-.LFB79
 3657 0070 00000000 		.4byte	0
 3658 0074 00000000 		.4byte	0
 3659              		.section	.debug_ranges,"",%progbits
 3660              	.Ldebug_ranges0:
 3661 0000 00000000 		.4byte	.LFB68
 3662 0004 08010000 		.4byte	.LFE68
 3663 0008 00000000 		.4byte	.LFB69
 3664 000c 3C000000 		.4byte	.LFE69
 3665 0010 00000000 		.4byte	.LFB70
 3666 0014 3C000000 		.4byte	.LFE70
 3667 0018 00000000 		.4byte	.LFB71
 3668 001c 28000000 		.4byte	.LFE71
 3669 0020 00000000 		.4byte	.LFB72
 3670 0024 74010000 		.4byte	.LFE72
 3671 0028 00000000 		.4byte	.LFB73
 3672 002c B8000000 		.4byte	.LFE73
 3673 0030 00000000 		.4byte	.LFB74
 3674 0034 50010000 		.4byte	.LFE74
 3675 0038 00000000 		.4byte	.LFB75
 3676 003c B0000000 		.4byte	.LFE75
 3677 0040 00000000 		.4byte	.LFB76
 3678 0044 A4000000 		.4byte	.LFE76
 3679 0048 00000000 		.4byte	.LFB77
 3680 004c CC010000 		.4byte	.LFE77
 3681 0050 00000000 		.4byte	.LFB78
 3682 0054 A8020000 		.4byte	.LFE78
 3683 0058 00000000 		.4byte	.LFB79
 3684 005c A0000000 		.4byte	.LFE79
 3685 0060 00000000 		.4byte	0
 3686 0064 00000000 		.4byte	0
 3687              		.section	.debug_line,"",%progbits
 3688              	.Ldebug_line0:
 3689 0000 49050000 		.section	.debug_str,"MS",%progbits,1
 3689      0200A501 
 3689      00000201 
 3689      FB0E0D00 
 3689      01010101 
 3690              	.LASF26:
 3691 0000 65426C6F 		.ascii	"eBlocked\000"
 3691      636B6564 
 3691      00
 3692              	.LASF79:
 3693 0009 78486967 		.ascii	"xHighPriorityNormallyFullTask1\000"
 3693      68507269 
 3693      6F726974 
 3693      794E6F72 
 3693      6D616C6C 
 3694              	.LASF80:
 3695 0028 78486967 		.ascii	"xHighPriorityNormallyFullTask2\000"
 3695      68507269 
 3695      6F726974 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 85


 3695      794E6F72 
 3695      6D616C6C 
 3696              	.LASF47:
 3697 0047 70727631 		.ascii	"prv1stHigherPriorityNormallyFullTask\000"
 3697      73744869 
 3697      67686572 
 3697      5072696F 
 3697      72697479 
 3698              	.LASF28:
 3699 006c 6544656C 		.ascii	"eDeleted\000"
 3699      65746564 
 3699      00
 3700              	.LASF12:
 3701 0075 73697A65 		.ascii	"sizetype\000"
 3701      74797065 
 3701      00
 3702              	.LASF51:
 3703 007e 75785478 		.ascii	"uxTxed\000"
 3703      656400
 3704              	.LASF23:
 3705 0085 5461736B 		.ascii	"TaskHandle_t\000"
 3705      48616E64 
 3705      6C655F74 
 3705      00
 3706              	.LASF34:
 3707 0092 70727652 		.ascii	"prvRecordValue_NormallyFull\000"
 3707      65636F72 
 3707      6456616C 
 3707      75655F4E 
 3707      6F726D61 
 3708              	.LASF77:
 3709 00ae 78486967 		.ascii	"xHighPriorityNormallyEmptyTask1\000"
 3709      68507269 
 3709      6F726974 
 3709      794E6F72 
 3709      6D616C6C 
 3710              	.LASF78:
 3711 00ce 78486967 		.ascii	"xHighPriorityNormallyEmptyTask2\000"
 3711      68507269 
 3711      6F726974 
 3711      794E6F72 
 3711      6D616C6C 
 3712              	.LASF75:
 3713 00ee 75634E6F 		.ascii	"ucNormallyFullReceivedValues\000"
 3713      726D616C 
 3713      6C794675 
 3713      6C6C5265 
 3713      63656976 
 3714              	.LASF62:
 3715 010b 75784C61 		.ascii	"uxLastLowPriorityLoops2\000"
 3715      73744C6F 
 3715      77507269 
 3715      6F726974 
 3715      794C6F6F 
 3716              	.LASF18:
 3717 0123 646F7562 		.ascii	"double\000"
 3717      6C6500
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 86


 3718              	.LASF29:
 3719 012a 65496E76 		.ascii	"eInvalid\000"
 3719      616C6964 
 3719      00
 3720              	.LASF63:
 3721 0133 784E6F72 		.ascii	"xNormallyEmptyQueue\000"
 3721      6D616C6C 
 3721      79456D70 
 3721      74795175 
 3721      65756500 
 3722              	.LASF56:
 3723 0147 78466972 		.ascii	"xFirstTimerHandler\000"
 3723      73745469 
 3723      6D657248 
 3723      616E646C 
 3723      657200
 3724              	.LASF41:
 3725 015a 75785461 		.ascii	"uxTask1\000"
 3725      736B3100 
 3726              	.LASF42:
 3727 0162 75785461 		.ascii	"uxTask2\000"
 3727      736B3200 
 3728              	.LASF14:
 3729 016a 75696E74 		.ascii	"uint8_t\000"
 3729      385F7400 
 3730              	.LASF49:
 3731 0172 70727632 		.ascii	"prv2ndHigherPriorityNormallyFullTask\000"
 3731      6E644869 
 3731      67686572 
 3731      5072696F 
 3731      72697479 
 3732              	.LASF64:
 3733 0197 784E6F72 		.ascii	"xNormallyFullQueue\000"
 3733      6D616C6C 
 3733      7946756C 
 3733      6C517565 
 3733      756500
 3734              	.LASF54:
 3735 01aa 75784E65 		.ascii	"uxNextOperation\000"
 3735      78744F70 
 3735      65726174 
 3735      696F6E00 
 3736              	.LASF84:
 3737 01ba 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 3737      72745261 
 3737      69736542 
 3737      41534550 
 3737      524900
 3738              	.LASF3:
 3739 01cd 73686F72 		.ascii	"short int\000"
 3739      7420696E 
 3739      7400
 3740              	.LASF33:
 3741 01d7 7578536F 		.ascii	"uxSource\000"
 3741      75726365 
 3741      00
 3742              	.LASF17:
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 87


 3743 01e0 666C6F61 		.ascii	"float\000"
 3743      7400
 3744              	.LASF50:
 3745 01e6 7072764C 		.ascii	"prvLowerPriorityNormallyFullTask\000"
 3745      6F776572 
 3745      5072696F 
 3745      72697479 
 3745      4E6F726D 
 3746              	.LASF10:
 3747 0207 6C6F6E67 		.ascii	"long long int\000"
 3747      206C6F6E 
 3747      6720696E 
 3747      7400
 3748              	.LASF58:
 3749 0215 78417265 		.ascii	"xAreIntQueueTasksStillRunning\000"
 3749      496E7451 
 3749      75657565 
 3749      5461736B 
 3749      73537469 
 3750              	.LASF82:
 3751 0233 2E2E5C43 		.ascii	"..\\Common\\Minimal\\IntQueue.c\000"
 3751      6F6D6D6F 
 3751      6E5C4D69 
 3751      6E696D61 
 3751      6C5C496E 
 3752              	.LASF81:
 3753 0250 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3753      4320342E 
 3753      392E3320 
 3753      32303135 
 3753      30333033 
 3754 0283 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3754      20726576 
 3754      6973696F 
 3754      6E203232 
 3754      31323230 
 3755 02b6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3755      66756E63 
 3755      74696F6E 
 3755      2D736563 
 3755      74696F6E 
 3756              	.LASF59:
 3757 02de 75784C61 		.ascii	"uxLastHighPriorityLoops1\000"
 3757      73744869 
 3757      67685072 
 3757      696F7269 
 3757      74794C6F 
 3758              	.LASF60:
 3759 02f7 75784C61 		.ascii	"uxLastHighPriorityLoops2\000"
 3759      73744869 
 3759      67685072 
 3759      696F7269 
 3759      74794C6F 
 3760              	.LASF57:
 3761 0310 78536563 		.ascii	"xSecondTimerHandler\000"
 3761      6F6E6454 
 3761      696D6572 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 88


 3761      48616E64 
 3761      6C657200 
 3762              	.LASF65:
 3763 0324 75784869 		.ascii	"uxHighPriorityLoops1\000"
 3763      67685072 
 3763      696F7269 
 3763      74794C6F 
 3763      6F707331 
 3764              	.LASF66:
 3765 0339 75784869 		.ascii	"uxHighPriorityLoops2\000"
 3765      67685072 
 3765      696F7269 
 3765      74794C6F 
 3765      6F707332 
 3766              	.LASF37:
 3767 034e 75784C69 		.ascii	"uxLine\000"
 3767      6E6500
 3768              	.LASF21:
 3769 0355 5469636B 		.ascii	"TickType_t\000"
 3769      54797065 
 3769      5F7400
 3770              	.LASF71:
 3771 0360 78576173 		.ascii	"xWasSuspended\000"
 3771      53757370 
 3771      656E6465 
 3771      6400
 3772              	.LASF2:
 3773 036e 756E7369 		.ascii	"unsigned char\000"
 3773      676E6564 
 3773      20636861 
 3773      7200
 3774              	.LASF30:
 3775 037c 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 3775      6967696E 
 3775      616C4241 
 3775      53455052 
 3775      4900
 3776              	.LASF48:
 3777 038e 75785661 		.ascii	"uxValueToTx\000"
 3777      6C756554 
 3777      6F547800 
 3778              	.LASF25:
 3779 039a 65526561 		.ascii	"eReady\000"
 3779      647900
 3780              	.LASF1:
 3781 03a1 7369676E 		.ascii	"signed char\000"
 3781      65642063 
 3781      68617200 
 3782              	.LASF11:
 3783 03ad 6C6F6E67 		.ascii	"long long unsigned int\000"
 3783      206C6F6E 
 3783      6720756E 
 3783      7369676E 
 3783      65642069 
 3784              	.LASF52:
 3785 03c4 78486967 		.ascii	"xHigherPriorityTaskWoken\000"
 3785      68657250 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 89


 3785      72696F72 
 3785      69747954 
 3785      61736B57 
 3786              	.LASF16:
 3787 03dd 75696E74 		.ascii	"uint32_t\000"
 3787      33325F74 
 3787      00
 3788              	.LASF0:
 3789 03e6 756E7369 		.ascii	"unsigned int\000"
 3789      676E6564 
 3789      20696E74 
 3789      00
 3790              	.LASF19:
 3791 03f3 42617365 		.ascii	"BaseType_t\000"
 3791      54797065 
 3791      5F7400
 3792              	.LASF39:
 3793 03fe 70765061 		.ascii	"pvParameters\000"
 3793      72616D65 
 3793      74657273 
 3793      00
 3794              	.LASF32:
 3795 040b 75785661 		.ascii	"uxValue\000"
 3795      6C756500 
 3796              	.LASF43:
 3797 0413 7578496E 		.ascii	"uxInterrupts\000"
 3797      74657272 
 3797      75707473 
 3797      00
 3798              	.LASF85:
 3799 0420 76506F72 		.ascii	"vPortSetBASEPRI\000"
 3799      74536574 
 3799      42415345 
 3799      50524900 
 3800              	.LASF13:
 3801 0430 63686172 		.ascii	"char\000"
 3801      00
 3802              	.LASF76:
 3803 0435 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3803      52784275 
 3803      66666572 
 3803      00
 3804              	.LASF7:
 3805 0442 6C6F6E67 		.ascii	"long int\000"
 3805      20696E74 
 3805      00
 3806              	.LASF15:
 3807 044b 696E7433 		.ascii	"int32_t\000"
 3807      325F7400 
 3808              	.LASF83:
 3809 0453 433A5C55 		.ascii	"C:\\Users\\bmt\\Documents\\GitHub\\FreeRTOS_CY8CKIT"
 3809      73657273 
 3809      5C626D74 
 3809      5C446F63 
 3809      756D656E 
 3810 0481 5F303539 		.ascii	"_059\\FreeRTOS_Demo.cydsn\000"
 3810      5C467265 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 90


 3810      6552544F 
 3810      535F4465 
 3810      6D6F2E63 
 3811              	.LASF4:
 3812 049a 73686F72 		.ascii	"short unsigned int\000"
 3812      7420756E 
 3812      7369676E 
 3812      65642069 
 3812      6E7400
 3813              	.LASF35:
 3814 04ad 70727652 		.ascii	"prvRecordValue_NormallyEmpty\000"
 3814      65636F72 
 3814      6456616C 
 3814      75655F4E 
 3814      6F726D61 
 3815              	.LASF70:
 3816 04ca 78457272 		.ascii	"xErrorLine\000"
 3816      6F724C69 
 3816      6E6500
 3817              	.LASF46:
 3818 04d5 7072764C 		.ascii	"prvLowerPriorityNormallyEmptyTask\000"
 3818      6F776572 
 3818      5072696F 
 3818      72697479 
 3818      4E6F726D 
 3819              	.LASF36:
 3820 04f7 70727651 		.ascii	"prvQueueAccessLogError\000"
 3820      75657565 
 3820      41636365 
 3820      73734C6F 
 3820      67457272 
 3821              	.LASF9:
 3822 050e 6C6F6E67 		.ascii	"long unsigned int\000"
 3822      20756E73 
 3822      69676E65 
 3822      6420696E 
 3822      7400
 3823              	.LASF73:
 3824 0520 75785661 		.ascii	"uxValueForNormallyFullQueue\000"
 3824      6C756546 
 3824      6F724E6F 
 3824      726D616C 
 3824      6C794675 
 3825              	.LASF20:
 3826 053c 55426173 		.ascii	"UBaseType_t\000"
 3826      65547970 
 3826      655F7400 
 3827              	.LASF24:
 3828 0548 6552756E 		.ascii	"eRunning\000"
 3828      6E696E67 
 3828      00
 3829              	.LASF53:
 3830 0551 75785278 		.ascii	"uxRxedValue\000"
 3830      65645661 
 3830      6C756500 
 3831              	.LASF86:
 3832 055d 756C4E65 		.ascii	"ulNewMaskValue\000"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 91


 3832      774D6173 
 3832      6B56616C 
 3832      756500
 3833              	.LASF8:
 3834 056c 5F5F7569 		.ascii	"__uint32_t\000"
 3834      6E743332 
 3834      5F7400
 3835              	.LASF87:
 3836 0577 76537461 		.ascii	"vStartInterruptQueueTasks\000"
 3836      7274496E 
 3836      74657272 
 3836      75707451 
 3836      75657565 
 3837              	.LASF6:
 3838 0591 5F5F696E 		.ascii	"__int32_t\000"
 3838      7433325F 
 3838      7400
 3839              	.LASF27:
 3840 059b 65537573 		.ascii	"eSuspended\000"
 3840      70656E64 
 3840      656400
 3841              	.LASF40:
 3842 05a6 75785278 		.ascii	"uxRxed\000"
 3842      656400
 3843              	.LASF55:
 3844 05ad 75785361 		.ascii	"uxSavedInterruptStatus\000"
 3844      76656449 
 3844      6E746572 
 3844      72757074 
 3844      53746174 
 3845              	.LASF74:
 3846 05c4 75634E6F 		.ascii	"ucNormallyEmptyReceivedValues\000"
 3846      726D616C 
 3846      6C79456D 
 3846      70747952 
 3846      65636569 
 3847              	.LASF44:
 3848 05e2 75784572 		.ascii	"uxErrorCount1\000"
 3848      726F7243 
 3848      6F756E74 
 3848      3100
 3849              	.LASF45:
 3850 05f0 75784572 		.ascii	"uxErrorCount2\000"
 3850      726F7243 
 3850      6F756E74 
 3850      3200
 3851              	.LASF22:
 3852 05fe 51756575 		.ascii	"QueueHandle_t\000"
 3852      6548616E 
 3852      646C655F 
 3852      7400
 3853              	.LASF67:
 3854 060c 75784C6F 		.ascii	"uxLowPriorityLoops1\000"
 3854      77507269 
 3854      6F726974 
 3854      794C6F6F 
 3854      70733100 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccritWFL.s 			page 92


 3855              	.LASF68:
 3856 0620 75784C6F 		.ascii	"uxLowPriorityLoops2\000"
 3856      77507269 
 3856      6F726974 
 3856      794C6F6F 
 3856      70733200 
 3857              	.LASF69:
 3858 0634 78457272 		.ascii	"xErrorStatus\000"
 3858      6F725374 
 3858      61747573 
 3858      00
 3859              	.LASF38:
 3860 0641 70727648 		.ascii	"prvHigherPriorityNormallyEmptyTask\000"
 3860      69676865 
 3860      72507269 
 3860      6F726974 
 3860      794E6F72 
 3861              	.LASF72:
 3862 0664 75785661 		.ascii	"uxValueForNormallyEmptyQueue\000"
 3862      6C756546 
 3862      6F724E6F 
 3862      726D616C 
 3862      6C79456D 
 3863              	.LASF61:
 3864 0681 75784C61 		.ascii	"uxLastLowPriorityLoops1\000"
 3864      73744C6F 
 3864      77507269 
 3864      6F726974 
 3864      794C6F6F 
 3865              	.LASF5:
 3866 0699 5F5F7569 		.ascii	"__uint8_t\000"
 3866      6E74385F 
 3866      7400
 3867              	.LASF31:
 3868 06a3 756C4E65 		.ascii	"ulNewBASEPRI\000"
 3868      77424153 
 3868      45505249 
 3868      00
 3869              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
