ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"semtest.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              		.align	2
  20              	sCheckVariables:
  21 0000 00000000 		.space	8
  21      00000000 
  22              		.align	1
  23              	sNextCheckVariable:
  24 0008 0000     		.space	2
  25              		.section	.rodata
  26              		.align	2
  27              	.LC0:
  28 0000 506F6C53 		.ascii	"PolSEM1\000"
  28      454D3100 
  29              		.align	2
  30              	.LC1:
  31 0008 506F6C53 		.ascii	"PolSEM2\000"
  31      454D3200 
  32              		.align	2
  33              	.LC2:
  34 0010 436F756E 		.ascii	"Counting_Sem_1\000"
  34      74696E67 
  34      5F53656D 
  34      5F3100
  35 001f 00       		.align	2
  36              	.LC3:
  37 0020 426C6B53 		.ascii	"BlkSEM1\000"
  37      454D3100 
  38              		.align	2
  39              	.LC4:
  40 0028 426C6B53 		.ascii	"BlkSEM2\000"
  40      454D3200 
  41              		.align	2
  42              	.LC5:
  43 0030 436F756E 		.ascii	"Counting_Sem_2\000"
  43      74696E67 
  43      5F53656D 
  43      5F3200
  44 003f 00       		.section	.text.vStartSemaphoreTasks,"ax",%progbits
  45              		.align	2
  46              		.global	vStartSemaphoreTasks
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 2


  47              		.thumb
  48              		.thumb_func
  49              		.type	vStartSemaphoreTasks, %function
  50              	vStartSemaphoreTasks:
  51              	.LFB68:
  52              		.file 1 "..\\Common\\Minimal\\semtest.c"
   1:..\Common\Minimal/semtest.c **** /*
   2:..\Common\Minimal/semtest.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Common\Minimal/semtest.c ****     All rights reserved
   4:..\Common\Minimal/semtest.c **** 
   5:..\Common\Minimal/semtest.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Common\Minimal/semtest.c **** 
   7:..\Common\Minimal/semtest.c ****     This file is part of the FreeRTOS distribution.
   8:..\Common\Minimal/semtest.c **** 
   9:..\Common\Minimal/semtest.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Common\Minimal/semtest.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Common\Minimal/semtest.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Common\Minimal/semtest.c **** 
  13:..\Common\Minimal/semtest.c ****     ***************************************************************************
  14:..\Common\Minimal/semtest.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Common\Minimal/semtest.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Common\Minimal/semtest.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Common\Minimal/semtest.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Common\Minimal/semtest.c ****     ***************************************************************************
  19:..\Common\Minimal/semtest.c **** 
  20:..\Common\Minimal/semtest.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Common\Minimal/semtest.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Common\Minimal/semtest.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Common\Minimal/semtest.c ****     link: http://www.freertos.org/a00114.html
  24:..\Common\Minimal/semtest.c **** 
  25:..\Common\Minimal/semtest.c ****     ***************************************************************************
  26:..\Common\Minimal/semtest.c ****      *                                                                       *
  27:..\Common\Minimal/semtest.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Common\Minimal/semtest.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Common\Minimal/semtest.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Common\Minimal/semtest.c ****      *    is the industry's de facto standard.                               *
  31:..\Common\Minimal/semtest.c ****      *                                                                       *
  32:..\Common\Minimal/semtest.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Common\Minimal/semtest.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Common\Minimal/semtest.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Common\Minimal/semtest.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Common\Minimal/semtest.c ****      *                                                                       *
  37:..\Common\Minimal/semtest.c ****     ***************************************************************************
  38:..\Common\Minimal/semtest.c **** 
  39:..\Common\Minimal/semtest.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Common\Minimal/semtest.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Common\Minimal/semtest.c ****     defined configASSERT()?
  42:..\Common\Minimal/semtest.c **** 
  43:..\Common\Minimal/semtest.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Common\Minimal/semtest.c ****     embedded software for free we request you assist our global community by
  45:..\Common\Minimal/semtest.c ****     participating in the support forum.
  46:..\Common\Minimal/semtest.c **** 
  47:..\Common\Minimal/semtest.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Common\Minimal/semtest.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Common\Minimal/semtest.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Common\Minimal/semtest.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Common\Minimal/semtest.c **** 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 3


  52:..\Common\Minimal/semtest.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Common\Minimal/semtest.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Common\Minimal/semtest.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Common\Minimal/semtest.c **** 
  56:..\Common\Minimal/semtest.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Common\Minimal/semtest.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Common\Minimal/semtest.c **** 
  59:..\Common\Minimal/semtest.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Common\Minimal/semtest.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Common\Minimal/semtest.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Common\Minimal/semtest.c **** 
  63:..\Common\Minimal/semtest.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Common\Minimal/semtest.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Common\Minimal/semtest.c ****     mission critical applications that require provable dependability.
  66:..\Common\Minimal/semtest.c **** 
  67:..\Common\Minimal/semtest.c ****     1 tab == 4 spaces!
  68:..\Common\Minimal/semtest.c **** */
  69:..\Common\Minimal/semtest.c **** 
  70:..\Common\Minimal/semtest.c **** /*
  71:..\Common\Minimal/semtest.c ****  * Creates two sets of two tasks.  The tasks within a set share a variable, access
  72:..\Common\Minimal/semtest.c ****  * to which is guarded by a semaphore.
  73:..\Common\Minimal/semtest.c ****  *
  74:..\Common\Minimal/semtest.c ****  * Each task starts by attempting to obtain the semaphore.  On obtaining a
  75:..\Common\Minimal/semtest.c ****  * semaphore a task checks to ensure that the guarded variable has an expected
  76:..\Common\Minimal/semtest.c ****  * value.  It then clears the variable to zero before counting it back up to the
  77:..\Common\Minimal/semtest.c ****  * expected value in increments of 1.  After each increment the variable is checked
  78:..\Common\Minimal/semtest.c ****  * to ensure it contains the value to which it was just set. When the starting
  79:..\Common\Minimal/semtest.c ****  * value is again reached the task releases the semaphore giving the other task in
  80:..\Common\Minimal/semtest.c ****  * the set a chance to do exactly the same thing.  The starting value is high
  81:..\Common\Minimal/semtest.c ****  * enough to ensure that a tick is likely to occur during the incrementing loop.
  82:..\Common\Minimal/semtest.c ****  *
  83:..\Common\Minimal/semtest.c ****  * An error is flagged if at any time during the process a shared variable is
  84:..\Common\Minimal/semtest.c ****  * found to have a value other than that expected.  Such an occurrence would
  85:..\Common\Minimal/semtest.c ****  * suggest an error in the mutual exclusion mechanism by which access to the
  86:..\Common\Minimal/semtest.c ****  * variable is restricted.
  87:..\Common\Minimal/semtest.c ****  *
  88:..\Common\Minimal/semtest.c ****  * The first set of two tasks poll their semaphore.  The second set use blocking
  89:..\Common\Minimal/semtest.c ****  * calls.
  90:..\Common\Minimal/semtest.c ****  *
  91:..\Common\Minimal/semtest.c ****  */
  92:..\Common\Minimal/semtest.c **** 
  93:..\Common\Minimal/semtest.c **** 
  94:..\Common\Minimal/semtest.c **** #include <stdlib.h>
  95:..\Common\Minimal/semtest.c **** 
  96:..\Common\Minimal/semtest.c **** /* Scheduler include files. */
  97:..\Common\Minimal/semtest.c **** #include "FreeRTOS.h"
  98:..\Common\Minimal/semtest.c **** #include "task.h"
  99:..\Common\Minimal/semtest.c **** #include "semphr.h"
 100:..\Common\Minimal/semtest.c **** 
 101:..\Common\Minimal/semtest.c **** /* Demo app include files. */
 102:..\Common\Minimal/semtest.c **** #include "semtest.h"
 103:..\Common\Minimal/semtest.c **** 
 104:..\Common\Minimal/semtest.c **** /* The value to which the shared variables are counted. */
 105:..\Common\Minimal/semtest.c **** #define semtstBLOCKING_EXPECTED_VALUE		( ( uint32_t ) 0xfff )
 106:..\Common\Minimal/semtest.c **** #define semtstNON_BLOCKING_EXPECTED_VALUE	( ( uint32_t ) 0xff  )
 107:..\Common\Minimal/semtest.c **** 
 108:..\Common\Minimal/semtest.c **** #define semtstSTACK_SIZE			configMINIMAL_STACK_SIZE
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 4


 109:..\Common\Minimal/semtest.c **** 
 110:..\Common\Minimal/semtest.c **** #define semtstNUM_TASKS				( 4 )
 111:..\Common\Minimal/semtest.c **** 
 112:..\Common\Minimal/semtest.c **** #define semtstDELAY_FACTOR			( ( TickType_t ) 10 )
 113:..\Common\Minimal/semtest.c **** 
 114:..\Common\Minimal/semtest.c **** /* The task function as described at the top of the file. */
 115:..\Common\Minimal/semtest.c **** static portTASK_FUNCTION_PROTO( prvSemaphoreTest, pvParameters );
 116:..\Common\Minimal/semtest.c **** 
 117:..\Common\Minimal/semtest.c **** /* Structure used to pass parameters to each task. */
 118:..\Common\Minimal/semtest.c **** typedef struct SEMAPHORE_PARAMETERS
 119:..\Common\Minimal/semtest.c **** {
 120:..\Common\Minimal/semtest.c **** 	SemaphoreHandle_t xSemaphore;
 121:..\Common\Minimal/semtest.c **** 	volatile uint32_t *pulSharedVariable;
 122:..\Common\Minimal/semtest.c **** 	TickType_t xBlockTime;
 123:..\Common\Minimal/semtest.c **** } xSemaphoreParameters;
 124:..\Common\Minimal/semtest.c **** 
 125:..\Common\Minimal/semtest.c **** /* Variables used to check that all the tasks are still running without errors. */
 126:..\Common\Minimal/semtest.c **** static volatile short sCheckVariables[ semtstNUM_TASKS ] = { 0 };
 127:..\Common\Minimal/semtest.c **** static volatile short sNextCheckVariable = 0;
 128:..\Common\Minimal/semtest.c **** 
 129:..\Common\Minimal/semtest.c **** /*-----------------------------------------------------------*/
 130:..\Common\Minimal/semtest.c **** 
 131:..\Common\Minimal/semtest.c **** void vStartSemaphoreTasks( UBaseType_t uxPriority )
 132:..\Common\Minimal/semtest.c **** {
  53              		.loc 1 132 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 24
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57 0000 80B5     		push	{r7, lr}
  58              		.cfi_def_cfa_offset 8
  59              		.cfi_offset 7, -8
  60              		.cfi_offset 14, -4
  61 0002 88B0     		sub	sp, sp, #32
  62              		.cfi_def_cfa_offset 40
  63 0004 02AF     		add	r7, sp, #8
  64              		.cfi_def_cfa 7, 32
  65 0006 7860     		str	r0, [r7, #4]
 133:..\Common\Minimal/semtest.c **** xSemaphoreParameters *pxFirstSemaphoreParameters, *pxSecondSemaphoreParameters;
 134:..\Common\Minimal/semtest.c **** const TickType_t xBlockTime = ( TickType_t ) 100;
  66              		.loc 1 134 0
  67 0008 6423     		movs	r3, #100
  68 000a 7B61     		str	r3, [r7, #20]
 135:..\Common\Minimal/semtest.c **** 
 136:..\Common\Minimal/semtest.c **** 	/* Create the structure used to pass parameters to the first two tasks. */
 137:..\Common\Minimal/semtest.c **** 	pxFirstSemaphoreParameters = ( xSemaphoreParameters * ) pvPortMalloc( sizeof( xSemaphoreParameters
  69              		.loc 1 137 0
  70 000c 0C20     		movs	r0, #12
  71 000e FFF7FEFF 		bl	pvPortMalloc
  72 0012 3861     		str	r0, [r7, #16]
 138:..\Common\Minimal/semtest.c **** 
 139:..\Common\Minimal/semtest.c **** 	if( pxFirstSemaphoreParameters != NULL )
  73              		.loc 1 139 0
  74 0014 3B69     		ldr	r3, [r7, #16]
  75 0016 002B     		cmp	r3, #0
  76 0018 3AD0     		beq	.L2
 140:..\Common\Minimal/semtest.c **** 	{
 141:..\Common\Minimal/semtest.c **** 		/* Create the semaphore used by the first two tasks. */
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 5


 142:..\Common\Minimal/semtest.c **** 		pxFirstSemaphoreParameters->xSemaphore = xSemaphoreCreateBinary();		
  77              		.loc 1 142 0
  78 001a 0120     		movs	r0, #1
  79 001c 0021     		movs	r1, #0
  80 001e 0322     		movs	r2, #3
  81 0020 FFF7FEFF 		bl	xQueueGenericCreate
  82 0024 0246     		mov	r2, r0
  83 0026 3B69     		ldr	r3, [r7, #16]
  84 0028 1A60     		str	r2, [r3]
 143:..\Common\Minimal/semtest.c **** 
 144:..\Common\Minimal/semtest.c **** 		if( pxFirstSemaphoreParameters->xSemaphore != NULL )
  85              		.loc 1 144 0
  86 002a 3B69     		ldr	r3, [r7, #16]
  87 002c 1B68     		ldr	r3, [r3]
  88 002e 002B     		cmp	r3, #0
  89 0030 2ED0     		beq	.L2
 145:..\Common\Minimal/semtest.c **** 		{
 146:..\Common\Minimal/semtest.c **** 			xSemaphoreGive( pxFirstSemaphoreParameters->xSemaphore );
  90              		.loc 1 146 0
  91 0032 3B69     		ldr	r3, [r7, #16]
  92 0034 1B68     		ldr	r3, [r3]
  93 0036 1846     		mov	r0, r3
  94 0038 0021     		movs	r1, #0
  95 003a 0022     		movs	r2, #0
  96 003c 0023     		movs	r3, #0
  97 003e FFF7FEFF 		bl	xQueueGenericSend
 147:..\Common\Minimal/semtest.c **** 			
 148:..\Common\Minimal/semtest.c **** 			/* Create the variable which is to be shared by the first two tasks. */
 149:..\Common\Minimal/semtest.c **** 			pxFirstSemaphoreParameters->pulSharedVariable = ( uint32_t * ) pvPortMalloc( sizeof( uint32_t ) 
  98              		.loc 1 149 0
  99 0042 0420     		movs	r0, #4
 100 0044 FFF7FEFF 		bl	pvPortMalloc
 101 0048 0246     		mov	r2, r0
 102 004a 3B69     		ldr	r3, [r7, #16]
 103 004c 5A60     		str	r2, [r3, #4]
 150:..\Common\Minimal/semtest.c **** 
 151:..\Common\Minimal/semtest.c **** 			/* Initialise the share variable to the value the tasks expect. */
 152:..\Common\Minimal/semtest.c **** 			*( pxFirstSemaphoreParameters->pulSharedVariable ) = semtstNON_BLOCKING_EXPECTED_VALUE;
 104              		.loc 1 152 0
 105 004e 3B69     		ldr	r3, [r7, #16]
 106 0050 5B68     		ldr	r3, [r3, #4]
 107 0052 FF22     		movs	r2, #255
 108 0054 1A60     		str	r2, [r3]
 153:..\Common\Minimal/semtest.c **** 
 154:..\Common\Minimal/semtest.c **** 			/* The first two tasks do not block on semaphore calls. */
 155:..\Common\Minimal/semtest.c **** 			pxFirstSemaphoreParameters->xBlockTime = ( TickType_t ) 0;
 109              		.loc 1 155 0
 110 0056 3B69     		ldr	r3, [r7, #16]
 111 0058 0022     		movs	r2, #0
 112 005a 9A60     		str	r2, [r3, #8]
 156:..\Common\Minimal/semtest.c **** 
 157:..\Common\Minimal/semtest.c **** 			/* Spawn the first two tasks.  As they poll they operate at the idle priority. */
 158:..\Common\Minimal/semtest.c **** 			xTaskCreate( prvSemaphoreTest, "PolSEM1", semtstSTACK_SIZE, ( void * ) pxFirstSemaphoreParameter
 113              		.loc 1 158 0
 114 005c 0023     		movs	r3, #0
 115 005e 0093     		str	r3, [sp]
 116 0060 0023     		movs	r3, #0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 6


 117 0062 0193     		str	r3, [sp, #4]
 118 0064 2D48     		ldr	r0, .L4
 119 0066 2E49     		ldr	r1, .L4+4
 120 0068 6422     		movs	r2, #100
 121 006a 3B69     		ldr	r3, [r7, #16]
 122 006c FFF7FEFF 		bl	xTaskCreate
 159:..\Common\Minimal/semtest.c **** 			xTaskCreate( prvSemaphoreTest, "PolSEM2", semtstSTACK_SIZE, ( void * ) pxFirstSemaphoreParameter
 123              		.loc 1 159 0
 124 0070 0023     		movs	r3, #0
 125 0072 0093     		str	r3, [sp]
 126 0074 0023     		movs	r3, #0
 127 0076 0193     		str	r3, [sp, #4]
 128 0078 2848     		ldr	r0, .L4
 129 007a 2A49     		ldr	r1, .L4+8
 130 007c 6422     		movs	r2, #100
 131 007e 3B69     		ldr	r3, [r7, #16]
 132 0080 FFF7FEFF 		bl	xTaskCreate
 160:..\Common\Minimal/semtest.c **** 
 161:..\Common\Minimal/semtest.c **** 			/* vQueueAddToRegistry() adds the semaphore to the registry, if one
 162:..\Common\Minimal/semtest.c **** 			is in use.  The registry is provided as a means for kernel aware
 163:..\Common\Minimal/semtest.c **** 			debuggers to locate semaphores and has no purpose if a kernel aware
 164:..\Common\Minimal/semtest.c **** 			debugger is not being used.  The call to vQueueAddToRegistry() will
 165:..\Common\Minimal/semtest.c **** 			be removed by the pre-processor if configQUEUE_REGISTRY_SIZE is not
 166:..\Common\Minimal/semtest.c **** 			defined or is defined to be less than 1. */
 167:..\Common\Minimal/semtest.c **** 			vQueueAddToRegistry( ( QueueHandle_t ) pxFirstSemaphoreParameters->xSemaphore, "Counting_Sem_1" 
 133              		.loc 1 167 0
 134 0084 3B69     		ldr	r3, [r7, #16]
 135 0086 1B68     		ldr	r3, [r3]
 136 0088 1846     		mov	r0, r3
 137 008a 2749     		ldr	r1, .L4+12
 138 008c FFF7FEFF 		bl	vQueueAddToRegistry
 139              	.L2:
 168:..\Common\Minimal/semtest.c **** 		}
 169:..\Common\Minimal/semtest.c **** 	}
 170:..\Common\Minimal/semtest.c **** 
 171:..\Common\Minimal/semtest.c **** 	/* Do exactly the same to create the second set of tasks, only this time
 172:..\Common\Minimal/semtest.c **** 	provide a block time for the semaphore calls. */
 173:..\Common\Minimal/semtest.c **** 	pxSecondSemaphoreParameters = ( xSemaphoreParameters * ) pvPortMalloc( sizeof( xSemaphoreParameter
 140              		.loc 1 173 0
 141 0090 0C20     		movs	r0, #12
 142 0092 FFF7FEFF 		bl	pvPortMalloc
 143 0096 F860     		str	r0, [r7, #12]
 174:..\Common\Minimal/semtest.c **** 	if( pxSecondSemaphoreParameters != NULL )
 144              		.loc 1 174 0
 145 0098 FB68     		ldr	r3, [r7, #12]
 146 009a 002B     		cmp	r3, #0
 147 009c 3BD0     		beq	.L1
 175:..\Common\Minimal/semtest.c **** 	{
 176:..\Common\Minimal/semtest.c **** 		pxSecondSemaphoreParameters->xSemaphore = xSemaphoreCreateBinary();		
 148              		.loc 1 176 0
 149 009e 0120     		movs	r0, #1
 150 00a0 0021     		movs	r1, #0
 151 00a2 0322     		movs	r2, #3
 152 00a4 FFF7FEFF 		bl	xQueueGenericCreate
 153 00a8 0246     		mov	r2, r0
 154 00aa FB68     		ldr	r3, [r7, #12]
 155 00ac 1A60     		str	r2, [r3]
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 7


 177:..\Common\Minimal/semtest.c **** 
 178:..\Common\Minimal/semtest.c **** 		if( pxSecondSemaphoreParameters->xSemaphore != NULL )
 156              		.loc 1 178 0
 157 00ae FB68     		ldr	r3, [r7, #12]
 158 00b0 1B68     		ldr	r3, [r3]
 159 00b2 002B     		cmp	r3, #0
 160 00b4 2FD0     		beq	.L1
 179:..\Common\Minimal/semtest.c **** 		{
 180:..\Common\Minimal/semtest.c **** 			xSemaphoreGive( pxSecondSemaphoreParameters->xSemaphore );
 161              		.loc 1 180 0
 162 00b6 FB68     		ldr	r3, [r7, #12]
 163 00b8 1B68     		ldr	r3, [r3]
 164 00ba 1846     		mov	r0, r3
 165 00bc 0021     		movs	r1, #0
 166 00be 0022     		movs	r2, #0
 167 00c0 0023     		movs	r3, #0
 168 00c2 FFF7FEFF 		bl	xQueueGenericSend
 181:..\Common\Minimal/semtest.c **** 			
 182:..\Common\Minimal/semtest.c **** 			pxSecondSemaphoreParameters->pulSharedVariable = ( uint32_t * ) pvPortMalloc( sizeof( uint32_t )
 169              		.loc 1 182 0
 170 00c6 0420     		movs	r0, #4
 171 00c8 FFF7FEFF 		bl	pvPortMalloc
 172 00cc 0246     		mov	r2, r0
 173 00ce FB68     		ldr	r3, [r7, #12]
 174 00d0 5A60     		str	r2, [r3, #4]
 183:..\Common\Minimal/semtest.c **** 			*( pxSecondSemaphoreParameters->pulSharedVariable ) = semtstBLOCKING_EXPECTED_VALUE;
 175              		.loc 1 183 0
 176 00d2 FB68     		ldr	r3, [r7, #12]
 177 00d4 5B68     		ldr	r3, [r3, #4]
 178 00d6 40F6FF72 		movw	r2, #4095
 179 00da 1A60     		str	r2, [r3]
 184:..\Common\Minimal/semtest.c **** 			pxSecondSemaphoreParameters->xBlockTime = xBlockTime / portTICK_PERIOD_MS;
 180              		.loc 1 184 0
 181 00dc FB68     		ldr	r3, [r7, #12]
 182 00de 7A69     		ldr	r2, [r7, #20]
 183 00e0 9A60     		str	r2, [r3, #8]
 185:..\Common\Minimal/semtest.c **** 
 186:..\Common\Minimal/semtest.c **** 			xTaskCreate( prvSemaphoreTest, "BlkSEM1", semtstSTACK_SIZE, ( void * ) pxSecondSemaphoreParamete
 184              		.loc 1 186 0
 185 00e2 7B68     		ldr	r3, [r7, #4]
 186 00e4 0093     		str	r3, [sp]
 187 00e6 0023     		movs	r3, #0
 188 00e8 0193     		str	r3, [sp, #4]
 189 00ea 0C48     		ldr	r0, .L4
 190 00ec 0F49     		ldr	r1, .L4+16
 191 00ee 6422     		movs	r2, #100
 192 00f0 FB68     		ldr	r3, [r7, #12]
 193 00f2 FFF7FEFF 		bl	xTaskCreate
 187:..\Common\Minimal/semtest.c **** 			xTaskCreate( prvSemaphoreTest, "BlkSEM2", semtstSTACK_SIZE, ( void * ) pxSecondSemaphoreParamete
 194              		.loc 1 187 0
 195 00f6 7B68     		ldr	r3, [r7, #4]
 196 00f8 0093     		str	r3, [sp]
 197 00fa 0023     		movs	r3, #0
 198 00fc 0193     		str	r3, [sp, #4]
 199 00fe 0748     		ldr	r0, .L4
 200 0100 0B49     		ldr	r1, .L4+20
 201 0102 6422     		movs	r2, #100
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 8


 202 0104 FB68     		ldr	r3, [r7, #12]
 203 0106 FFF7FEFF 		bl	xTaskCreate
 188:..\Common\Minimal/semtest.c **** 
 189:..\Common\Minimal/semtest.c **** 			/* vQueueAddToRegistry() adds the semaphore to the registry, if one
 190:..\Common\Minimal/semtest.c **** 			is in use.  The registry is provided as a means for kernel aware
 191:..\Common\Minimal/semtest.c **** 			debuggers to locate semaphores and has no purpose if a kernel aware
 192:..\Common\Minimal/semtest.c **** 			debugger is not being used.  The call to vQueueAddToRegistry() will
 193:..\Common\Minimal/semtest.c **** 			be removed by the pre-processor if configQUEUE_REGISTRY_SIZE is not
 194:..\Common\Minimal/semtest.c **** 			defined or is defined to be less than 1. */
 195:..\Common\Minimal/semtest.c **** 			vQueueAddToRegistry( ( QueueHandle_t ) pxSecondSemaphoreParameters->xSemaphore, "Counting_Sem_2"
 204              		.loc 1 195 0
 205 010a FB68     		ldr	r3, [r7, #12]
 206 010c 1B68     		ldr	r3, [r3]
 207 010e 1846     		mov	r0, r3
 208 0110 0849     		ldr	r1, .L4+24
 209 0112 FFF7FEFF 		bl	vQueueAddToRegistry
 210              	.L1:
 196:..\Common\Minimal/semtest.c **** 		}
 197:..\Common\Minimal/semtest.c **** 	}
 198:..\Common\Minimal/semtest.c **** }
 211              		.loc 1 198 0
 212 0116 1837     		adds	r7, r7, #24
 213              		.cfi_def_cfa_offset 8
 214 0118 BD46     		mov	sp, r7
 215              		.cfi_def_cfa_register 13
 216              		@ sp needed
 217 011a 80BD     		pop	{r7, pc}
 218              	.L5:
 219              		.align	2
 220              	.L4:
 221 011c 00000000 		.word	prvSemaphoreTest
 222 0120 00000000 		.word	.LC0
 223 0124 08000000 		.word	.LC1
 224 0128 10000000 		.word	.LC2
 225 012c 20000000 		.word	.LC3
 226 0130 28000000 		.word	.LC4
 227 0134 30000000 		.word	.LC5
 228              		.cfi_endproc
 229              	.LFE68:
 230              		.size	vStartSemaphoreTasks, .-vStartSemaphoreTasks
 231              		.section	.text.prvSemaphoreTest,"ax",%progbits
 232              		.align	2
 233              		.thumb
 234              		.thumb_func
 235              		.type	prvSemaphoreTest, %function
 236              	prvSemaphoreTest:
 237              	.LFB69:
 199:..\Common\Minimal/semtest.c **** /*-----------------------------------------------------------*/
 200:..\Common\Minimal/semtest.c **** 
 201:..\Common\Minimal/semtest.c **** static portTASK_FUNCTION( prvSemaphoreTest, pvParameters )
 202:..\Common\Minimal/semtest.c **** {
 238              		.loc 1 202 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 32
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242 0000 80B5     		push	{r7, lr}
 243              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 9


 244              		.cfi_offset 7, -8
 245              		.cfi_offset 14, -4
 246 0002 88B0     		sub	sp, sp, #32
 247              		.cfi_def_cfa_offset 40
 248 0004 00AF     		add	r7, sp, #0
 249              		.cfi_def_cfa_register 7
 250 0006 7860     		str	r0, [r7, #4]
 203:..\Common\Minimal/semtest.c **** xSemaphoreParameters *pxParameters;
 204:..\Common\Minimal/semtest.c **** volatile uint32_t *pulSharedVariable, ulExpectedValue;
 205:..\Common\Minimal/semtest.c **** uint32_t ulCounter;
 206:..\Common\Minimal/semtest.c **** short sError = pdFALSE, sCheckVariableToUse;
 251              		.loc 1 206 0
 252 0008 0023     		movs	r3, #0
 253 000a 7B83     		strh	r3, [r7, #26]	@ movhi
 207:..\Common\Minimal/semtest.c **** 
 208:..\Common\Minimal/semtest.c **** 	/* See which check variable to use.  sNextCheckVariable is not semaphore
 209:..\Common\Minimal/semtest.c **** 	protected! */
 210:..\Common\Minimal/semtest.c **** 	portENTER_CRITICAL();
 254              		.loc 1 210 0
 255 000c FFF7FEFF 		bl	vPortEnterCritical
 211:..\Common\Minimal/semtest.c **** 		sCheckVariableToUse = sNextCheckVariable;
 256              		.loc 1 211 0
 257 0010 3F4B     		ldr	r3, .L17
 258 0012 1B88     		ldrh	r3, [r3]	@ movhi
 259 0014 3B83     		strh	r3, [r7, #24]	@ movhi
 212:..\Common\Minimal/semtest.c **** 		sNextCheckVariable++;
 260              		.loc 1 212 0
 261 0016 3E4B     		ldr	r3, .L17
 262 0018 1B88     		ldrh	r3, [r3]	@ movhi
 263 001a 9BB2     		uxth	r3, r3
 264 001c 9BB2     		uxth	r3, r3
 265 001e 9BB2     		uxth	r3, r3
 266 0020 0133     		adds	r3, r3, #1
 267 0022 9BB2     		uxth	r3, r3
 268 0024 9AB2     		uxth	r2, r3
 269 0026 3A4B     		ldr	r3, .L17
 270 0028 1A80     		strh	r2, [r3]	@ movhi
 213:..\Common\Minimal/semtest.c **** 	portEXIT_CRITICAL();
 271              		.loc 1 213 0
 272 002a FFF7FEFF 		bl	vPortExitCritical
 214:..\Common\Minimal/semtest.c **** 
 215:..\Common\Minimal/semtest.c **** 	/* A structure is passed in as the parameter.  This contains the shared
 216:..\Common\Minimal/semtest.c **** 	variable being guarded. */
 217:..\Common\Minimal/semtest.c **** 	pxParameters = ( xSemaphoreParameters * ) pvParameters;
 273              		.loc 1 217 0
 274 002e 7B68     		ldr	r3, [r7, #4]
 275 0030 7B61     		str	r3, [r7, #20]
 218:..\Common\Minimal/semtest.c **** 	pulSharedVariable = pxParameters->pulSharedVariable;
 276              		.loc 1 218 0
 277 0032 7B69     		ldr	r3, [r7, #20]
 278 0034 5B68     		ldr	r3, [r3, #4]
 279 0036 3B61     		str	r3, [r7, #16]
 219:..\Common\Minimal/semtest.c **** 
 220:..\Common\Minimal/semtest.c **** 	/* If we are blocking we use a much higher count to ensure loads of context
 221:..\Common\Minimal/semtest.c **** 	switches occur during the count. */
 222:..\Common\Minimal/semtest.c **** 	if( pxParameters->xBlockTime > ( TickType_t ) 0 )
 280              		.loc 1 222 0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 10


 281 0038 7B69     		ldr	r3, [r7, #20]
 282 003a 9B68     		ldr	r3, [r3, #8]
 283 003c 002B     		cmp	r3, #0
 284 003e 03D0     		beq	.L7
 223:..\Common\Minimal/semtest.c **** 	{
 224:..\Common\Minimal/semtest.c **** 		ulExpectedValue = semtstBLOCKING_EXPECTED_VALUE;
 285              		.loc 1 224 0
 286 0040 40F6FF73 		movw	r3, #4095
 287 0044 FB60     		str	r3, [r7, #12]
 288 0046 01E0     		b	.L8
 289              	.L7:
 225:..\Common\Minimal/semtest.c **** 	}
 226:..\Common\Minimal/semtest.c **** 	else
 227:..\Common\Minimal/semtest.c **** 	{
 228:..\Common\Minimal/semtest.c **** 		ulExpectedValue = semtstNON_BLOCKING_EXPECTED_VALUE;
 290              		.loc 1 228 0
 291 0048 FF23     		movs	r3, #255
 292 004a FB60     		str	r3, [r7, #12]
 293              	.L8:
 229:..\Common\Minimal/semtest.c **** 	}
 230:..\Common\Minimal/semtest.c **** 
 231:..\Common\Minimal/semtest.c **** 	for( ;; )
 232:..\Common\Minimal/semtest.c **** 	{
 233:..\Common\Minimal/semtest.c **** 		/* Try to obtain the semaphore. */
 234:..\Common\Minimal/semtest.c **** 		if( xSemaphoreTake( pxParameters->xSemaphore, pxParameters->xBlockTime ) == pdPASS )
 294              		.loc 1 234 0
 295 004c 7B69     		ldr	r3, [r7, #20]
 296 004e 1A68     		ldr	r2, [r3]
 297 0050 7B69     		ldr	r3, [r7, #20]
 298 0052 9B68     		ldr	r3, [r3, #8]
 299 0054 1046     		mov	r0, r2
 300 0056 0021     		movs	r1, #0
 301 0058 1A46     		mov	r2, r3
 302 005a 0023     		movs	r3, #0
 303 005c FFF7FEFF 		bl	xQueueGenericReceive
 304 0060 0346     		mov	r3, r0
 305 0062 012B     		cmp	r3, #1
 306 0064 47D1     		bne	.L9
 235:..\Common\Minimal/semtest.c **** 		{
 236:..\Common\Minimal/semtest.c **** 			/* We have the semaphore and so expect any other tasks using the
 237:..\Common\Minimal/semtest.c **** 			shared variable to have left it in the state we expect to find
 238:..\Common\Minimal/semtest.c **** 			it. */
 239:..\Common\Minimal/semtest.c **** 			if( *pulSharedVariable != ulExpectedValue )
 307              		.loc 1 239 0
 308 0066 3B69     		ldr	r3, [r7, #16]
 309 0068 1A68     		ldr	r2, [r3]
 310 006a FB68     		ldr	r3, [r7, #12]
 311 006c 9A42     		cmp	r2, r3
 312 006e 01D0     		beq	.L10
 240:..\Common\Minimal/semtest.c **** 			{
 241:..\Common\Minimal/semtest.c **** 				sError = pdTRUE;
 313              		.loc 1 241 0
 314 0070 0123     		movs	r3, #1
 315 0072 7B83     		strh	r3, [r7, #26]	@ movhi
 316              	.L10:
 242:..\Common\Minimal/semtest.c **** 			}
 243:..\Common\Minimal/semtest.c **** 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 11


 244:..\Common\Minimal/semtest.c **** 			/* Clear the variable, then count it back up to the expected value
 245:..\Common\Minimal/semtest.c **** 			before releasing the semaphore.  Would expect a context switch or
 246:..\Common\Minimal/semtest.c **** 			two during this time. */
 247:..\Common\Minimal/semtest.c **** 			for( ulCounter = ( uint32_t ) 0; ulCounter <= ulExpectedValue; ulCounter++ )
 317              		.loc 1 247 0
 318 0074 0023     		movs	r3, #0
 319 0076 FB61     		str	r3, [r7, #28]
 320 0078 0CE0     		b	.L11
 321              	.L13:
 248:..\Common\Minimal/semtest.c **** 			{
 249:..\Common\Minimal/semtest.c **** 				*pulSharedVariable = ulCounter;
 322              		.loc 1 249 0
 323 007a 3B69     		ldr	r3, [r7, #16]
 324 007c FA69     		ldr	r2, [r7, #28]
 325 007e 1A60     		str	r2, [r3]
 250:..\Common\Minimal/semtest.c **** 				if( *pulSharedVariable != ulCounter )
 326              		.loc 1 250 0
 327 0080 3B69     		ldr	r3, [r7, #16]
 328 0082 1A68     		ldr	r2, [r3]
 329 0084 FB69     		ldr	r3, [r7, #28]
 330 0086 9A42     		cmp	r2, r3
 331 0088 01D0     		beq	.L12
 251:..\Common\Minimal/semtest.c **** 				{
 252:..\Common\Minimal/semtest.c **** 					sError = pdTRUE;
 332              		.loc 1 252 0
 333 008a 0123     		movs	r3, #1
 334 008c 7B83     		strh	r3, [r7, #26]	@ movhi
 335              	.L12:
 247:..\Common\Minimal/semtest.c **** 			{
 336              		.loc 1 247 0 discriminator 2
 337 008e FB69     		ldr	r3, [r7, #28]
 338 0090 0133     		adds	r3, r3, #1
 339 0092 FB61     		str	r3, [r7, #28]
 340              	.L11:
 247:..\Common\Minimal/semtest.c **** 			{
 341              		.loc 1 247 0 is_stmt 0 discriminator 1
 342 0094 FB68     		ldr	r3, [r7, #12]
 343 0096 FA69     		ldr	r2, [r7, #28]
 344 0098 9A42     		cmp	r2, r3
 345 009a EED9     		bls	.L13
 253:..\Common\Minimal/semtest.c **** 				}
 254:..\Common\Minimal/semtest.c **** 			}
 255:..\Common\Minimal/semtest.c **** 
 256:..\Common\Minimal/semtest.c **** 			/* Release the semaphore, and if no errors have occurred increment the check
 257:..\Common\Minimal/semtest.c **** 			variable. */
 258:..\Common\Minimal/semtest.c **** 			if(	xSemaphoreGive( pxParameters->xSemaphore ) == pdFALSE )
 346              		.loc 1 258 0 is_stmt 1
 347 009c 7B69     		ldr	r3, [r7, #20]
 348 009e 1B68     		ldr	r3, [r3]
 349 00a0 1846     		mov	r0, r3
 350 00a2 0021     		movs	r1, #0
 351 00a4 0022     		movs	r2, #0
 352 00a6 0023     		movs	r3, #0
 353 00a8 FFF7FEFF 		bl	xQueueGenericSend
 354 00ac 0346     		mov	r3, r0
 355 00ae 002B     		cmp	r3, #0
 356 00b0 01D1     		bne	.L14
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 12


 259:..\Common\Minimal/semtest.c **** 			{
 260:..\Common\Minimal/semtest.c **** 				sError = pdTRUE;
 357              		.loc 1 260 0
 358 00b2 0123     		movs	r3, #1
 359 00b4 7B83     		strh	r3, [r7, #26]	@ movhi
 360              	.L14:
 261:..\Common\Minimal/semtest.c **** 			}
 262:..\Common\Minimal/semtest.c **** 
 263:..\Common\Minimal/semtest.c **** 			if( sError == pdFALSE )
 361              		.loc 1 263 0
 362 00b6 B7F91A30 		ldrsh	r3, [r7, #26]
 363 00ba 002B     		cmp	r3, #0
 364 00bc 11D1     		bne	.L15
 264:..\Common\Minimal/semtest.c **** 			{
 265:..\Common\Minimal/semtest.c **** 				if( sCheckVariableToUse < semtstNUM_TASKS )
 365              		.loc 1 265 0
 366 00be B7F91830 		ldrsh	r3, [r7, #24]
 367 00c2 032B     		cmp	r3, #3
 368 00c4 0DDC     		bgt	.L15
 266:..\Common\Minimal/semtest.c **** 				{
 267:..\Common\Minimal/semtest.c **** 					( sCheckVariables[ sCheckVariableToUse ] )++;
 369              		.loc 1 267 0
 370 00c6 B7F91820 		ldrsh	r2, [r7, #24]
 371 00ca 124B     		ldr	r3, .L17+4
 372 00cc 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 373 00d0 9BB2     		uxth	r3, r3
 374 00d2 9BB2     		uxth	r3, r3
 375 00d4 9BB2     		uxth	r3, r3
 376 00d6 0133     		adds	r3, r3, #1
 377 00d8 9BB2     		uxth	r3, r3
 378 00da 99B2     		uxth	r1, r3
 379 00dc 0D4B     		ldr	r3, .L17+4
 380 00de 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 381              	.L15:
 268:..\Common\Minimal/semtest.c **** 				}
 269:..\Common\Minimal/semtest.c **** 			}
 270:..\Common\Minimal/semtest.c **** 
 271:..\Common\Minimal/semtest.c **** 			/* If we have a block time then we are running at a priority higher
 272:..\Common\Minimal/semtest.c **** 			than the idle priority.  This task takes a long time to complete
 273:..\Common\Minimal/semtest.c **** 			a cycle	(deliberately so to test the guarding) so will be starving
 274:..\Common\Minimal/semtest.c **** 			out lower priority tasks.  Block for some time to allow give lower
 275:..\Common\Minimal/semtest.c **** 			priority tasks some processor time. */
 276:..\Common\Minimal/semtest.c **** 			vTaskDelay( pxParameters->xBlockTime * semtstDELAY_FACTOR );
 382              		.loc 1 276 0
 383 00e2 7B69     		ldr	r3, [r7, #20]
 384 00e4 9A68     		ldr	r2, [r3, #8]
 385 00e6 1346     		mov	r3, r2
 386 00e8 9B00     		lsls	r3, r3, #2
 387 00ea 1344     		add	r3, r3, r2
 388 00ec 5B00     		lsls	r3, r3, #1
 389 00ee 1846     		mov	r0, r3
 390 00f0 FFF7FEFF 		bl	vTaskDelay
 391 00f4 0BE0     		b	.L16
 392              	.L9:
 277:..\Common\Minimal/semtest.c **** 		}
 278:..\Common\Minimal/semtest.c **** 		else
 279:..\Common\Minimal/semtest.c **** 		{
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 13


 280:..\Common\Minimal/semtest.c **** 			if( pxParameters->xBlockTime == ( TickType_t ) 0 )
 393              		.loc 1 280 0
 394 00f6 7B69     		ldr	r3, [r7, #20]
 395 00f8 9B68     		ldr	r3, [r3, #8]
 396 00fa 002B     		cmp	r3, #0
 397 00fc 07D1     		bne	.L16
 281:..\Common\Minimal/semtest.c **** 			{
 282:..\Common\Minimal/semtest.c **** 				/* We have not got the semaphore yet, so no point using the
 283:..\Common\Minimal/semtest.c **** 				processor.  We are not blocking when attempting to obtain the
 284:..\Common\Minimal/semtest.c **** 				semaphore. */
 285:..\Common\Minimal/semtest.c **** 				taskYIELD();
 398              		.loc 1 285 0
 399 00fe 064B     		ldr	r3, .L17+8
 400 0100 4FF08052 		mov	r2, #268435456
 401 0104 1A60     		str	r2, [r3]
 402              	@ 285 "..\Common\Minimal\semtest.c" 1
 403 0106 BFF34F8F 		dsb
 404              	@ 0 "" 2
 405              	@ 285 "..\Common\Minimal\semtest.c" 1
 406 010a BFF36F8F 		isb
 407              	@ 0 "" 2
 408              		.thumb
 409              	.L16:
 286:..\Common\Minimal/semtest.c **** 			}
 287:..\Common\Minimal/semtest.c **** 		}
 288:..\Common\Minimal/semtest.c **** 	}
 410              		.loc 1 288 0
 411 010e 9DE7     		b	.L8
 412              	.L18:
 413              		.align	2
 414              	.L17:
 415 0110 08000000 		.word	sNextCheckVariable
 416 0114 00000000 		.word	sCheckVariables
 417 0118 04ED00E0 		.word	-536810236
 418              		.cfi_endproc
 419              	.LFE69:
 420              		.size	prvSemaphoreTest, .-prvSemaphoreTest
 421              		.section	.text.xAreSemaphoreTasksStillRunning,"ax",%progbits
 422              		.align	2
 423              		.global	xAreSemaphoreTasksStillRunning
 424              		.thumb
 425              		.thumb_func
 426              		.type	xAreSemaphoreTasksStillRunning, %function
 427              	xAreSemaphoreTasksStillRunning:
 428              	.LFB70:
 289:..\Common\Minimal/semtest.c **** }
 290:..\Common\Minimal/semtest.c **** /*-----------------------------------------------------------*/
 291:..\Common\Minimal/semtest.c **** 
 292:..\Common\Minimal/semtest.c **** /* This is called to check that all the created tasks are still running. */
 293:..\Common\Minimal/semtest.c **** BaseType_t xAreSemaphoreTasksStillRunning( void )
 294:..\Common\Minimal/semtest.c **** {
 429              		.loc 1 294 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 8
 432              		@ frame_needed = 1, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434 0000 80B4     		push	{r7}
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 14


 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              		.cfi_def_cfa_offset 16
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 295:..\Common\Minimal/semtest.c **** static short sLastCheckVariables[ semtstNUM_TASKS ] = { 0 };
 296:..\Common\Minimal/semtest.c **** BaseType_t xTask, xReturn = pdTRUE;
 441              		.loc 1 296 0
 442 0006 0123     		movs	r3, #1
 443 0008 3B60     		str	r3, [r7]
 297:..\Common\Minimal/semtest.c **** 
 298:..\Common\Minimal/semtest.c **** 	for( xTask = 0; xTask < semtstNUM_TASKS; xTask++ )
 444              		.loc 1 298 0
 445 000a 0023     		movs	r3, #0
 446 000c 7B60     		str	r3, [r7, #4]
 447 000e 1AE0     		b	.L20
 448              	.L22:
 299:..\Common\Minimal/semtest.c **** 	{
 300:..\Common\Minimal/semtest.c **** 		if( sLastCheckVariables[ xTask ] == sCheckVariables[ xTask ] )
 449              		.loc 1 300 0
 450 0010 124A     		ldr	r2, .L24
 451 0012 7B68     		ldr	r3, [r7, #4]
 452 0014 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 453 0018 114A     		ldr	r2, .L24+4
 454 001a 7B68     		ldr	r3, [r7, #4]
 455 001c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 456 0020 9BB2     		uxth	r3, r3
 457 0022 0AB2     		sxth	r2, r1
 458 0024 1BB2     		sxth	r3, r3
 459 0026 9A42     		cmp	r2, r3
 460 0028 01D1     		bne	.L21
 301:..\Common\Minimal/semtest.c **** 		{
 302:..\Common\Minimal/semtest.c **** 			xReturn = pdFALSE;
 461              		.loc 1 302 0
 462 002a 0023     		movs	r3, #0
 463 002c 3B60     		str	r3, [r7]
 464              	.L21:
 303:..\Common\Minimal/semtest.c **** 		}
 304:..\Common\Minimal/semtest.c **** 
 305:..\Common\Minimal/semtest.c **** 		sLastCheckVariables[ xTask ] = sCheckVariables[ xTask ];
 465              		.loc 1 305 0 discriminator 2
 466 002e 0C4A     		ldr	r2, .L24+4
 467 0030 7B68     		ldr	r3, [r7, #4]
 468 0032 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 469 0036 99B2     		uxth	r1, r3
 470 0038 084A     		ldr	r2, .L24
 471 003a 7B68     		ldr	r3, [r7, #4]
 472 003c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 298:..\Common\Minimal/semtest.c **** 	{
 473              		.loc 1 298 0 discriminator 2
 474 0040 7B68     		ldr	r3, [r7, #4]
 475 0042 0133     		adds	r3, r3, #1
 476 0044 7B60     		str	r3, [r7, #4]
 477              	.L20:
 298:..\Common\Minimal/semtest.c **** 	{
 478              		.loc 1 298 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 15


 479 0046 7B68     		ldr	r3, [r7, #4]
 480 0048 032B     		cmp	r3, #3
 481 004a E1DD     		ble	.L22
 306:..\Common\Minimal/semtest.c **** 	}
 307:..\Common\Minimal/semtest.c **** 
 308:..\Common\Minimal/semtest.c **** 	return xReturn;
 482              		.loc 1 308 0 is_stmt 1
 483 004c 3B68     		ldr	r3, [r7]
 309:..\Common\Minimal/semtest.c **** }
 484              		.loc 1 309 0
 485 004e 1846     		mov	r0, r3
 486 0050 0C37     		adds	r7, r7, #12
 487              		.cfi_def_cfa_offset 4
 488 0052 BD46     		mov	sp, r7
 489              		.cfi_def_cfa_register 13
 490              		@ sp needed
 491 0054 5DF8047B 		ldr	r7, [sp], #4
 492              		.cfi_restore 7
 493              		.cfi_def_cfa_offset 0
 494 0058 7047     		bx	lr
 495              	.L25:
 496 005a 00BF     		.align	2
 497              	.L24:
 498 005c 0C000000 		.word	sLastCheckVariables.7084
 499 0060 00000000 		.word	sCheckVariables
 500              		.cfi_endproc
 501              	.LFE70:
 502              		.size	xAreSemaphoreTasksStillRunning, .-xAreSemaphoreTasksStillRunning
 503              		.bss
 504 000a 0000     		.align	2
 505              	sLastCheckVariables.7084:
 506 000c 00000000 		.space	8
 506      00000000 
 507              		.text
 508              	.Letext0:
 509              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 510              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 511              		.file 4 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 512              		.file 5 "..\\Source\\include/task.h"
 513              		.file 6 "..\\Source\\include/queue.h"
 514              		.file 7 "..\\Source\\include/semphr.h"
 515              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 516              		.section	.debug_info,"",%progbits
 517              	.Ldebug_info0:
 518 0000 BA020000 		.4byte	0x2ba
 519 0004 0400     		.2byte	0x4
 520 0006 00000000 		.4byte	.Ldebug_abbrev0
 521 000a 04       		.byte	0x4
 522 000b 01       		.uleb128 0x1
 523 000c 62000000 		.4byte	.LASF43
 524 0010 01       		.byte	0x1
 525 0011 4A010000 		.4byte	.LASF44
 526 0015 35030000 		.4byte	.LASF45
 527 0019 00000000 		.4byte	.Ldebug_ranges0+0
 528 001d 00000000 		.4byte	0
 529 0021 00000000 		.4byte	.Ldebug_line0
 530 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 16


 531 0026 04       		.byte	0x4
 532 0027 07       		.byte	0x7
 533 0028 2C020000 		.4byte	.LASF0
 534 002c 03       		.uleb128 0x3
 535 002d 04       		.byte	0x4
 536 002e 05       		.byte	0x5
 537 002f 696E7400 		.ascii	"int\000"
 538 0033 02       		.uleb128 0x2
 539 0034 01       		.byte	0x1
 540 0035 06       		.byte	0x6
 541 0036 FD020000 		.4byte	.LASF1
 542 003a 04       		.uleb128 0x4
 543 003b 2B000000 		.4byte	.LASF5
 544 003f 02       		.byte	0x2
 545 0040 1D       		.byte	0x1d
 546 0041 45000000 		.4byte	0x45
 547 0045 02       		.uleb128 0x2
 548 0046 01       		.byte	0x1
 549 0047 08       		.byte	0x8
 550 0048 7A010000 		.4byte	.LASF2
 551 004c 02       		.uleb128 0x2
 552 004d 02       		.byte	0x2
 553 004e 05       		.byte	0x5
 554 004f CC020000 		.4byte	.LASF3
 555 0053 02       		.uleb128 0x2
 556 0054 02       		.byte	0x2
 557 0055 07       		.byte	0x7
 558 0056 9A010000 		.4byte	.LASF4
 559 005a 04       		.uleb128 0x4
 560 005b 58000000 		.4byte	.LASF6
 561 005f 02       		.byte	0x2
 562 0060 3F       		.byte	0x3f
 563 0061 65000000 		.4byte	0x65
 564 0065 02       		.uleb128 0x2
 565 0066 04       		.byte	0x4
 566 0067 05       		.byte	0x5
 567 0068 EC020000 		.4byte	.LASF7
 568 006c 04       		.uleb128 0x4
 569 006d 09020000 		.4byte	.LASF8
 570 0071 02       		.byte	0x2
 571 0072 41       		.byte	0x41
 572 0073 77000000 		.4byte	0x77
 573 0077 02       		.uleb128 0x2
 574 0078 04       		.byte	0x4
 575 0079 07       		.byte	0x7
 576 007a 88010000 		.4byte	.LASF9
 577 007e 02       		.uleb128 0x2
 578 007f 08       		.byte	0x8
 579 0080 05       		.byte	0x5
 580 0081 88020000 		.4byte	.LASF10
 581 0085 02       		.uleb128 0x2
 582 0086 08       		.byte	0x8
 583 0087 07       		.byte	0x7
 584 0088 39020000 		.4byte	.LASF11
 585 008c 02       		.uleb128 0x2
 586 008d 04       		.byte	0x4
 587 008e 07       		.byte	0x7
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 17


 588 008f 7F020000 		.4byte	.LASF12
 589 0093 05       		.uleb128 0x5
 590 0094 04       		.byte	0x4
 591 0095 02       		.uleb128 0x2
 592 0096 01       		.byte	0x1
 593 0097 08       		.byte	0x8
 594 0098 96020000 		.4byte	.LASF13
 595 009c 04       		.uleb128 0x4
 596 009d 50020000 		.4byte	.LASF14
 597 00a1 03       		.byte	0x3
 598 00a2 15       		.byte	0x15
 599 00a3 3A000000 		.4byte	0x3a
 600 00a7 04       		.uleb128 0x4
 601 00a8 42010000 		.4byte	.LASF15
 602 00ac 03       		.byte	0x3
 603 00ad 2C       		.byte	0x2c
 604 00ae 5A000000 		.4byte	0x5a
 605 00b2 04       		.uleb128 0x4
 606 00b3 E3020000 		.4byte	.LASF16
 607 00b7 03       		.byte	0x3
 608 00b8 2D       		.byte	0x2d
 609 00b9 6C000000 		.4byte	0x6c
 610 00bd 02       		.uleb128 0x2
 611 00be 04       		.byte	0x4
 612 00bf 04       		.byte	0x4
 613 00c0 40000000 		.4byte	.LASF17
 614 00c4 02       		.uleb128 0x2
 615 00c5 08       		.byte	0x8
 616 00c6 04       		.byte	0x4
 617 00c7 F1010000 		.4byte	.LASF18
 618 00cb 06       		.uleb128 0x6
 619 00cc B2000000 		.4byte	0xb2
 620 00d0 04       		.uleb128 0x4
 621 00d1 2A030000 		.4byte	.LASF19
 622 00d5 04       		.byte	0x4
 623 00d6 62       		.byte	0x62
 624 00d7 65000000 		.4byte	0x65
 625 00db 04       		.uleb128 0x4
 626 00dc 1E030000 		.4byte	.LASF20
 627 00e0 04       		.byte	0x4
 628 00e1 63       		.byte	0x63
 629 00e2 77000000 		.4byte	0x77
 630 00e6 04       		.uleb128 0x4
 631 00e7 35000000 		.4byte	.LASF21
 632 00eb 04       		.byte	0x4
 633 00ec 69       		.byte	0x69
 634 00ed B2000000 		.4byte	0xb2
 635 00f1 04       		.uleb128 0x4
 636 00f2 D6020000 		.4byte	.LASF22
 637 00f6 05       		.byte	0x5
 638 00f7 67       		.byte	0x67
 639 00f8 93000000 		.4byte	0x93
 640 00fc 04       		.uleb128 0x4
 641 00fd F0000000 		.4byte	.LASF23
 642 0101 06       		.byte	0x6
 643 0102 58       		.byte	0x58
 644 0103 93000000 		.4byte	0x93
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 18


 645 0107 04       		.uleb128 0x4
 646 0108 FE000000 		.4byte	.LASF24
 647 010c 07       		.byte	0x7
 648 010d 4F       		.byte	0x4f
 649 010e FC000000 		.4byte	0xfc
 650 0112 07       		.uleb128 0x7
 651 0113 7C030000 		.4byte	.LASF46
 652 0117 0C       		.byte	0xc
 653 0118 01       		.byte	0x1
 654 0119 76       		.byte	0x76
 655 011a 43010000 		.4byte	0x143
 656 011e 08       		.uleb128 0x8
 657 011f 00000000 		.4byte	.LASF25
 658 0123 01       		.byte	0x1
 659 0124 78       		.byte	0x78
 660 0125 07010000 		.4byte	0x107
 661 0129 00       		.byte	0
 662 012a 08       		.uleb128 0x8
 663 012b 46000000 		.4byte	.LASF26
 664 012f 01       		.byte	0x1
 665 0130 79       		.byte	0x79
 666 0131 43010000 		.4byte	0x143
 667 0135 04       		.byte	0x4
 668 0136 08       		.uleb128 0x8
 669 0137 74020000 		.4byte	.LASF27
 670 013b 01       		.byte	0x1
 671 013c 7A       		.byte	0x7a
 672 013d E6000000 		.4byte	0xe6
 673 0141 08       		.byte	0x8
 674 0142 00       		.byte	0
 675 0143 09       		.uleb128 0x9
 676 0144 04       		.byte	0x4
 677 0145 CB000000 		.4byte	0xcb
 678 0149 04       		.uleb128 0x4
 679 014a 5F020000 		.4byte	.LASF28
 680 014e 01       		.byte	0x1
 681 014f 7B       		.byte	0x7b
 682 0150 12010000 		.4byte	0x112
 683 0154 0A       		.uleb128 0xa
 684 0155 09030000 		.4byte	.LASF47
 685 0159 01       		.byte	0x1
 686 015a 83       		.byte	0x83
 687 015b 00000000 		.4byte	.LFB68
 688 015f 38010000 		.4byte	.LFE68-.LFB68
 689 0163 01       		.uleb128 0x1
 690 0164 9C       		.byte	0x9c
 691 0165 A2010000 		.4byte	0x1a2
 692 0169 0B       		.uleb128 0xb
 693 016a 21020000 		.4byte	.LASF31
 694 016e 01       		.byte	0x1
 695 016f 83       		.byte	0x83
 696 0170 DB000000 		.4byte	0xdb
 697 0174 02       		.uleb128 0x2
 698 0175 91       		.byte	0x91
 699 0176 64       		.sleb128 -28
 700 0177 0C       		.uleb128 0xc
 701 0178 AD010000 		.4byte	.LASF29
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 19


 702 017c 01       		.byte	0x1
 703 017d 85       		.byte	0x85
 704 017e A2010000 		.4byte	0x1a2
 705 0182 02       		.uleb128 0x2
 706 0183 91       		.byte	0x91
 707 0184 70       		.sleb128 -16
 708 0185 0C       		.uleb128 0xc
 709 0186 D5010000 		.4byte	.LASF30
 710 018a 01       		.byte	0x1
 711 018b 85       		.byte	0x85
 712 018c A2010000 		.4byte	0x1a2
 713 0190 02       		.uleb128 0x2
 714 0191 91       		.byte	0x91
 715 0192 6C       		.sleb128 -20
 716 0193 0C       		.uleb128 0xc
 717 0194 74020000 		.4byte	.LASF27
 718 0198 01       		.byte	0x1
 719 0199 86       		.byte	0x86
 720 019a A8010000 		.4byte	0x1a8
 721 019e 02       		.uleb128 0x2
 722 019f 91       		.byte	0x91
 723 01a0 74       		.sleb128 -12
 724 01a1 00       		.byte	0
 725 01a2 09       		.uleb128 0x9
 726 01a3 04       		.byte	0x4
 727 01a4 49010000 		.4byte	0x149
 728 01a8 0D       		.uleb128 0xd
 729 01a9 E6000000 		.4byte	0xe6
 730 01ad 0E       		.uleb128 0xe
 731 01ae F8010000 		.4byte	.LASF48
 732 01b2 01       		.byte	0x1
 733 01b3 C9       		.byte	0xc9
 734 01b4 00000000 		.4byte	.LFB69
 735 01b8 1C010000 		.4byte	.LFE69-.LFB69
 736 01bc 01       		.uleb128 0x1
 737 01bd 9C       		.byte	0x9c
 738 01be 25020000 		.4byte	0x225
 739 01c2 0B       		.uleb128 0xb
 740 01c3 9B020000 		.4byte	.LASF32
 741 01c7 01       		.byte	0x1
 742 01c8 C9       		.byte	0xc9
 743 01c9 93000000 		.4byte	0x93
 744 01cd 02       		.uleb128 0x2
 745 01ce 91       		.byte	0x91
 746 01cf 5C       		.sleb128 -36
 747 01d0 0C       		.uleb128 0xc
 748 01d1 C8010000 		.4byte	.LASF33
 749 01d5 01       		.byte	0x1
 750 01d6 CB       		.byte	0xcb
 751 01d7 A2010000 		.4byte	0x1a2
 752 01db 02       		.uleb128 0x2
 753 01dc 91       		.byte	0x91
 754 01dd 6C       		.sleb128 -20
 755 01de 0C       		.uleb128 0xc
 756 01df 46000000 		.4byte	.LASF26
 757 01e3 01       		.byte	0x1
 758 01e4 CC       		.byte	0xcc
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 20


 759 01e5 43010000 		.4byte	0x143
 760 01e9 02       		.uleb128 0x2
 761 01ea 91       		.byte	0x91
 762 01eb 68       		.sleb128 -24
 763 01ec 0C       		.uleb128 0xc
 764 01ed BC020000 		.4byte	.LASF34
 765 01f1 01       		.byte	0x1
 766 01f2 CC       		.byte	0xcc
 767 01f3 CB000000 		.4byte	0xcb
 768 01f7 02       		.uleb128 0x2
 769 01f8 91       		.byte	0x91
 770 01f9 64       		.sleb128 -28
 771 01fa 0C       		.uleb128 0xc
 772 01fb 21000000 		.4byte	.LASF35
 773 01ff 01       		.byte	0x1
 774 0200 CD       		.byte	0xcd
 775 0201 B2000000 		.4byte	0xb2
 776 0205 02       		.uleb128 0x2
 777 0206 91       		.byte	0x91
 778 0207 74       		.sleb128 -12
 779 0208 0C       		.uleb128 0xc
 780 0209 58020000 		.4byte	.LASF36
 781 020d 01       		.byte	0x1
 782 020e CE       		.byte	0xce
 783 020f 4C000000 		.4byte	0x4c
 784 0213 02       		.uleb128 0x2
 785 0214 91       		.byte	0x91
 786 0215 72       		.sleb128 -14
 787 0216 0C       		.uleb128 0xc
 788 0217 66010000 		.4byte	.LASF37
 789 021b 01       		.byte	0x1
 790 021c CE       		.byte	0xce
 791 021d 4C000000 		.4byte	0x4c
 792 0221 02       		.uleb128 0x2
 793 0222 91       		.byte	0x91
 794 0223 70       		.sleb128 -16
 795 0224 00       		.byte	0
 796 0225 0F       		.uleb128 0xf
 797 0226 23010000 		.4byte	.LASF49
 798 022a 01       		.byte	0x1
 799 022b 2501     		.2byte	0x125
 800 022d D0000000 		.4byte	0xd0
 801 0231 00000000 		.4byte	.LFB70
 802 0235 64000000 		.4byte	.LFE70-.LFB70
 803 0239 01       		.uleb128 0x1
 804 023a 9C       		.byte	0x9c
 805 023b 70020000 		.4byte	0x270
 806 023f 10       		.uleb128 0x10
 807 0240 A8020000 		.4byte	.LASF38
 808 0244 01       		.byte	0x1
 809 0245 2701     		.2byte	0x127
 810 0247 70020000 		.4byte	0x270
 811 024b 05       		.uleb128 0x5
 812 024c 03       		.byte	0x3
 813 024d 0C000000 		.4byte	sLastCheckVariables.7084
 814 0251 10       		.uleb128 0x10
 815 0252 0B000000 		.4byte	.LASF39
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 21


 816 0256 01       		.byte	0x1
 817 0257 2801     		.2byte	0x128
 818 0259 D0000000 		.4byte	0xd0
 819 025d 02       		.uleb128 0x2
 820 025e 91       		.byte	0x91
 821 025f 74       		.sleb128 -12
 822 0260 10       		.uleb128 0x10
 823 0261 F5020000 		.4byte	.LASF40
 824 0265 01       		.byte	0x1
 825 0266 2801     		.2byte	0x128
 826 0268 D0000000 		.4byte	0xd0
 827 026c 02       		.uleb128 0x2
 828 026d 91       		.byte	0x91
 829 026e 70       		.sleb128 -16
 830 026f 00       		.byte	0
 831 0270 11       		.uleb128 0x11
 832 0271 4C000000 		.4byte	0x4c
 833 0275 80020000 		.4byte	0x280
 834 0279 12       		.uleb128 0x12
 835 027a 8C000000 		.4byte	0x8c
 836 027e 03       		.byte	0x3
 837 027f 00       		.byte	0
 838 0280 0C       		.uleb128 0xc
 839 0281 11000000 		.4byte	.LASF41
 840 0285 01       		.byte	0x1
 841 0286 7E       		.byte	0x7e
 842 0287 91020000 		.4byte	0x291
 843 028b 05       		.uleb128 0x5
 844 028c 03       		.byte	0x3
 845 028d 00000000 		.4byte	sCheckVariables
 846 0291 06       		.uleb128 0x6
 847 0292 70020000 		.4byte	0x270
 848 0296 0C       		.uleb128 0xc
 849 0297 10010000 		.4byte	.LASF42
 850 029b 01       		.byte	0x1
 851 029c 7F       		.byte	0x7f
 852 029d A7020000 		.4byte	0x2a7
 853 02a1 05       		.uleb128 0x5
 854 02a2 03       		.byte	0x3
 855 02a3 08000000 		.4byte	sNextCheckVariable
 856 02a7 06       		.uleb128 0x6
 857 02a8 4C000000 		.4byte	0x4c
 858 02ac 13       		.uleb128 0x13
 859 02ad 14020000 		.4byte	.LASF50
 860 02b1 08       		.byte	0x8
 861 02b2 9606     		.2byte	0x696
 862 02b4 B8020000 		.4byte	0x2b8
 863 02b8 06       		.uleb128 0x6
 864 02b9 A7000000 		.4byte	0xa7
 865 02bd 00       		.byte	0
 866              		.section	.debug_abbrev,"",%progbits
 867              	.Ldebug_abbrev0:
 868 0000 01       		.uleb128 0x1
 869 0001 11       		.uleb128 0x11
 870 0002 01       		.byte	0x1
 871 0003 25       		.uleb128 0x25
 872 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 22


 873 0005 13       		.uleb128 0x13
 874 0006 0B       		.uleb128 0xb
 875 0007 03       		.uleb128 0x3
 876 0008 0E       		.uleb128 0xe
 877 0009 1B       		.uleb128 0x1b
 878 000a 0E       		.uleb128 0xe
 879 000b 55       		.uleb128 0x55
 880 000c 17       		.uleb128 0x17
 881 000d 11       		.uleb128 0x11
 882 000e 01       		.uleb128 0x1
 883 000f 10       		.uleb128 0x10
 884 0010 17       		.uleb128 0x17
 885 0011 00       		.byte	0
 886 0012 00       		.byte	0
 887 0013 02       		.uleb128 0x2
 888 0014 24       		.uleb128 0x24
 889 0015 00       		.byte	0
 890 0016 0B       		.uleb128 0xb
 891 0017 0B       		.uleb128 0xb
 892 0018 3E       		.uleb128 0x3e
 893 0019 0B       		.uleb128 0xb
 894 001a 03       		.uleb128 0x3
 895 001b 0E       		.uleb128 0xe
 896 001c 00       		.byte	0
 897 001d 00       		.byte	0
 898 001e 03       		.uleb128 0x3
 899 001f 24       		.uleb128 0x24
 900 0020 00       		.byte	0
 901 0021 0B       		.uleb128 0xb
 902 0022 0B       		.uleb128 0xb
 903 0023 3E       		.uleb128 0x3e
 904 0024 0B       		.uleb128 0xb
 905 0025 03       		.uleb128 0x3
 906 0026 08       		.uleb128 0x8
 907 0027 00       		.byte	0
 908 0028 00       		.byte	0
 909 0029 04       		.uleb128 0x4
 910 002a 16       		.uleb128 0x16
 911 002b 00       		.byte	0
 912 002c 03       		.uleb128 0x3
 913 002d 0E       		.uleb128 0xe
 914 002e 3A       		.uleb128 0x3a
 915 002f 0B       		.uleb128 0xb
 916 0030 3B       		.uleb128 0x3b
 917 0031 0B       		.uleb128 0xb
 918 0032 49       		.uleb128 0x49
 919 0033 13       		.uleb128 0x13
 920 0034 00       		.byte	0
 921 0035 00       		.byte	0
 922 0036 05       		.uleb128 0x5
 923 0037 0F       		.uleb128 0xf
 924 0038 00       		.byte	0
 925 0039 0B       		.uleb128 0xb
 926 003a 0B       		.uleb128 0xb
 927 003b 00       		.byte	0
 928 003c 00       		.byte	0
 929 003d 06       		.uleb128 0x6
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 23


 930 003e 35       		.uleb128 0x35
 931 003f 00       		.byte	0
 932 0040 49       		.uleb128 0x49
 933 0041 13       		.uleb128 0x13
 934 0042 00       		.byte	0
 935 0043 00       		.byte	0
 936 0044 07       		.uleb128 0x7
 937 0045 13       		.uleb128 0x13
 938 0046 01       		.byte	0x1
 939 0047 03       		.uleb128 0x3
 940 0048 0E       		.uleb128 0xe
 941 0049 0B       		.uleb128 0xb
 942 004a 0B       		.uleb128 0xb
 943 004b 3A       		.uleb128 0x3a
 944 004c 0B       		.uleb128 0xb
 945 004d 3B       		.uleb128 0x3b
 946 004e 0B       		.uleb128 0xb
 947 004f 01       		.uleb128 0x1
 948 0050 13       		.uleb128 0x13
 949 0051 00       		.byte	0
 950 0052 00       		.byte	0
 951 0053 08       		.uleb128 0x8
 952 0054 0D       		.uleb128 0xd
 953 0055 00       		.byte	0
 954 0056 03       		.uleb128 0x3
 955 0057 0E       		.uleb128 0xe
 956 0058 3A       		.uleb128 0x3a
 957 0059 0B       		.uleb128 0xb
 958 005a 3B       		.uleb128 0x3b
 959 005b 0B       		.uleb128 0xb
 960 005c 49       		.uleb128 0x49
 961 005d 13       		.uleb128 0x13
 962 005e 38       		.uleb128 0x38
 963 005f 0B       		.uleb128 0xb
 964 0060 00       		.byte	0
 965 0061 00       		.byte	0
 966 0062 09       		.uleb128 0x9
 967 0063 0F       		.uleb128 0xf
 968 0064 00       		.byte	0
 969 0065 0B       		.uleb128 0xb
 970 0066 0B       		.uleb128 0xb
 971 0067 49       		.uleb128 0x49
 972 0068 13       		.uleb128 0x13
 973 0069 00       		.byte	0
 974 006a 00       		.byte	0
 975 006b 0A       		.uleb128 0xa
 976 006c 2E       		.uleb128 0x2e
 977 006d 01       		.byte	0x1
 978 006e 3F       		.uleb128 0x3f
 979 006f 19       		.uleb128 0x19
 980 0070 03       		.uleb128 0x3
 981 0071 0E       		.uleb128 0xe
 982 0072 3A       		.uleb128 0x3a
 983 0073 0B       		.uleb128 0xb
 984 0074 3B       		.uleb128 0x3b
 985 0075 0B       		.uleb128 0xb
 986 0076 27       		.uleb128 0x27
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 24


 987 0077 19       		.uleb128 0x19
 988 0078 11       		.uleb128 0x11
 989 0079 01       		.uleb128 0x1
 990 007a 12       		.uleb128 0x12
 991 007b 06       		.uleb128 0x6
 992 007c 40       		.uleb128 0x40
 993 007d 18       		.uleb128 0x18
 994 007e 9642     		.uleb128 0x2116
 995 0080 19       		.uleb128 0x19
 996 0081 01       		.uleb128 0x1
 997 0082 13       		.uleb128 0x13
 998 0083 00       		.byte	0
 999 0084 00       		.byte	0
 1000 0085 0B       		.uleb128 0xb
 1001 0086 05       		.uleb128 0x5
 1002 0087 00       		.byte	0
 1003 0088 03       		.uleb128 0x3
 1004 0089 0E       		.uleb128 0xe
 1005 008a 3A       		.uleb128 0x3a
 1006 008b 0B       		.uleb128 0xb
 1007 008c 3B       		.uleb128 0x3b
 1008 008d 0B       		.uleb128 0xb
 1009 008e 49       		.uleb128 0x49
 1010 008f 13       		.uleb128 0x13
 1011 0090 02       		.uleb128 0x2
 1012 0091 18       		.uleb128 0x18
 1013 0092 00       		.byte	0
 1014 0093 00       		.byte	0
 1015 0094 0C       		.uleb128 0xc
 1016 0095 34       		.uleb128 0x34
 1017 0096 00       		.byte	0
 1018 0097 03       		.uleb128 0x3
 1019 0098 0E       		.uleb128 0xe
 1020 0099 3A       		.uleb128 0x3a
 1021 009a 0B       		.uleb128 0xb
 1022 009b 3B       		.uleb128 0x3b
 1023 009c 0B       		.uleb128 0xb
 1024 009d 49       		.uleb128 0x49
 1025 009e 13       		.uleb128 0x13
 1026 009f 02       		.uleb128 0x2
 1027 00a0 18       		.uleb128 0x18
 1028 00a1 00       		.byte	0
 1029 00a2 00       		.byte	0
 1030 00a3 0D       		.uleb128 0xd
 1031 00a4 26       		.uleb128 0x26
 1032 00a5 00       		.byte	0
 1033 00a6 49       		.uleb128 0x49
 1034 00a7 13       		.uleb128 0x13
 1035 00a8 00       		.byte	0
 1036 00a9 00       		.byte	0
 1037 00aa 0E       		.uleb128 0xe
 1038 00ab 2E       		.uleb128 0x2e
 1039 00ac 01       		.byte	0x1
 1040 00ad 03       		.uleb128 0x3
 1041 00ae 0E       		.uleb128 0xe
 1042 00af 3A       		.uleb128 0x3a
 1043 00b0 0B       		.uleb128 0xb
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 25


 1044 00b1 3B       		.uleb128 0x3b
 1045 00b2 0B       		.uleb128 0xb
 1046 00b3 27       		.uleb128 0x27
 1047 00b4 19       		.uleb128 0x19
 1048 00b5 11       		.uleb128 0x11
 1049 00b6 01       		.uleb128 0x1
 1050 00b7 12       		.uleb128 0x12
 1051 00b8 06       		.uleb128 0x6
 1052 00b9 40       		.uleb128 0x40
 1053 00ba 18       		.uleb128 0x18
 1054 00bb 9642     		.uleb128 0x2116
 1055 00bd 19       		.uleb128 0x19
 1056 00be 01       		.uleb128 0x1
 1057 00bf 13       		.uleb128 0x13
 1058 00c0 00       		.byte	0
 1059 00c1 00       		.byte	0
 1060 00c2 0F       		.uleb128 0xf
 1061 00c3 2E       		.uleb128 0x2e
 1062 00c4 01       		.byte	0x1
 1063 00c5 3F       		.uleb128 0x3f
 1064 00c6 19       		.uleb128 0x19
 1065 00c7 03       		.uleb128 0x3
 1066 00c8 0E       		.uleb128 0xe
 1067 00c9 3A       		.uleb128 0x3a
 1068 00ca 0B       		.uleb128 0xb
 1069 00cb 3B       		.uleb128 0x3b
 1070 00cc 05       		.uleb128 0x5
 1071 00cd 27       		.uleb128 0x27
 1072 00ce 19       		.uleb128 0x19
 1073 00cf 49       		.uleb128 0x49
 1074 00d0 13       		.uleb128 0x13
 1075 00d1 11       		.uleb128 0x11
 1076 00d2 01       		.uleb128 0x1
 1077 00d3 12       		.uleb128 0x12
 1078 00d4 06       		.uleb128 0x6
 1079 00d5 40       		.uleb128 0x40
 1080 00d6 18       		.uleb128 0x18
 1081 00d7 9742     		.uleb128 0x2117
 1082 00d9 19       		.uleb128 0x19
 1083 00da 01       		.uleb128 0x1
 1084 00db 13       		.uleb128 0x13
 1085 00dc 00       		.byte	0
 1086 00dd 00       		.byte	0
 1087 00de 10       		.uleb128 0x10
 1088 00df 34       		.uleb128 0x34
 1089 00e0 00       		.byte	0
 1090 00e1 03       		.uleb128 0x3
 1091 00e2 0E       		.uleb128 0xe
 1092 00e3 3A       		.uleb128 0x3a
 1093 00e4 0B       		.uleb128 0xb
 1094 00e5 3B       		.uleb128 0x3b
 1095 00e6 05       		.uleb128 0x5
 1096 00e7 49       		.uleb128 0x49
 1097 00e8 13       		.uleb128 0x13
 1098 00e9 02       		.uleb128 0x2
 1099 00ea 18       		.uleb128 0x18
 1100 00eb 00       		.byte	0
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 26


 1101 00ec 00       		.byte	0
 1102 00ed 11       		.uleb128 0x11
 1103 00ee 01       		.uleb128 0x1
 1104 00ef 01       		.byte	0x1
 1105 00f0 49       		.uleb128 0x49
 1106 00f1 13       		.uleb128 0x13
 1107 00f2 01       		.uleb128 0x1
 1108 00f3 13       		.uleb128 0x13
 1109 00f4 00       		.byte	0
 1110 00f5 00       		.byte	0
 1111 00f6 12       		.uleb128 0x12
 1112 00f7 21       		.uleb128 0x21
 1113 00f8 00       		.byte	0
 1114 00f9 49       		.uleb128 0x49
 1115 00fa 13       		.uleb128 0x13
 1116 00fb 2F       		.uleb128 0x2f
 1117 00fc 0B       		.uleb128 0xb
 1118 00fd 00       		.byte	0
 1119 00fe 00       		.byte	0
 1120 00ff 13       		.uleb128 0x13
 1121 0100 34       		.uleb128 0x34
 1122 0101 00       		.byte	0
 1123 0102 03       		.uleb128 0x3
 1124 0103 0E       		.uleb128 0xe
 1125 0104 3A       		.uleb128 0x3a
 1126 0105 0B       		.uleb128 0xb
 1127 0106 3B       		.uleb128 0x3b
 1128 0107 05       		.uleb128 0x5
 1129 0108 49       		.uleb128 0x49
 1130 0109 13       		.uleb128 0x13
 1131 010a 3F       		.uleb128 0x3f
 1132 010b 19       		.uleb128 0x19
 1133 010c 3C       		.uleb128 0x3c
 1134 010d 19       		.uleb128 0x19
 1135 010e 00       		.byte	0
 1136 010f 00       		.byte	0
 1137 0110 00       		.byte	0
 1138              		.section	.debug_aranges,"",%progbits
 1139 0000 2C000000 		.4byte	0x2c
 1140 0004 0200     		.2byte	0x2
 1141 0006 00000000 		.4byte	.Ldebug_info0
 1142 000a 04       		.byte	0x4
 1143 000b 00       		.byte	0
 1144 000c 0000     		.2byte	0
 1145 000e 0000     		.2byte	0
 1146 0010 00000000 		.4byte	.LFB68
 1147 0014 38010000 		.4byte	.LFE68-.LFB68
 1148 0018 00000000 		.4byte	.LFB69
 1149 001c 1C010000 		.4byte	.LFE69-.LFB69
 1150 0020 00000000 		.4byte	.LFB70
 1151 0024 64000000 		.4byte	.LFE70-.LFB70
 1152 0028 00000000 		.4byte	0
 1153 002c 00000000 		.4byte	0
 1154              		.section	.debug_ranges,"",%progbits
 1155              	.Ldebug_ranges0:
 1156 0000 00000000 		.4byte	.LFB68
 1157 0004 38010000 		.4byte	.LFE68
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 27


 1158 0008 00000000 		.4byte	.LFB69
 1159 000c 1C010000 		.4byte	.LFE69
 1160 0010 00000000 		.4byte	.LFB70
 1161 0014 64000000 		.4byte	.LFE70
 1162 0018 00000000 		.4byte	0
 1163 001c 00000000 		.4byte	0
 1164              		.section	.debug_line,"",%progbits
 1165              	.Ldebug_line0:
 1166 0000 42020000 		.section	.debug_str,"MS",%progbits,1
 1166      0200B001 
 1166      00000201 
 1166      FB0E0D00 
 1166      01010101 
 1167              	.LASF25:
 1168 0000 7853656D 		.ascii	"xSemaphore\000"
 1168      6170686F 
 1168      726500
 1169              	.LASF39:
 1170 000b 78546173 		.ascii	"xTask\000"
 1170      6B00
 1171              	.LASF41:
 1172 0011 73436865 		.ascii	"sCheckVariables\000"
 1172      636B5661 
 1172      72696162 
 1172      6C657300 
 1173              	.LASF35:
 1174 0021 756C436F 		.ascii	"ulCounter\000"
 1174      756E7465 
 1174      7200
 1175              	.LASF5:
 1176 002b 5F5F7569 		.ascii	"__uint8_t\000"
 1176      6E74385F 
 1176      7400
 1177              	.LASF21:
 1178 0035 5469636B 		.ascii	"TickType_t\000"
 1178      54797065 
 1178      5F7400
 1179              	.LASF17:
 1180 0040 666C6F61 		.ascii	"float\000"
 1180      7400
 1181              	.LASF26:
 1182 0046 70756C53 		.ascii	"pulSharedVariable\000"
 1182      68617265 
 1182      64566172 
 1182      6961626C 
 1182      6500
 1183              	.LASF6:
 1184 0058 5F5F696E 		.ascii	"__int32_t\000"
 1184      7433325F 
 1184      7400
 1185              	.LASF43:
 1186 0062 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1186      4320342E 
 1186      392E3320 
 1186      32303135 
 1186      30333033 
 1187 0095 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 28


 1187      20726576 
 1187      6973696F 
 1187      6E203232 
 1187      31323230 
 1188 00c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1188      66756E63 
 1188      74696F6E 
 1188      2D736563 
 1188      74696F6E 
 1189              	.LASF23:
 1190 00f0 51756575 		.ascii	"QueueHandle_t\000"
 1190      6548616E 
 1190      646C655F 
 1190      7400
 1191              	.LASF24:
 1192 00fe 53656D61 		.ascii	"SemaphoreHandle_t\000"
 1192      70686F72 
 1192      6548616E 
 1192      646C655F 
 1192      7400
 1193              	.LASF42:
 1194 0110 734E6578 		.ascii	"sNextCheckVariable\000"
 1194      74436865 
 1194      636B5661 
 1194      72696162 
 1194      6C6500
 1195              	.LASF49:
 1196 0123 78417265 		.ascii	"xAreSemaphoreTasksStillRunning\000"
 1196      53656D61 
 1196      70686F72 
 1196      65546173 
 1196      6B735374 
 1197              	.LASF15:
 1198 0142 696E7433 		.ascii	"int32_t\000"
 1198      325F7400 
 1199              	.LASF44:
 1200 014a 2E2E5C43 		.ascii	"..\\Common\\Minimal\\semtest.c\000"
 1200      6F6D6D6F 
 1200      6E5C4D69 
 1200      6E696D61 
 1200      6C5C7365 
 1201              	.LASF37:
 1202 0166 73436865 		.ascii	"sCheckVariableToUse\000"
 1202      636B5661 
 1202      72696162 
 1202      6C65546F 
 1202      55736500 
 1203              	.LASF2:
 1204 017a 756E7369 		.ascii	"unsigned char\000"
 1204      676E6564 
 1204      20636861 
 1204      7200
 1205              	.LASF9:
 1206 0188 6C6F6E67 		.ascii	"long unsigned int\000"
 1206      20756E73 
 1206      69676E65 
 1206      6420696E 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 29


 1206      7400
 1207              	.LASF4:
 1208 019a 73686F72 		.ascii	"short unsigned int\000"
 1208      7420756E 
 1208      7369676E 
 1208      65642069 
 1208      6E7400
 1209              	.LASF29:
 1210 01ad 70784669 		.ascii	"pxFirstSemaphoreParameters\000"
 1210      72737453 
 1210      656D6170 
 1210      686F7265 
 1210      50617261 
 1211              	.LASF33:
 1212 01c8 70785061 		.ascii	"pxParameters\000"
 1212      72616D65 
 1212      74657273 
 1212      00
 1213              	.LASF30:
 1214 01d5 70785365 		.ascii	"pxSecondSemaphoreParameters\000"
 1214      636F6E64 
 1214      53656D61 
 1214      70686F72 
 1214      65506172 
 1215              	.LASF18:
 1216 01f1 646F7562 		.ascii	"double\000"
 1216      6C6500
 1217              	.LASF48:
 1218 01f8 70727653 		.ascii	"prvSemaphoreTest\000"
 1218      656D6170 
 1218      686F7265 
 1218      54657374 
 1218      00
 1219              	.LASF8:
 1220 0209 5F5F7569 		.ascii	"__uint32_t\000"
 1220      6E743332 
 1220      5F7400
 1221              	.LASF50:
 1222 0214 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1222      52784275 
 1222      66666572 
 1222      00
 1223              	.LASF31:
 1224 0221 75785072 		.ascii	"uxPriority\000"
 1224      696F7269 
 1224      747900
 1225              	.LASF0:
 1226 022c 756E7369 		.ascii	"unsigned int\000"
 1226      676E6564 
 1226      20696E74 
 1226      00
 1227              	.LASF11:
 1228 0239 6C6F6E67 		.ascii	"long long unsigned int\000"
 1228      206C6F6E 
 1228      6720756E 
 1228      7369676E 
 1228      65642069 
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 30


 1229              	.LASF14:
 1230 0250 75696E74 		.ascii	"uint8_t\000"
 1230      385F7400 
 1231              	.LASF36:
 1232 0258 73457272 		.ascii	"sError\000"
 1232      6F7200
 1233              	.LASF28:
 1234 025f 7853656D 		.ascii	"xSemaphoreParameters\000"
 1234      6170686F 
 1234      72655061 
 1234      72616D65 
 1234      74657273 
 1235              	.LASF27:
 1236 0274 78426C6F 		.ascii	"xBlockTime\000"
 1236      636B5469 
 1236      6D6500
 1237              	.LASF12:
 1238 027f 73697A65 		.ascii	"sizetype\000"
 1238      74797065 
 1238      00
 1239              	.LASF10:
 1240 0288 6C6F6E67 		.ascii	"long long int\000"
 1240      206C6F6E 
 1240      6720696E 
 1240      7400
 1241              	.LASF13:
 1242 0296 63686172 		.ascii	"char\000"
 1242      00
 1243              	.LASF32:
 1244 029b 70765061 		.ascii	"pvParameters\000"
 1244      72616D65 
 1244      74657273 
 1244      00
 1245              	.LASF38:
 1246 02a8 734C6173 		.ascii	"sLastCheckVariables\000"
 1246      74436865 
 1246      636B5661 
 1246      72696162 
 1246      6C657300 
 1247              	.LASF34:
 1248 02bc 756C4578 		.ascii	"ulExpectedValue\000"
 1248      70656374 
 1248      65645661 
 1248      6C756500 
 1249              	.LASF3:
 1250 02cc 73686F72 		.ascii	"short int\000"
 1250      7420696E 
 1250      7400
 1251              	.LASF22:
 1252 02d6 5461736B 		.ascii	"TaskHandle_t\000"
 1252      48616E64 
 1252      6C655F74 
 1252      00
 1253              	.LASF16:
 1254 02e3 75696E74 		.ascii	"uint32_t\000"
 1254      33325F74 
 1254      00
ARM GAS  C:\Users\bmt\AppData\Local\Temp\ccXDSw9y.s 			page 31


 1255              	.LASF7:
 1256 02ec 6C6F6E67 		.ascii	"long int\000"
 1256      20696E74 
 1256      00
 1257              	.LASF40:
 1258 02f5 78526574 		.ascii	"xReturn\000"
 1258      75726E00 
 1259              	.LASF1:
 1260 02fd 7369676E 		.ascii	"signed char\000"
 1260      65642063 
 1260      68617200 
 1261              	.LASF47:
 1262 0309 76537461 		.ascii	"vStartSemaphoreTasks\000"
 1262      72745365 
 1262      6D617068 
 1262      6F726554 
 1262      61736B73 
 1263              	.LASF20:
 1264 031e 55426173 		.ascii	"UBaseType_t\000"
 1264      65547970 
 1264      655F7400 
 1265              	.LASF19:
 1266 032a 42617365 		.ascii	"BaseType_t\000"
 1266      54797065 
 1266      5F7400
 1267              	.LASF45:
 1268 0335 433A5C55 		.ascii	"C:\\Users\\bmt\\Documents\\GitHub\\FreeRTOS_CY8CKIT"
 1268      73657273 
 1268      5C626D74 
 1268      5C446F63 
 1268      756D656E 
 1269 0363 5F303539 		.ascii	"_059\\FreeRTOS_Demo.cydsn\000"
 1269      5C467265 
 1269      6552544F 
 1269      535F4465 
 1269      6D6F2E63 
 1270              	.LASF46:
 1271 037c 53454D41 		.ascii	"SEMAPHORE_PARAMETERS\000"
 1271      50484F52 
 1271      455F5041 
 1271      52414D45 
 1271      54455253 
 1272              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
