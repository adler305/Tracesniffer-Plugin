ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Clock_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Clock_1_Start,"ax",%progbits
  20              		.align	2
  21              		.global	Clock_1_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	Clock_1_Start, %function
  25              	Clock_1_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Clock_1.c"
   1:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Clock_1.c **** * File Name: Clock_1.c
   3:Generated_Source\PSoC5/Clock_1.c **** * Version 2.20
   4:Generated_Source\PSoC5/Clock_1.c **** *
   5:Generated_Source\PSoC5/Clock_1.c **** *  Description:
   6:Generated_Source\PSoC5/Clock_1.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/Clock_1.c **** *
   8:Generated_Source\PSoC5/Clock_1.c **** *  Note:
   9:Generated_Source\PSoC5/Clock_1.c **** *
  10:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Clock_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Clock_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Clock_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Clock_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Clock_1.c **** 
  17:Generated_Source\PSoC5/Clock_1.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/Clock_1.c **** #include "Clock_1.h"
  19:Generated_Source\PSoC5/Clock_1.c **** 
  20:Generated_Source\PSoC5/Clock_1.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/Clock_1.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/Clock_1.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/Clock_1.c **** 
  27:Generated_Source\PSoC5/Clock_1.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/Clock_1.c **** 
  29:Generated_Source\PSoC5/Clock_1.c **** 
  30:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 2


  31:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Start
  32:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  33:Generated_Source\PSoC5/Clock_1.c **** *
  34:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  35:Generated_Source\PSoC5/Clock_1.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/Clock_1.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/Clock_1.c **** *
  38:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  39:Generated_Source\PSoC5/Clock_1.c **** *  None
  40:Generated_Source\PSoC5/Clock_1.c **** *
  41:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  42:Generated_Source\PSoC5/Clock_1.c **** *  None
  43:Generated_Source\PSoC5/Clock_1.c **** *
  44:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Start(void) 
  46:Generated_Source\PSoC5/Clock_1.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  47:Generated_Source\PSoC5/Clock_1.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN |= Clock_1_CLKEN_MASK;
  38              		.loc 1 48 0
  39 0004 094A     		ldr	r2, .L2
  40 0006 094B     		ldr	r3, .L2
  41 0008 1B78     		ldrb	r3, [r3]
  42 000a DBB2     		uxtb	r3, r3
  43 000c 43F00203 		orr	r3, r3, #2
  44 0010 DBB2     		uxtb	r3, r3
  45 0012 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/Clock_1.c **** 	Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
  46              		.loc 1 49 0
  47 0014 064A     		ldr	r2, .L2+4
  48 0016 064B     		ldr	r3, .L2+4
  49 0018 1B78     		ldrb	r3, [r3]
  50 001a DBB2     		uxtb	r3, r3
  51 001c 43F00203 		orr	r3, r3, #2
  52 0020 DBB2     		uxtb	r3, r3
  53 0022 1370     		strb	r3, [r2]
  50:Generated_Source\PSoC5/Clock_1.c **** }
  54              		.loc 1 50 0
  55 0024 00BF     		nop
  56 0026 BD46     		mov	sp, r7
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 0028 80BC     		pop	{r7}
  60              		.cfi_restore 7
  61              		.cfi_def_cfa_offset 0
  62 002a 7047     		bx	lr
  63              	.L3:
  64              		.align	2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 3


  65              	.L2:
  66 002c A2430040 		.word	1073759138
  67 0030 B2430040 		.word	1073759154
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	Clock_1_Start, .-Clock_1_Start
  71              		.section	.text.Clock_1_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	Clock_1_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	Clock_1_Stop, %function
  77              	Clock_1_Stop:
  78              	.LFB1:
  51:Generated_Source\PSoC5/Clock_1.c **** 
  52:Generated_Source\PSoC5/Clock_1.c **** 
  53:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_Stop
  55:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  56:Generated_Source\PSoC5/Clock_1.c **** *
  57:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  58:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/Clock_1.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/Clock_1.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/Clock_1.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/Clock_1.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/Clock_1.c **** *
  64:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  65:Generated_Source\PSoC5/Clock_1.c **** *  None
  66:Generated_Source\PSoC5/Clock_1.c **** *
  67:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  68:Generated_Source\PSoC5/Clock_1.c **** *  None
  69:Generated_Source\PSoC5/Clock_1.c **** *
  70:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_Stop(void) 
  72:Generated_Source\PSoC5/Clock_1.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  73:Generated_Source\PSoC5/Clock_1.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
  89              		.loc 1 74 0
  90 0004 094A     		ldr	r2, .L5
  91 0006 094B     		ldr	r3, .L5
  92 0008 1B78     		ldrb	r3, [r3]
  93 000a DBB2     		uxtb	r3, r3
  94 000c 23F00203 		bic	r3, r3, #2
  95 0010 DBB2     		uxtb	r3, r3
  96 0012 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/Clock_1.c **** 	Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 4


  97              		.loc 1 75 0
  98 0014 064A     		ldr	r2, .L5+4
  99 0016 064B     		ldr	r3, .L5+4
 100 0018 1B78     		ldrb	r3, [r3]
 101 001a DBB2     		uxtb	r3, r3
 102 001c 23F00203 		bic	r3, r3, #2
 103 0020 DBB2     		uxtb	r3, r3
 104 0022 1370     		strb	r3, [r2]
  76:Generated_Source\PSoC5/Clock_1.c **** }
 105              		.loc 1 76 0
 106 0024 00BF     		nop
 107 0026 BD46     		mov	sp, r7
 108              		.cfi_def_cfa_register 13
 109              		@ sp needed
 110 0028 80BC     		pop	{r7}
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 002a 7047     		bx	lr
 114              	.L6:
 115              		.align	2
 116              	.L5:
 117 002c A2430040 		.word	1073759138
 118 0030 B2430040 		.word	1073759154
 119              		.cfi_endproc
 120              	.LFE1:
 121              		.size	Clock_1_Stop, .-Clock_1_Stop
 122              		.section	.text.Clock_1_StopBlock,"ax",%progbits
 123              		.align	2
 124              		.global	Clock_1_StopBlock
 125              		.thumb
 126              		.thumb_func
 127              		.type	Clock_1_StopBlock, %function
 128              	Clock_1_StopBlock:
 129              	.LFB2:
  77:Generated_Source\PSoC5/Clock_1.c **** 
  78:Generated_Source\PSoC5/Clock_1.c **** 
  79:Generated_Source\PSoC5/Clock_1.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/Clock_1.c **** 
  81:Generated_Source\PSoC5/Clock_1.c **** 
  82:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StopBlock
  84:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
  85:Generated_Source\PSoC5/Clock_1.c **** *
  86:Generated_Source\PSoC5/Clock_1.c **** * Summary:
  87:Generated_Source\PSoC5/Clock_1.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/Clock_1.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/Clock_1.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/Clock_1.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/Clock_1.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/Clock_1.c **** *
  93:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
  94:Generated_Source\PSoC5/Clock_1.c **** *  None
  95:Generated_Source\PSoC5/Clock_1.c **** *
  96:Generated_Source\PSoC5/Clock_1.c **** * Returns:
  97:Generated_Source\PSoC5/Clock_1.c **** *  None
  98:Generated_Source\PSoC5/Clock_1.c **** *
  99:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 5


 100:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StopBlock(void) 
 101:Generated_Source\PSoC5/Clock_1.c **** {
 130              		.loc 1 101 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 102:Generated_Source\PSoC5/Clock_1.c ****     if ((Clock_1_CLKEN & Clock_1_CLKEN_MASK) != 0u)
 142              		.loc 1 102 0
 143 0006 224B     		ldr	r3, .L11
 144 0008 1B78     		ldrb	r3, [r3]
 145 000a DBB2     		uxtb	r3, r3
 146 000c 03F00203 		and	r3, r3, #2
 147 0010 002B     		cmp	r3, #0
 148 0012 37D0     		beq	.L10
 149              	.LBB2:
 103:Generated_Source\PSoC5/Clock_1.c ****     {
 104:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/Clock_1.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/Clock_1.c **** 
 107:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0u;
 150              		.loc 1 107 0
 151 0014 1F4B     		ldr	r3, .L11+4
 152 0016 0022     		movs	r2, #0
 153 0018 1A70     		strb	r2, [r3]
 108:Generated_Source\PSoC5/Clock_1.c **** 
 109:Generated_Source\PSoC5/Clock_1.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 111:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 112:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = 0x00u;
 113:Generated_Source\PSoC5/Clock_1.c **** #else
 114:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 154              		.loc 1 114 0
 155 001a 1F4B     		ldr	r3, .L11+8
 156 001c 0222     		movs	r2, #2
 157 001e 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_AMASK = 0x00u;
 158              		.loc 1 115 0
 159 0020 1E4B     		ldr	r3, .L11+12
 160 0022 0022     		movs	r2, #0
 161 0024 1A70     		strb	r2, [r3]
 116:Generated_Source\PSoC5/Clock_1.c **** #endif /* Clock_1__CFG3 */
 117:Generated_Source\PSoC5/Clock_1.c **** 
 118:Generated_Source\PSoC5/Clock_1.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 162              		.loc 1 119 0
 163 0026 1E4A     		ldr	r2, .L11+16
 164 0028 1D4B     		ldr	r3, .L11+16
 165 002a 1B78     		ldrb	r3, [r3]
 166 002c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 6


 167 002e 03F07F03 		and	r3, r3, #127
 168 0032 DBB2     		uxtb	r3, r3
 169 0034 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/Clock_1.c **** 
 121:Generated_Source\PSoC5/Clock_1.c ****         oldDivider = CY_GET_REG16(Clock_1_DIV_PTR);
 170              		.loc 1 121 0
 171 0036 1B4B     		ldr	r3, .L11+20
 172 0038 1B88     		ldrh	r3, [r3]	@ movhi
 173 003a FB80     		strh	r3, [r7, #6]	@ movhi
 122:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 174              		.loc 1 122 0
 175 003c 1A4A     		ldr	r2, .L11+24
 176 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 177 0040 1380     		strh	r3, [r2]	@ movhi
 123:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 178              		.loc 1 123 0
 179 0042 144B     		ldr	r3, .L11+4
 180 0044 0722     		movs	r2, #7
 181 0046 1A70     		strb	r2, [r3]
 124:Generated_Source\PSoC5/Clock_1.c **** 
 125:Generated_Source\PSoC5/Clock_1.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/Clock_1.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 182              		.loc 1 126 0
 183 0048 00BF     		nop
 184              	.L9:
 185              		.loc 1 126 0 is_stmt 0 discriminator 1
 186 004a 124B     		ldr	r3, .L11+4
 187 004c 1B78     		ldrb	r3, [r3]
 188 004e DBB2     		uxtb	r3, r3
 189 0050 03F00103 		and	r3, r3, #1
 190 0054 002B     		cmp	r3, #0
 191 0056 F8D1     		bne	.L9
 127:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/Clock_1.c **** 
 129:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
 192              		.loc 1 130 0 is_stmt 1
 193 0058 0D4A     		ldr	r2, .L11
 194 005a 0D4B     		ldr	r3, .L11
 195 005c 1B78     		ldrb	r3, [r3]
 196 005e DBB2     		uxtb	r3, r3
 197 0060 23F00203 		bic	r3, r3, #2
 198 0064 DBB2     		uxtb	r3, r3
 199 0066 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
 200              		.loc 1 131 0
 201 0068 104A     		ldr	r2, .L11+28
 202 006a 104B     		ldr	r3, .L11+28
 203 006c 1B78     		ldrb	r3, [r3]
 204 006e DBB2     		uxtb	r3, r3
 205 0070 23F00203 		bic	r3, r3, #2
 206 0074 DBB2     		uxtb	r3, r3
 207 0076 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/Clock_1.c **** 
 133:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/Clock_1.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/Clock_1.c ****         CLK_DIST_LD = 0x00u;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 7


 208              		.loc 1 135 0
 209 0078 064B     		ldr	r3, .L11+4
 210 007a 0022     		movs	r2, #0
 211 007c 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC5/Clock_1.c ****         CY_SET_REG16(Clock_1_DIV_PTR, oldDivider);
 212              		.loc 1 136 0
 213 007e 094A     		ldr	r2, .L11+20
 214 0080 FB88     		ldrh	r3, [r7, #6]	@ movhi
 215 0082 1380     		strh	r3, [r2]	@ movhi
 216              	.L10:
 217              	.LBE2:
 137:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/Clock_1.c ****     }
 139:Generated_Source\PSoC5/Clock_1.c **** }
 218              		.loc 1 139 0
 219 0084 00BF     		nop
 220 0086 0C37     		adds	r7, r7, #12
 221              		.cfi_def_cfa_offset 4
 222 0088 BD46     		mov	sp, r7
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 008a 80BC     		pop	{r7}
 226              		.cfi_restore 7
 227              		.cfi_def_cfa_offset 0
 228 008c 7047     		bx	lr
 229              	.L12:
 230 008e 00BF     		.align	2
 231              	.L11:
 232 0090 A2430040 		.word	1073759138
 233 0094 01400040 		.word	1073758209
 234 0098 10400040 		.word	1073758224
 235 009c 14400040 		.word	1073758228
 236 00a0 08400040 		.word	1073758216
 237 00a4 84400040 		.word	1073758340
 238 00a8 02400040 		.word	1073758210
 239 00ac B2430040 		.word	1073759154
 240              		.cfi_endproc
 241              	.LFE2:
 242              		.size	Clock_1_StopBlock, .-Clock_1_StopBlock
 243              		.section	.text.Clock_1_StandbyPower,"ax",%progbits
 244              		.align	2
 245              		.global	Clock_1_StandbyPower
 246              		.thumb
 247              		.thumb_func
 248              		.type	Clock_1_StandbyPower, %function
 249              	Clock_1_StandbyPower:
 250              	.LFB3:
 140:Generated_Source\PSoC5/Clock_1.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/Clock_1.c **** 
 142:Generated_Source\PSoC5/Clock_1.c **** 
 143:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_StandbyPower
 145:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 146:Generated_Source\PSoC5/Clock_1.c **** *
 147:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 148:Generated_Source\PSoC5/Clock_1.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/Clock_1.c **** *
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 8


 150:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 151:Generated_Source\PSoC5/Clock_1.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/Clock_1.c **** *
 153:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 154:Generated_Source\PSoC5/Clock_1.c **** *  None
 155:Generated_Source\PSoC5/Clock_1.c **** *
 156:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/Clock_1.c **** {
 251              		.loc 1 158 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256 0000 80B4     		push	{r7}
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
 159:Generated_Source\PSoC5/Clock_1.c ****     if(state == 0u)
 265              		.loc 1 159 0
 266 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 000c 002B     		cmp	r3, #0
 268 000e 08D1     		bne	.L14
 160:Generated_Source\PSoC5/Clock_1.c ****     {
 161:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY &= (uint8)(~Clock_1_CLKSTBY_MASK);
 269              		.loc 1 161 0
 270 0010 0A4A     		ldr	r2, .L17
 271 0012 0A4B     		ldr	r3, .L17
 272 0014 1B78     		ldrb	r3, [r3]
 273 0016 DBB2     		uxtb	r3, r3
 274 0018 23F00203 		bic	r3, r3, #2
 275 001c DBB2     		uxtb	r3, r3
 276 001e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/Clock_1.c ****     }
 163:Generated_Source\PSoC5/Clock_1.c ****     else
 164:Generated_Source\PSoC5/Clock_1.c ****     {
 165:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_CLKSTBY |= Clock_1_CLKSTBY_MASK;
 166:Generated_Source\PSoC5/Clock_1.c ****     }
 167:Generated_Source\PSoC5/Clock_1.c **** }
 277              		.loc 1 167 0
 278 0020 07E0     		b	.L16
 279              	.L14:
 165:Generated_Source\PSoC5/Clock_1.c ****     }
 280              		.loc 1 165 0
 281 0022 064A     		ldr	r2, .L17
 282 0024 054B     		ldr	r3, .L17
 283 0026 1B78     		ldrb	r3, [r3]
 284 0028 DBB2     		uxtb	r3, r3
 285 002a 43F00203 		orr	r3, r3, #2
 286 002e DBB2     		uxtb	r3, r3
 287 0030 1370     		strb	r3, [r2]
 288              	.L16:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 9


 289              		.loc 1 167 0
 290 0032 00BF     		nop
 291 0034 0C37     		adds	r7, r7, #12
 292              		.cfi_def_cfa_offset 4
 293 0036 BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 0038 80BC     		pop	{r7}
 297              		.cfi_restore 7
 298              		.cfi_def_cfa_offset 0
 299 003a 7047     		bx	lr
 300              	.L18:
 301              		.align	2
 302              	.L17:
 303 003c B2430040 		.word	1073759154
 304              		.cfi_endproc
 305              	.LFE3:
 306              		.size	Clock_1_StandbyPower, .-Clock_1_StandbyPower
 307              		.section	.text.Clock_1_SetDividerRegister,"ax",%progbits
 308              		.align	2
 309              		.global	Clock_1_SetDividerRegister
 310              		.thumb
 311              		.thumb_func
 312              		.type	Clock_1_SetDividerRegister, %function
 313              	Clock_1_SetDividerRegister:
 314              	.LFB4:
 168:Generated_Source\PSoC5/Clock_1.c **** 
 169:Generated_Source\PSoC5/Clock_1.c **** 
 170:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetDividerRegister
 172:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 173:Generated_Source\PSoC5/Clock_1.c **** *
 174:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 175:Generated_Source\PSoC5/Clock_1.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/Clock_1.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/Clock_1.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/Clock_1.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/Clock_1.c **** *
 180:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 181:Generated_Source\PSoC5/Clock_1.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/Clock_1.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/Clock_1.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/Clock_1.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/Clock_1.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/Clock_1.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/Clock_1.c **** *   cycle.
 188:Generated_Source\PSoC5/Clock_1.c **** *
 189:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 190:Generated_Source\PSoC5/Clock_1.c **** *  None
 191:Generated_Source\PSoC5/Clock_1.c **** *
 192:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/Clock_1.c ****                                 
 195:Generated_Source\PSoC5/Clock_1.c **** {
 315              		.loc 1 195 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 10


 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 84B0     		sub	sp, sp, #16
 324              		.cfi_def_cfa_offset 24
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 0346     		mov	r3, r0
 328 0008 0A46     		mov	r2, r1
 329 000a FB80     		strh	r3, [r7, #6]	@ movhi
 330 000c 1346     		mov	r3, r2
 331 000e 7B71     		strb	r3, [r7, #5]
 196:Generated_Source\PSoC5/Clock_1.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/Clock_1.c **** 
 198:Generated_Source\PSoC5/Clock_1.c ****     uint8 currSrc = Clock_1_GetSourceRegister();
 332              		.loc 1 198 0
 333 0010 FFF7FEFF 		bl	Clock_1_GetSourceRegister
 334 0014 0346     		mov	r3, r0
 335 0016 FB73     		strb	r3, [r7, #15]
 199:Generated_Source\PSoC5/Clock_1.c ****     uint16 oldDivider = Clock_1_GetDividerRegister();
 336              		.loc 1 199 0
 337 0018 FFF7FEFF 		bl	Clock_1_GetDividerRegister
 338 001c 0346     		mov	r3, r0
 339 001e BB81     		strh	r3, [r7, #12]	@ movhi
 200:Generated_Source\PSoC5/Clock_1.c **** 
 201:Generated_Source\PSoC5/Clock_1.c ****     if (clkDivider != oldDivider)
 340              		.loc 1 201 0
 341 0020 FA88     		ldrh	r2, [r7, #6]
 342 0022 BB89     		ldrh	r3, [r7, #12]
 343 0024 9A42     		cmp	r2, r3
 344 0026 00F08880 		beq	.L32
 202:Generated_Source\PSoC5/Clock_1.c ****     {
 203:Generated_Source\PSoC5/Clock_1.c ****         enabled = Clock_1_CLKEN & Clock_1_CLKEN_MASK;
 345              		.loc 1 203 0
 346 002a 464B     		ldr	r3, .L33
 347 002c 1B78     		ldrb	r3, [r3]
 348 002e DBB2     		uxtb	r3, r3
 349 0030 03F00203 		and	r3, r3, #2
 350 0034 FB72     		strb	r3, [r7, #11]
 204:Generated_Source\PSoC5/Clock_1.c **** 
 205:Generated_Source\PSoC5/Clock_1.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 351              		.loc 1 205 0
 352 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 353 0038 002B     		cmp	r3, #0
 354 003a 20D1     		bne	.L21
 355              		.loc 1 205 0 is_stmt 0 discriminator 1
 356 003c BB89     		ldrh	r3, [r7, #12]
 357 003e 002B     		cmp	r3, #0
 358 0040 02D0     		beq	.L22
 359              		.loc 1 205 0 discriminator 2
 360 0042 FB88     		ldrh	r3, [r7, #6]
 361 0044 002B     		cmp	r3, #0
 362 0046 1AD1     		bne	.L21
 363              	.L22:
 206:Generated_Source\PSoC5/Clock_1.c ****         {
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 11


 207:Generated_Source\PSoC5/Clock_1.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/Clock_1.c ****             if (oldDivider == 0u)
 364              		.loc 1 208 0 is_stmt 1
 365 0048 BB89     		ldrh	r3, [r7, #12]
 366 004a 002B     		cmp	r3, #0
 367 004c 0BD1     		bne	.L23
 209:Generated_Source\PSoC5/Clock_1.c ****             {
 210:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/Clock_1.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/Clock_1.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 368              		.loc 1 213 0
 369 004e 3E4A     		ldr	r2, .L33+4
 370 0050 FB88     		ldrh	r3, [r7, #6]	@ movhi
 371 0052 1380     		strh	r3, [r2]	@ movhi
 214:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 372              		.loc 1 214 0
 373 0054 3D4A     		ldr	r2, .L33+8
 374 0056 3D4B     		ldr	r3, .L33+8
 375 0058 1B78     		ldrb	r3, [r3]
 376 005a DBB2     		uxtb	r3, r3
 377 005c 23F04003 		bic	r3, r3, #64
 378 0060 DBB2     		uxtb	r3, r3
 379 0062 1370     		strb	r3, [r2]
 208:Generated_Source\PSoC5/Clock_1.c ****             {
 380              		.loc 1 208 0
 381 0064 69E0     		b	.L20
 382              	.L23:
 215:Generated_Source\PSoC5/Clock_1.c ****             }
 216:Generated_Source\PSoC5/Clock_1.c ****             else
 217:Generated_Source\PSoC5/Clock_1.c ****             {
 218:Generated_Source\PSoC5/Clock_1.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/Clock_1.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/Clock_1.c ****                 Clock_1_MOD_SRC |= CYCLK_SSS;
 383              		.loc 1 220 0
 384 0066 394A     		ldr	r2, .L33+8
 385 0068 384B     		ldr	r3, .L33+8
 386 006a 1B78     		ldrb	r3, [r3]
 387 006c DBB2     		uxtb	r3, r3
 388 006e 43F04003 		orr	r3, r3, #64
 389 0072 DBB2     		uxtb	r3, r3
 390 0074 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 391              		.loc 1 221 0
 392 0076 344A     		ldr	r2, .L33+4
 393 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 394 007a 1380     		strh	r3, [r2]	@ movhi
 208:Generated_Source\PSoC5/Clock_1.c ****             {
 395              		.loc 1 208 0
 396 007c 5DE0     		b	.L20
 397              	.L21:
 222:Generated_Source\PSoC5/Clock_1.c ****             }
 223:Generated_Source\PSoC5/Clock_1.c ****         }
 224:Generated_Source\PSoC5/Clock_1.c ****         else
 225:Generated_Source\PSoC5/Clock_1.c ****         {
 226:Generated_Source\PSoC5/Clock_1.c **** 			
 227:Generated_Source\PSoC5/Clock_1.c ****             if (enabled != 0u)
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 12


 398              		.loc 1 227 0
 399 007e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 400 0080 002B     		cmp	r3, #0
 401 0082 33D0     		beq	.L25
 228:Generated_Source\PSoC5/Clock_1.c ****             {
 229:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = 0x00u;
 402              		.loc 1 229 0
 403 0084 324B     		ldr	r3, .L33+12
 404 0086 0022     		movs	r2, #0
 405 0088 1A70     		strb	r2, [r3]
 230:Generated_Source\PSoC5/Clock_1.c **** 
 231:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/Clock_1.c **** #if defined(Clock_1__CFG3)
 233:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = Clock_1_CLKEN_MASK;
 234:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = 0x00u;
 235:Generated_Source\PSoC5/Clock_1.c **** #else
 236:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_DMASK = Clock_1_CLKEN_MASK;
 406              		.loc 1 236 0
 407 008a 324B     		ldr	r3, .L33+16
 408 008c 0222     		movs	r2, #2
 409 008e 1A70     		strb	r2, [r3]
 237:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_AMASK = 0x00u;
 410              		.loc 1 237 0
 411 0090 314B     		ldr	r3, .L33+20
 412 0092 0022     		movs	r2, #0
 413 0094 1A70     		strb	r2, [r3]
 238:Generated_Source\PSoC5/Clock_1.c **** #endif /* Clock_1__CFG3 */
 239:Generated_Source\PSoC5/Clock_1.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 414              		.loc 1 240 0
 415 0096 314A     		ldr	r2, .L33+24
 416 0098 304B     		ldr	r3, .L33+24
 417 009a 1B78     		ldrb	r3, [r3]
 418 009c DBB2     		uxtb	r3, r3
 419 009e 03F07F03 		and	r3, r3, #127
 420 00a2 DBB2     		uxtb	r3, r3
 421 00a4 1370     		strb	r3, [r2]
 241:Generated_Source\PSoC5/Clock_1.c **** 
 242:Generated_Source\PSoC5/Clock_1.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/Clock_1.c ****                 if (((Clock_1_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 422              		.loc 1 243 0
 423 00a6 294B     		ldr	r3, .L33+8
 424 00a8 1B78     		ldrb	r3, [r3]
 425 00aa DBB2     		uxtb	r3, r3
 426 00ac 03F00803 		and	r3, r3, #8
 427 00b0 002B     		cmp	r3, #0
 428 00b2 02D0     		beq	.L26
 429              		.loc 1 243 0 is_stmt 0 discriminator 1
 430 00b4 FB88     		ldrh	r3, [r7, #6]
 431 00b6 002B     		cmp	r3, #0
 432 00b8 18D1     		bne	.L25
 433              	.L26:
 244:Generated_Source\PSoC5/Clock_1.c ****                 {
 245:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/Clock_1.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 434              		.loc 1 246 0 is_stmt 1
 435 00ba 294A     		ldr	r2, .L33+28
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 13


 436 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 437 00be 1380     		strh	r3, [r2]	@ movhi
 247:Generated_Source\PSoC5/Clock_1.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 438              		.loc 1 247 0
 439 00c0 234B     		ldr	r3, .L33+12
 440 00c2 0722     		movs	r2, #7
 441 00c4 1A70     		strb	r2, [r3]
 248:Generated_Source\PSoC5/Clock_1.c **** 
 249:Generated_Source\PSoC5/Clock_1.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/Clock_1.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 442              		.loc 1 250 0
 443 00c6 00BF     		nop
 444              	.L27:
 445              		.loc 1 250 0 is_stmt 0 discriminator 1
 446 00c8 214B     		ldr	r3, .L33+12
 447 00ca 1B78     		ldrb	r3, [r3]
 448 00cc DBB2     		uxtb	r3, r3
 449 00ce 03F00103 		and	r3, r3, #1
 450 00d2 002B     		cmp	r3, #0
 451 00d4 F8D1     		bne	.L27
 251:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/Clock_1.c **** 
 253:Generated_Source\PSoC5/Clock_1.c ****                     Clock_1_CLKEN &= (uint8)(~Clock_1_CLKEN_MASK);
 452              		.loc 1 253 0 is_stmt 1
 453 00d6 1B4A     		ldr	r2, .L33
 454 00d8 1A4B     		ldr	r3, .L33
 455 00da 1B78     		ldrb	r3, [r3]
 456 00dc DBB2     		uxtb	r3, r3
 457 00de 23F00203 		bic	r3, r3, #2
 458 00e2 DBB2     		uxtb	r3, r3
 459 00e4 1370     		strb	r3, [r2]
 254:Generated_Source\PSoC5/Clock_1.c **** 
 255:Generated_Source\PSoC5/Clock_1.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/Clock_1.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/Clock_1.c ****                     CLK_DIST_LD = 0x00u;
 460              		.loc 1 257 0
 461 00e6 1A4B     		ldr	r3, .L33+12
 462 00e8 0022     		movs	r2, #0
 463 00ea 1A70     		strb	r2, [r3]
 464              	.L25:
 258:Generated_Source\PSoC5/Clock_1.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/Clock_1.c ****                 }
 260:Generated_Source\PSoC5/Clock_1.c ****             }
 261:Generated_Source\PSoC5/Clock_1.c **** 
 262:Generated_Source\PSoC5/Clock_1.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/Clock_1.c ****             if ((Clock_1_CLKEN & Clock_1_CLKEN_MASK) != 0u)
 465              		.loc 1 263 0
 466 00ec 154B     		ldr	r3, .L33
 467 00ee 1B78     		ldrb	r3, [r3]
 468 00f0 DBB2     		uxtb	r3, r3
 469 00f2 03F00203 		and	r3, r3, #2
 470 00f6 002B     		cmp	r3, #0
 471 00f8 13D0     		beq	.L28
 264:Generated_Source\PSoC5/Clock_1.c ****             {
 265:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 472              		.loc 1 266 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 14


 473 00fa 194A     		ldr	r2, .L33+28
 474 00fc FB88     		ldrh	r3, [r7, #6]	@ movhi
 475 00fe 1380     		strh	r3, [r2]	@ movhi
 267:Generated_Source\PSoC5/Clock_1.c **** 
 268:Generated_Source\PSoC5/Clock_1.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 476              		.loc 1 268 0
 477 0100 134A     		ldr	r2, .L33+12
 478 0102 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 479 0104 002B     		cmp	r3, #0
 480 0106 01D0     		beq	.L29
 481              		.loc 1 268 0 is_stmt 0 discriminator 1
 482 0108 0323     		movs	r3, #3
 483 010a 00E0     		b	.L30
 484              	.L29:
 485              		.loc 1 268 0 discriminator 2
 486 010c 0123     		movs	r3, #1
 487              	.L30:
 488              		.loc 1 268 0 discriminator 4
 489 010e 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/Clock_1.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 490              		.loc 1 269 0 is_stmt 1 discriminator 4
 491 0110 00BF     		nop
 492              	.L31:
 493              		.loc 1 269 0 is_stmt 0 discriminator 1
 494 0112 0F4B     		ldr	r3, .L33+12
 495 0114 1B78     		ldrb	r3, [r3]
 496 0116 DBB2     		uxtb	r3, r3
 497 0118 03F00103 		and	r3, r3, #1
 498 011c 002B     		cmp	r3, #0
 499 011e F8D1     		bne	.L31
 270:Generated_Source\PSoC5/Clock_1.c ****             }
 271:Generated_Source\PSoC5/Clock_1.c ****             else
 272:Generated_Source\PSoC5/Clock_1.c ****             {
 273:Generated_Source\PSoC5/Clock_1.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/Clock_1.c ****                 CY_SET_REG16(Clock_1_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/Clock_1.c **** 				Clock_1_CLKEN |= enabled;
 276:Generated_Source\PSoC5/Clock_1.c ****             }
 277:Generated_Source\PSoC5/Clock_1.c ****         }
 278:Generated_Source\PSoC5/Clock_1.c ****     }
 279:Generated_Source\PSoC5/Clock_1.c **** }
 500              		.loc 1 279 0 is_stmt 1
 501 0120 0BE0     		b	.L32
 502              	.L28:
 274:Generated_Source\PSoC5/Clock_1.c **** 				Clock_1_CLKEN |= enabled;
 503              		.loc 1 274 0
 504 0122 094A     		ldr	r2, .L33+4
 505 0124 FB88     		ldrh	r3, [r7, #6]	@ movhi
 506 0126 1380     		strh	r3, [r2]	@ movhi
 275:Generated_Source\PSoC5/Clock_1.c ****             }
 507              		.loc 1 275 0
 508 0128 0649     		ldr	r1, .L33
 509 012a 064B     		ldr	r3, .L33
 510 012c 1B78     		ldrb	r3, [r3]
 511 012e DAB2     		uxtb	r2, r3
 512 0130 FB7A     		ldrb	r3, [r7, #11]
 513 0132 1343     		orrs	r3, r3, r2
 514 0134 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 15


 515 0136 0B70     		strb	r3, [r1]
 516              		.loc 1 279 0
 517 0138 FFE7     		b	.L32
 518              	.L20:
 519              	.L32:
 520 013a 00BF     		nop
 521 013c 1037     		adds	r7, r7, #16
 522              		.cfi_def_cfa_offset 8
 523 013e BD46     		mov	sp, r7
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 0140 80BD     		pop	{r7, pc}
 527              	.L34:
 528 0142 00BF     		.align	2
 529              	.L33:
 530 0144 A2430040 		.word	1073759138
 531 0148 84400040 		.word	1073758340
 532 014c 86400040 		.word	1073758342
 533 0150 01400040 		.word	1073758209
 534 0154 10400040 		.word	1073758224
 535 0158 14400040 		.word	1073758228
 536 015c 08400040 		.word	1073758216
 537 0160 02400040 		.word	1073758210
 538              		.cfi_endproc
 539              	.LFE4:
 540              		.size	Clock_1_SetDividerRegister, .-Clock_1_SetDividerRegister
 541              		.section	.text.Clock_1_GetDividerRegister,"ax",%progbits
 542              		.align	2
 543              		.global	Clock_1_GetDividerRegister
 544              		.thumb
 545              		.thumb_func
 546              		.type	Clock_1_GetDividerRegister, %function
 547              	Clock_1_GetDividerRegister:
 548              	.LFB5:
 280:Generated_Source\PSoC5/Clock_1.c **** 
 281:Generated_Source\PSoC5/Clock_1.c **** 
 282:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetDividerRegister
 284:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 285:Generated_Source\PSoC5/Clock_1.c **** *
 286:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 287:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/Clock_1.c **** *
 289:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 290:Generated_Source\PSoC5/Clock_1.c **** *  None
 291:Generated_Source\PSoC5/Clock_1.c **** *
 292:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 293:Generated_Source\PSoC5/Clock_1.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/Clock_1.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/Clock_1.c **** *
 296:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/Clock_1.c **** uint16 Clock_1_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/Clock_1.c **** {
 549              		.loc 1 298 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 16


 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              		.cfi_def_cfa_offset 4
 556              		.cfi_offset 7, -4
 557 0002 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 299:Generated_Source\PSoC5/Clock_1.c ****     return CY_GET_REG16(Clock_1_DIV_PTR);
 559              		.loc 1 299 0
 560 0004 034B     		ldr	r3, .L37
 561 0006 1B88     		ldrh	r3, [r3]	@ movhi
 562 0008 9BB2     		uxth	r3, r3
 300:Generated_Source\PSoC5/Clock_1.c **** }
 563              		.loc 1 300 0
 564 000a 1846     		mov	r0, r3
 565 000c BD46     		mov	sp, r7
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 000e 80BC     		pop	{r7}
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0010 7047     		bx	lr
 572              	.L38:
 573 0012 00BF     		.align	2
 574              	.L37:
 575 0014 84400040 		.word	1073758340
 576              		.cfi_endproc
 577              	.LFE5:
 578              		.size	Clock_1_GetDividerRegister, .-Clock_1_GetDividerRegister
 579              		.section	.text.Clock_1_SetModeRegister,"ax",%progbits
 580              		.align	2
 581              		.global	Clock_1_SetModeRegister
 582              		.thumb
 583              		.thumb_func
 584              		.type	Clock_1_SetModeRegister, %function
 585              	Clock_1_SetModeRegister:
 586              	.LFB6:
 301:Generated_Source\PSoC5/Clock_1.c **** 
 302:Generated_Source\PSoC5/Clock_1.c **** 
 303:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetModeRegister
 305:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 306:Generated_Source\PSoC5/Clock_1.c **** *
 307:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 308:Generated_Source\PSoC5/Clock_1.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/Clock_1.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/Clock_1.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/Clock_1.c **** *
 313:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 314:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 319:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 17


 322:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 323:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/Clock_1.c **** *
 328:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 329:Generated_Source\PSoC5/Clock_1.c **** *  None
 330:Generated_Source\PSoC5/Clock_1.c **** *
 331:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/Clock_1.c **** {
 587              		.loc 1 333 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 83B0     		sub	sp, sp, #12
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 0346     		mov	r3, r0
 600 0008 FB71     		strb	r3, [r7, #7]
 334:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC |= modeBitMask & (uint8)Clock_1_MODE_MASK;
 601              		.loc 1 334 0
 602 000a 0949     		ldr	r1, .L40
 603 000c 084B     		ldr	r3, .L40
 604 000e 1B78     		ldrb	r3, [r3]
 605 0010 DBB2     		uxtb	r3, r3
 606 0012 5AB2     		sxtb	r2, r3
 607 0014 97F90730 		ldrsb	r3, [r7, #7]
 608 0018 23F00703 		bic	r3, r3, #7
 609 001c 5BB2     		sxtb	r3, r3
 610 001e 1343     		orrs	r3, r3, r2
 611 0020 5BB2     		sxtb	r3, r3
 612 0022 DBB2     		uxtb	r3, r3
 613 0024 0B70     		strb	r3, [r1]
 335:Generated_Source\PSoC5/Clock_1.c **** }
 614              		.loc 1 335 0
 615 0026 00BF     		nop
 616 0028 0C37     		adds	r7, r7, #12
 617              		.cfi_def_cfa_offset 4
 618 002a BD46     		mov	sp, r7
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 002c 80BC     		pop	{r7}
 622              		.cfi_restore 7
 623              		.cfi_def_cfa_offset 0
 624 002e 7047     		bx	lr
 625              	.L41:
 626              		.align	2
 627              	.L40:
 628 0030 86400040 		.word	1073758342
 629              		.cfi_endproc
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 18


 630              	.LFE6:
 631              		.size	Clock_1_SetModeRegister, .-Clock_1_SetModeRegister
 632              		.section	.text.Clock_1_ClearModeRegister,"ax",%progbits
 633              		.align	2
 634              		.global	Clock_1_ClearModeRegister
 635              		.thumb
 636              		.thumb_func
 637              		.type	Clock_1_ClearModeRegister, %function
 638              	Clock_1_ClearModeRegister:
 639              	.LFB7:
 336:Generated_Source\PSoC5/Clock_1.c **** 
 337:Generated_Source\PSoC5/Clock_1.c **** 
 338:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_ClearModeRegister
 340:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 341:Generated_Source\PSoC5/Clock_1.c **** *
 342:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 343:Generated_Source\PSoC5/Clock_1.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/Clock_1.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/Clock_1.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/Clock_1.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/Clock_1.c **** *
 348:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 349:Generated_Source\PSoC5/Clock_1.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/Clock_1.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/Clock_1.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/Clock_1.c **** *                 value.
 354:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/Clock_1.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/Clock_1.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/Clock_1.c **** *                 source clock.
 358:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/Clock_1.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/Clock_1.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/Clock_1.c **** *
 363:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 364:Generated_Source\PSoC5/Clock_1.c **** *  None
 365:Generated_Source\PSoC5/Clock_1.c **** *
 366:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/Clock_1.c **** {
 640              		.loc 1 368 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              		.cfi_def_cfa_offset 4
 647              		.cfi_offset 7, -4
 648 0002 83B0     		sub	sp, sp, #12
 649              		.cfi_def_cfa_offset 16
 650 0004 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
 652 0006 0346     		mov	r3, r0
 653 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 19


 369:Generated_Source\PSoC5/Clock_1.c ****     Clock_1_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(Clock_1_MODE_MASK));
 654              		.loc 1 369 0
 655 000a 0949     		ldr	r1, .L43
 656 000c 084B     		ldr	r3, .L43
 657 000e 1B78     		ldrb	r3, [r3]
 658 0010 DAB2     		uxtb	r2, r3
 659 0012 FB79     		ldrb	r3, [r7, #7]
 660 0014 DB43     		mvns	r3, r3
 661 0016 DBB2     		uxtb	r3, r3
 662 0018 43F00703 		orr	r3, r3, #7
 663 001c DBB2     		uxtb	r3, r3
 664 001e 1340     		ands	r3, r3, r2
 665 0020 DBB2     		uxtb	r3, r3
 666 0022 0B70     		strb	r3, [r1]
 370:Generated_Source\PSoC5/Clock_1.c **** }
 667              		.loc 1 370 0
 668 0024 00BF     		nop
 669 0026 0C37     		adds	r7, r7, #12
 670              		.cfi_def_cfa_offset 4
 671 0028 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 002a 80BC     		pop	{r7}
 675              		.cfi_restore 7
 676              		.cfi_def_cfa_offset 0
 677 002c 7047     		bx	lr
 678              	.L44:
 679 002e 00BF     		.align	2
 680              	.L43:
 681 0030 86400040 		.word	1073758342
 682              		.cfi_endproc
 683              	.LFE7:
 684              		.size	Clock_1_ClearModeRegister, .-Clock_1_ClearModeRegister
 685              		.section	.text.Clock_1_GetModeRegister,"ax",%progbits
 686              		.align	2
 687              		.global	Clock_1_GetModeRegister
 688              		.thumb
 689              		.thumb_func
 690              		.type	Clock_1_GetModeRegister, %function
 691              	Clock_1_GetModeRegister:
 692              	.LFB8:
 371:Generated_Source\PSoC5/Clock_1.c **** 
 372:Generated_Source\PSoC5/Clock_1.c **** 
 373:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetModeRegister
 375:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 376:Generated_Source\PSoC5/Clock_1.c **** *
 377:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 378:Generated_Source\PSoC5/Clock_1.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/Clock_1.c **** *
 380:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 381:Generated_Source\PSoC5/Clock_1.c **** *  None
 382:Generated_Source\PSoC5/Clock_1.c **** *
 383:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 384:Generated_Source\PSoC5/Clock_1.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/Clock_1.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/Clock_1.c **** *
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 20


 387:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetModeRegister(void) 
 389:Generated_Source\PSoC5/Clock_1.c **** {
 693              		.loc 1 389 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698 0000 80B4     		push	{r7}
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 390:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & (uint8)(Clock_1_MODE_MASK);
 703              		.loc 1 390 0
 704 0004 044B     		ldr	r3, .L47
 705 0006 1B78     		ldrb	r3, [r3]
 706 0008 DBB2     		uxtb	r3, r3
 707 000a 23F00703 		bic	r3, r3, #7
 708 000e DBB2     		uxtb	r3, r3
 391:Generated_Source\PSoC5/Clock_1.c **** }
 709              		.loc 1 391 0
 710 0010 1846     		mov	r0, r3
 711 0012 BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0014 80BC     		pop	{r7}
 715              		.cfi_restore 7
 716              		.cfi_def_cfa_offset 0
 717 0016 7047     		bx	lr
 718              	.L48:
 719              		.align	2
 720              	.L47:
 721 0018 86400040 		.word	1073758342
 722              		.cfi_endproc
 723              	.LFE8:
 724              		.size	Clock_1_GetModeRegister, .-Clock_1_GetModeRegister
 725              		.section	.text.Clock_1_SetSourceRegister,"ax",%progbits
 726              		.align	2
 727              		.global	Clock_1_SetSourceRegister
 728              		.thumb
 729              		.thumb_func
 730              		.type	Clock_1_SetSourceRegister, %function
 731              	Clock_1_SetSourceRegister:
 732              	.LFB9:
 392:Generated_Source\PSoC5/Clock_1.c **** 
 393:Generated_Source\PSoC5/Clock_1.c **** 
 394:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_SetSourceRegister
 396:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 397:Generated_Source\PSoC5/Clock_1.c **** *
 398:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 399:Generated_Source\PSoC5/Clock_1.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/Clock_1.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/Clock_1.c **** *
 402:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 403:Generated_Source\PSoC5/Clock_1.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 21


 404:Generated_Source\PSoC5/Clock_1.c **** *   following input sources:
 405:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/Clock_1.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/Clock_1.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/Clock_1.c **** *
 415:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 416:Generated_Source\PSoC5/Clock_1.c **** *  None
 417:Generated_Source\PSoC5/Clock_1.c **** *
 418:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/Clock_1.c **** void Clock_1_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/Clock_1.c **** {
 733              		.loc 1 420 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 16
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 84B0     		sub	sp, sp, #16
 742              		.cfi_def_cfa_offset 24
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 745 0006 0346     		mov	r3, r0
 746 0008 FB71     		strb	r3, [r7, #7]
 421:Generated_Source\PSoC5/Clock_1.c ****     uint16 currDiv = Clock_1_GetDividerRegister();
 747              		.loc 1 421 0
 748 000a FFF7FEFF 		bl	Clock_1_GetDividerRegister
 749 000e 0346     		mov	r3, r0
 750 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 422:Generated_Source\PSoC5/Clock_1.c ****     uint8 oldSrc = Clock_1_GetSourceRegister();
 751              		.loc 1 422 0
 752 0012 FFF7FEFF 		bl	Clock_1_GetSourceRegister
 753 0016 0346     		mov	r3, r0
 754 0018 7B73     		strb	r3, [r7, #13]
 423:Generated_Source\PSoC5/Clock_1.c **** 
 424:Generated_Source\PSoC5/Clock_1.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 755              		.loc 1 424 0
 756 001a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 757 001c 002B     		cmp	r3, #0
 758 001e 1CD0     		beq	.L50
 759              		.loc 1 424 0 is_stmt 0 discriminator 1
 760 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 761 0022 002B     		cmp	r3, #0
 762 0024 19D1     		bne	.L50
 425:Generated_Source\PSoC5/Clock_1.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 763              		.loc 1 425 0 is_stmt 1
 764 0026 FB89     		ldrh	r3, [r7, #14]
 765 0028 002B     		cmp	r3, #0
 766 002a 16D1     		bne	.L50
 426:Generated_Source\PSoC5/Clock_1.c ****     {
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 22


 427:Generated_Source\PSoC5/Clock_1.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/Clock_1.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC |= CYCLK_SSS;
 767              		.loc 1 429 0
 768 002c 244A     		ldr	r2, .L53
 769 002e 244B     		ldr	r3, .L53
 770 0030 1B78     		ldrb	r3, [r3]
 771 0032 DBB2     		uxtb	r3, r3
 772 0034 43F04003 		orr	r3, r3, #64
 773 0038 DBB2     		uxtb	r3, r3
 774 003a 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 775              		.loc 1 430 0
 776 003c 2049     		ldr	r1, .L53
 431:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 777              		.loc 1 431 0
 778 003e 204B     		ldr	r3, .L53
 779 0040 1B78     		ldrb	r3, [r3]
 780 0042 DBB2     		uxtb	r3, r3
 430:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 781              		.loc 1 430 0
 782 0044 5BB2     		sxtb	r3, r3
 783 0046 23F00703 		bic	r3, r3, #7
 784 004a 5AB2     		sxtb	r2, r3
 785 004c 97F90730 		ldrsb	r3, [r7, #7]
 786 0050 1343     		orrs	r3, r3, r2
 787 0052 5BB2     		sxtb	r3, r3
 788 0054 DBB2     		uxtb	r3, r3
 789 0056 0B70     		strb	r3, [r1]
 790 0058 2DE0     		b	.L51
 791              	.L50:
 432:Generated_Source\PSoC5/Clock_1.c ****     }
 433:Generated_Source\PSoC5/Clock_1.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 792              		.loc 1 433 0
 793 005a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 794 005c 002B     		cmp	r3, #0
 795 005e 1CD1     		bne	.L52
 796              		.loc 1 433 0 is_stmt 0 discriminator 1
 797 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 798 0062 002B     		cmp	r3, #0
 799 0064 19D0     		beq	.L52
 434:Generated_Source\PSoC5/Clock_1.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 800              		.loc 1 434 0 is_stmt 1
 801 0066 FB89     		ldrh	r3, [r7, #14]
 802 0068 002B     		cmp	r3, #0
 803 006a 16D1     		bne	.L52
 435:Generated_Source\PSoC5/Clock_1.c ****     {
 436:Generated_Source\PSoC5/Clock_1.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/Clock_1.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 804              		.loc 1 438 0
 805 006c 1449     		ldr	r1, .L53
 439:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 806              		.loc 1 439 0
 807 006e 144B     		ldr	r3, .L53
 808 0070 1B78     		ldrb	r3, [r3]
 809 0072 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 23


 438:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 810              		.loc 1 438 0
 811 0074 5BB2     		sxtb	r3, r3
 812 0076 23F00703 		bic	r3, r3, #7
 813 007a 5AB2     		sxtb	r2, r3
 814 007c 97F90730 		ldrsb	r3, [r7, #7]
 815 0080 1343     		orrs	r3, r3, r2
 816 0082 5BB2     		sxtb	r3, r3
 817 0084 DBB2     		uxtb	r3, r3
 818 0086 0B70     		strb	r3, [r1]
 440:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC &= (uint8)(~CYCLK_SSS);
 819              		.loc 1 440 0
 820 0088 0D4A     		ldr	r2, .L53
 821 008a 0D4B     		ldr	r3, .L53
 822 008c 1B78     		ldrb	r3, [r3]
 823 008e DBB2     		uxtb	r3, r3
 824 0090 23F04003 		bic	r3, r3, #64
 825 0094 DBB2     		uxtb	r3, r3
 826 0096 1370     		strb	r3, [r2]
 827 0098 0DE0     		b	.L51
 828              	.L52:
 441:Generated_Source\PSoC5/Clock_1.c ****     }
 442:Generated_Source\PSoC5/Clock_1.c ****     else
 443:Generated_Source\PSoC5/Clock_1.c ****     {
 444:Generated_Source\PSoC5/Clock_1.c ****         Clock_1_MOD_SRC =
 829              		.loc 1 444 0
 830 009a 0949     		ldr	r1, .L53
 445:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 831              		.loc 1 445 0
 832 009c 084B     		ldr	r3, .L53
 833 009e 1B78     		ldrb	r3, [r3]
 834 00a0 DBB2     		uxtb	r3, r3
 444:Generated_Source\PSoC5/Clock_1.c ****             (Clock_1_MOD_SRC & (uint8)(~Clock_1_SRC_SEL_MSK)) | clkSource;
 835              		.loc 1 444 0
 836 00a2 5BB2     		sxtb	r3, r3
 837 00a4 23F00703 		bic	r3, r3, #7
 838 00a8 5AB2     		sxtb	r2, r3
 839 00aa 97F90730 		ldrsb	r3, [r7, #7]
 840 00ae 1343     		orrs	r3, r3, r2
 841 00b0 5BB2     		sxtb	r3, r3
 842 00b2 DBB2     		uxtb	r3, r3
 843 00b4 0B70     		strb	r3, [r1]
 844              	.L51:
 446:Generated_Source\PSoC5/Clock_1.c ****     }
 447:Generated_Source\PSoC5/Clock_1.c **** }
 845              		.loc 1 447 0
 846 00b6 00BF     		nop
 847 00b8 1037     		adds	r7, r7, #16
 848              		.cfi_def_cfa_offset 8
 849 00ba BD46     		mov	sp, r7
 850              		.cfi_def_cfa_register 13
 851              		@ sp needed
 852 00bc 80BD     		pop	{r7, pc}
 853              	.L54:
 854 00be 00BF     		.align	2
 855              	.L53:
 856 00c0 86400040 		.word	1073758342
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 24


 857              		.cfi_endproc
 858              	.LFE9:
 859              		.size	Clock_1_SetSourceRegister, .-Clock_1_SetSourceRegister
 860              		.section	.text.Clock_1_GetSourceRegister,"ax",%progbits
 861              		.align	2
 862              		.global	Clock_1_GetSourceRegister
 863              		.thumb
 864              		.thumb_func
 865              		.type	Clock_1_GetSourceRegister, %function
 866              	Clock_1_GetSourceRegister:
 867              	.LFB10:
 448:Generated_Source\PSoC5/Clock_1.c **** 
 449:Generated_Source\PSoC5/Clock_1.c **** 
 450:Generated_Source\PSoC5/Clock_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Clock_1.c **** * Function Name: Clock_1_GetSourceRegister
 452:Generated_Source\PSoC5/Clock_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Clock_1.c **** *
 454:Generated_Source\PSoC5/Clock_1.c **** * Summary:
 455:Generated_Source\PSoC5/Clock_1.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/Clock_1.c **** *
 457:Generated_Source\PSoC5/Clock_1.c **** * Parameters:
 458:Generated_Source\PSoC5/Clock_1.c **** *  None
 459:Generated_Source\PSoC5/Clock_1.c **** *
 460:Generated_Source\PSoC5/Clock_1.c **** * Returns:
 461:Generated_Source\PSoC5/Clock_1.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/Clock_1.c **** *
 463:Generated_Source\PSoC5/Clock_1.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/Clock_1.c **** uint8 Clock_1_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/Clock_1.c **** {
 868              		.loc 1 465 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 466:Generated_Source\PSoC5/Clock_1.c ****     return Clock_1_MOD_SRC & Clock_1_SRC_SEL_MSK;
 878              		.loc 1 466 0
 879 0004 044B     		ldr	r3, .L57
 880 0006 1B78     		ldrb	r3, [r3]
 881 0008 DBB2     		uxtb	r3, r3
 882 000a 03F00703 		and	r3, r3, #7
 883 000e DBB2     		uxtb	r3, r3
 467:Generated_Source\PSoC5/Clock_1.c **** }
 884              		.loc 1 467 0
 885 0010 1846     		mov	r0, r3
 886 0012 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 0014 80BC     		pop	{r7}
 890              		.cfi_restore 7
 891              		.cfi_def_cfa_offset 0
 892 0016 7047     		bx	lr
 893              	.L58:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 25


 894              		.align	2
 895              	.L57:
 896 0018 86400040 		.word	1073758342
 897              		.cfi_endproc
 898              	.LFE10:
 899              		.size	Clock_1_GetSourceRegister, .-Clock_1_GetSourceRegister
 900              		.text
 901              	.Letext0:
 902              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 903              		.section	.debug_info,"",%progbits
 904              	.Ldebug_info0:
 905 0000 59020000 		.4byte	0x259
 906 0004 0400     		.2byte	0x4
 907 0006 00000000 		.4byte	.Ldebug_abbrev0
 908 000a 04       		.byte	0x4
 909 000b 01       		.uleb128 0x1
 910 000c 26000000 		.4byte	.LASF37
 911 0010 0C       		.byte	0xc
 912 0011 28010000 		.4byte	.LASF38
 913 0015 AC020000 		.4byte	.LASF39
 914 0019 00000000 		.4byte	.Ldebug_ranges0+0
 915 001d 00000000 		.4byte	0
 916 0021 00000000 		.4byte	.Ldebug_line0
 917 0025 02       		.uleb128 0x2
 918 0026 01       		.byte	0x1
 919 0027 06       		.byte	0x6
 920 0028 B2010000 		.4byte	.LASF0
 921 002c 02       		.uleb128 0x2
 922 002d 01       		.byte	0x1
 923 002e 08       		.byte	0x8
 924 002f 98010000 		.4byte	.LASF1
 925 0033 02       		.uleb128 0x2
 926 0034 02       		.byte	0x2
 927 0035 05       		.byte	0x5
 928 0036 1C000000 		.4byte	.LASF2
 929 003a 02       		.uleb128 0x2
 930 003b 02       		.byte	0x2
 931 003c 07       		.byte	0x7
 932 003d FD010000 		.4byte	.LASF3
 933 0041 02       		.uleb128 0x2
 934 0042 04       		.byte	0x4
 935 0043 05       		.byte	0x5
 936 0044 6F010000 		.4byte	.LASF4
 937 0048 02       		.uleb128 0x2
 938 0049 04       		.byte	0x4
 939 004a 07       		.byte	0x7
 940 004b 37020000 		.4byte	.LASF5
 941 004f 02       		.uleb128 0x2
 942 0050 08       		.byte	0x8
 943 0051 05       		.byte	0x5
 944 0052 4F010000 		.4byte	.LASF6
 945 0056 02       		.uleb128 0x2
 946 0057 08       		.byte	0x8
 947 0058 07       		.byte	0x7
 948 0059 BE010000 		.4byte	.LASF7
 949 005d 03       		.uleb128 0x3
 950 005e 04       		.byte	0x4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 26


 951 005f 05       		.byte	0x5
 952 0060 696E7400 		.ascii	"int\000"
 953 0064 02       		.uleb128 0x2
 954 0065 04       		.byte	0x4
 955 0066 07       		.byte	0x7
 956 0067 D5010000 		.4byte	.LASF8
 957 006b 04       		.uleb128 0x4
 958 006c 17010000 		.4byte	.LASF9
 959 0070 02       		.byte	0x2
 960 0071 9201     		.2byte	0x192
 961 0073 2C000000 		.4byte	0x2c
 962 0077 04       		.uleb128 0x4
 963 0078 01010000 		.4byte	.LASF10
 964 007c 02       		.byte	0x2
 965 007d 9301     		.2byte	0x193
 966 007f 3A000000 		.4byte	0x3a
 967 0083 02       		.uleb128 0x2
 968 0084 04       		.byte	0x4
 969 0085 04       		.byte	0x4
 970 0086 49010000 		.4byte	.LASF11
 971 008a 02       		.uleb128 0x2
 972 008b 08       		.byte	0x8
 973 008c 04       		.byte	0x4
 974 008d 6E020000 		.4byte	.LASF12
 975 0091 02       		.uleb128 0x2
 976 0092 01       		.byte	0x1
 977 0093 08       		.byte	0x8
 978 0094 10020000 		.4byte	.LASF13
 979 0098 04       		.uleb128 0x4
 980 0099 32020000 		.4byte	.LASF14
 981 009d 02       		.byte	0x2
 982 009e 3C02     		.2byte	0x23c
 983 00a0 A4000000 		.4byte	0xa4
 984 00a4 05       		.uleb128 0x5
 985 00a5 6B000000 		.4byte	0x6b
 986 00a9 04       		.uleb128 0x4
 987 00aa 16000000 		.4byte	.LASF15
 988 00ae 02       		.byte	0x2
 989 00af 3D02     		.2byte	0x23d
 990 00b1 B5000000 		.4byte	0xb5
 991 00b5 05       		.uleb128 0x5
 992 00b6 77000000 		.4byte	0x77
 993 00ba 06       		.uleb128 0x6
 994 00bb 00000000 		.4byte	.LASF16
 995 00bf 01       		.byte	0x1
 996 00c0 2D       		.byte	0x2d
 997 00c1 00000000 		.4byte	.LFB0
 998 00c5 34000000 		.4byte	.LFE0-.LFB0
 999 00c9 01       		.uleb128 0x1
 1000 00ca 9C       		.byte	0x9c
 1001 00cb 06       		.uleb128 0x6
 1002 00cc 49020000 		.4byte	.LASF17
 1003 00d0 01       		.byte	0x1
 1004 00d1 47       		.byte	0x47
 1005 00d2 00000000 		.4byte	.LFB1
 1006 00d6 34000000 		.4byte	.LFE1-.LFB1
 1007 00da 01       		.uleb128 0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 27


 1008 00db 9C       		.byte	0x9c
 1009 00dc 07       		.uleb128 0x7
 1010 00dd 5D010000 		.4byte	.LASF18
 1011 00e1 01       		.byte	0x1
 1012 00e2 64       		.byte	0x64
 1013 00e3 00000000 		.4byte	.LFB2
 1014 00e7 B0000000 		.4byte	.LFE2-.LFB2
 1015 00eb 01       		.uleb128 0x1
 1016 00ec 9C       		.byte	0x9c
 1017 00ed 0A010000 		.4byte	0x10a
 1018 00f1 08       		.uleb128 0x8
 1019 00f2 14000000 		.4byte	.LBB2
 1020 00f6 70000000 		.4byte	.LBE2-.LBB2
 1021 00fa 09       		.uleb128 0x9
 1022 00fb 27020000 		.4byte	.LASF24
 1023 00ff 01       		.byte	0x1
 1024 0100 69       		.byte	0x69
 1025 0101 77000000 		.4byte	0x77
 1026 0105 02       		.uleb128 0x2
 1027 0106 91       		.byte	0x91
 1028 0107 76       		.sleb128 -10
 1029 0108 00       		.byte	0
 1030 0109 00       		.byte	0
 1031 010a 07       		.uleb128 0x7
 1032 010b 75020000 		.4byte	.LASF19
 1033 010f 01       		.byte	0x1
 1034 0110 9D       		.byte	0x9d
 1035 0111 00000000 		.4byte	.LFB3
 1036 0115 40000000 		.4byte	.LFE3-.LFB3
 1037 0119 01       		.uleb128 0x1
 1038 011a 9C       		.byte	0x9c
 1039 011b 2E010000 		.4byte	0x12e
 1040 011f 0A       		.uleb128 0xa
 1041 0120 78010000 		.4byte	.LASF21
 1042 0124 01       		.byte	0x1
 1043 0125 9D       		.byte	0x9d
 1044 0126 6B000000 		.4byte	0x6b
 1045 012a 02       		.uleb128 0x2
 1046 012b 91       		.byte	0x91
 1047 012c 77       		.sleb128 -9
 1048 012d 00       		.byte	0
 1049 012e 0B       		.uleb128 0xb
 1050 012f E2010000 		.4byte	.LASF20
 1051 0133 01       		.byte	0x1
 1052 0134 C1       		.byte	0xc1
 1053 0135 00000000 		.4byte	.LFB4
 1054 0139 64010000 		.4byte	.LFE4-.LFB4
 1055 013d 01       		.uleb128 0x1
 1056 013e 9C       		.byte	0x9c
 1057 013f 8A010000 		.4byte	0x18a
 1058 0143 0A       		.uleb128 0xa
 1059 0144 1D010000 		.4byte	.LASF22
 1060 0148 01       		.byte	0x1
 1061 0149 C1       		.byte	0xc1
 1062 014a 77000000 		.4byte	0x77
 1063 014e 02       		.uleb128 0x2
 1064 014f 91       		.byte	0x91
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 28


 1065 0150 6E       		.sleb128 -18
 1066 0151 0A       		.uleb128 0xa
 1067 0152 08010000 		.4byte	.LASF23
 1068 0156 01       		.byte	0x1
 1069 0157 C1       		.byte	0xc1
 1070 0158 6B000000 		.4byte	0x6b
 1071 015c 02       		.uleb128 0x2
 1072 015d 91       		.byte	0x91
 1073 015e 6D       		.sleb128 -19
 1074 015f 09       		.uleb128 0x9
 1075 0160 8A020000 		.4byte	.LASF25
 1076 0164 01       		.byte	0x1
 1077 0165 C4       		.byte	0xc4
 1078 0166 6B000000 		.4byte	0x6b
 1079 016a 02       		.uleb128 0x2
 1080 016b 91       		.byte	0x91
 1081 016c 73       		.sleb128 -13
 1082 016d 09       		.uleb128 0x9
 1083 016e 1F020000 		.4byte	.LASF26
 1084 0172 01       		.byte	0x1
 1085 0173 C6       		.byte	0xc6
 1086 0174 6B000000 		.4byte	0x6b
 1087 0178 02       		.uleb128 0x2
 1088 0179 91       		.byte	0x91
 1089 017a 77       		.sleb128 -9
 1090 017b 09       		.uleb128 0x9
 1091 017c 27020000 		.4byte	.LASF24
 1092 0180 01       		.byte	0x1
 1093 0181 C7       		.byte	0xc7
 1094 0182 77000000 		.4byte	0x77
 1095 0186 02       		.uleb128 0x2
 1096 0187 91       		.byte	0x91
 1097 0188 74       		.sleb128 -12
 1098 0189 00       		.byte	0
 1099 018a 0C       		.uleb128 0xc
 1100 018b CE000000 		.4byte	.LASF30
 1101 018f 01       		.byte	0x1
 1102 0190 2901     		.2byte	0x129
 1103 0192 77000000 		.4byte	0x77
 1104 0196 00000000 		.4byte	.LFB5
 1105 019a 18000000 		.4byte	.LFE5-.LFB5
 1106 019e 01       		.uleb128 0x1
 1107 019f 9C       		.byte	0x9c
 1108 01a0 0D       		.uleb128 0xd
 1109 01a1 56020000 		.4byte	.LASF27
 1110 01a5 01       		.byte	0x1
 1111 01a6 4C01     		.2byte	0x14c
 1112 01a8 00000000 		.4byte	.LFB6
 1113 01ac 34000000 		.4byte	.LFE6-.LFB6
 1114 01b0 01       		.uleb128 0x1
 1115 01b1 9C       		.byte	0x9c
 1116 01b2 C6010000 		.4byte	0x1c6
 1117 01b6 0E       		.uleb128 0xe
 1118 01b7 A6010000 		.4byte	.LASF28
 1119 01bb 01       		.byte	0x1
 1120 01bc 4C01     		.2byte	0x14c
 1121 01be 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 29


 1122 01c2 02       		.uleb128 0x2
 1123 01c3 91       		.byte	0x91
 1124 01c4 77       		.sleb128 -9
 1125 01c5 00       		.byte	0
 1126 01c6 0D       		.uleb128 0xd
 1127 01c7 B4000000 		.4byte	.LASF29
 1128 01cb 01       		.byte	0x1
 1129 01cc 6F01     		.2byte	0x16f
 1130 01ce 00000000 		.4byte	.LFB7
 1131 01d2 34000000 		.4byte	.LFE7-.LFB7
 1132 01d6 01       		.uleb128 0x1
 1133 01d7 9C       		.byte	0x9c
 1134 01d8 EC010000 		.4byte	0x1ec
 1135 01dc 0E       		.uleb128 0xe
 1136 01dd A6010000 		.4byte	.LASF28
 1137 01e1 01       		.byte	0x1
 1138 01e2 6F01     		.2byte	0x16f
 1139 01e4 6B000000 		.4byte	0x6b
 1140 01e8 02       		.uleb128 0x2
 1141 01e9 91       		.byte	0x91
 1142 01ea 77       		.sleb128 -9
 1143 01eb 00       		.byte	0
 1144 01ec 0C       		.uleb128 0xc
 1145 01ed E9000000 		.4byte	.LASF31
 1146 01f1 01       		.byte	0x1
 1147 01f2 8401     		.2byte	0x184
 1148 01f4 6B000000 		.4byte	0x6b
 1149 01f8 00000000 		.4byte	.LFB8
 1150 01fc 1C000000 		.4byte	.LFE8-.LFB8
 1151 0200 01       		.uleb128 0x1
 1152 0201 9C       		.byte	0x9c
 1153 0202 0F       		.uleb128 0xf
 1154 0203 7E010000 		.4byte	.LASF32
 1155 0207 01       		.byte	0x1
 1156 0208 A301     		.2byte	0x1a3
 1157 020a 00000000 		.4byte	.LFB9
 1158 020e C4000000 		.4byte	.LFE9-.LFB9
 1159 0212 01       		.uleb128 0x1
 1160 0213 9C       		.byte	0x9c
 1161 0214 46020000 		.4byte	0x246
 1162 0218 0E       		.uleb128 0xe
 1163 0219 15020000 		.4byte	.LASF33
 1164 021d 01       		.byte	0x1
 1165 021e A301     		.2byte	0x1a3
 1166 0220 6B000000 		.4byte	0x6b
 1167 0224 02       		.uleb128 0x2
 1168 0225 91       		.byte	0x91
 1169 0226 6F       		.sleb128 -17
 1170 0227 10       		.uleb128 0x10
 1171 0228 0E000000 		.4byte	.LASF34
 1172 022c 01       		.byte	0x1
 1173 022d A501     		.2byte	0x1a5
 1174 022f 77000000 		.4byte	0x77
 1175 0233 02       		.uleb128 0x2
 1176 0234 91       		.byte	0x91
 1177 0235 76       		.sleb128 -10
 1178 0236 10       		.uleb128 0x10
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 30


 1179 0237 10010000 		.4byte	.LASF35
 1180 023b 01       		.byte	0x1
 1181 023c A601     		.2byte	0x1a6
 1182 023e 6B000000 		.4byte	0x6b
 1183 0242 02       		.uleb128 0x2
 1184 0243 91       		.byte	0x91
 1185 0244 75       		.sleb128 -11
 1186 0245 00       		.byte	0
 1187 0246 0C       		.uleb128 0xc
 1188 0247 92020000 		.4byte	.LASF36
 1189 024b 01       		.byte	0x1
 1190 024c D001     		.2byte	0x1d0
 1191 024e 6B000000 		.4byte	0x6b
 1192 0252 00000000 		.4byte	.LFB10
 1193 0256 1C000000 		.4byte	.LFE10-.LFB10
 1194 025a 01       		.uleb128 0x1
 1195 025b 9C       		.byte	0x9c
 1196 025c 00       		.byte	0
 1197              		.section	.debug_abbrev,"",%progbits
 1198              	.Ldebug_abbrev0:
 1199 0000 01       		.uleb128 0x1
 1200 0001 11       		.uleb128 0x11
 1201 0002 01       		.byte	0x1
 1202 0003 25       		.uleb128 0x25
 1203 0004 0E       		.uleb128 0xe
 1204 0005 13       		.uleb128 0x13
 1205 0006 0B       		.uleb128 0xb
 1206 0007 03       		.uleb128 0x3
 1207 0008 0E       		.uleb128 0xe
 1208 0009 1B       		.uleb128 0x1b
 1209 000a 0E       		.uleb128 0xe
 1210 000b 55       		.uleb128 0x55
 1211 000c 17       		.uleb128 0x17
 1212 000d 11       		.uleb128 0x11
 1213 000e 01       		.uleb128 0x1
 1214 000f 10       		.uleb128 0x10
 1215 0010 17       		.uleb128 0x17
 1216 0011 00       		.byte	0
 1217 0012 00       		.byte	0
 1218 0013 02       		.uleb128 0x2
 1219 0014 24       		.uleb128 0x24
 1220 0015 00       		.byte	0
 1221 0016 0B       		.uleb128 0xb
 1222 0017 0B       		.uleb128 0xb
 1223 0018 3E       		.uleb128 0x3e
 1224 0019 0B       		.uleb128 0xb
 1225 001a 03       		.uleb128 0x3
 1226 001b 0E       		.uleb128 0xe
 1227 001c 00       		.byte	0
 1228 001d 00       		.byte	0
 1229 001e 03       		.uleb128 0x3
 1230 001f 24       		.uleb128 0x24
 1231 0020 00       		.byte	0
 1232 0021 0B       		.uleb128 0xb
 1233 0022 0B       		.uleb128 0xb
 1234 0023 3E       		.uleb128 0x3e
 1235 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 31


 1236 0025 03       		.uleb128 0x3
 1237 0026 08       		.uleb128 0x8
 1238 0027 00       		.byte	0
 1239 0028 00       		.byte	0
 1240 0029 04       		.uleb128 0x4
 1241 002a 16       		.uleb128 0x16
 1242 002b 00       		.byte	0
 1243 002c 03       		.uleb128 0x3
 1244 002d 0E       		.uleb128 0xe
 1245 002e 3A       		.uleb128 0x3a
 1246 002f 0B       		.uleb128 0xb
 1247 0030 3B       		.uleb128 0x3b
 1248 0031 05       		.uleb128 0x5
 1249 0032 49       		.uleb128 0x49
 1250 0033 13       		.uleb128 0x13
 1251 0034 00       		.byte	0
 1252 0035 00       		.byte	0
 1253 0036 05       		.uleb128 0x5
 1254 0037 35       		.uleb128 0x35
 1255 0038 00       		.byte	0
 1256 0039 49       		.uleb128 0x49
 1257 003a 13       		.uleb128 0x13
 1258 003b 00       		.byte	0
 1259 003c 00       		.byte	0
 1260 003d 06       		.uleb128 0x6
 1261 003e 2E       		.uleb128 0x2e
 1262 003f 00       		.byte	0
 1263 0040 3F       		.uleb128 0x3f
 1264 0041 19       		.uleb128 0x19
 1265 0042 03       		.uleb128 0x3
 1266 0043 0E       		.uleb128 0xe
 1267 0044 3A       		.uleb128 0x3a
 1268 0045 0B       		.uleb128 0xb
 1269 0046 3B       		.uleb128 0x3b
 1270 0047 0B       		.uleb128 0xb
 1271 0048 27       		.uleb128 0x27
 1272 0049 19       		.uleb128 0x19
 1273 004a 11       		.uleb128 0x11
 1274 004b 01       		.uleb128 0x1
 1275 004c 12       		.uleb128 0x12
 1276 004d 06       		.uleb128 0x6
 1277 004e 40       		.uleb128 0x40
 1278 004f 18       		.uleb128 0x18
 1279 0050 9742     		.uleb128 0x2117
 1280 0052 19       		.uleb128 0x19
 1281 0053 00       		.byte	0
 1282 0054 00       		.byte	0
 1283 0055 07       		.uleb128 0x7
 1284 0056 2E       		.uleb128 0x2e
 1285 0057 01       		.byte	0x1
 1286 0058 3F       		.uleb128 0x3f
 1287 0059 19       		.uleb128 0x19
 1288 005a 03       		.uleb128 0x3
 1289 005b 0E       		.uleb128 0xe
 1290 005c 3A       		.uleb128 0x3a
 1291 005d 0B       		.uleb128 0xb
 1292 005e 3B       		.uleb128 0x3b
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 32


 1293 005f 0B       		.uleb128 0xb
 1294 0060 27       		.uleb128 0x27
 1295 0061 19       		.uleb128 0x19
 1296 0062 11       		.uleb128 0x11
 1297 0063 01       		.uleb128 0x1
 1298 0064 12       		.uleb128 0x12
 1299 0065 06       		.uleb128 0x6
 1300 0066 40       		.uleb128 0x40
 1301 0067 18       		.uleb128 0x18
 1302 0068 9742     		.uleb128 0x2117
 1303 006a 19       		.uleb128 0x19
 1304 006b 01       		.uleb128 0x1
 1305 006c 13       		.uleb128 0x13
 1306 006d 00       		.byte	0
 1307 006e 00       		.byte	0
 1308 006f 08       		.uleb128 0x8
 1309 0070 0B       		.uleb128 0xb
 1310 0071 01       		.byte	0x1
 1311 0072 11       		.uleb128 0x11
 1312 0073 01       		.uleb128 0x1
 1313 0074 12       		.uleb128 0x12
 1314 0075 06       		.uleb128 0x6
 1315 0076 00       		.byte	0
 1316 0077 00       		.byte	0
 1317 0078 09       		.uleb128 0x9
 1318 0079 34       		.uleb128 0x34
 1319 007a 00       		.byte	0
 1320 007b 03       		.uleb128 0x3
 1321 007c 0E       		.uleb128 0xe
 1322 007d 3A       		.uleb128 0x3a
 1323 007e 0B       		.uleb128 0xb
 1324 007f 3B       		.uleb128 0x3b
 1325 0080 0B       		.uleb128 0xb
 1326 0081 49       		.uleb128 0x49
 1327 0082 13       		.uleb128 0x13
 1328 0083 02       		.uleb128 0x2
 1329 0084 18       		.uleb128 0x18
 1330 0085 00       		.byte	0
 1331 0086 00       		.byte	0
 1332 0087 0A       		.uleb128 0xa
 1333 0088 05       		.uleb128 0x5
 1334 0089 00       		.byte	0
 1335 008a 03       		.uleb128 0x3
 1336 008b 0E       		.uleb128 0xe
 1337 008c 3A       		.uleb128 0x3a
 1338 008d 0B       		.uleb128 0xb
 1339 008e 3B       		.uleb128 0x3b
 1340 008f 0B       		.uleb128 0xb
 1341 0090 49       		.uleb128 0x49
 1342 0091 13       		.uleb128 0x13
 1343 0092 02       		.uleb128 0x2
 1344 0093 18       		.uleb128 0x18
 1345 0094 00       		.byte	0
 1346 0095 00       		.byte	0
 1347 0096 0B       		.uleb128 0xb
 1348 0097 2E       		.uleb128 0x2e
 1349 0098 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 33


 1350 0099 3F       		.uleb128 0x3f
 1351 009a 19       		.uleb128 0x19
 1352 009b 03       		.uleb128 0x3
 1353 009c 0E       		.uleb128 0xe
 1354 009d 3A       		.uleb128 0x3a
 1355 009e 0B       		.uleb128 0xb
 1356 009f 3B       		.uleb128 0x3b
 1357 00a0 0B       		.uleb128 0xb
 1358 00a1 27       		.uleb128 0x27
 1359 00a2 19       		.uleb128 0x19
 1360 00a3 11       		.uleb128 0x11
 1361 00a4 01       		.uleb128 0x1
 1362 00a5 12       		.uleb128 0x12
 1363 00a6 06       		.uleb128 0x6
 1364 00a7 40       		.uleb128 0x40
 1365 00a8 18       		.uleb128 0x18
 1366 00a9 9642     		.uleb128 0x2116
 1367 00ab 19       		.uleb128 0x19
 1368 00ac 01       		.uleb128 0x1
 1369 00ad 13       		.uleb128 0x13
 1370 00ae 00       		.byte	0
 1371 00af 00       		.byte	0
 1372 00b0 0C       		.uleb128 0xc
 1373 00b1 2E       		.uleb128 0x2e
 1374 00b2 00       		.byte	0
 1375 00b3 3F       		.uleb128 0x3f
 1376 00b4 19       		.uleb128 0x19
 1377 00b5 03       		.uleb128 0x3
 1378 00b6 0E       		.uleb128 0xe
 1379 00b7 3A       		.uleb128 0x3a
 1380 00b8 0B       		.uleb128 0xb
 1381 00b9 3B       		.uleb128 0x3b
 1382 00ba 05       		.uleb128 0x5
 1383 00bb 27       		.uleb128 0x27
 1384 00bc 19       		.uleb128 0x19
 1385 00bd 49       		.uleb128 0x49
 1386 00be 13       		.uleb128 0x13
 1387 00bf 11       		.uleb128 0x11
 1388 00c0 01       		.uleb128 0x1
 1389 00c1 12       		.uleb128 0x12
 1390 00c2 06       		.uleb128 0x6
 1391 00c3 40       		.uleb128 0x40
 1392 00c4 18       		.uleb128 0x18
 1393 00c5 9742     		.uleb128 0x2117
 1394 00c7 19       		.uleb128 0x19
 1395 00c8 00       		.byte	0
 1396 00c9 00       		.byte	0
 1397 00ca 0D       		.uleb128 0xd
 1398 00cb 2E       		.uleb128 0x2e
 1399 00cc 01       		.byte	0x1
 1400 00cd 3F       		.uleb128 0x3f
 1401 00ce 19       		.uleb128 0x19
 1402 00cf 03       		.uleb128 0x3
 1403 00d0 0E       		.uleb128 0xe
 1404 00d1 3A       		.uleb128 0x3a
 1405 00d2 0B       		.uleb128 0xb
 1406 00d3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 34


 1407 00d4 05       		.uleb128 0x5
 1408 00d5 27       		.uleb128 0x27
 1409 00d6 19       		.uleb128 0x19
 1410 00d7 11       		.uleb128 0x11
 1411 00d8 01       		.uleb128 0x1
 1412 00d9 12       		.uleb128 0x12
 1413 00da 06       		.uleb128 0x6
 1414 00db 40       		.uleb128 0x40
 1415 00dc 18       		.uleb128 0x18
 1416 00dd 9742     		.uleb128 0x2117
 1417 00df 19       		.uleb128 0x19
 1418 00e0 01       		.uleb128 0x1
 1419 00e1 13       		.uleb128 0x13
 1420 00e2 00       		.byte	0
 1421 00e3 00       		.byte	0
 1422 00e4 0E       		.uleb128 0xe
 1423 00e5 05       		.uleb128 0x5
 1424 00e6 00       		.byte	0
 1425 00e7 03       		.uleb128 0x3
 1426 00e8 0E       		.uleb128 0xe
 1427 00e9 3A       		.uleb128 0x3a
 1428 00ea 0B       		.uleb128 0xb
 1429 00eb 3B       		.uleb128 0x3b
 1430 00ec 05       		.uleb128 0x5
 1431 00ed 49       		.uleb128 0x49
 1432 00ee 13       		.uleb128 0x13
 1433 00ef 02       		.uleb128 0x2
 1434 00f0 18       		.uleb128 0x18
 1435 00f1 00       		.byte	0
 1436 00f2 00       		.byte	0
 1437 00f3 0F       		.uleb128 0xf
 1438 00f4 2E       		.uleb128 0x2e
 1439 00f5 01       		.byte	0x1
 1440 00f6 3F       		.uleb128 0x3f
 1441 00f7 19       		.uleb128 0x19
 1442 00f8 03       		.uleb128 0x3
 1443 00f9 0E       		.uleb128 0xe
 1444 00fa 3A       		.uleb128 0x3a
 1445 00fb 0B       		.uleb128 0xb
 1446 00fc 3B       		.uleb128 0x3b
 1447 00fd 05       		.uleb128 0x5
 1448 00fe 27       		.uleb128 0x27
 1449 00ff 19       		.uleb128 0x19
 1450 0100 11       		.uleb128 0x11
 1451 0101 01       		.uleb128 0x1
 1452 0102 12       		.uleb128 0x12
 1453 0103 06       		.uleb128 0x6
 1454 0104 40       		.uleb128 0x40
 1455 0105 18       		.uleb128 0x18
 1456 0106 9642     		.uleb128 0x2116
 1457 0108 19       		.uleb128 0x19
 1458 0109 01       		.uleb128 0x1
 1459 010a 13       		.uleb128 0x13
 1460 010b 00       		.byte	0
 1461 010c 00       		.byte	0
 1462 010d 10       		.uleb128 0x10
 1463 010e 34       		.uleb128 0x34
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 35


 1464 010f 00       		.byte	0
 1465 0110 03       		.uleb128 0x3
 1466 0111 0E       		.uleb128 0xe
 1467 0112 3A       		.uleb128 0x3a
 1468 0113 0B       		.uleb128 0xb
 1469 0114 3B       		.uleb128 0x3b
 1470 0115 05       		.uleb128 0x5
 1471 0116 49       		.uleb128 0x49
 1472 0117 13       		.uleb128 0x13
 1473 0118 02       		.uleb128 0x2
 1474 0119 18       		.uleb128 0x18
 1475 011a 00       		.byte	0
 1476 011b 00       		.byte	0
 1477 011c 00       		.byte	0
 1478              		.section	.debug_aranges,"",%progbits
 1479 0000 6C000000 		.4byte	0x6c
 1480 0004 0200     		.2byte	0x2
 1481 0006 00000000 		.4byte	.Ldebug_info0
 1482 000a 04       		.byte	0x4
 1483 000b 00       		.byte	0
 1484 000c 0000     		.2byte	0
 1485 000e 0000     		.2byte	0
 1486 0010 00000000 		.4byte	.LFB0
 1487 0014 34000000 		.4byte	.LFE0-.LFB0
 1488 0018 00000000 		.4byte	.LFB1
 1489 001c 34000000 		.4byte	.LFE1-.LFB1
 1490 0020 00000000 		.4byte	.LFB2
 1491 0024 B0000000 		.4byte	.LFE2-.LFB2
 1492 0028 00000000 		.4byte	.LFB3
 1493 002c 40000000 		.4byte	.LFE3-.LFB3
 1494 0030 00000000 		.4byte	.LFB4
 1495 0034 64010000 		.4byte	.LFE4-.LFB4
 1496 0038 00000000 		.4byte	.LFB5
 1497 003c 18000000 		.4byte	.LFE5-.LFB5
 1498 0040 00000000 		.4byte	.LFB6
 1499 0044 34000000 		.4byte	.LFE6-.LFB6
 1500 0048 00000000 		.4byte	.LFB7
 1501 004c 34000000 		.4byte	.LFE7-.LFB7
 1502 0050 00000000 		.4byte	.LFB8
 1503 0054 1C000000 		.4byte	.LFE8-.LFB8
 1504 0058 00000000 		.4byte	.LFB9
 1505 005c C4000000 		.4byte	.LFE9-.LFB9
 1506 0060 00000000 		.4byte	.LFB10
 1507 0064 1C000000 		.4byte	.LFE10-.LFB10
 1508 0068 00000000 		.4byte	0
 1509 006c 00000000 		.4byte	0
 1510              		.section	.debug_ranges,"",%progbits
 1511              	.Ldebug_ranges0:
 1512 0000 00000000 		.4byte	.LFB0
 1513 0004 34000000 		.4byte	.LFE0
 1514 0008 00000000 		.4byte	.LFB1
 1515 000c 34000000 		.4byte	.LFE1
 1516 0010 00000000 		.4byte	.LFB2
 1517 0014 B0000000 		.4byte	.LFE2
 1518 0018 00000000 		.4byte	.LFB3
 1519 001c 40000000 		.4byte	.LFE3
 1520 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 36


 1521 0024 64010000 		.4byte	.LFE4
 1522 0028 00000000 		.4byte	.LFB5
 1523 002c 18000000 		.4byte	.LFE5
 1524 0030 00000000 		.4byte	.LFB6
 1525 0034 34000000 		.4byte	.LFE6
 1526 0038 00000000 		.4byte	.LFB7
 1527 003c 34000000 		.4byte	.LFE7
 1528 0040 00000000 		.4byte	.LFB8
 1529 0044 1C000000 		.4byte	.LFE8
 1530 0048 00000000 		.4byte	.LFB9
 1531 004c C4000000 		.4byte	.LFE9
 1532 0050 00000000 		.4byte	.LFB10
 1533 0054 1C000000 		.4byte	.LFE10
 1534 0058 00000000 		.4byte	0
 1535 005c 00000000 		.4byte	0
 1536              		.section	.debug_line,"",%progbits
 1537              	.Ldebug_line0:
 1538 0000 A2010000 		.section	.debug_str,"MS",%progbits,1
 1538      02004400 
 1538      00000201 
 1538      FB0E0D00 
 1538      01010101 
 1539              	.LASF16:
 1540 0000 436C6F63 		.ascii	"Clock_1_Start\000"
 1540      6B5F315F 
 1540      53746172 
 1540      7400
 1541              	.LASF34:
 1542 000e 63757272 		.ascii	"currDiv\000"
 1542      44697600 
 1543              	.LASF15:
 1544 0016 72656731 		.ascii	"reg16\000"
 1544      3600
 1545              	.LASF2:
 1546 001c 73686F72 		.ascii	"short int\000"
 1546      7420696E 
 1546      7400
 1547              	.LASF37:
 1548 0026 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1548      43313120 
 1548      352E342E 
 1548      31203230 
 1548      31363036 
 1549 0059 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1549      20726576 
 1549      6973696F 
 1549      6E203233 
 1549      37373135 
 1550 008c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1550      66756E63 
 1550      74696F6E 
 1550      2D736563 
 1550      74696F6E 
 1551              	.LASF29:
 1552 00b4 436C6F63 		.ascii	"Clock_1_ClearModeRegister\000"
 1552      6B5F315F 
 1552      436C6561 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 37


 1552      724D6F64 
 1552      65526567 
 1553              	.LASF30:
 1554 00ce 436C6F63 		.ascii	"Clock_1_GetDividerRegister\000"
 1554      6B5F315F 
 1554      47657444 
 1554      69766964 
 1554      65725265 
 1555              	.LASF31:
 1556 00e9 436C6F63 		.ascii	"Clock_1_GetModeRegister\000"
 1556      6B5F315F 
 1556      4765744D 
 1556      6F646552 
 1556      65676973 
 1557              	.LASF10:
 1558 0101 75696E74 		.ascii	"uint16\000"
 1558      313600
 1559              	.LASF23:
 1560 0108 72657374 		.ascii	"restart\000"
 1560      61727400 
 1561              	.LASF35:
 1562 0110 6F6C6453 		.ascii	"oldSrc\000"
 1562      726300
 1563              	.LASF9:
 1564 0117 75696E74 		.ascii	"uint8\000"
 1564      3800
 1565              	.LASF22:
 1566 011d 636C6B44 		.ascii	"clkDivider\000"
 1566      69766964 
 1566      657200
 1567              	.LASF38:
 1568 0128 47656E65 		.ascii	"Generated_Source\\PSoC5\\Clock_1.c\000"
 1568      72617465 
 1568      645F536F 
 1568      75726365 
 1568      5C50536F 
 1569              	.LASF11:
 1570 0149 666C6F61 		.ascii	"float\000"
 1570      7400
 1571              	.LASF6:
 1572 014f 6C6F6E67 		.ascii	"long long int\000"
 1572      206C6F6E 
 1572      6720696E 
 1572      7400
 1573              	.LASF18:
 1574 015d 436C6F63 		.ascii	"Clock_1_StopBlock\000"
 1574      6B5F315F 
 1574      53746F70 
 1574      426C6F63 
 1574      6B00
 1575              	.LASF4:
 1576 016f 6C6F6E67 		.ascii	"long int\000"
 1576      20696E74 
 1576      00
 1577              	.LASF21:
 1578 0178 73746174 		.ascii	"state\000"
 1578      6500
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 38


 1579              	.LASF32:
 1580 017e 436C6F63 		.ascii	"Clock_1_SetSourceRegister\000"
 1580      6B5F315F 
 1580      53657453 
 1580      6F757263 
 1580      65526567 
 1581              	.LASF1:
 1582 0198 756E7369 		.ascii	"unsigned char\000"
 1582      676E6564 
 1582      20636861 
 1582      7200
 1583              	.LASF28:
 1584 01a6 6D6F6465 		.ascii	"modeBitMask\000"
 1584      4269744D 
 1584      61736B00 
 1585              	.LASF0:
 1586 01b2 7369676E 		.ascii	"signed char\000"
 1586      65642063 
 1586      68617200 
 1587              	.LASF7:
 1588 01be 6C6F6E67 		.ascii	"long long unsigned int\000"
 1588      206C6F6E 
 1588      6720756E 
 1588      7369676E 
 1588      65642069 
 1589              	.LASF8:
 1590 01d5 756E7369 		.ascii	"unsigned int\000"
 1590      676E6564 
 1590      20696E74 
 1590      00
 1591              	.LASF20:
 1592 01e2 436C6F63 		.ascii	"Clock_1_SetDividerRegister\000"
 1592      6B5F315F 
 1592      53657444 
 1592      69766964 
 1592      65725265 
 1593              	.LASF3:
 1594 01fd 73686F72 		.ascii	"short unsigned int\000"
 1594      7420756E 
 1594      7369676E 
 1594      65642069 
 1594      6E7400
 1595              	.LASF13:
 1596 0210 63686172 		.ascii	"char\000"
 1596      00
 1597              	.LASF33:
 1598 0215 636C6B53 		.ascii	"clkSource\000"
 1598      6F757263 
 1598      6500
 1599              	.LASF26:
 1600 021f 63757272 		.ascii	"currSrc\000"
 1600      53726300 
 1601              	.LASF24:
 1602 0227 6F6C6444 		.ascii	"oldDivider\000"
 1602      69766964 
 1602      657200
 1603              	.LASF14:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc6XQSQK.s 			page 39


 1604 0232 72656738 		.ascii	"reg8\000"
 1604      00
 1605              	.LASF5:
 1606 0237 6C6F6E67 		.ascii	"long unsigned int\000"
 1606      20756E73 
 1606      69676E65 
 1606      6420696E 
 1606      7400
 1607              	.LASF17:
 1608 0249 436C6F63 		.ascii	"Clock_1_Stop\000"
 1608      6B5F315F 
 1608      53746F70 
 1608      00
 1609              	.LASF27:
 1610 0256 436C6F63 		.ascii	"Clock_1_SetModeRegister\000"
 1610      6B5F315F 
 1610      5365744D 
 1610      6F646552 
 1610      65676973 
 1611              	.LASF12:
 1612 026e 646F7562 		.ascii	"double\000"
 1612      6C6500
 1613              	.LASF19:
 1614 0275 436C6F63 		.ascii	"Clock_1_StandbyPower\000"
 1614      6B5F315F 
 1614      5374616E 
 1614      64627950 
 1614      6F776572 
 1615              	.LASF25:
 1616 028a 656E6162 		.ascii	"enabled\000"
 1616      6C656400 
 1617              	.LASF36:
 1618 0292 436C6F63 		.ascii	"Clock_1_GetSourceRegister\000"
 1618      6B5F315F 
 1618      47657453 
 1618      6F757263 
 1618      65526567 
 1619              	.LASF39:
 1620 02ac 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 1620      726F6772 
 1620      616D6D65 
 1620      5F536372 
 1620      69707473 
 1621 02db 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 1621      5F435938 
 1621      434B4954 
 1621      5F303539 
 1621      2D6D6173 
 1622              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
