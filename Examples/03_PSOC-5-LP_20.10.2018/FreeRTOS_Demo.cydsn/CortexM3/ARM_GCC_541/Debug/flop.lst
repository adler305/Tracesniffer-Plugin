ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"flop.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sniffIDFilter,13,4
  20              		.comm	buffer,4098,4
  21              		.comm	objectList,1704,4
  22              		.bss
  23              		.align	2
  24              	usTaskCheck:
  25 0000 00000000 		.space	8
  25      00000000 
  26              		.section	.rodata
  27              		.align	2
  28              	.LC0:
  29 0000 4D617468 		.ascii	"Math1\000"
  29      3100
  30 0006 0000     		.align	2
  31              	.LC1:
  32 0008 4D617468 		.ascii	"Math2\000"
  32      3200
  33 000e 0000     		.align	2
  34              	.LC2:
  35 0010 4D617468 		.ascii	"Math3\000"
  35      3300
  36 0016 0000     		.align	2
  37              	.LC3:
  38 0018 4D617468 		.ascii	"Math4\000"
  38      3400
  39              		.section	.text.vStartMathTasks,"ax",%progbits
  40              		.align	2
  41              		.global	vStartMathTasks
  42              		.thumb
  43              		.thumb_func
  44              		.type	vStartMathTasks, %function
  45              	vStartMathTasks:
  46              	.LFB68:
  47              		.file 1 "..\\Common\\Minimal\\flop.c"
   1:..\Common\Minimal/flop.c **** /*
   2:..\Common\Minimal/flop.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Common\Minimal/flop.c ****     All rights reserved
   4:..\Common\Minimal/flop.c **** 
   5:..\Common\Minimal/flop.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 2


   6:..\Common\Minimal/flop.c **** 
   7:..\Common\Minimal/flop.c ****     This file is part of the FreeRTOS distribution.
   8:..\Common\Minimal/flop.c **** 
   9:..\Common\Minimal/flop.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Common\Minimal/flop.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Common\Minimal/flop.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Common\Minimal/flop.c **** 
  13:..\Common\Minimal/flop.c ****     ***************************************************************************
  14:..\Common\Minimal/flop.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Common\Minimal/flop.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Common\Minimal/flop.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Common\Minimal/flop.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Common\Minimal/flop.c ****     ***************************************************************************
  19:..\Common\Minimal/flop.c **** 
  20:..\Common\Minimal/flop.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Common\Minimal/flop.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Common\Minimal/flop.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Common\Minimal/flop.c ****     link: http://www.freertos.org/a00114.html
  24:..\Common\Minimal/flop.c **** 
  25:..\Common\Minimal/flop.c ****     ***************************************************************************
  26:..\Common\Minimal/flop.c ****      *                                                                       *
  27:..\Common\Minimal/flop.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Common\Minimal/flop.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Common\Minimal/flop.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Common\Minimal/flop.c ****      *    is the industry's de facto standard.                               *
  31:..\Common\Minimal/flop.c ****      *                                                                       *
  32:..\Common\Minimal/flop.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Common\Minimal/flop.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Common\Minimal/flop.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Common\Minimal/flop.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Common\Minimal/flop.c ****      *                                                                       *
  37:..\Common\Minimal/flop.c ****     ***************************************************************************
  38:..\Common\Minimal/flop.c **** 
  39:..\Common\Minimal/flop.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Common\Minimal/flop.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Common\Minimal/flop.c ****     defined configASSERT()?
  42:..\Common\Minimal/flop.c **** 
  43:..\Common\Minimal/flop.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Common\Minimal/flop.c ****     embedded software for free we request you assist our global community by
  45:..\Common\Minimal/flop.c ****     participating in the support forum.
  46:..\Common\Minimal/flop.c **** 
  47:..\Common\Minimal/flop.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Common\Minimal/flop.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Common\Minimal/flop.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Common\Minimal/flop.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Common\Minimal/flop.c **** 
  52:..\Common\Minimal/flop.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Common\Minimal/flop.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Common\Minimal/flop.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Common\Minimal/flop.c **** 
  56:..\Common\Minimal/flop.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Common\Minimal/flop.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Common\Minimal/flop.c **** 
  59:..\Common\Minimal/flop.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Common\Minimal/flop.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Common\Minimal/flop.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Common\Minimal/flop.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 3


  63:..\Common\Minimal/flop.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Common\Minimal/flop.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Common\Minimal/flop.c ****     mission critical applications that require provable dependability.
  66:..\Common\Minimal/flop.c **** 
  67:..\Common\Minimal/flop.c ****     1 tab == 4 spaces!
  68:..\Common\Minimal/flop.c **** */
  69:..\Common\Minimal/flop.c **** 
  70:..\Common\Minimal/flop.c **** /*
  71:..\Common\Minimal/flop.c ****  * Creates eight tasks, each of which loops continuously performing a floating
  72:..\Common\Minimal/flop.c ****  * point calculation.
  73:..\Common\Minimal/flop.c ****  *
  74:..\Common\Minimal/flop.c ****  * All the tasks run at the idle priority and never block or yield.  This causes
  75:..\Common\Minimal/flop.c ****  * all eight tasks to time slice with the idle task.  Running at the idle
  76:..\Common\Minimal/flop.c ****  * priority means that these tasks will get pre-empted any time another task is
  77:..\Common\Minimal/flop.c ****  * ready to run or a time slice occurs.  More often than not the pre-emption
  78:..\Common\Minimal/flop.c ****  * will occur mid calculation, creating a good test of the schedulers context
  79:..\Common\Minimal/flop.c ****  * switch mechanism - a calculation producing an unexpected result could be a
  80:..\Common\Minimal/flop.c ****  * symptom of a corruption in the context of a task.
  81:..\Common\Minimal/flop.c ****  */
  82:..\Common\Minimal/flop.c **** 
  83:..\Common\Minimal/flop.c **** /* Standard includes. */
  84:..\Common\Minimal/flop.c **** #include <stdlib.h>
  85:..\Common\Minimal/flop.c **** #include <math.h>
  86:..\Common\Minimal/flop.c **** 
  87:..\Common\Minimal/flop.c **** /* Scheduler include files. */
  88:..\Common\Minimal/flop.c **** #include "FreeRTOS.h"
  89:..\Common\Minimal/flop.c **** #include "task.h"
  90:..\Common\Minimal/flop.c **** 
  91:..\Common\Minimal/flop.c **** /* Demo program include files. */
  92:..\Common\Minimal/flop.c **** #include "flop.h"
  93:..\Common\Minimal/flop.c **** 
  94:..\Common\Minimal/flop.c **** #ifndef mathSTACK_SIZE
  95:..\Common\Minimal/flop.c **** 	#define mathSTACK_SIZE		configMINIMAL_STACK_SIZE
  96:..\Common\Minimal/flop.c **** #endif
  97:..\Common\Minimal/flop.c **** 
  98:..\Common\Minimal/flop.c **** #define mathNUMBER_OF_TASKS  ( 4 )
  99:..\Common\Minimal/flop.c **** 
 100:..\Common\Minimal/flop.c **** /* Four tasks, each of which performs a different floating point calculation.
 101:..\Common\Minimal/flop.c **** Each of the four is created twice. */
 102:..\Common\Minimal/flop.c **** static portTASK_FUNCTION_PROTO( vCompetingMathTask1, pvParameters );
 103:..\Common\Minimal/flop.c **** static portTASK_FUNCTION_PROTO( vCompetingMathTask2, pvParameters );
 104:..\Common\Minimal/flop.c **** static portTASK_FUNCTION_PROTO( vCompetingMathTask3, pvParameters );
 105:..\Common\Minimal/flop.c **** static portTASK_FUNCTION_PROTO( vCompetingMathTask4, pvParameters );
 106:..\Common\Minimal/flop.c **** 
 107:..\Common\Minimal/flop.c **** /* These variables are used to check that all the tasks are still running.  If a
 108:..\Common\Minimal/flop.c **** task gets a calculation wrong it will stop setting its check variable. */
 109:..\Common\Minimal/flop.c **** static volatile uint16_t usTaskCheck[ mathNUMBER_OF_TASKS ] = { ( uint16_t ) 0 };
 110:..\Common\Minimal/flop.c **** 
 111:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 112:..\Common\Minimal/flop.c **** 
 113:..\Common\Minimal/flop.c **** void vStartMathTasks( UBaseType_t uxPriority )
 114:..\Common\Minimal/flop.c **** {
  48              		.loc 1 114 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 4


  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 84B0     		sub	sp, sp, #16
  57              		.cfi_def_cfa_offset 24
  58 0004 02AF     		add	r7, sp, #8
  59              		.cfi_def_cfa 7, 16
  60 0006 7860     		str	r0, [r7, #4]
 115:..\Common\Minimal/flop.c **** 	xTaskCreate( vCompetingMathTask1, "Math1", mathSTACK_SIZE, ( void * ) &( usTaskCheck[ 0 ] ), uxPri
  61              		.loc 1 115 0
  62 0008 0023     		movs	r3, #0
  63 000a 0193     		str	r3, [sp, #4]
  64 000c 7B68     		ldr	r3, [r7, #4]
  65 000e 0093     		str	r3, [sp]
  66 0010 134B     		ldr	r3, .L2
  67 0012 6422     		movs	r2, #100
  68 0014 1349     		ldr	r1, .L2+4
  69 0016 1448     		ldr	r0, .L2+8
  70 0018 FFF7FEFF 		bl	xTaskCreate
 116:..\Common\Minimal/flop.c **** 	xTaskCreate( vCompetingMathTask2, "Math2", mathSTACK_SIZE, ( void * ) &( usTaskCheck[ 1 ] ), uxPri
  71              		.loc 1 116 0
  72 001c 0023     		movs	r3, #0
  73 001e 0193     		str	r3, [sp, #4]
  74 0020 7B68     		ldr	r3, [r7, #4]
  75 0022 0093     		str	r3, [sp]
  76 0024 114B     		ldr	r3, .L2+12
  77 0026 6422     		movs	r2, #100
  78 0028 1149     		ldr	r1, .L2+16
  79 002a 1248     		ldr	r0, .L2+20
  80 002c FFF7FEFF 		bl	xTaskCreate
 117:..\Common\Minimal/flop.c **** 	xTaskCreate( vCompetingMathTask3, "Math3", mathSTACK_SIZE, ( void * ) &( usTaskCheck[ 2 ] ), uxPri
  81              		.loc 1 117 0
  82 0030 0023     		movs	r3, #0
  83 0032 0193     		str	r3, [sp, #4]
  84 0034 7B68     		ldr	r3, [r7, #4]
  85 0036 0093     		str	r3, [sp]
  86 0038 0F4B     		ldr	r3, .L2+24
  87 003a 6422     		movs	r2, #100
  88 003c 0F49     		ldr	r1, .L2+28
  89 003e 1048     		ldr	r0, .L2+32
  90 0040 FFF7FEFF 		bl	xTaskCreate
 118:..\Common\Minimal/flop.c **** 	xTaskCreate( vCompetingMathTask4, "Math4", mathSTACK_SIZE, ( void * ) &( usTaskCheck[ 3 ] ), uxPri
  91              		.loc 1 118 0
  92 0044 0023     		movs	r3, #0
  93 0046 0193     		str	r3, [sp, #4]
  94 0048 7B68     		ldr	r3, [r7, #4]
  95 004a 0093     		str	r3, [sp]
  96 004c 0D4B     		ldr	r3, .L2+36
  97 004e 6422     		movs	r2, #100
  98 0050 0D49     		ldr	r1, .L2+40
  99 0052 0E48     		ldr	r0, .L2+44
 100 0054 FFF7FEFF 		bl	xTaskCreate
 119:..\Common\Minimal/flop.c **** }
 101              		.loc 1 119 0
 102 0058 00BF     		nop
 103 005a 0837     		adds	r7, r7, #8
 104              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 5


 105 005c BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 005e 80BD     		pop	{r7, pc}
 109              	.L3:
 110              		.align	2
 111              	.L2:
 112 0060 00000000 		.word	usTaskCheck
 113 0064 00000000 		.word	.LC0
 114 0068 00000000 		.word	vCompetingMathTask1
 115 006c 02000000 		.word	usTaskCheck+2
 116 0070 08000000 		.word	.LC1
 117 0074 00000000 		.word	vCompetingMathTask2
 118 0078 04000000 		.word	usTaskCheck+4
 119 007c 10000000 		.word	.LC2
 120 0080 00000000 		.word	vCompetingMathTask3
 121 0084 06000000 		.word	usTaskCheck+6
 122 0088 18000000 		.word	.LC3
 123 008c 00000000 		.word	vCompetingMathTask4
 124              		.cfi_endproc
 125              	.LFE68:
 126              		.size	vStartMathTasks, .-vStartMathTasks
 127              		.global	__aeabi_dadd
 128              		.global	__aeabi_dmul
 129              		.global	__aeabi_dsub
 130              		.global	__aeabi_dcmpgt
 131              		.section	.text.vCompetingMathTask1,"ax",%progbits
 132              		.align	2
 133              		.thumb
 134              		.thumb_func
 135              		.type	vCompetingMathTask1, %function
 136              	vCompetingMathTask1:
 137              	.LFB69:
 120:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 121:..\Common\Minimal/flop.c **** 
 122:..\Common\Minimal/flop.c **** static portTASK_FUNCTION( vCompetingMathTask1, pvParameters )
 123:..\Common\Minimal/flop.c **** {
 138              		.loc 1 123 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 56
 141              		@ frame_needed = 1, uses_anonymous_args = 0
 142 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 143              		.cfi_def_cfa_offset 20
 144              		.cfi_offset 4, -20
 145              		.cfi_offset 5, -16
 146              		.cfi_offset 6, -12
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 8FB0     		sub	sp, sp, #60
 150              		.cfi_def_cfa_offset 80
 151 0004 00AF     		add	r7, sp, #0
 152              		.cfi_def_cfa_register 7
 153 0006 7860     		str	r0, [r7, #4]
 124:..\Common\Minimal/flop.c **** volatile portDOUBLE d1, d2, d3, d4;
 125:..\Common\Minimal/flop.c **** volatile uint16_t *pusTaskCheckVariable;
 126:..\Common\Minimal/flop.c **** volatile portDOUBLE dAnswer;
 127:..\Common\Minimal/flop.c **** short sError = pdFALSE;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 6


 154              		.loc 1 127 0
 155 0008 0023     		movs	r3, #0
 156 000a FB86     		strh	r3, [r7, #54]	@ movhi
 128:..\Common\Minimal/flop.c **** 
 129:..\Common\Minimal/flop.c **** 	/* Some ports require that tasks that use a hardware floating point unit
 130:..\Common\Minimal/flop.c **** 	tell the kernel that they require a floating point context before any
 131:..\Common\Minimal/flop.c **** 	floating point instructions are executed. */
 132:..\Common\Minimal/flop.c **** 	portTASK_USES_FLOATING_POINT();
 133:..\Common\Minimal/flop.c **** 
 134:..\Common\Minimal/flop.c **** 	d1 = 123.4567;
 157              		.loc 1 134 0
 158 000c 36A4     		adr	r4, .L10
 159 000e D4E90034 		ldrd	r3, [r4]
 160 0012 C7E90A34 		strd	r3, [r7, #40]
 135:..\Common\Minimal/flop.c **** 	d2 = 2345.6789;
 161              		.loc 1 135 0
 162 0016 36A4     		adr	r4, .L10+8
 163 0018 D4E90034 		ldrd	r3, [r4]
 164 001c C7E90834 		strd	r3, [r7, #32]
 136:..\Common\Minimal/flop.c **** 	d3 = -918.222;
 165              		.loc 1 136 0
 166 0020 35A4     		adr	r4, .L10+16
 167 0022 D4E90034 		ldrd	r3, [r4]
 168 0026 C7E90634 		strd	r3, [r7, #24]
 137:..\Common\Minimal/flop.c **** 
 138:..\Common\Minimal/flop.c **** 	dAnswer = ( d1 + d2 ) * d3;
 169              		.loc 1 138 0
 170 002a D7E90A01 		ldrd	r0, [r7, #40]
 171 002e D7E90834 		ldrd	r3, [r7, #32]
 172 0032 1A46     		mov	r2, r3
 173 0034 2346     		mov	r3, r4
 174 0036 FFF7FEFF 		bl	__aeabi_dadd
 175 003a 0346     		mov	r3, r0
 176 003c 0C46     		mov	r4, r1
 177 003e 1846     		mov	r0, r3
 178 0040 2146     		mov	r1, r4
 179 0042 D7E90634 		ldrd	r3, [r7, #24]
 180 0046 1A46     		mov	r2, r3
 181 0048 2346     		mov	r3, r4
 182 004a FFF7FEFF 		bl	__aeabi_dmul
 183 004e 0346     		mov	r3, r0
 184 0050 0C46     		mov	r4, r1
 185 0052 C7E90234 		strd	r3, [r7, #8]
 139:..\Common\Minimal/flop.c **** 
 140:..\Common\Minimal/flop.c **** 	/* The variable this task increments to show it is still running is passed in
 141:..\Common\Minimal/flop.c **** 	as the parameter. */
 142:..\Common\Minimal/flop.c **** 	pusTaskCheckVariable = ( uint16_t * ) pvParameters;
 186              		.loc 1 142 0
 187 0056 7B68     		ldr	r3, [r7, #4]
 188 0058 3B63     		str	r3, [r7, #48]
 189              	.L8:
 143:..\Common\Minimal/flop.c **** 
 144:..\Common\Minimal/flop.c **** 	/* Keep performing a calculation and checking the result against a constant. */
 145:..\Common\Minimal/flop.c **** 	for(;;)
 146:..\Common\Minimal/flop.c **** 	{
 147:..\Common\Minimal/flop.c **** 		d1 = 123.4567;
 190              		.loc 1 147 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 7


 191 005a 23A4     		adr	r4, .L10
 192 005c D4E90034 		ldrd	r3, [r4]
 193 0060 C7E90A34 		strd	r3, [r7, #40]
 148:..\Common\Minimal/flop.c **** 		d2 = 2345.6789;
 194              		.loc 1 148 0
 195 0064 22A4     		adr	r4, .L10+8
 196 0066 D4E90034 		ldrd	r3, [r4]
 197 006a C7E90834 		strd	r3, [r7, #32]
 149:..\Common\Minimal/flop.c **** 		d3 = -918.222;
 198              		.loc 1 149 0
 199 006e 22A4     		adr	r4, .L10+16
 200 0070 D4E90034 		ldrd	r3, [r4]
 201 0074 C7E90634 		strd	r3, [r7, #24]
 150:..\Common\Minimal/flop.c **** 
 151:..\Common\Minimal/flop.c **** 		d4 = ( d1 + d2 ) * d3;
 202              		.loc 1 151 0
 203 0078 D7E90A01 		ldrd	r0, [r7, #40]
 204 007c D7E90834 		ldrd	r3, [r7, #32]
 205 0080 1A46     		mov	r2, r3
 206 0082 2346     		mov	r3, r4
 207 0084 FFF7FEFF 		bl	__aeabi_dadd
 208 0088 0346     		mov	r3, r0
 209 008a 0C46     		mov	r4, r1
 210 008c 1846     		mov	r0, r3
 211 008e 2146     		mov	r1, r4
 212 0090 D7E90634 		ldrd	r3, [r7, #24]
 213 0094 1A46     		mov	r2, r3
 214 0096 2346     		mov	r3, r4
 215 0098 FFF7FEFF 		bl	__aeabi_dmul
 216 009c 0346     		mov	r3, r0
 217 009e 0C46     		mov	r4, r1
 218 00a0 C7E90434 		strd	r3, [r7, #16]
 152:..\Common\Minimal/flop.c **** 
 153:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 154:..\Common\Minimal/flop.c **** 			taskYIELD();
 155:..\Common\Minimal/flop.c **** 		#endif
 156:..\Common\Minimal/flop.c **** 
 157:..\Common\Minimal/flop.c **** 		/* If the calculation does not match the expected constant, stop the
 158:..\Common\Minimal/flop.c **** 		increment of the check variable. */
 159:..\Common\Minimal/flop.c **** 		if( fabs( d4 - dAnswer ) > 0.001 )
 219              		.loc 1 159 0
 220 00a4 D7E90401 		ldrd	r0, [r7, #16]
 221 00a8 D7E90234 		ldrd	r3, [r7, #8]
 222 00ac 1A46     		mov	r2, r3
 223 00ae 2346     		mov	r3, r4
 224 00b0 FFF7FEFF 		bl	__aeabi_dsub
 225 00b4 0346     		mov	r3, r0
 226 00b6 0C46     		mov	r4, r1
 227 00b8 1D46     		mov	r5, r3
 228 00ba 24F00046 		bic	r6, r4, #-2147483648
 229 00be 10A3     		adr	r3, .L10+24
 230 00c0 D3E90023 		ldrd	r2, [r3]
 231 00c4 2846     		mov	r0, r5
 232 00c6 3146     		mov	r1, r6
 233 00c8 FFF7FEFF 		bl	__aeabi_dcmpgt
 234 00cc 0346     		mov	r3, r0
 235 00ce 002B     		cmp	r3, #0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 8


 236 00d0 01D0     		beq	.L5
 160:..\Common\Minimal/flop.c **** 		{
 161:..\Common\Minimal/flop.c **** 			sError = pdTRUE;
 237              		.loc 1 161 0
 238 00d2 0123     		movs	r3, #1
 239 00d4 FB86     		strh	r3, [r7, #54]	@ movhi
 240              	.L5:
 162:..\Common\Minimal/flop.c **** 		}
 163:..\Common\Minimal/flop.c **** 
 164:..\Common\Minimal/flop.c **** 		if( sError == pdFALSE )
 241              		.loc 1 164 0
 242 00d6 B7F93630 		ldrsh	r3, [r7, #54]
 243 00da 002B     		cmp	r3, #0
 244 00dc BDD1     		bne	.L8
 165:..\Common\Minimal/flop.c **** 		{
 166:..\Common\Minimal/flop.c **** 			/* If the calculation has always been correct then set set the check
 167:..\Common\Minimal/flop.c **** 			variable.  The check variable will get set to pdFALSE each time
 168:..\Common\Minimal/flop.c **** 			xAreMathsTaskStillRunning() is executed. */
 169:..\Common\Minimal/flop.c **** 			( *pusTaskCheckVariable ) = pdTRUE;
 245              		.loc 1 169 0
 246 00de 3B6B     		ldr	r3, [r7, #48]
 247 00e0 0122     		movs	r2, #1
 248 00e2 1A80     		strh	r2, [r3]	@ movhi
 170:..\Common\Minimal/flop.c **** 		}
 171:..\Common\Minimal/flop.c **** 
 172:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 173:..\Common\Minimal/flop.c **** 			taskYIELD();
 174:..\Common\Minimal/flop.c **** 		#endif
 175:..\Common\Minimal/flop.c **** 
 176:..\Common\Minimal/flop.c **** 	}
 249              		.loc 1 176 0
 250 00e4 B9E7     		b	.L8
 251              	.L11:
 252 00e6 00BF     		.align	3
 253              	.L10:
 254 00e8 5305A392 		.word	-1834810029
 255 00ec 3ADD5E40 		.word	1079958842
 256 00f0 82E2C798 		.word	-1731730814
 257 00f4 5B53A240 		.word	1084379995
 258 00f8 B29DEFA7 		.word	-1477468750
 259 00fc C6B18CC0 		.word	-1064521274
 260 0100 FCA9F1D2 		.word	-755914244
 261 0104 4D62503F 		.word	1062232653
 262              		.cfi_endproc
 263              	.LFE69:
 264              		.size	vCompetingMathTask1, .-vCompetingMathTask1
 265              		.global	__aeabi_ddiv
 266              		.section	.text.vCompetingMathTask2,"ax",%progbits
 267              		.align	2
 268              		.thumb
 269              		.thumb_func
 270              		.type	vCompetingMathTask2, %function
 271              	vCompetingMathTask2:
 272              	.LFB70:
 177:..\Common\Minimal/flop.c **** }
 178:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 179:..\Common\Minimal/flop.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 9


 180:..\Common\Minimal/flop.c **** static portTASK_FUNCTION( vCompetingMathTask2, pvParameters )
 181:..\Common\Minimal/flop.c **** {
 273              		.loc 1 181 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 56
 276              		@ frame_needed = 1, uses_anonymous_args = 0
 277 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 278              		.cfi_def_cfa_offset 20
 279              		.cfi_offset 4, -20
 280              		.cfi_offset 5, -16
 281              		.cfi_offset 6, -12
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 8FB0     		sub	sp, sp, #60
 285              		.cfi_def_cfa_offset 80
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 288 0006 7860     		str	r0, [r7, #4]
 182:..\Common\Minimal/flop.c **** volatile portDOUBLE d1, d2, d3, d4;
 183:..\Common\Minimal/flop.c **** volatile uint16_t *pusTaskCheckVariable;
 184:..\Common\Minimal/flop.c **** volatile portDOUBLE dAnswer;
 185:..\Common\Minimal/flop.c **** short sError = pdFALSE;
 289              		.loc 1 185 0
 290 0008 0023     		movs	r3, #0
 291 000a FB86     		strh	r3, [r7, #54]	@ movhi
 186:..\Common\Minimal/flop.c **** 
 187:..\Common\Minimal/flop.c **** 	/* Some ports require that tasks that use a hardware floating point unit
 188:..\Common\Minimal/flop.c **** 	tell the kernel that they require a floating point context before any
 189:..\Common\Minimal/flop.c **** 	floating point instructions are executed. */
 190:..\Common\Minimal/flop.c **** 	portTASK_USES_FLOATING_POINT();
 191:..\Common\Minimal/flop.c **** 
 192:..\Common\Minimal/flop.c **** 	d1 = -389.38;
 292              		.loc 1 192 0
 293 000c 36A4     		adr	r4, .L18
 294 000e D4E90034 		ldrd	r3, [r4]
 295 0012 C7E90A34 		strd	r3, [r7, #40]
 193:..\Common\Minimal/flop.c **** 	d2 = 32498.2;
 296              		.loc 1 193 0
 297 0016 36A4     		adr	r4, .L18+8
 298 0018 D4E90034 		ldrd	r3, [r4]
 299 001c C7E90834 		strd	r3, [r7, #32]
 194:..\Common\Minimal/flop.c **** 	d3 = -2.0001;
 300              		.loc 1 194 0
 301 0020 35A4     		adr	r4, .L18+16
 302 0022 D4E90034 		ldrd	r3, [r4]
 303 0026 C7E90634 		strd	r3, [r7, #24]
 195:..\Common\Minimal/flop.c **** 
 196:..\Common\Minimal/flop.c **** 	dAnswer = ( d1 / d2 ) * d3;
 304              		.loc 1 196 0
 305 002a D7E90A01 		ldrd	r0, [r7, #40]
 306 002e D7E90834 		ldrd	r3, [r7, #32]
 307 0032 1A46     		mov	r2, r3
 308 0034 2346     		mov	r3, r4
 309 0036 FFF7FEFF 		bl	__aeabi_ddiv
 310 003a 0346     		mov	r3, r0
 311 003c 0C46     		mov	r4, r1
 312 003e 1846     		mov	r0, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 10


 313 0040 2146     		mov	r1, r4
 314 0042 D7E90634 		ldrd	r3, [r7, #24]
 315 0046 1A46     		mov	r2, r3
 316 0048 2346     		mov	r3, r4
 317 004a FFF7FEFF 		bl	__aeabi_dmul
 318 004e 0346     		mov	r3, r0
 319 0050 0C46     		mov	r4, r1
 320 0052 C7E90234 		strd	r3, [r7, #8]
 197:..\Common\Minimal/flop.c **** 
 198:..\Common\Minimal/flop.c **** 
 199:..\Common\Minimal/flop.c **** 	/* The variable this task increments to show it is still running is passed in
 200:..\Common\Minimal/flop.c **** 	as the parameter. */
 201:..\Common\Minimal/flop.c **** 	pusTaskCheckVariable = ( uint16_t * ) pvParameters;
 321              		.loc 1 201 0
 322 0056 7B68     		ldr	r3, [r7, #4]
 323 0058 3B63     		str	r3, [r7, #48]
 324              	.L16:
 202:..\Common\Minimal/flop.c **** 
 203:..\Common\Minimal/flop.c **** 	/* Keep performing a calculation and checking the result against a constant. */
 204:..\Common\Minimal/flop.c **** 	for( ;; )
 205:..\Common\Minimal/flop.c **** 	{
 206:..\Common\Minimal/flop.c **** 		d1 = -389.38;
 325              		.loc 1 206 0
 326 005a 23A4     		adr	r4, .L18
 327 005c D4E90034 		ldrd	r3, [r4]
 328 0060 C7E90A34 		strd	r3, [r7, #40]
 207:..\Common\Minimal/flop.c **** 		d2 = 32498.2;
 329              		.loc 1 207 0
 330 0064 22A4     		adr	r4, .L18+8
 331 0066 D4E90034 		ldrd	r3, [r4]
 332 006a C7E90834 		strd	r3, [r7, #32]
 208:..\Common\Minimal/flop.c **** 		d3 = -2.0001;
 333              		.loc 1 208 0
 334 006e 22A4     		adr	r4, .L18+16
 335 0070 D4E90034 		ldrd	r3, [r4]
 336 0074 C7E90634 		strd	r3, [r7, #24]
 209:..\Common\Minimal/flop.c **** 
 210:..\Common\Minimal/flop.c **** 		d4 = ( d1 / d2 ) * d3;
 337              		.loc 1 210 0
 338 0078 D7E90A01 		ldrd	r0, [r7, #40]
 339 007c D7E90834 		ldrd	r3, [r7, #32]
 340 0080 1A46     		mov	r2, r3
 341 0082 2346     		mov	r3, r4
 342 0084 FFF7FEFF 		bl	__aeabi_ddiv
 343 0088 0346     		mov	r3, r0
 344 008a 0C46     		mov	r4, r1
 345 008c 1846     		mov	r0, r3
 346 008e 2146     		mov	r1, r4
 347 0090 D7E90634 		ldrd	r3, [r7, #24]
 348 0094 1A46     		mov	r2, r3
 349 0096 2346     		mov	r3, r4
 350 0098 FFF7FEFF 		bl	__aeabi_dmul
 351 009c 0346     		mov	r3, r0
 352 009e 0C46     		mov	r4, r1
 353 00a0 C7E90434 		strd	r3, [r7, #16]
 211:..\Common\Minimal/flop.c **** 
 212:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 11


 213:..\Common\Minimal/flop.c **** 			taskYIELD();
 214:..\Common\Minimal/flop.c **** 		#endif
 215:..\Common\Minimal/flop.c **** 
 216:..\Common\Minimal/flop.c **** 		/* If the calculation does not match the expected constant, stop the
 217:..\Common\Minimal/flop.c **** 		increment of the check variable. */
 218:..\Common\Minimal/flop.c **** 		if( fabs( d4 - dAnswer ) > 0.001 )
 354              		.loc 1 218 0
 355 00a4 D7E90401 		ldrd	r0, [r7, #16]
 356 00a8 D7E90234 		ldrd	r3, [r7, #8]
 357 00ac 1A46     		mov	r2, r3
 358 00ae 2346     		mov	r3, r4
 359 00b0 FFF7FEFF 		bl	__aeabi_dsub
 360 00b4 0346     		mov	r3, r0
 361 00b6 0C46     		mov	r4, r1
 362 00b8 1D46     		mov	r5, r3
 363 00ba 24F00046 		bic	r6, r4, #-2147483648
 364 00be 10A3     		adr	r3, .L18+24
 365 00c0 D3E90023 		ldrd	r2, [r3]
 366 00c4 2846     		mov	r0, r5
 367 00c6 3146     		mov	r1, r6
 368 00c8 FFF7FEFF 		bl	__aeabi_dcmpgt
 369 00cc 0346     		mov	r3, r0
 370 00ce 002B     		cmp	r3, #0
 371 00d0 01D0     		beq	.L13
 219:..\Common\Minimal/flop.c **** 		{
 220:..\Common\Minimal/flop.c **** 			sError = pdTRUE;
 372              		.loc 1 220 0
 373 00d2 0123     		movs	r3, #1
 374 00d4 FB86     		strh	r3, [r7, #54]	@ movhi
 375              	.L13:
 221:..\Common\Minimal/flop.c **** 		}
 222:..\Common\Minimal/flop.c **** 
 223:..\Common\Minimal/flop.c **** 		if( sError == pdFALSE )
 376              		.loc 1 223 0
 377 00d6 B7F93630 		ldrsh	r3, [r7, #54]
 378 00da 002B     		cmp	r3, #0
 379 00dc BDD1     		bne	.L16
 224:..\Common\Minimal/flop.c **** 		{
 225:..\Common\Minimal/flop.c **** 			/* If the calculation has always been correct then set set the check
 226:..\Common\Minimal/flop.c **** 			variable.  The check variable will get set to pdFALSE each time
 227:..\Common\Minimal/flop.c **** 			xAreMathsTaskStillRunning() is executed. */
 228:..\Common\Minimal/flop.c **** 			( *pusTaskCheckVariable ) = pdTRUE;
 380              		.loc 1 228 0
 381 00de 3B6B     		ldr	r3, [r7, #48]
 382 00e0 0122     		movs	r2, #1
 383 00e2 1A80     		strh	r2, [r3]	@ movhi
 229:..\Common\Minimal/flop.c **** 		}
 230:..\Common\Minimal/flop.c **** 
 231:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 232:..\Common\Minimal/flop.c **** 			taskYIELD();
 233:..\Common\Minimal/flop.c **** 		#endif
 234:..\Common\Minimal/flop.c **** 	}
 384              		.loc 1 234 0
 385 00e4 B9E7     		b	.L16
 386              	.L19:
 387 00e6 00BF     		.align	3
 388              	.L18:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 12


 389 00e8 AE47E17A 		.word	2061584302
 390 00ec 145678C0 		.word	-1065855468
 391 00f0 CDCCCCCC 		.word	-858993459
 392 00f4 8CBCDF40 		.word	1088404620
 393 00f8 39D6C56D 		.word	1841681977
 394 00fc 340000C0 		.word	-1073741772
 395 0100 FCA9F1D2 		.word	-755914244
 396 0104 4D62503F 		.word	1062232653
 397              		.cfi_endproc
 398              	.LFE70:
 399              		.size	vCompetingMathTask2, .-vCompetingMathTask2
 400              		.global	__aeabi_ui2d
 401              		.section	.text.vCompetingMathTask3,"ax",%progbits
 402              		.align	2
 403              		.thumb
 404              		.thumb_func
 405              		.type	vCompetingMathTask3, %function
 406              	vCompetingMathTask3:
 407              	.LFB71:
 235:..\Common\Minimal/flop.c **** }
 236:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 237:..\Common\Minimal/flop.c **** 
 238:..\Common\Minimal/flop.c **** static portTASK_FUNCTION( vCompetingMathTask3, pvParameters )
 239:..\Common\Minimal/flop.c **** {
 408              		.loc 1 239 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 56
 411              		@ frame_needed = 1, uses_anonymous_args = 0
 412 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 413              		.cfi_def_cfa_offset 24
 414              		.cfi_offset 4, -24
 415              		.cfi_offset 5, -20
 416              		.cfi_offset 6, -16
 417              		.cfi_offset 7, -12
 418              		.cfi_offset 8, -8
 419              		.cfi_offset 14, -4
 420 0004 8EB0     		sub	sp, sp, #56
 421              		.cfi_def_cfa_offset 80
 422 0006 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
 424 0008 7860     		str	r0, [r7, #4]
 240:..\Common\Minimal/flop.c **** volatile portDOUBLE *pdArray, dTotal1, dTotal2, dDifference;
 241:..\Common\Minimal/flop.c **** volatile uint16_t *pusTaskCheckVariable;
 242:..\Common\Minimal/flop.c **** const size_t xArraySize = 10;
 425              		.loc 1 242 0
 426 000a 0A23     		movs	r3, #10
 427 000c FB62     		str	r3, [r7, #44]
 243:..\Common\Minimal/flop.c **** size_t xPosition;
 244:..\Common\Minimal/flop.c **** short sError = pdFALSE;
 428              		.loc 1 244 0
 429 000e 0023     		movs	r3, #0
 430 0010 7B86     		strh	r3, [r7, #50]	@ movhi
 245:..\Common\Minimal/flop.c **** 
 246:..\Common\Minimal/flop.c **** 	/* Some ports require that tasks that use a hardware floating point unit
 247:..\Common\Minimal/flop.c **** 	tell the kernel that they require a floating point context before any
 248:..\Common\Minimal/flop.c **** 	floating point instructions are executed. */
 249:..\Common\Minimal/flop.c **** 	portTASK_USES_FLOATING_POINT();
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 13


 250:..\Common\Minimal/flop.c **** 
 251:..\Common\Minimal/flop.c **** 	/* The variable this task increments to show it is still running is passed in
 252:..\Common\Minimal/flop.c **** 	as the parameter. */
 253:..\Common\Minimal/flop.c **** 	pusTaskCheckVariable = ( uint16_t * ) pvParameters;
 431              		.loc 1 253 0
 432 0012 7B68     		ldr	r3, [r7, #4]
 433 0014 BB62     		str	r3, [r7, #40]
 254:..\Common\Minimal/flop.c **** 
 255:..\Common\Minimal/flop.c **** 	pdArray = ( portDOUBLE * ) pvPortMalloc( xArraySize * sizeof( portDOUBLE ) );
 434              		.loc 1 255 0
 435 0016 FB6A     		ldr	r3, [r7, #44]
 436 0018 DB00     		lsls	r3, r3, #3
 437 001a 1846     		mov	r0, r3
 438 001c FFF7FEFF 		bl	pvPortMalloc
 439 0020 7862     		str	r0, [r7, #36]
 440              	.L28:
 256:..\Common\Minimal/flop.c **** 
 257:..\Common\Minimal/flop.c **** 	/* Keep filling an array, keeping a running total of the values placed in the
 258:..\Common\Minimal/flop.c **** 	array.  Then run through the array adding up all the values.  If the two totals
 259:..\Common\Minimal/flop.c **** 	do not match, stop the check variable from incrementing. */
 260:..\Common\Minimal/flop.c **** 	for( ;; )
 261:..\Common\Minimal/flop.c **** 	{
 262:..\Common\Minimal/flop.c **** 		dTotal1 = 0.0;
 441              		.loc 1 262 0
 442 0022 4FF00003 		mov	r3, #0
 443 0026 4FF00004 		mov	r4, #0
 444 002a C7E90634 		strd	r3, [r7, #24]
 263:..\Common\Minimal/flop.c **** 		dTotal2 = 0.0;
 445              		.loc 1 263 0
 446 002e 4FF00003 		mov	r3, #0
 447 0032 4FF00004 		mov	r4, #0
 448 0036 C7E90434 		strd	r3, [r7, #16]
 264:..\Common\Minimal/flop.c **** 
 265:..\Common\Minimal/flop.c **** 		for( xPosition = 0; xPosition < xArraySize; xPosition++ )
 449              		.loc 1 265 0
 450 003a 0023     		movs	r3, #0
 451 003c 7B63     		str	r3, [r7, #52]
 452 003e 29E0     		b	.L21
 453              	.L22:
 266:..\Common\Minimal/flop.c **** 		{
 267:..\Common\Minimal/flop.c **** 			pdArray[ xPosition ] = ( portDOUBLE ) xPosition + 5.5;
 454              		.loc 1 267 0 discriminator 3
 455 0040 7B6B     		ldr	r3, [r7, #52]
 456 0042 DB00     		lsls	r3, r3, #3
 457 0044 7A6A     		ldr	r2, [r7, #36]
 458 0046 02EB0308 		add	r8, r2, r3
 459 004a 786B     		ldr	r0, [r7, #52]
 460 004c FFF7FEFF 		bl	__aeabi_ui2d
 461 0050 4FF00002 		mov	r2, #0
 462 0054 344B     		ldr	r3, .L30+8
 463 0056 FFF7FEFF 		bl	__aeabi_dadd
 464 005a 0346     		mov	r3, r0
 465 005c 0C46     		mov	r4, r1
 466 005e C8E90034 		strd	r3, [r8]
 268:..\Common\Minimal/flop.c **** 			dTotal1 += ( portDOUBLE ) xPosition + 5.5;
 467              		.loc 1 268 0 discriminator 3
 468 0062 786B     		ldr	r0, [r7, #52]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 14


 469 0064 FFF7FEFF 		bl	__aeabi_ui2d
 470 0068 4FF00002 		mov	r2, #0
 471 006c 2E4B     		ldr	r3, .L30+8
 472 006e FFF7FEFF 		bl	__aeabi_dadd
 473 0072 0346     		mov	r3, r0
 474 0074 0C46     		mov	r4, r1
 475 0076 1846     		mov	r0, r3
 476 0078 2146     		mov	r1, r4
 477 007a D7E90634 		ldrd	r3, [r7, #24]
 478 007e 1A46     		mov	r2, r3
 479 0080 2346     		mov	r3, r4
 480 0082 FFF7FEFF 		bl	__aeabi_dadd
 481 0086 0346     		mov	r3, r0
 482 0088 0C46     		mov	r4, r1
 483 008a C7E90634 		strd	r3, [r7, #24]
 265:..\Common\Minimal/flop.c **** 		{
 484              		.loc 1 265 0 discriminator 3
 485 008e 7B6B     		ldr	r3, [r7, #52]
 486 0090 0133     		adds	r3, r3, #1
 487 0092 7B63     		str	r3, [r7, #52]
 488              	.L21:
 265:..\Common\Minimal/flop.c **** 		{
 489              		.loc 1 265 0 is_stmt 0 discriminator 1
 490 0094 7A6B     		ldr	r2, [r7, #52]
 491 0096 FB6A     		ldr	r3, [r7, #44]
 492 0098 9A42     		cmp	r2, r3
 493 009a D1D3     		bcc	.L22
 269:..\Common\Minimal/flop.c **** 		}
 270:..\Common\Minimal/flop.c **** 
 271:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 272:..\Common\Minimal/flop.c **** 			taskYIELD();
 273:..\Common\Minimal/flop.c **** 		#endif
 274:..\Common\Minimal/flop.c **** 
 275:..\Common\Minimal/flop.c **** 		for( xPosition = 0; xPosition < xArraySize; xPosition++ )
 494              		.loc 1 275 0 is_stmt 1
 495 009c 0023     		movs	r3, #0
 496 009e 7B63     		str	r3, [r7, #52]
 497 00a0 12E0     		b	.L23
 498              	.L24:
 276:..\Common\Minimal/flop.c **** 		{
 277:..\Common\Minimal/flop.c **** 			dTotal2 += pdArray[ xPosition ];
 499              		.loc 1 277 0 discriminator 3
 500 00a2 7B6B     		ldr	r3, [r7, #52]
 501 00a4 DB00     		lsls	r3, r3, #3
 502 00a6 7A6A     		ldr	r2, [r7, #36]
 503 00a8 1344     		add	r3, r3, r2
 504 00aa D3E90001 		ldrd	r0, [r3]
 505 00ae D7E90434 		ldrd	r3, [r7, #16]
 506 00b2 1A46     		mov	r2, r3
 507 00b4 2346     		mov	r3, r4
 508 00b6 FFF7FEFF 		bl	__aeabi_dadd
 509 00ba 0346     		mov	r3, r0
 510 00bc 0C46     		mov	r4, r1
 511 00be C7E90434 		strd	r3, [r7, #16]
 275:..\Common\Minimal/flop.c **** 		{
 512              		.loc 1 275 0 discriminator 3
 513 00c2 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 15


 514 00c4 0133     		adds	r3, r3, #1
 515 00c6 7B63     		str	r3, [r7, #52]
 516              	.L23:
 275:..\Common\Minimal/flop.c **** 		{
 517              		.loc 1 275 0 is_stmt 0 discriminator 1
 518 00c8 7A6B     		ldr	r2, [r7, #52]
 519 00ca FB6A     		ldr	r3, [r7, #44]
 520 00cc 9A42     		cmp	r2, r3
 521 00ce E8D3     		bcc	.L24
 278:..\Common\Minimal/flop.c **** 		}
 279:..\Common\Minimal/flop.c **** 
 280:..\Common\Minimal/flop.c **** 		dDifference = dTotal1 - dTotal2;
 522              		.loc 1 280 0 is_stmt 1
 523 00d0 D7E90601 		ldrd	r0, [r7, #24]
 524 00d4 D7E90434 		ldrd	r3, [r7, #16]
 525 00d8 1A46     		mov	r2, r3
 526 00da 2346     		mov	r3, r4
 527 00dc FFF7FEFF 		bl	__aeabi_dsub
 528 00e0 0346     		mov	r3, r0
 529 00e2 0C46     		mov	r4, r1
 530 00e4 C7E90234 		strd	r3, [r7, #8]
 281:..\Common\Minimal/flop.c **** 		if( fabs( dDifference ) > 0.001 )
 531              		.loc 1 281 0
 532 00e8 D7E90234 		ldrd	r3, [r7, #8]
 533 00ec 1D46     		mov	r5, r3
 534 00ee 24F00046 		bic	r6, r4, #-2147483648
 535 00f2 0BA3     		adr	r3, .L30
 536 00f4 D3E90023 		ldrd	r2, [r3]
 537 00f8 2846     		mov	r0, r5
 538 00fa 3146     		mov	r1, r6
 539 00fc FFF7FEFF 		bl	__aeabi_dcmpgt
 540 0100 0346     		mov	r3, r0
 541 0102 002B     		cmp	r3, #0
 542 0104 01D0     		beq	.L25
 282:..\Common\Minimal/flop.c **** 		{
 283:..\Common\Minimal/flop.c **** 			sError = pdTRUE;
 543              		.loc 1 283 0
 544 0106 0123     		movs	r3, #1
 545 0108 7B86     		strh	r3, [r7, #50]	@ movhi
 546              	.L25:
 284:..\Common\Minimal/flop.c **** 		}
 285:..\Common\Minimal/flop.c **** 
 286:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 287:..\Common\Minimal/flop.c **** 			taskYIELD();
 288:..\Common\Minimal/flop.c **** 		#endif
 289:..\Common\Minimal/flop.c **** 
 290:..\Common\Minimal/flop.c **** 		if( sError == pdFALSE )
 547              		.loc 1 290 0
 548 010a B7F93230 		ldrsh	r3, [r7, #50]
 549 010e 002B     		cmp	r3, #0
 550 0110 87D1     		bne	.L28
 291:..\Common\Minimal/flop.c **** 		{
 292:..\Common\Minimal/flop.c **** 			/* If the calculation has always been correct then set set the check
 293:..\Common\Minimal/flop.c **** 			variable.  The check variable will get set to pdFALSE each time
 294:..\Common\Minimal/flop.c **** 			xAreMathsTaskStillRunning() is executed. */
 295:..\Common\Minimal/flop.c **** 			( *pusTaskCheckVariable ) = pdTRUE;
 551              		.loc 1 295 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 16


 552 0112 BB6A     		ldr	r3, [r7, #40]
 553 0114 0122     		movs	r2, #1
 554 0116 1A80     		strh	r2, [r3]	@ movhi
 296:..\Common\Minimal/flop.c **** 		}
 297:..\Common\Minimal/flop.c **** 	}
 555              		.loc 1 297 0
 556 0118 83E7     		b	.L28
 557              	.L31:
 558 011a 00BFAFF3 		.align	3
 558      0080
 559              	.L30:
 560 0120 FCA9F1D2 		.word	-755914244
 561 0124 4D62503F 		.word	1062232653
 562 0128 00001640 		.word	1075183616
 563              		.cfi_endproc
 564              	.LFE71:
 565              		.size	vCompetingMathTask3, .-vCompetingMathTask3
 566              		.section	.text.vCompetingMathTask4,"ax",%progbits
 567              		.align	2
 568              		.thumb
 569              		.thumb_func
 570              		.type	vCompetingMathTask4, %function
 571              	vCompetingMathTask4:
 572              	.LFB72:
 298:..\Common\Minimal/flop.c **** }
 299:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 300:..\Common\Minimal/flop.c **** 
 301:..\Common\Minimal/flop.c **** static portTASK_FUNCTION( vCompetingMathTask4, pvParameters )
 302:..\Common\Minimal/flop.c **** {
 573              		.loc 1 302 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 56
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 578              		.cfi_def_cfa_offset 24
 579              		.cfi_offset 4, -24
 580              		.cfi_offset 5, -20
 581              		.cfi_offset 6, -16
 582              		.cfi_offset 7, -12
 583              		.cfi_offset 8, -8
 584              		.cfi_offset 14, -4
 585 0004 8EB0     		sub	sp, sp, #56
 586              		.cfi_def_cfa_offset 80
 587 0006 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0008 7860     		str	r0, [r7, #4]
 303:..\Common\Minimal/flop.c **** volatile portDOUBLE *pdArray, dTotal1, dTotal2, dDifference;
 304:..\Common\Minimal/flop.c **** volatile uint16_t *pusTaskCheckVariable;
 305:..\Common\Minimal/flop.c **** const size_t xArraySize = 10;
 590              		.loc 1 305 0
 591 000a 0A23     		movs	r3, #10
 592 000c FB62     		str	r3, [r7, #44]
 306:..\Common\Minimal/flop.c **** size_t xPosition;
 307:..\Common\Minimal/flop.c **** short sError = pdFALSE;
 593              		.loc 1 307 0
 594 000e 0023     		movs	r3, #0
 595 0010 7B86     		strh	r3, [r7, #50]	@ movhi
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 17


 308:..\Common\Minimal/flop.c **** 
 309:..\Common\Minimal/flop.c **** 	/* Some ports require that tasks that use a hardware floating point unit
 310:..\Common\Minimal/flop.c **** 	tell the kernel that they require a floating point context before any
 311:..\Common\Minimal/flop.c **** 	floating point instructions are executed. */
 312:..\Common\Minimal/flop.c **** 	portTASK_USES_FLOATING_POINT();
 313:..\Common\Minimal/flop.c **** 
 314:..\Common\Minimal/flop.c **** 	/* The variable this task increments to show it is still running is passed in
 315:..\Common\Minimal/flop.c **** 	as the parameter. */
 316:..\Common\Minimal/flop.c **** 	pusTaskCheckVariable = ( uint16_t * ) pvParameters;
 596              		.loc 1 316 0
 597 0012 7B68     		ldr	r3, [r7, #4]
 598 0014 BB62     		str	r3, [r7, #40]
 317:..\Common\Minimal/flop.c **** 
 318:..\Common\Minimal/flop.c **** 	pdArray = ( portDOUBLE * ) pvPortMalloc( xArraySize * sizeof( portDOUBLE ) );
 599              		.loc 1 318 0
 600 0016 FB6A     		ldr	r3, [r7, #44]
 601 0018 DB00     		lsls	r3, r3, #3
 602 001a 1846     		mov	r0, r3
 603 001c FFF7FEFF 		bl	pvPortMalloc
 604 0020 7862     		str	r0, [r7, #36]
 605              	.L40:
 319:..\Common\Minimal/flop.c **** 
 320:..\Common\Minimal/flop.c **** 	/* Keep filling an array, keeping a running total of the values placed in the
 321:..\Common\Minimal/flop.c **** 	array.  Then run through the array adding up all the values.  If the two totals
 322:..\Common\Minimal/flop.c **** 	do not match, stop the check variable from incrementing. */
 323:..\Common\Minimal/flop.c **** 	for( ;; )
 324:..\Common\Minimal/flop.c **** 	{
 325:..\Common\Minimal/flop.c **** 		dTotal1 = 0.0;
 606              		.loc 1 325 0
 607 0022 4FF00003 		mov	r3, #0
 608 0026 4FF00004 		mov	r4, #0
 609 002a C7E90634 		strd	r3, [r7, #24]
 326:..\Common\Minimal/flop.c **** 		dTotal2 = 0.0;
 610              		.loc 1 326 0
 611 002e 4FF00003 		mov	r3, #0
 612 0032 4FF00004 		mov	r4, #0
 613 0036 C7E90434 		strd	r3, [r7, #16]
 327:..\Common\Minimal/flop.c **** 
 328:..\Common\Minimal/flop.c **** 		for( xPosition = 0; xPosition < xArraySize; xPosition++ )
 614              		.loc 1 328 0
 615 003a 0023     		movs	r3, #0
 616 003c 7B63     		str	r3, [r7, #52]
 617 003e 29E0     		b	.L33
 618              	.L34:
 329:..\Common\Minimal/flop.c **** 		{
 330:..\Common\Minimal/flop.c **** 			pdArray[ xPosition ] = ( portDOUBLE ) xPosition * 12.123;
 619              		.loc 1 330 0 discriminator 3
 620 0040 7B6B     		ldr	r3, [r7, #52]
 621 0042 DB00     		lsls	r3, r3, #3
 622 0044 7A6A     		ldr	r2, [r7, #36]
 623 0046 02EB0308 		add	r8, r2, r3
 624 004a 786B     		ldr	r0, [r7, #52]
 625 004c FFF7FEFF 		bl	__aeabi_ui2d
 626 0050 33A3     		adr	r3, .L42
 627 0052 D3E90023 		ldrd	r2, [r3]
 628 0056 FFF7FEFF 		bl	__aeabi_dmul
 629 005a 0346     		mov	r3, r0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 18


 630 005c 0C46     		mov	r4, r1
 631 005e C8E90034 		strd	r3, [r8]
 331:..\Common\Minimal/flop.c **** 			dTotal1 += ( portDOUBLE ) xPosition * 12.123;
 632              		.loc 1 331 0 discriminator 3
 633 0062 786B     		ldr	r0, [r7, #52]
 634 0064 FFF7FEFF 		bl	__aeabi_ui2d
 635 0068 2DA3     		adr	r3, .L42
 636 006a D3E90023 		ldrd	r2, [r3]
 637 006e FFF7FEFF 		bl	__aeabi_dmul
 638 0072 0346     		mov	r3, r0
 639 0074 0C46     		mov	r4, r1
 640 0076 1846     		mov	r0, r3
 641 0078 2146     		mov	r1, r4
 642 007a D7E90634 		ldrd	r3, [r7, #24]
 643 007e 1A46     		mov	r2, r3
 644 0080 2346     		mov	r3, r4
 645 0082 FFF7FEFF 		bl	__aeabi_dadd
 646 0086 0346     		mov	r3, r0
 647 0088 0C46     		mov	r4, r1
 648 008a C7E90634 		strd	r3, [r7, #24]
 328:..\Common\Minimal/flop.c **** 		{
 649              		.loc 1 328 0 discriminator 3
 650 008e 7B6B     		ldr	r3, [r7, #52]
 651 0090 0133     		adds	r3, r3, #1
 652 0092 7B63     		str	r3, [r7, #52]
 653              	.L33:
 328:..\Common\Minimal/flop.c **** 		{
 654              		.loc 1 328 0 is_stmt 0 discriminator 1
 655 0094 7A6B     		ldr	r2, [r7, #52]
 656 0096 FB6A     		ldr	r3, [r7, #44]
 657 0098 9A42     		cmp	r2, r3
 658 009a D1D3     		bcc	.L34
 332:..\Common\Minimal/flop.c **** 		}
 333:..\Common\Minimal/flop.c **** 
 334:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 335:..\Common\Minimal/flop.c **** 			taskYIELD();
 336:..\Common\Minimal/flop.c **** 		#endif
 337:..\Common\Minimal/flop.c **** 
 338:..\Common\Minimal/flop.c **** 		for( xPosition = 0; xPosition < xArraySize; xPosition++ )
 659              		.loc 1 338 0 is_stmt 1
 660 009c 0023     		movs	r3, #0
 661 009e 7B63     		str	r3, [r7, #52]
 662 00a0 12E0     		b	.L35
 663              	.L36:
 339:..\Common\Minimal/flop.c **** 		{
 340:..\Common\Minimal/flop.c **** 			dTotal2 += pdArray[ xPosition ];
 664              		.loc 1 340 0 discriminator 3
 665 00a2 7B6B     		ldr	r3, [r7, #52]
 666 00a4 DB00     		lsls	r3, r3, #3
 667 00a6 7A6A     		ldr	r2, [r7, #36]
 668 00a8 1344     		add	r3, r3, r2
 669 00aa D3E90001 		ldrd	r0, [r3]
 670 00ae D7E90434 		ldrd	r3, [r7, #16]
 671 00b2 1A46     		mov	r2, r3
 672 00b4 2346     		mov	r3, r4
 673 00b6 FFF7FEFF 		bl	__aeabi_dadd
 674 00ba 0346     		mov	r3, r0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 19


 675 00bc 0C46     		mov	r4, r1
 676 00be C7E90434 		strd	r3, [r7, #16]
 338:..\Common\Minimal/flop.c **** 		{
 677              		.loc 1 338 0 discriminator 3
 678 00c2 7B6B     		ldr	r3, [r7, #52]
 679 00c4 0133     		adds	r3, r3, #1
 680 00c6 7B63     		str	r3, [r7, #52]
 681              	.L35:
 338:..\Common\Minimal/flop.c **** 		{
 682              		.loc 1 338 0 is_stmt 0 discriminator 1
 683 00c8 7A6B     		ldr	r2, [r7, #52]
 684 00ca FB6A     		ldr	r3, [r7, #44]
 685 00cc 9A42     		cmp	r2, r3
 686 00ce E8D3     		bcc	.L36
 341:..\Common\Minimal/flop.c **** 		}
 342:..\Common\Minimal/flop.c **** 
 343:..\Common\Minimal/flop.c **** 		dDifference = dTotal1 - dTotal2;
 687              		.loc 1 343 0 is_stmt 1
 688 00d0 D7E90601 		ldrd	r0, [r7, #24]
 689 00d4 D7E90434 		ldrd	r3, [r7, #16]
 690 00d8 1A46     		mov	r2, r3
 691 00da 2346     		mov	r3, r4
 692 00dc FFF7FEFF 		bl	__aeabi_dsub
 693 00e0 0346     		mov	r3, r0
 694 00e2 0C46     		mov	r4, r1
 695 00e4 C7E90234 		strd	r3, [r7, #8]
 344:..\Common\Minimal/flop.c **** 		if( fabs( dDifference ) > 0.001 )
 696              		.loc 1 344 0
 697 00e8 D7E90234 		ldrd	r3, [r7, #8]
 698 00ec 1D46     		mov	r5, r3
 699 00ee 24F00046 		bic	r6, r4, #-2147483648
 700 00f2 0DA3     		adr	r3, .L42+8
 701 00f4 D3E90023 		ldrd	r2, [r3]
 702 00f8 2846     		mov	r0, r5
 703 00fa 3146     		mov	r1, r6
 704 00fc FFF7FEFF 		bl	__aeabi_dcmpgt
 705 0100 0346     		mov	r3, r0
 706 0102 002B     		cmp	r3, #0
 707 0104 01D0     		beq	.L37
 345:..\Common\Minimal/flop.c **** 		{
 346:..\Common\Minimal/flop.c **** 			sError = pdTRUE;
 708              		.loc 1 346 0
 709 0106 0123     		movs	r3, #1
 710 0108 7B86     		strh	r3, [r7, #50]	@ movhi
 711              	.L37:
 347:..\Common\Minimal/flop.c **** 		}
 348:..\Common\Minimal/flop.c **** 
 349:..\Common\Minimal/flop.c **** 		#if configUSE_PREEMPTION == 0
 350:..\Common\Minimal/flop.c **** 			taskYIELD();
 351:..\Common\Minimal/flop.c **** 		#endif
 352:..\Common\Minimal/flop.c **** 
 353:..\Common\Minimal/flop.c **** 		if( sError == pdFALSE )
 712              		.loc 1 353 0
 713 010a B7F93230 		ldrsh	r3, [r7, #50]
 714 010e 002B     		cmp	r3, #0
 715 0110 87D1     		bne	.L40
 354:..\Common\Minimal/flop.c **** 		{
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 20


 355:..\Common\Minimal/flop.c **** 			/* If the calculation has always been correct then set set the check
 356:..\Common\Minimal/flop.c **** 			variable.  The check variable will get set to pdFALSE each time
 357:..\Common\Minimal/flop.c **** 			xAreMathsTaskStillRunning() is executed. */
 358:..\Common\Minimal/flop.c **** 			( *pusTaskCheckVariable ) = pdTRUE;
 716              		.loc 1 358 0
 717 0112 BB6A     		ldr	r3, [r7, #40]
 718 0114 0122     		movs	r2, #1
 719 0116 1A80     		strh	r2, [r3]	@ movhi
 359:..\Common\Minimal/flop.c **** 		}
 360:..\Common\Minimal/flop.c **** 	}
 720              		.loc 1 360 0
 721 0118 83E7     		b	.L40
 722              	.L43:
 723 011a 00BFAFF3 		.align	3
 723      0080
 724              	.L42:
 725 0120 E5D022DB 		.word	-618475291
 726 0124 F93E2840 		.word	1076379385
 727 0128 FCA9F1D2 		.word	-755914244
 728 012c 4D62503F 		.word	1062232653
 729              		.cfi_endproc
 730              	.LFE72:
 731              		.size	vCompetingMathTask4, .-vCompetingMathTask4
 732              		.section	.text.xAreMathsTaskStillRunning,"ax",%progbits
 733              		.align	2
 734              		.global	xAreMathsTaskStillRunning
 735              		.thumb
 736              		.thumb_func
 737              		.type	xAreMathsTaskStillRunning, %function
 738              	xAreMathsTaskStillRunning:
 739              	.LFB73:
 361:..\Common\Minimal/flop.c **** }
 362:..\Common\Minimal/flop.c **** /*-----------------------------------------------------------*/
 363:..\Common\Minimal/flop.c **** 
 364:..\Common\Minimal/flop.c **** /* This is called to check that all the created tasks are still running. */
 365:..\Common\Minimal/flop.c **** BaseType_t xAreMathsTaskStillRunning( void )
 366:..\Common\Minimal/flop.c **** {
 740              		.loc 1 366 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 8
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745 0000 80B4     		push	{r7}
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              		.cfi_def_cfa_offset 16
 750 0004 00AF     		add	r7, sp, #0
 751              		.cfi_def_cfa_register 7
 367:..\Common\Minimal/flop.c **** BaseType_t xReturn = pdPASS, xTask;
 752              		.loc 1 367 0
 753 0006 0123     		movs	r3, #1
 754 0008 7B60     		str	r3, [r7, #4]
 368:..\Common\Minimal/flop.c **** 
 369:..\Common\Minimal/flop.c **** 	/* Check the maths tasks are still running by ensuring their check variables
 370:..\Common\Minimal/flop.c **** 	have been set to pdPASS. */
 371:..\Common\Minimal/flop.c **** 	for( xTask = 0; xTask < mathNUMBER_OF_TASKS; xTask++ )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 21


 755              		.loc 1 371 0
 756 000a 0023     		movs	r3, #0
 757 000c 3B60     		str	r3, [r7]
 758 000e 11E0     		b	.L45
 759              	.L48:
 372:..\Common\Minimal/flop.c **** 	{
 373:..\Common\Minimal/flop.c **** 		if( usTaskCheck[ xTask ] != pdTRUE )
 760              		.loc 1 373 0
 761 0010 0D4A     		ldr	r2, .L50
 762 0012 3B68     		ldr	r3, [r7]
 763 0014 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 764 0018 9BB2     		uxth	r3, r3
 765 001a 012B     		cmp	r3, #1
 766 001c 02D0     		beq	.L46
 374:..\Common\Minimal/flop.c **** 		{
 375:..\Common\Minimal/flop.c **** 			/* The check has not been set so the associated task has either
 376:..\Common\Minimal/flop.c **** 			stalled or detected an error. */
 377:..\Common\Minimal/flop.c **** 			xReturn = pdFAIL;
 767              		.loc 1 377 0
 768 001e 0023     		movs	r3, #0
 769 0020 7B60     		str	r3, [r7, #4]
 770 0022 04E0     		b	.L47
 771              	.L46:
 378:..\Common\Minimal/flop.c **** 		}
 379:..\Common\Minimal/flop.c **** 		else
 380:..\Common\Minimal/flop.c **** 		{
 381:..\Common\Minimal/flop.c **** 			/* Reset the variable so it can be checked again the next time this
 382:..\Common\Minimal/flop.c **** 			function is executed. */
 383:..\Common\Minimal/flop.c **** 			usTaskCheck[ xTask ] = pdFALSE;
 772              		.loc 1 383 0
 773 0024 084A     		ldr	r2, .L50
 774 0026 3B68     		ldr	r3, [r7]
 775 0028 0021     		movs	r1, #0
 776 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 777              	.L47:
 371:..\Common\Minimal/flop.c **** 	{
 778              		.loc 1 371 0 discriminator 2
 779 002e 3B68     		ldr	r3, [r7]
 780 0030 0133     		adds	r3, r3, #1
 781 0032 3B60     		str	r3, [r7]
 782              	.L45:
 371:..\Common\Minimal/flop.c **** 	{
 783              		.loc 1 371 0 is_stmt 0 discriminator 1
 784 0034 3B68     		ldr	r3, [r7]
 785 0036 032B     		cmp	r3, #3
 786 0038 EADD     		ble	.L48
 384:..\Common\Minimal/flop.c **** 		}
 385:..\Common\Minimal/flop.c **** 	}
 386:..\Common\Minimal/flop.c **** 
 387:..\Common\Minimal/flop.c **** 	return xReturn;
 787              		.loc 1 387 0 is_stmt 1
 788 003a 7B68     		ldr	r3, [r7, #4]
 388:..\Common\Minimal/flop.c **** }
 789              		.loc 1 388 0
 790 003c 1846     		mov	r0, r3
 791 003e 0C37     		adds	r7, r7, #12
 792              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 22


 793 0040 BD46     		mov	sp, r7
 794              		.cfi_def_cfa_register 13
 795              		@ sp needed
 796 0042 80BC     		pop	{r7}
 797              		.cfi_restore 7
 798              		.cfi_def_cfa_offset 0
 799 0044 7047     		bx	lr
 800              	.L51:
 801 0046 00BF     		.align	2
 802              	.L50:
 803 0048 00000000 		.word	usTaskCheck
 804              		.cfi_endproc
 805              	.LFE73:
 806              		.size	xAreMathsTaskStillRunning, .-xAreMathsTaskStillRunning
 807              		.text
 808              	.Letext0:
 809              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 810              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 811              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 812              		.file 5 ".\\Tracer/sniffPayload.h"
 813              		.file 6 ".\\Tracer/selfFIFO.h"
 814              		.file 7 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 815              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 816              		.file 9 ".\\Tracer/sniffTask.h"
 817              		.section	.debug_info,"",%progbits
 818              	.Ldebug_info0:
 819 0000 80050000 		.4byte	0x580
 820 0004 0400     		.2byte	0x4
 821 0006 00000000 		.4byte	.Ldebug_abbrev0
 822 000a 04       		.byte	0x4
 823 000b 01       		.uleb128 0x1
 824 000c 5F000000 		.4byte	.LASF68
 825 0010 0C       		.byte	0xc
 826 0011 6B020000 		.4byte	.LASF69
 827 0015 D6030000 		.4byte	.LASF70
 828 0019 00000000 		.4byte	.Ldebug_ranges0+0
 829 001d 00000000 		.4byte	0
 830 0021 00000000 		.4byte	.Ldebug_line0
 831 0025 02       		.uleb128 0x2
 832 0026 42000000 		.4byte	.LASF4
 833 002a 02       		.byte	0x2
 834 002b D8       		.byte	0xd8
 835 002c 30000000 		.4byte	0x30
 836 0030 03       		.uleb128 0x3
 837 0031 04       		.byte	0x4
 838 0032 07       		.byte	0x7
 839 0033 35020000 		.4byte	.LASF0
 840 0037 04       		.uleb128 0x4
 841 0038 04       		.byte	0x4
 842 0039 05       		.byte	0x5
 843 003a 696E7400 		.ascii	"int\000"
 844 003e 03       		.uleb128 0x3
 845 003f 08       		.byte	0x8
 846 0040 05       		.byte	0x5
 847 0041 8A010000 		.4byte	.LASF1
 848 0045 03       		.uleb128 0x3
 849 0046 08       		.byte	0x8
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 23


 850 0047 04       		.byte	0x4
 851 0048 E8010000 		.4byte	.LASF2
 852 004c 03       		.uleb128 0x3
 853 004d 01       		.byte	0x1
 854 004e 06       		.byte	0x6
 855 004f 12020000 		.4byte	.LASF3
 856 0053 02       		.uleb128 0x2
 857 0054 BA010000 		.4byte	.LASF5
 858 0058 03       		.byte	0x3
 859 0059 1D       		.byte	0x1d
 860 005a 5E000000 		.4byte	0x5e
 861 005e 03       		.uleb128 0x3
 862 005f 01       		.byte	0x1
 863 0060 08       		.byte	0x8
 864 0061 F4010000 		.4byte	.LASF6
 865 0065 03       		.uleb128 0x3
 866 0066 02       		.byte	0x2
 867 0067 05       		.byte	0x5
 868 0068 38000000 		.4byte	.LASF7
 869 006c 02       		.uleb128 0x2
 870 006d 0B010000 		.4byte	.LASF8
 871 0071 03       		.byte	0x3
 872 0072 2B       		.byte	0x2b
 873 0073 77000000 		.4byte	0x77
 874 0077 03       		.uleb128 0x3
 875 0078 02       		.byte	0x2
 876 0079 07       		.byte	0x7
 877 007a 84020000 		.4byte	.LASF9
 878 007e 02       		.uleb128 0x2
 879 007f 8B030000 		.4byte	.LASF10
 880 0083 03       		.byte	0x3
 881 0084 3F       		.byte	0x3f
 882 0085 89000000 		.4byte	0x89
 883 0089 03       		.uleb128 0x3
 884 008a 04       		.byte	0x4
 885 008b 05       		.byte	0x5
 886 008c 98010000 		.4byte	.LASF11
 887 0090 03       		.uleb128 0x3
 888 0091 04       		.byte	0x4
 889 0092 07       		.byte	0x7
 890 0093 48030000 		.4byte	.LASF12
 891 0097 03       		.uleb128 0x3
 892 0098 08       		.byte	0x8
 893 0099 07       		.byte	0x7
 894 009a 1E020000 		.4byte	.LASF13
 895 009e 03       		.uleb128 0x3
 896 009f 04       		.byte	0x4
 897 00a0 07       		.byte	0x7
 898 00a1 49000000 		.4byte	.LASF14
 899 00a5 05       		.uleb128 0x5
 900 00a6 04       		.byte	0x4
 901 00a7 03       		.uleb128 0x3
 902 00a8 01       		.byte	0x1
 903 00a9 08       		.byte	0x8
 904 00aa B3020000 		.4byte	.LASF15
 905 00ae 03       		.uleb128 0x3
 906 00af 08       		.byte	0x8
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 24


 907 00b0 04       		.byte	0x4
 908 00b1 B0030000 		.4byte	.LASF16
 909 00b5 03       		.uleb128 0x3
 910 00b6 04       		.byte	0x4
 911 00b7 04       		.byte	0x4
 912 00b8 5E010000 		.4byte	.LASF17
 913 00bc 02       		.uleb128 0x2
 914 00bd 16010000 		.4byte	.LASF18
 915 00c1 04       		.byte	0x4
 916 00c2 18       		.byte	0x18
 917 00c3 53000000 		.4byte	0x53
 918 00c7 02       		.uleb128 0x2
 919 00c8 B8020000 		.4byte	.LASF19
 920 00cc 04       		.byte	0x4
 921 00cd 24       		.byte	0x24
 922 00ce 6C000000 		.4byte	0x6c
 923 00d2 02       		.uleb128 0x2
 924 00d3 CA020000 		.4byte	.LASF20
 925 00d7 04       		.byte	0x4
 926 00d8 2C       		.byte	0x2c
 927 00d9 7E000000 		.4byte	0x7e
 928 00dd 06       		.uleb128 0x6
 929 00de C7000000 		.4byte	0xc7
 930 00e2 07       		.uleb128 0x7
 931 00e3 01       		.byte	0x1
 932 00e4 5E000000 		.4byte	0x5e
 933 00e8 05       		.byte	0x5
 934 00e9 10       		.byte	0x10
 935 00ea 19010000 		.4byte	0x119
 936 00ee 08       		.uleb128 0x8
 937 00ef C4010000 		.4byte	.LASF21
 938 00f3 00       		.byte	0
 939 00f4 08       		.uleb128 0x8
 940 00f5 52000000 		.4byte	.LASF22
 941 00f9 01       		.byte	0x1
 942 00fa 08       		.uleb128 0x8
 943 00fb CA010000 		.4byte	.LASF23
 944 00ff 02       		.byte	0x2
 945 0100 08       		.uleb128 0x8
 946 0101 6A030000 		.4byte	.LASF24
 947 0105 03       		.byte	0x3
 948 0106 08       		.uleb128 0x8
 949 0107 02020000 		.4byte	.LASF25
 950 010b 04       		.byte	0x4
 951 010c 08       		.uleb128 0x8
 952 010d 7B030000 		.4byte	.LASF26
 953 0111 05       		.byte	0x5
 954 0112 08       		.uleb128 0x8
 955 0113 32030000 		.4byte	.LASF27
 956 0117 06       		.byte	0x6
 957 0118 00       		.byte	0
 958 0119 02       		.uleb128 0x2
 959 011a 4D010000 		.4byte	.LASF28
 960 011e 05       		.byte	0x5
 961 011f 10       		.byte	0x10
 962 0120 E2000000 		.4byte	0xe2
 963 0124 09       		.uleb128 0x9
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 25


 964 0125 04       		.byte	0x4
 965 0126 05       		.byte	0x5
 966 0127 86       		.byte	0x86
 967 0128 5D010000 		.4byte	0x15d
 968 012c 0A       		.uleb128 0xa
 969 012d C1020000 		.4byte	.LASF29
 970 0131 05       		.byte	0x5
 971 0132 87       		.byte	0x87
 972 0133 BC000000 		.4byte	0xbc
 973 0137 00       		.byte	0
 974 0138 0A       		.uleb128 0xa
 975 0139 00000000 		.4byte	.LASF30
 976 013d 05       		.byte	0x5
 977 013e 88       		.byte	0x88
 978 013f BC000000 		.4byte	0xbc
 979 0143 01       		.byte	0x1
 980 0144 0A       		.uleb128 0xa
 981 0145 95030000 		.4byte	.LASF31
 982 0149 05       		.byte	0x5
 983 014a 89       		.byte	0x89
 984 014b 19010000 		.4byte	0x119
 985 014f 02       		.byte	0x2
 986 0150 0A       		.uleb128 0xa
 987 0151 58000000 		.4byte	.LASF32
 988 0155 05       		.byte	0x5
 989 0156 8A       		.byte	0x8a
 990 0157 BC000000 		.4byte	0xbc
 991 015b 03       		.byte	0x3
 992 015c 00       		.byte	0
 993 015d 02       		.uleb128 0x2
 994 015e 42020000 		.4byte	.LASF33
 995 0162 05       		.byte	0x5
 996 0163 8B       		.byte	0x8b
 997 0164 24010000 		.4byte	0x124
 998 0168 09       		.uleb128 0x9
 999 0169 0E       		.byte	0xe
 1000 016a 05       		.byte	0x5
 1001 016b 95       		.byte	0x95
 1002 016c 95010000 		.4byte	0x195
 1003 0170 0A       		.uleb128 0xa
 1004 0171 2B000000 		.4byte	.LASF34
 1005 0175 05       		.byte	0x5
 1006 0176 96       		.byte	0x96
 1007 0177 BC000000 		.4byte	0xbc
 1008 017b 00       		.byte	0
 1009 017c 0A       		.uleb128 0xa
 1010 017d 2A010000 		.4byte	.LASF35
 1011 0181 05       		.byte	0x5
 1012 0182 97       		.byte	0x97
 1013 0183 BC000000 		.4byte	0xbc
 1014 0187 01       		.byte	0x1
 1015 0188 0A       		.uleb128 0xa
 1016 0189 DD010000 		.4byte	.LASF36
 1017 018d 05       		.byte	0x5
 1018 018e 98       		.byte	0x98
 1019 018f 95010000 		.4byte	0x195
 1020 0193 02       		.byte	0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 26


 1021 0194 00       		.byte	0
 1022 0195 0B       		.uleb128 0xb
 1023 0196 A7000000 		.4byte	0xa7
 1024 019a A5010000 		.4byte	0x1a5
 1025 019e 0C       		.uleb128 0xc
 1026 019f 9E000000 		.4byte	0x9e
 1027 01a3 0B       		.byte	0xb
 1028 01a4 00       		.byte	0
 1029 01a5 02       		.uleb128 0x2
 1030 01a6 7E010000 		.4byte	.LASF37
 1031 01aa 05       		.byte	0x5
 1032 01ab 99       		.byte	0x99
 1033 01ac 68010000 		.4byte	0x168
 1034 01b0 0D       		.uleb128 0xd
 1035 01b1 1C01     		.2byte	0x11c
 1036 01b3 05       		.byte	0x5
 1037 01b4 A3       		.byte	0xa3
 1038 01b5 D2010000 		.4byte	0x1d2
 1039 01b9 0A       		.uleb128 0xa
 1040 01ba FE000000 		.4byte	.LASF38
 1041 01be 05       		.byte	0x5
 1042 01bf A4       		.byte	0xa4
 1043 01c0 5D010000 		.4byte	0x15d
 1044 01c4 00       		.byte	0
 1045 01c5 0A       		.uleb128 0xa
 1046 01c6 1E010000 		.4byte	.LASF39
 1047 01ca 05       		.byte	0x5
 1048 01cb A5       		.byte	0xa5
 1049 01cc D2010000 		.4byte	0x1d2
 1050 01d0 04       		.byte	0x4
 1051 01d1 00       		.byte	0
 1052 01d2 0B       		.uleb128 0xb
 1053 01d3 A5010000 		.4byte	0x1a5
 1054 01d7 E2010000 		.4byte	0x1e2
 1055 01db 0C       		.uleb128 0xc
 1056 01dc 9E000000 		.4byte	0x9e
 1057 01e0 13       		.byte	0x13
 1058 01e1 00       		.byte	0
 1059 01e2 02       		.uleb128 0x2
 1060 01e3 B7030000 		.4byte	.LASF40
 1061 01e7 05       		.byte	0x5
 1062 01e8 A6       		.byte	0xa6
 1063 01e9 B0010000 		.4byte	0x1b0
 1064 01ed 0E       		.uleb128 0xe
 1065 01ee CF030000 		.4byte	.LASF71
 1066 01f2 0210     		.2byte	0x1002
 1067 01f4 06       		.byte	0x6
 1068 01f5 0C       		.byte	0xc
 1069 01f6 21020000 		.4byte	0x221
 1070 01fa 0A       		.uleb128 0xa
 1071 01fb EA020000 		.4byte	.LASF41
 1072 01ff 06       		.byte	0x6
 1073 0200 0D       		.byte	0xd
 1074 0201 21020000 		.4byte	0x221
 1075 0205 00       		.byte	0
 1076 0206 0F       		.uleb128 0xf
 1077 0207 85010000 		.4byte	.LASF42
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 27


 1078 020b 06       		.byte	0x6
 1079 020c 0E       		.byte	0xe
 1080 020d BC000000 		.4byte	0xbc
 1081 0211 0010     		.2byte	0x1000
 1082 0213 0F       		.uleb128 0xf
 1083 0214 25000000 		.4byte	.LASF43
 1084 0218 06       		.byte	0x6
 1085 0219 0F       		.byte	0xf
 1086 021a BC000000 		.4byte	0xbc
 1087 021e 0110     		.2byte	0x1001
 1088 0220 00       		.byte	0
 1089 0221 0B       		.uleb128 0xb
 1090 0222 BC000000 		.4byte	0xbc
 1091 0226 32020000 		.4byte	0x232
 1092 022a 10       		.uleb128 0x10
 1093 022b 9E000000 		.4byte	0x9e
 1094 022f FF0F     		.2byte	0xfff
 1095 0231 00       		.byte	0
 1096 0232 02       		.uleb128 0x2
 1097 0233 53020000 		.4byte	.LASF44
 1098 0237 07       		.byte	0x7
 1099 0238 62       		.byte	0x62
 1100 0239 89000000 		.4byte	0x89
 1101 023d 02       		.uleb128 0x2
 1102 023e DE020000 		.4byte	.LASF45
 1103 0242 07       		.byte	0x7
 1104 0243 63       		.byte	0x63
 1105 0244 90000000 		.4byte	0x90
 1106 0248 11       		.uleb128 0x11
 1107 0249 5A030000 		.4byte	.LASF72
 1108 024d 01       		.byte	0x1
 1109 024e 71       		.byte	0x71
 1110 024f 00000000 		.4byte	.LFB68
 1111 0253 90000000 		.4byte	.LFE68-.LFB68
 1112 0257 01       		.uleb128 0x1
 1113 0258 9C       		.byte	0x9c
 1114 0259 6C020000 		.4byte	0x26c
 1115 025d 12       		.uleb128 0x12
 1116 025e 0E000000 		.4byte	.LASF46
 1117 0262 01       		.byte	0x1
 1118 0263 71       		.byte	0x71
 1119 0264 3D020000 		.4byte	0x23d
 1120 0268 02       		.uleb128 0x2
 1121 0269 91       		.byte	0x91
 1122 026a 74       		.sleb128 -12
 1123 026b 00       		.byte	0
 1124 026c 13       		.uleb128 0x13
 1125 026d EF020000 		.4byte	.LASF51
 1126 0271 01       		.byte	0x1
 1127 0272 7A       		.byte	0x7a
 1128 0273 00000000 		.4byte	.LFB69
 1129 0277 08010000 		.4byte	.LFE69-.LFB69
 1130 027b 01       		.uleb128 0x1
 1131 027c 9C       		.byte	0x9c
 1132 027d F0020000 		.4byte	0x2f0
 1133 0281 12       		.uleb128 0x12
 1134 0282 5E020000 		.4byte	.LASF47
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 28


 1135 0286 01       		.byte	0x1
 1136 0287 7A       		.byte	0x7a
 1137 0288 A5000000 		.4byte	0xa5
 1138 028c 03       		.uleb128 0x3
 1139 028d 91       		.byte	0x91
 1140 028e B47F     		.sleb128 -76
 1141 0290 14       		.uleb128 0x14
 1142 0291 643100   		.ascii	"d1\000"
 1143 0294 01       		.byte	0x1
 1144 0295 7C       		.byte	0x7c
 1145 0296 F0020000 		.4byte	0x2f0
 1146 029a 02       		.uleb128 0x2
 1147 029b 91       		.byte	0x91
 1148 029c 58       		.sleb128 -40
 1149 029d 14       		.uleb128 0x14
 1150 029e 643200   		.ascii	"d2\000"
 1151 02a1 01       		.byte	0x1
 1152 02a2 7C       		.byte	0x7c
 1153 02a3 F0020000 		.4byte	0x2f0
 1154 02a7 02       		.uleb128 0x2
 1155 02a8 91       		.byte	0x91
 1156 02a9 50       		.sleb128 -48
 1157 02aa 14       		.uleb128 0x14
 1158 02ab 643300   		.ascii	"d3\000"
 1159 02ae 01       		.byte	0x1
 1160 02af 7C       		.byte	0x7c
 1161 02b0 F0020000 		.4byte	0x2f0
 1162 02b4 02       		.uleb128 0x2
 1163 02b5 91       		.byte	0x91
 1164 02b6 48       		.sleb128 -56
 1165 02b7 14       		.uleb128 0x14
 1166 02b8 643400   		.ascii	"d4\000"
 1167 02bb 01       		.byte	0x1
 1168 02bc 7C       		.byte	0x7c
 1169 02bd F0020000 		.4byte	0x2f0
 1170 02c1 02       		.uleb128 0x2
 1171 02c2 91       		.byte	0x91
 1172 02c3 40       		.sleb128 -64
 1173 02c4 15       		.uleb128 0x15
 1174 02c5 38010000 		.4byte	.LASF48
 1175 02c9 01       		.byte	0x1
 1176 02ca 7D       		.byte	0x7d
 1177 02cb F5020000 		.4byte	0x2f5
 1178 02cf 02       		.uleb128 0x2
 1179 02d0 91       		.byte	0x91
 1180 02d1 60       		.sleb128 -32
 1181 02d2 15       		.uleb128 0x15
 1182 02d3 A0030000 		.4byte	.LASF49
 1183 02d7 01       		.byte	0x1
 1184 02d8 7E       		.byte	0x7e
 1185 02d9 F0020000 		.4byte	0x2f0
 1186 02dd 03       		.uleb128 0x3
 1187 02de 91       		.byte	0x91
 1188 02df B87F     		.sleb128 -72
 1189 02e1 15       		.uleb128 0x15
 1190 02e2 F7000000 		.4byte	.LASF50
 1191 02e6 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 29


 1192 02e7 7F       		.byte	0x7f
 1193 02e8 65000000 		.4byte	0x65
 1194 02ec 02       		.uleb128 0x2
 1195 02ed 91       		.byte	0x91
 1196 02ee 66       		.sleb128 -26
 1197 02ef 00       		.byte	0
 1198 02f0 06       		.uleb128 0x6
 1199 02f1 AE000000 		.4byte	0xae
 1200 02f5 16       		.uleb128 0x16
 1201 02f6 04       		.byte	0x4
 1202 02f7 DD000000 		.4byte	0xdd
 1203 02fb 13       		.uleb128 0x13
 1204 02fc 03030000 		.4byte	.LASF52
 1205 0300 01       		.byte	0x1
 1206 0301 B4       		.byte	0xb4
 1207 0302 00000000 		.4byte	.LFB70
 1208 0306 08010000 		.4byte	.LFE70-.LFB70
 1209 030a 01       		.uleb128 0x1
 1210 030b 9C       		.byte	0x9c
 1211 030c 7F030000 		.4byte	0x37f
 1212 0310 12       		.uleb128 0x12
 1213 0311 5E020000 		.4byte	.LASF47
 1214 0315 01       		.byte	0x1
 1215 0316 B4       		.byte	0xb4
 1216 0317 A5000000 		.4byte	0xa5
 1217 031b 03       		.uleb128 0x3
 1218 031c 91       		.byte	0x91
 1219 031d B47F     		.sleb128 -76
 1220 031f 14       		.uleb128 0x14
 1221 0320 643100   		.ascii	"d1\000"
 1222 0323 01       		.byte	0x1
 1223 0324 B6       		.byte	0xb6
 1224 0325 F0020000 		.4byte	0x2f0
 1225 0329 02       		.uleb128 0x2
 1226 032a 91       		.byte	0x91
 1227 032b 58       		.sleb128 -40
 1228 032c 14       		.uleb128 0x14
 1229 032d 643200   		.ascii	"d2\000"
 1230 0330 01       		.byte	0x1
 1231 0331 B6       		.byte	0xb6
 1232 0332 F0020000 		.4byte	0x2f0
 1233 0336 02       		.uleb128 0x2
 1234 0337 91       		.byte	0x91
 1235 0338 50       		.sleb128 -48
 1236 0339 14       		.uleb128 0x14
 1237 033a 643300   		.ascii	"d3\000"
 1238 033d 01       		.byte	0x1
 1239 033e B6       		.byte	0xb6
 1240 033f F0020000 		.4byte	0x2f0
 1241 0343 02       		.uleb128 0x2
 1242 0344 91       		.byte	0x91
 1243 0345 48       		.sleb128 -56
 1244 0346 14       		.uleb128 0x14
 1245 0347 643400   		.ascii	"d4\000"
 1246 034a 01       		.byte	0x1
 1247 034b B6       		.byte	0xb6
 1248 034c F0020000 		.4byte	0x2f0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 30


 1249 0350 02       		.uleb128 0x2
 1250 0351 91       		.byte	0x91
 1251 0352 40       		.sleb128 -64
 1252 0353 15       		.uleb128 0x15
 1253 0354 38010000 		.4byte	.LASF48
 1254 0358 01       		.byte	0x1
 1255 0359 B7       		.byte	0xb7
 1256 035a F5020000 		.4byte	0x2f5
 1257 035e 02       		.uleb128 0x2
 1258 035f 91       		.byte	0x91
 1259 0360 60       		.sleb128 -32
 1260 0361 15       		.uleb128 0x15
 1261 0362 A0030000 		.4byte	.LASF49
 1262 0366 01       		.byte	0x1
 1263 0367 B8       		.byte	0xb8
 1264 0368 F0020000 		.4byte	0x2f0
 1265 036c 03       		.uleb128 0x3
 1266 036d 91       		.byte	0x91
 1267 036e B87F     		.sleb128 -72
 1268 0370 15       		.uleb128 0x15
 1269 0371 F7000000 		.4byte	.LASF50
 1270 0375 01       		.byte	0x1
 1271 0376 B9       		.byte	0xb9
 1272 0377 65000000 		.4byte	0x65
 1273 037b 02       		.uleb128 0x2
 1274 037c 91       		.byte	0x91
 1275 037d 66       		.sleb128 -26
 1276 037e 00       		.byte	0
 1277 037f 13       		.uleb128 0x13
 1278 0380 9F020000 		.4byte	.LASF53
 1279 0384 01       		.byte	0x1
 1280 0385 EE       		.byte	0xee
 1281 0386 00000000 		.4byte	.LFB71
 1282 038a 2C010000 		.4byte	.LFE71-.LFB71
 1283 038e 01       		.uleb128 0x1
 1284 038f 9C       		.byte	0x9c
 1285 0390 15040000 		.4byte	0x415
 1286 0394 12       		.uleb128 0x12
 1287 0395 5E020000 		.4byte	.LASF47
 1288 0399 01       		.byte	0x1
 1289 039a EE       		.byte	0xee
 1290 039b A5000000 		.4byte	0xa5
 1291 039f 03       		.uleb128 0x3
 1292 03a0 91       		.byte	0x91
 1293 03a1 B47F     		.sleb128 -76
 1294 03a3 15       		.uleb128 0x15
 1295 03a4 97020000 		.4byte	.LASF54
 1296 03a8 01       		.byte	0x1
 1297 03a9 F0       		.byte	0xf0
 1298 03aa 15040000 		.4byte	0x415
 1299 03ae 02       		.uleb128 0x2
 1300 03af 91       		.byte	0x91
 1301 03b0 54       		.sleb128 -44
 1302 03b1 15       		.uleb128 0x15
 1303 03b2 31040000 		.4byte	.LASF55
 1304 03b6 01       		.byte	0x1
 1305 03b7 F0       		.byte	0xf0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 31


 1306 03b8 F0020000 		.4byte	0x2f0
 1307 03bc 02       		.uleb128 0x2
 1308 03bd 91       		.byte	0x91
 1309 03be 48       		.sleb128 -56
 1310 03bf 15       		.uleb128 0x15
 1311 03c0 39040000 		.4byte	.LASF56
 1312 03c4 01       		.byte	0x1
 1313 03c5 F0       		.byte	0xf0
 1314 03c6 F0020000 		.4byte	0x2f0
 1315 03ca 02       		.uleb128 0x2
 1316 03cb 91       		.byte	0x91
 1317 03cc 40       		.sleb128 -64
 1318 03cd 15       		.uleb128 0x15
 1319 03ce 19000000 		.4byte	.LASF57
 1320 03d2 01       		.byte	0x1
 1321 03d3 F0       		.byte	0xf0
 1322 03d4 F0020000 		.4byte	0x2f0
 1323 03d8 03       		.uleb128 0x3
 1324 03d9 91       		.byte	0x91
 1325 03da B87F     		.sleb128 -72
 1326 03dc 15       		.uleb128 0x15
 1327 03dd 38010000 		.4byte	.LASF48
 1328 03e1 01       		.byte	0x1
 1329 03e2 F1       		.byte	0xf1
 1330 03e3 F5020000 		.4byte	0x2f5
 1331 03e7 02       		.uleb128 0x2
 1332 03e8 91       		.byte	0x91
 1333 03e9 58       		.sleb128 -40
 1334 03ea 15       		.uleb128 0x15
 1335 03eb AF010000 		.4byte	.LASF58
 1336 03ef 01       		.byte	0x1
 1337 03f0 F2       		.byte	0xf2
 1338 03f1 1B040000 		.4byte	0x41b
 1339 03f5 02       		.uleb128 0x2
 1340 03f6 91       		.byte	0x91
 1341 03f7 5C       		.sleb128 -36
 1342 03f8 15       		.uleb128 0x15
 1343 03f9 ED000000 		.4byte	.LASF59
 1344 03fd 01       		.byte	0x1
 1345 03fe F3       		.byte	0xf3
 1346 03ff 25000000 		.4byte	0x25
 1347 0403 02       		.uleb128 0x2
 1348 0404 91       		.byte	0x91
 1349 0405 64       		.sleb128 -28
 1350 0406 15       		.uleb128 0x15
 1351 0407 F7000000 		.4byte	.LASF50
 1352 040b 01       		.byte	0x1
 1353 040c F4       		.byte	0xf4
 1354 040d 65000000 		.4byte	0x65
 1355 0411 02       		.uleb128 0x2
 1356 0412 91       		.byte	0x91
 1357 0413 62       		.sleb128 -30
 1358 0414 00       		.byte	0
 1359 0415 16       		.uleb128 0x16
 1360 0416 04       		.byte	0x4
 1361 0417 F0020000 		.4byte	0x2f0
 1362 041b 17       		.uleb128 0x17
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 32


 1363 041c 25000000 		.4byte	0x25
 1364 0420 18       		.uleb128 0x18
 1365 0421 1E030000 		.4byte	.LASF60
 1366 0425 01       		.byte	0x1
 1367 0426 2D01     		.2byte	0x12d
 1368 0428 00000000 		.4byte	.LFB72
 1369 042c 30010000 		.4byte	.LFE72-.LFB72
 1370 0430 01       		.uleb128 0x1
 1371 0431 9C       		.byte	0x9c
 1372 0432 C0040000 		.4byte	0x4c0
 1373 0436 19       		.uleb128 0x19
 1374 0437 5E020000 		.4byte	.LASF47
 1375 043b 01       		.byte	0x1
 1376 043c 2D01     		.2byte	0x12d
 1377 043e A5000000 		.4byte	0xa5
 1378 0442 03       		.uleb128 0x3
 1379 0443 91       		.byte	0x91
 1380 0444 B47F     		.sleb128 -76
 1381 0446 1A       		.uleb128 0x1a
 1382 0447 97020000 		.4byte	.LASF54
 1383 044b 01       		.byte	0x1
 1384 044c 2F01     		.2byte	0x12f
 1385 044e 15040000 		.4byte	0x415
 1386 0452 02       		.uleb128 0x2
 1387 0453 91       		.byte	0x91
 1388 0454 54       		.sleb128 -44
 1389 0455 1A       		.uleb128 0x1a
 1390 0456 31040000 		.4byte	.LASF55
 1391 045a 01       		.byte	0x1
 1392 045b 2F01     		.2byte	0x12f
 1393 045d F0020000 		.4byte	0x2f0
 1394 0461 02       		.uleb128 0x2
 1395 0462 91       		.byte	0x91
 1396 0463 48       		.sleb128 -56
 1397 0464 1A       		.uleb128 0x1a
 1398 0465 39040000 		.4byte	.LASF56
 1399 0469 01       		.byte	0x1
 1400 046a 2F01     		.2byte	0x12f
 1401 046c F0020000 		.4byte	0x2f0
 1402 0470 02       		.uleb128 0x2
 1403 0471 91       		.byte	0x91
 1404 0472 40       		.sleb128 -64
 1405 0473 1A       		.uleb128 0x1a
 1406 0474 19000000 		.4byte	.LASF57
 1407 0478 01       		.byte	0x1
 1408 0479 2F01     		.2byte	0x12f
 1409 047b F0020000 		.4byte	0x2f0
 1410 047f 03       		.uleb128 0x3
 1411 0480 91       		.byte	0x91
 1412 0481 B87F     		.sleb128 -72
 1413 0483 1A       		.uleb128 0x1a
 1414 0484 38010000 		.4byte	.LASF48
 1415 0488 01       		.byte	0x1
 1416 0489 3001     		.2byte	0x130
 1417 048b F5020000 		.4byte	0x2f5
 1418 048f 02       		.uleb128 0x2
 1419 0490 91       		.byte	0x91
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 33


 1420 0491 58       		.sleb128 -40
 1421 0492 1A       		.uleb128 0x1a
 1422 0493 AF010000 		.4byte	.LASF58
 1423 0497 01       		.byte	0x1
 1424 0498 3101     		.2byte	0x131
 1425 049a 1B040000 		.4byte	0x41b
 1426 049e 02       		.uleb128 0x2
 1427 049f 91       		.byte	0x91
 1428 04a0 5C       		.sleb128 -36
 1429 04a1 1A       		.uleb128 0x1a
 1430 04a2 ED000000 		.4byte	.LASF59
 1431 04a6 01       		.byte	0x1
 1432 04a7 3201     		.2byte	0x132
 1433 04a9 25000000 		.4byte	0x25
 1434 04ad 02       		.uleb128 0x2
 1435 04ae 91       		.byte	0x91
 1436 04af 64       		.sleb128 -28
 1437 04b0 1A       		.uleb128 0x1a
 1438 04b1 F7000000 		.4byte	.LASF50
 1439 04b5 01       		.byte	0x1
 1440 04b6 3301     		.2byte	0x133
 1441 04b8 65000000 		.4byte	0x65
 1442 04bc 02       		.uleb128 0x2
 1443 04bd 91       		.byte	0x91
 1444 04be 62       		.sleb128 -30
 1445 04bf 00       		.byte	0
 1446 04c0 1B       		.uleb128 0x1b
 1447 04c1 64010000 		.4byte	.LASF73
 1448 04c5 01       		.byte	0x1
 1449 04c6 6D01     		.2byte	0x16d
 1450 04c8 32020000 		.4byte	0x232
 1451 04cc 00000000 		.4byte	.LFB73
 1452 04d0 4C000000 		.4byte	.LFE73-.LFB73
 1453 04d4 01       		.uleb128 0x1
 1454 04d5 9C       		.byte	0x9c
 1455 04d6 F9040000 		.4byte	0x4f9
 1456 04da 1A       		.uleb128 0x1a
 1457 04db A8030000 		.4byte	.LASF61
 1458 04df 01       		.byte	0x1
 1459 04e0 6F01     		.2byte	0x16f
 1460 04e2 32020000 		.4byte	0x232
 1461 04e6 02       		.uleb128 0x2
 1462 04e7 91       		.byte	0x91
 1463 04e8 74       		.sleb128 -12
 1464 04e9 1A       		.uleb128 0x1a
 1465 04ea 58010000 		.4byte	.LASF62
 1466 04ee 01       		.byte	0x1
 1467 04ef 6F01     		.2byte	0x16f
 1468 04f1 32020000 		.4byte	0x232
 1469 04f5 02       		.uleb128 0x2
 1470 04f6 91       		.byte	0x91
 1471 04f7 70       		.sleb128 -16
 1472 04f8 00       		.byte	0
 1473 04f9 0B       		.uleb128 0xb
 1474 04fa DD000000 		.4byte	0xdd
 1475 04fe 09050000 		.4byte	0x509
 1476 0502 0C       		.uleb128 0xc
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 34


 1477 0503 9E000000 		.4byte	0x9e
 1478 0507 03       		.byte	0x3
 1479 0508 00       		.byte	0
 1480 0509 15       		.uleb128 0x15
 1481 050a D2020000 		.4byte	.LASF63
 1482 050e 01       		.byte	0x1
 1483 050f 6D       		.byte	0x6d
 1484 0510 1A050000 		.4byte	0x51a
 1485 0514 05       		.uleb128 0x5
 1486 0515 03       		.byte	0x3
 1487 0516 00000000 		.4byte	usTaskCheck
 1488 051a 06       		.uleb128 0x6
 1489 051b F9040000 		.4byte	0x4f9
 1490 051f 1C       		.uleb128 0x1c
 1491 0520 C2030000 		.4byte	.LASF64
 1492 0524 08       		.byte	0x8
 1493 0525 9606     		.2byte	0x696
 1494 0527 2B050000 		.4byte	0x52b
 1495 052b 06       		.uleb128 0x6
 1496 052c D2000000 		.4byte	0xd2
 1497 0530 0B       		.uleb128 0xb
 1498 0531 BC000000 		.4byte	0xbc
 1499 0535 40050000 		.4byte	0x540
 1500 0539 0C       		.uleb128 0xc
 1501 053a 9E000000 		.4byte	0x9e
 1502 053e 0C       		.byte	0xc
 1503 053f 00       		.byte	0
 1504 0540 1D       		.uleb128 0x1d
 1505 0541 A1010000 		.4byte	.LASF65
 1506 0545 05       		.byte	0x5
 1507 0546 12       		.byte	0x12
 1508 0547 30050000 		.4byte	0x530
 1509 054b 05       		.uleb128 0x5
 1510 054c 03       		.byte	0x3
 1511 054d 00000000 		.4byte	sniffIDFilter
 1512 0551 1D       		.uleb128 0x1d
 1513 0552 17030000 		.4byte	.LASF66
 1514 0556 06       		.byte	0x6
 1515 0557 10       		.byte	0x10
 1516 0558 ED010000 		.4byte	0x1ed
 1517 055c 05       		.uleb128 0x5
 1518 055d 03       		.byte	0x3
 1519 055e 00000000 		.4byte	buffer
 1520 0562 0B       		.uleb128 0xb
 1521 0563 E2010000 		.4byte	0x1e2
 1522 0567 72050000 		.4byte	0x572
 1523 056b 0C       		.uleb128 0xc
 1524 056c 9E000000 		.4byte	0x9e
 1525 0570 05       		.byte	0x5
 1526 0571 00       		.byte	0
 1527 0572 1D       		.uleb128 0x1d
 1528 0573 80030000 		.4byte	.LASF67
 1529 0577 09       		.byte	0x9
 1530 0578 0D       		.byte	0xd
 1531 0579 62050000 		.4byte	0x562
 1532 057d 05       		.uleb128 0x5
 1533 057e 03       		.byte	0x3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 35


 1534 057f 00000000 		.4byte	objectList
 1535 0583 00       		.byte	0
 1536              		.section	.debug_abbrev,"",%progbits
 1537              	.Ldebug_abbrev0:
 1538 0000 01       		.uleb128 0x1
 1539 0001 11       		.uleb128 0x11
 1540 0002 01       		.byte	0x1
 1541 0003 25       		.uleb128 0x25
 1542 0004 0E       		.uleb128 0xe
 1543 0005 13       		.uleb128 0x13
 1544 0006 0B       		.uleb128 0xb
 1545 0007 03       		.uleb128 0x3
 1546 0008 0E       		.uleb128 0xe
 1547 0009 1B       		.uleb128 0x1b
 1548 000a 0E       		.uleb128 0xe
 1549 000b 55       		.uleb128 0x55
 1550 000c 17       		.uleb128 0x17
 1551 000d 11       		.uleb128 0x11
 1552 000e 01       		.uleb128 0x1
 1553 000f 10       		.uleb128 0x10
 1554 0010 17       		.uleb128 0x17
 1555 0011 00       		.byte	0
 1556 0012 00       		.byte	0
 1557 0013 02       		.uleb128 0x2
 1558 0014 16       		.uleb128 0x16
 1559 0015 00       		.byte	0
 1560 0016 03       		.uleb128 0x3
 1561 0017 0E       		.uleb128 0xe
 1562 0018 3A       		.uleb128 0x3a
 1563 0019 0B       		.uleb128 0xb
 1564 001a 3B       		.uleb128 0x3b
 1565 001b 0B       		.uleb128 0xb
 1566 001c 49       		.uleb128 0x49
 1567 001d 13       		.uleb128 0x13
 1568 001e 00       		.byte	0
 1569 001f 00       		.byte	0
 1570 0020 03       		.uleb128 0x3
 1571 0021 24       		.uleb128 0x24
 1572 0022 00       		.byte	0
 1573 0023 0B       		.uleb128 0xb
 1574 0024 0B       		.uleb128 0xb
 1575 0025 3E       		.uleb128 0x3e
 1576 0026 0B       		.uleb128 0xb
 1577 0027 03       		.uleb128 0x3
 1578 0028 0E       		.uleb128 0xe
 1579 0029 00       		.byte	0
 1580 002a 00       		.byte	0
 1581 002b 04       		.uleb128 0x4
 1582 002c 24       		.uleb128 0x24
 1583 002d 00       		.byte	0
 1584 002e 0B       		.uleb128 0xb
 1585 002f 0B       		.uleb128 0xb
 1586 0030 3E       		.uleb128 0x3e
 1587 0031 0B       		.uleb128 0xb
 1588 0032 03       		.uleb128 0x3
 1589 0033 08       		.uleb128 0x8
 1590 0034 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 36


 1591 0035 00       		.byte	0
 1592 0036 05       		.uleb128 0x5
 1593 0037 0F       		.uleb128 0xf
 1594 0038 00       		.byte	0
 1595 0039 0B       		.uleb128 0xb
 1596 003a 0B       		.uleb128 0xb
 1597 003b 00       		.byte	0
 1598 003c 00       		.byte	0
 1599 003d 06       		.uleb128 0x6
 1600 003e 35       		.uleb128 0x35
 1601 003f 00       		.byte	0
 1602 0040 49       		.uleb128 0x49
 1603 0041 13       		.uleb128 0x13
 1604 0042 00       		.byte	0
 1605 0043 00       		.byte	0
 1606 0044 07       		.uleb128 0x7
 1607 0045 04       		.uleb128 0x4
 1608 0046 01       		.byte	0x1
 1609 0047 0B       		.uleb128 0xb
 1610 0048 0B       		.uleb128 0xb
 1611 0049 49       		.uleb128 0x49
 1612 004a 13       		.uleb128 0x13
 1613 004b 3A       		.uleb128 0x3a
 1614 004c 0B       		.uleb128 0xb
 1615 004d 3B       		.uleb128 0x3b
 1616 004e 0B       		.uleb128 0xb
 1617 004f 01       		.uleb128 0x1
 1618 0050 13       		.uleb128 0x13
 1619 0051 00       		.byte	0
 1620 0052 00       		.byte	0
 1621 0053 08       		.uleb128 0x8
 1622 0054 28       		.uleb128 0x28
 1623 0055 00       		.byte	0
 1624 0056 03       		.uleb128 0x3
 1625 0057 0E       		.uleb128 0xe
 1626 0058 1C       		.uleb128 0x1c
 1627 0059 0B       		.uleb128 0xb
 1628 005a 00       		.byte	0
 1629 005b 00       		.byte	0
 1630 005c 09       		.uleb128 0x9
 1631 005d 13       		.uleb128 0x13
 1632 005e 01       		.byte	0x1
 1633 005f 0B       		.uleb128 0xb
 1634 0060 0B       		.uleb128 0xb
 1635 0061 3A       		.uleb128 0x3a
 1636 0062 0B       		.uleb128 0xb
 1637 0063 3B       		.uleb128 0x3b
 1638 0064 0B       		.uleb128 0xb
 1639 0065 01       		.uleb128 0x1
 1640 0066 13       		.uleb128 0x13
 1641 0067 00       		.byte	0
 1642 0068 00       		.byte	0
 1643 0069 0A       		.uleb128 0xa
 1644 006a 0D       		.uleb128 0xd
 1645 006b 00       		.byte	0
 1646 006c 03       		.uleb128 0x3
 1647 006d 0E       		.uleb128 0xe
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 37


 1648 006e 3A       		.uleb128 0x3a
 1649 006f 0B       		.uleb128 0xb
 1650 0070 3B       		.uleb128 0x3b
 1651 0071 0B       		.uleb128 0xb
 1652 0072 49       		.uleb128 0x49
 1653 0073 13       		.uleb128 0x13
 1654 0074 38       		.uleb128 0x38
 1655 0075 0B       		.uleb128 0xb
 1656 0076 00       		.byte	0
 1657 0077 00       		.byte	0
 1658 0078 0B       		.uleb128 0xb
 1659 0079 01       		.uleb128 0x1
 1660 007a 01       		.byte	0x1
 1661 007b 49       		.uleb128 0x49
 1662 007c 13       		.uleb128 0x13
 1663 007d 01       		.uleb128 0x1
 1664 007e 13       		.uleb128 0x13
 1665 007f 00       		.byte	0
 1666 0080 00       		.byte	0
 1667 0081 0C       		.uleb128 0xc
 1668 0082 21       		.uleb128 0x21
 1669 0083 00       		.byte	0
 1670 0084 49       		.uleb128 0x49
 1671 0085 13       		.uleb128 0x13
 1672 0086 2F       		.uleb128 0x2f
 1673 0087 0B       		.uleb128 0xb
 1674 0088 00       		.byte	0
 1675 0089 00       		.byte	0
 1676 008a 0D       		.uleb128 0xd
 1677 008b 13       		.uleb128 0x13
 1678 008c 01       		.byte	0x1
 1679 008d 0B       		.uleb128 0xb
 1680 008e 05       		.uleb128 0x5
 1681 008f 3A       		.uleb128 0x3a
 1682 0090 0B       		.uleb128 0xb
 1683 0091 3B       		.uleb128 0x3b
 1684 0092 0B       		.uleb128 0xb
 1685 0093 01       		.uleb128 0x1
 1686 0094 13       		.uleb128 0x13
 1687 0095 00       		.byte	0
 1688 0096 00       		.byte	0
 1689 0097 0E       		.uleb128 0xe
 1690 0098 13       		.uleb128 0x13
 1691 0099 01       		.byte	0x1
 1692 009a 03       		.uleb128 0x3
 1693 009b 0E       		.uleb128 0xe
 1694 009c 0B       		.uleb128 0xb
 1695 009d 05       		.uleb128 0x5
 1696 009e 3A       		.uleb128 0x3a
 1697 009f 0B       		.uleb128 0xb
 1698 00a0 3B       		.uleb128 0x3b
 1699 00a1 0B       		.uleb128 0xb
 1700 00a2 01       		.uleb128 0x1
 1701 00a3 13       		.uleb128 0x13
 1702 00a4 00       		.byte	0
 1703 00a5 00       		.byte	0
 1704 00a6 0F       		.uleb128 0xf
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 38


 1705 00a7 0D       		.uleb128 0xd
 1706 00a8 00       		.byte	0
 1707 00a9 03       		.uleb128 0x3
 1708 00aa 0E       		.uleb128 0xe
 1709 00ab 3A       		.uleb128 0x3a
 1710 00ac 0B       		.uleb128 0xb
 1711 00ad 3B       		.uleb128 0x3b
 1712 00ae 0B       		.uleb128 0xb
 1713 00af 49       		.uleb128 0x49
 1714 00b0 13       		.uleb128 0x13
 1715 00b1 38       		.uleb128 0x38
 1716 00b2 05       		.uleb128 0x5
 1717 00b3 00       		.byte	0
 1718 00b4 00       		.byte	0
 1719 00b5 10       		.uleb128 0x10
 1720 00b6 21       		.uleb128 0x21
 1721 00b7 00       		.byte	0
 1722 00b8 49       		.uleb128 0x49
 1723 00b9 13       		.uleb128 0x13
 1724 00ba 2F       		.uleb128 0x2f
 1725 00bb 05       		.uleb128 0x5
 1726 00bc 00       		.byte	0
 1727 00bd 00       		.byte	0
 1728 00be 11       		.uleb128 0x11
 1729 00bf 2E       		.uleb128 0x2e
 1730 00c0 01       		.byte	0x1
 1731 00c1 3F       		.uleb128 0x3f
 1732 00c2 19       		.uleb128 0x19
 1733 00c3 03       		.uleb128 0x3
 1734 00c4 0E       		.uleb128 0xe
 1735 00c5 3A       		.uleb128 0x3a
 1736 00c6 0B       		.uleb128 0xb
 1737 00c7 3B       		.uleb128 0x3b
 1738 00c8 0B       		.uleb128 0xb
 1739 00c9 27       		.uleb128 0x27
 1740 00ca 19       		.uleb128 0x19
 1741 00cb 11       		.uleb128 0x11
 1742 00cc 01       		.uleb128 0x1
 1743 00cd 12       		.uleb128 0x12
 1744 00ce 06       		.uleb128 0x6
 1745 00cf 40       		.uleb128 0x40
 1746 00d0 18       		.uleb128 0x18
 1747 00d1 9642     		.uleb128 0x2116
 1748 00d3 19       		.uleb128 0x19
 1749 00d4 01       		.uleb128 0x1
 1750 00d5 13       		.uleb128 0x13
 1751 00d6 00       		.byte	0
 1752 00d7 00       		.byte	0
 1753 00d8 12       		.uleb128 0x12
 1754 00d9 05       		.uleb128 0x5
 1755 00da 00       		.byte	0
 1756 00db 03       		.uleb128 0x3
 1757 00dc 0E       		.uleb128 0xe
 1758 00dd 3A       		.uleb128 0x3a
 1759 00de 0B       		.uleb128 0xb
 1760 00df 3B       		.uleb128 0x3b
 1761 00e0 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 39


 1762 00e1 49       		.uleb128 0x49
 1763 00e2 13       		.uleb128 0x13
 1764 00e3 02       		.uleb128 0x2
 1765 00e4 18       		.uleb128 0x18
 1766 00e5 00       		.byte	0
 1767 00e6 00       		.byte	0
 1768 00e7 13       		.uleb128 0x13
 1769 00e8 2E       		.uleb128 0x2e
 1770 00e9 01       		.byte	0x1
 1771 00ea 03       		.uleb128 0x3
 1772 00eb 0E       		.uleb128 0xe
 1773 00ec 3A       		.uleb128 0x3a
 1774 00ed 0B       		.uleb128 0xb
 1775 00ee 3B       		.uleb128 0x3b
 1776 00ef 0B       		.uleb128 0xb
 1777 00f0 27       		.uleb128 0x27
 1778 00f1 19       		.uleb128 0x19
 1779 00f2 11       		.uleb128 0x11
 1780 00f3 01       		.uleb128 0x1
 1781 00f4 12       		.uleb128 0x12
 1782 00f5 06       		.uleb128 0x6
 1783 00f6 40       		.uleb128 0x40
 1784 00f7 18       		.uleb128 0x18
 1785 00f8 9642     		.uleb128 0x2116
 1786 00fa 19       		.uleb128 0x19
 1787 00fb 01       		.uleb128 0x1
 1788 00fc 13       		.uleb128 0x13
 1789 00fd 00       		.byte	0
 1790 00fe 00       		.byte	0
 1791 00ff 14       		.uleb128 0x14
 1792 0100 34       		.uleb128 0x34
 1793 0101 00       		.byte	0
 1794 0102 03       		.uleb128 0x3
 1795 0103 08       		.uleb128 0x8
 1796 0104 3A       		.uleb128 0x3a
 1797 0105 0B       		.uleb128 0xb
 1798 0106 3B       		.uleb128 0x3b
 1799 0107 0B       		.uleb128 0xb
 1800 0108 49       		.uleb128 0x49
 1801 0109 13       		.uleb128 0x13
 1802 010a 02       		.uleb128 0x2
 1803 010b 18       		.uleb128 0x18
 1804 010c 00       		.byte	0
 1805 010d 00       		.byte	0
 1806 010e 15       		.uleb128 0x15
 1807 010f 34       		.uleb128 0x34
 1808 0110 00       		.byte	0
 1809 0111 03       		.uleb128 0x3
 1810 0112 0E       		.uleb128 0xe
 1811 0113 3A       		.uleb128 0x3a
 1812 0114 0B       		.uleb128 0xb
 1813 0115 3B       		.uleb128 0x3b
 1814 0116 0B       		.uleb128 0xb
 1815 0117 49       		.uleb128 0x49
 1816 0118 13       		.uleb128 0x13
 1817 0119 02       		.uleb128 0x2
 1818 011a 18       		.uleb128 0x18
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 40


 1819 011b 00       		.byte	0
 1820 011c 00       		.byte	0
 1821 011d 16       		.uleb128 0x16
 1822 011e 0F       		.uleb128 0xf
 1823 011f 00       		.byte	0
 1824 0120 0B       		.uleb128 0xb
 1825 0121 0B       		.uleb128 0xb
 1826 0122 49       		.uleb128 0x49
 1827 0123 13       		.uleb128 0x13
 1828 0124 00       		.byte	0
 1829 0125 00       		.byte	0
 1830 0126 17       		.uleb128 0x17
 1831 0127 26       		.uleb128 0x26
 1832 0128 00       		.byte	0
 1833 0129 49       		.uleb128 0x49
 1834 012a 13       		.uleb128 0x13
 1835 012b 00       		.byte	0
 1836 012c 00       		.byte	0
 1837 012d 18       		.uleb128 0x18
 1838 012e 2E       		.uleb128 0x2e
 1839 012f 01       		.byte	0x1
 1840 0130 03       		.uleb128 0x3
 1841 0131 0E       		.uleb128 0xe
 1842 0132 3A       		.uleb128 0x3a
 1843 0133 0B       		.uleb128 0xb
 1844 0134 3B       		.uleb128 0x3b
 1845 0135 05       		.uleb128 0x5
 1846 0136 27       		.uleb128 0x27
 1847 0137 19       		.uleb128 0x19
 1848 0138 11       		.uleb128 0x11
 1849 0139 01       		.uleb128 0x1
 1850 013a 12       		.uleb128 0x12
 1851 013b 06       		.uleb128 0x6
 1852 013c 40       		.uleb128 0x40
 1853 013d 18       		.uleb128 0x18
 1854 013e 9642     		.uleb128 0x2116
 1855 0140 19       		.uleb128 0x19
 1856 0141 01       		.uleb128 0x1
 1857 0142 13       		.uleb128 0x13
 1858 0143 00       		.byte	0
 1859 0144 00       		.byte	0
 1860 0145 19       		.uleb128 0x19
 1861 0146 05       		.uleb128 0x5
 1862 0147 00       		.byte	0
 1863 0148 03       		.uleb128 0x3
 1864 0149 0E       		.uleb128 0xe
 1865 014a 3A       		.uleb128 0x3a
 1866 014b 0B       		.uleb128 0xb
 1867 014c 3B       		.uleb128 0x3b
 1868 014d 05       		.uleb128 0x5
 1869 014e 49       		.uleb128 0x49
 1870 014f 13       		.uleb128 0x13
 1871 0150 02       		.uleb128 0x2
 1872 0151 18       		.uleb128 0x18
 1873 0152 00       		.byte	0
 1874 0153 00       		.byte	0
 1875 0154 1A       		.uleb128 0x1a
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 41


 1876 0155 34       		.uleb128 0x34
 1877 0156 00       		.byte	0
 1878 0157 03       		.uleb128 0x3
 1879 0158 0E       		.uleb128 0xe
 1880 0159 3A       		.uleb128 0x3a
 1881 015a 0B       		.uleb128 0xb
 1882 015b 3B       		.uleb128 0x3b
 1883 015c 05       		.uleb128 0x5
 1884 015d 49       		.uleb128 0x49
 1885 015e 13       		.uleb128 0x13
 1886 015f 02       		.uleb128 0x2
 1887 0160 18       		.uleb128 0x18
 1888 0161 00       		.byte	0
 1889 0162 00       		.byte	0
 1890 0163 1B       		.uleb128 0x1b
 1891 0164 2E       		.uleb128 0x2e
 1892 0165 01       		.byte	0x1
 1893 0166 3F       		.uleb128 0x3f
 1894 0167 19       		.uleb128 0x19
 1895 0168 03       		.uleb128 0x3
 1896 0169 0E       		.uleb128 0xe
 1897 016a 3A       		.uleb128 0x3a
 1898 016b 0B       		.uleb128 0xb
 1899 016c 3B       		.uleb128 0x3b
 1900 016d 05       		.uleb128 0x5
 1901 016e 27       		.uleb128 0x27
 1902 016f 19       		.uleb128 0x19
 1903 0170 49       		.uleb128 0x49
 1904 0171 13       		.uleb128 0x13
 1905 0172 11       		.uleb128 0x11
 1906 0173 01       		.uleb128 0x1
 1907 0174 12       		.uleb128 0x12
 1908 0175 06       		.uleb128 0x6
 1909 0176 40       		.uleb128 0x40
 1910 0177 18       		.uleb128 0x18
 1911 0178 9742     		.uleb128 0x2117
 1912 017a 19       		.uleb128 0x19
 1913 017b 01       		.uleb128 0x1
 1914 017c 13       		.uleb128 0x13
 1915 017d 00       		.byte	0
 1916 017e 00       		.byte	0
 1917 017f 1C       		.uleb128 0x1c
 1918 0180 34       		.uleb128 0x34
 1919 0181 00       		.byte	0
 1920 0182 03       		.uleb128 0x3
 1921 0183 0E       		.uleb128 0xe
 1922 0184 3A       		.uleb128 0x3a
 1923 0185 0B       		.uleb128 0xb
 1924 0186 3B       		.uleb128 0x3b
 1925 0187 05       		.uleb128 0x5
 1926 0188 49       		.uleb128 0x49
 1927 0189 13       		.uleb128 0x13
 1928 018a 3F       		.uleb128 0x3f
 1929 018b 19       		.uleb128 0x19
 1930 018c 3C       		.uleb128 0x3c
 1931 018d 19       		.uleb128 0x19
 1932 018e 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 42


 1933 018f 00       		.byte	0
 1934 0190 1D       		.uleb128 0x1d
 1935 0191 34       		.uleb128 0x34
 1936 0192 00       		.byte	0
 1937 0193 03       		.uleb128 0x3
 1938 0194 0E       		.uleb128 0xe
 1939 0195 3A       		.uleb128 0x3a
 1940 0196 0B       		.uleb128 0xb
 1941 0197 3B       		.uleb128 0x3b
 1942 0198 0B       		.uleb128 0xb
 1943 0199 49       		.uleb128 0x49
 1944 019a 13       		.uleb128 0x13
 1945 019b 3F       		.uleb128 0x3f
 1946 019c 19       		.uleb128 0x19
 1947 019d 02       		.uleb128 0x2
 1948 019e 18       		.uleb128 0x18
 1949 019f 00       		.byte	0
 1950 01a0 00       		.byte	0
 1951 01a1 00       		.byte	0
 1952              		.section	.debug_aranges,"",%progbits
 1953 0000 44000000 		.4byte	0x44
 1954 0004 0200     		.2byte	0x2
 1955 0006 00000000 		.4byte	.Ldebug_info0
 1956 000a 04       		.byte	0x4
 1957 000b 00       		.byte	0
 1958 000c 0000     		.2byte	0
 1959 000e 0000     		.2byte	0
 1960 0010 00000000 		.4byte	.LFB68
 1961 0014 90000000 		.4byte	.LFE68-.LFB68
 1962 0018 00000000 		.4byte	.LFB69
 1963 001c 08010000 		.4byte	.LFE69-.LFB69
 1964 0020 00000000 		.4byte	.LFB70
 1965 0024 08010000 		.4byte	.LFE70-.LFB70
 1966 0028 00000000 		.4byte	.LFB71
 1967 002c 2C010000 		.4byte	.LFE71-.LFB71
 1968 0030 00000000 		.4byte	.LFB72
 1969 0034 30010000 		.4byte	.LFE72-.LFB72
 1970 0038 00000000 		.4byte	.LFB73
 1971 003c 4C000000 		.4byte	.LFE73-.LFB73
 1972 0040 00000000 		.4byte	0
 1973 0044 00000000 		.4byte	0
 1974              		.section	.debug_ranges,"",%progbits
 1975              	.Ldebug_ranges0:
 1976 0000 00000000 		.4byte	.LFB68
 1977 0004 90000000 		.4byte	.LFE68
 1978 0008 00000000 		.4byte	.LFB69
 1979 000c 08010000 		.4byte	.LFE69
 1980 0010 00000000 		.4byte	.LFB70
 1981 0014 08010000 		.4byte	.LFE70
 1982 0018 00000000 		.4byte	.LFB71
 1983 001c 2C010000 		.4byte	.LFE71
 1984 0020 00000000 		.4byte	.LFB72
 1985 0024 30010000 		.4byte	.LFE72
 1986 0028 00000000 		.4byte	.LFB73
 1987 002c 4C000000 		.4byte	.LFE73
 1988 0030 00000000 		.4byte	0
 1989 0034 00000000 		.4byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 43


 1990              		.section	.debug_line,"",%progbits
 1991              	.Ldebug_line0:
 1992 0000 55030000 		.section	.debug_str,"MS",%progbits,1
 1992      02003902 
 1992      00000201 
 1992      FB0E0D00 
 1992      01010101 
 1993              	.LASF30:
 1994 0000 696E666F 		.ascii	"informationID\000"
 1994      726D6174 
 1994      696F6E49 
 1994      4400
 1995              	.LASF46:
 1996 000e 75785072 		.ascii	"uxPriority\000"
 1996      696F7269 
 1996      747900
 1997              	.LASF57:
 1998 0019 64446966 		.ascii	"dDifference\000"
 1998      66657265 
 1998      6E636500 
 1999              	.LASF43:
 2000 0025 77726974 		.ascii	"write\000"
 2000      6500
 2001              	.LASF34:
 2002 002b 6F626A65 		.ascii	"objectNumber\000"
 2002      63744E75 
 2002      6D626572 
 2002      00
 2003              	.LASF7:
 2004 0038 73686F72 		.ascii	"short int\000"
 2004      7420696E 
 2004      7400
 2005              	.LASF4:
 2006 0042 73697A65 		.ascii	"size_t\000"
 2006      5F7400
 2007              	.LASF14:
 2008 0049 73697A65 		.ascii	"sizetype\000"
 2008      74797065 
 2008      00
 2009              	.LASF22:
 2010 0052 4D555445 		.ascii	"MUTEX\000"
 2010      5800
 2011              	.LASF32:
 2012 0058 6C656E67 		.ascii	"length\000"
 2012      746800
 2013              	.LASF68:
 2014 005f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2014      43313120 
 2014      352E342E 
 2014      31203230 
 2014      31363036 
 2015 0092 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2015      20726576 
 2015      6973696F 
 2015      6E203233 
 2015      37373135 
 2016 00c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 44


 2016      66756E63 
 2016      74696F6E 
 2016      2D736563 
 2016      74696F6E 
 2017              	.LASF59:
 2018 00ed 78506F73 		.ascii	"xPosition\000"
 2018      6974696F 
 2018      6E00
 2019              	.LASF50:
 2020 00f7 73457272 		.ascii	"sError\000"
 2020      6F7200
 2021              	.LASF38:
 2022 00fe 6F626A65 		.ascii	"objectHeader\000"
 2022      63744865 
 2022      61646572 
 2022      00
 2023              	.LASF8:
 2024 010b 5F5F7569 		.ascii	"__uint16_t\000"
 2024      6E743136 
 2024      5F7400
 2025              	.LASF18:
 2026 0116 75696E74 		.ascii	"uint8_t\000"
 2026      385F7400 
 2027              	.LASF39:
 2028 011e 6F626A65 		.ascii	"objectArray\000"
 2028      63744172 
 2028      72617900 
 2029              	.LASF35:
 2030 012a 6C656E4F 		.ascii	"lenObjectName\000"
 2030      626A6563 
 2030      744E616D 
 2030      6500
 2031              	.LASF48:
 2032 0138 70757354 		.ascii	"pusTaskCheckVariable\000"
 2032      61736B43 
 2032      6865636B 
 2032      56617269 
 2032      61626C65 
 2033              	.LASF28:
 2034 014d 4F626A65 		.ascii	"ObjectType\000"
 2034      63745479 
 2034      706500
 2035              	.LASF62:
 2036 0158 78546173 		.ascii	"xTask\000"
 2036      6B00
 2037              	.LASF17:
 2038 015e 666C6F61 		.ascii	"float\000"
 2038      7400
 2039              	.LASF73:
 2040 0164 78417265 		.ascii	"xAreMathsTaskStillRunning\000"
 2040      4D617468 
 2040      73546173 
 2040      6B537469 
 2040      6C6C5275 
 2041              	.LASF37:
 2042 017e 4F626A65 		.ascii	"Object\000"
 2042      637400
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 45


 2043              	.LASF42:
 2044 0185 72656164 		.ascii	"read\000"
 2044      00
 2045              	.LASF1:
 2046 018a 6C6F6E67 		.ascii	"long long int\000"
 2046      206C6F6E 
 2046      6720696E 
 2046      7400
 2047              	.LASF11:
 2048 0198 6C6F6E67 		.ascii	"long int\000"
 2048      20696E74 
 2048      00
 2049              	.LASF65:
 2050 01a1 736E6966 		.ascii	"sniffIDFilter\000"
 2050      66494446 
 2050      696C7465 
 2050      7200
 2051              	.LASF58:
 2052 01af 78417272 		.ascii	"xArraySize\000"
 2052      61795369 
 2052      7A6500
 2053              	.LASF5:
 2054 01ba 5F5F7569 		.ascii	"__uint8_t\000"
 2054      6E74385F 
 2054      7400
 2055              	.LASF21:
 2056 01c4 51554555 		.ascii	"QUEUE\000"
 2056      4500
 2057              	.LASF23:
 2058 01ca 434F554E 		.ascii	"COUNTING_SEMAPHORE\000"
 2058      54494E47 
 2058      5F53454D 
 2058      4150484F 
 2058      524500
 2059              	.LASF36:
 2060 01dd 6F626A65 		.ascii	"objectName\000"
 2060      63744E61 
 2060      6D6500
 2061              	.LASF2:
 2062 01e8 6C6F6E67 		.ascii	"long double\000"
 2062      20646F75 
 2062      626C6500 
 2063              	.LASF6:
 2064 01f4 756E7369 		.ascii	"unsigned char\000"
 2064      676E6564 
 2064      20636861 
 2064      7200
 2065              	.LASF25:
 2066 0202 52454355 		.ascii	"RECURSIVE_MUTEX\000"
 2066      52534956 
 2066      455F4D55 
 2066      54455800 
 2067              	.LASF3:
 2068 0212 7369676E 		.ascii	"signed char\000"
 2068      65642063 
 2068      68617200 
 2069              	.LASF13:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 46


 2070 021e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2070      206C6F6E 
 2070      6720756E 
 2070      7369676E 
 2070      65642069 
 2071              	.LASF0:
 2072 0235 756E7369 		.ascii	"unsigned int\000"
 2072      676E6564 
 2072      20696E74 
 2072      00
 2073              	.LASF33:
 2074 0242 4F626A65 		.ascii	"ObjectListHeader\000"
 2074      63744C69 
 2074      73744865 
 2074      61646572 
 2074      00
 2075              	.LASF44:
 2076 0253 42617365 		.ascii	"BaseType_t\000"
 2076      54797065 
 2076      5F7400
 2077              	.LASF47:
 2078 025e 70765061 		.ascii	"pvParameters\000"
 2078      72616D65 
 2078      74657273 
 2078      00
 2079              	.LASF69:
 2080 026b 2E2E5C43 		.ascii	"..\\Common\\Minimal\\flop.c\000"
 2080      6F6D6D6F 
 2080      6E5C4D69 
 2080      6E696D61 
 2080      6C5C666C 
 2081              	.LASF9:
 2082 0284 73686F72 		.ascii	"short unsigned int\000"
 2082      7420756E 
 2082      7369676E 
 2082      65642069 
 2082      6E7400
 2083              	.LASF54:
 2084 0297 70644172 		.ascii	"pdArray\000"
 2084      72617900 
 2085              	.LASF53:
 2086 029f 76436F6D 		.ascii	"vCompetingMathTask3\000"
 2086      70657469 
 2086      6E674D61 
 2086      74685461 
 2086      736B3300 
 2087              	.LASF15:
 2088 02b3 63686172 		.ascii	"char\000"
 2088      00
 2089              	.LASF19:
 2090 02b8 75696E74 		.ascii	"uint16_t\000"
 2090      31365F74 
 2090      00
 2091              	.LASF29:
 2092 02c1 7061636B 		.ascii	"packetID\000"
 2092      65744944 
 2092      00
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 47


 2093              	.LASF20:
 2094 02ca 696E7433 		.ascii	"int32_t\000"
 2094      325F7400 
 2095              	.LASF63:
 2096 02d2 75735461 		.ascii	"usTaskCheck\000"
 2096      736B4368 
 2096      65636B00 
 2097              	.LASF45:
 2098 02de 55426173 		.ascii	"UBaseType_t\000"
 2098      65547970 
 2098      655F7400 
 2099              	.LASF41:
 2100 02ea 64617461 		.ascii	"data\000"
 2100      00
 2101              	.LASF51:
 2102 02ef 76436F6D 		.ascii	"vCompetingMathTask1\000"
 2102      70657469 
 2102      6E674D61 
 2102      74685461 
 2102      736B3100 
 2103              	.LASF52:
 2104 0303 76436F6D 		.ascii	"vCompetingMathTask2\000"
 2104      70657469 
 2104      6E674D61 
 2104      74685461 
 2104      736B3200 
 2105              	.LASF66:
 2106 0317 62756666 		.ascii	"buffer\000"
 2106      657200
 2107              	.LASF60:
 2108 031e 76436F6D 		.ascii	"vCompetingMathTask4\000"
 2108      70657469 
 2108      6E674D61 
 2108      74685461 
 2108      736B3400 
 2109              	.LASF27:
 2110 0332 4E554D42 		.ascii	"NUMBER_OF_OBJECTTYPES\000"
 2110      45525F4F 
 2110      465F4F42 
 2110      4A454354 
 2110      54595045 
 2111              	.LASF12:
 2112 0348 6C6F6E67 		.ascii	"long unsigned int\000"
 2112      20756E73 
 2112      69676E65 
 2112      6420696E 
 2112      7400
 2113              	.LASF72:
 2114 035a 76537461 		.ascii	"vStartMathTasks\000"
 2114      72744D61 
 2114      74685461 
 2114      736B7300 
 2115              	.LASF24:
 2116 036a 42494E41 		.ascii	"BINARY_SEMAPHORE\000"
 2116      52595F53 
 2116      454D4150 
 2116      484F5245 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccDb4v0q.s 			page 48


 2116      00
 2117              	.LASF26:
 2118 037b 5441534B 		.ascii	"TASK\000"
 2118      00
 2119              	.LASF67:
 2120 0380 6F626A65 		.ascii	"objectList\000"
 2120      63744C69 
 2120      737400
 2121              	.LASF10:
 2122 038b 5F5F696E 		.ascii	"__int32_t\000"
 2122      7433325F 
 2122      7400
 2123              	.LASF31:
 2124 0395 6F626A65 		.ascii	"objectType\000"
 2124      63745479 
 2124      706500
 2125              	.LASF49:
 2126 03a0 64416E73 		.ascii	"dAnswer\000"
 2126      77657200 
 2127              	.LASF61:
 2128 03a8 78526574 		.ascii	"xReturn\000"
 2128      75726E00 
 2129              	.LASF16:
 2130 03b0 646F7562 		.ascii	"double\000"
 2130      6C6500
 2131              	.LASF40:
 2132 03b7 4F626A65 		.ascii	"ObjectList\000"
 2132      63744C69 
 2132      737400
 2133              	.LASF64:
 2134 03c2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2134      52784275 
 2134      66666572 
 2134      00
 2135              	.LASF71:
 2136 03cf 42756666 		.ascii	"Buffer\000"
 2136      657200
 2137              	.LASF70:
 2138 03d6 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 2138      726F6772 
 2138      616D6D65 
 2138      5F536372 
 2138      69707473 
 2139 0405 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 2139      5F435938 
 2139      434B4954 
 2139      5F303539 
 2139      2D6D6173 
 2140              	.LASF55:
 2141 0431 64546F74 		.ascii	"dTotal1\000"
 2141      616C3100 
 2142              	.LASF56:
 2143 0439 64546F74 		.ascii	"dTotal2\000"
 2143      616C3200 
 2144              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
