ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"IntQueue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sniffIDFilter,13,4
  20              		.comm	buffer,4098,4
  21              		.comm	objectList,1704,4
  22              		.bss
  23              		.align	2
  24              	xNormallyEmptyQueue:
  25 0000 00000000 		.space	4
  26              		.align	2
  27              	xNormallyFullQueue:
  28 0004 00000000 		.space	4
  29              		.align	2
  30              	uxHighPriorityLoops1:
  31 0008 00000000 		.space	4
  32              		.align	2
  33              	uxHighPriorityLoops2:
  34 000c 00000000 		.space	4
  35              		.align	2
  36              	uxLowPriorityLoops1:
  37 0010 00000000 		.space	4
  38              		.align	2
  39              	uxLowPriorityLoops2:
  40 0014 00000000 		.space	4
  41              		.data
  42              		.align	2
  43              		.type	xErrorStatus, %object
  44              		.size	xErrorStatus, 4
  45              	xErrorStatus:
  46 0000 01000000 		.word	1
  47              		.bss
  48              		.align	2
  49              	xErrorLine:
  50 0018 00000000 		.space	4
  51              		.align	2
  52              	xWasSuspended:
  53 001c 00000000 		.space	4
  54              		.align	2
  55              	uxValueForNormallyEmptyQueue:
  56 0020 00000000 		.space	4
  57              		.align	2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 2


  58              	uxValueForNormallyFullQueue:
  59 0024 00000000 		.space	4
  60              		.comm	xHighPriorityNormallyEmptyTask1,4,4
  61              		.comm	xHighPriorityNormallyEmptyTask2,4,4
  62              		.comm	xHighPriorityNormallyFullTask1,4,4
  63              		.comm	xHighPriorityNormallyFullTask2,4,4
  64              		.align	2
  65              	ucNormallyEmptyReceivedValues:
  66 0028 00000000 		.space	200
  66      00000000 
  66      00000000 
  66      00000000 
  66      00000000 
  67              		.align	2
  68              	ucNormallyFullReceivedValues:
  69 00f0 00000000 		.space	200
  69      00000000 
  69      00000000 
  69      00000000 
  69      00000000 
  70              		.section	.rodata
  71              		.align	2
  72              	.LC0:
  73 0000 48315152 		.ascii	"H1QRx\000"
  73      7800
  74 0006 0000     		.align	2
  75              	.LC1:
  76 0008 48325152 		.ascii	"H2QRx\000"
  76      7800
  77 000e 0000     		.align	2
  78              	.LC2:
  79 0010 4C315152 		.ascii	"L1QRx\000"
  79      7800
  80 0016 0000     		.align	2
  81              	.LC3:
  82 0018 48315154 		.ascii	"H1QTx\000"
  82      7800
  83 001e 0000     		.align	2
  84              	.LC4:
  85 0020 48325154 		.ascii	"H2QTx\000"
  85      7800
  86 0026 0000     		.align	2
  87              	.LC5:
  88 0028 4C325152 		.ascii	"L2QRx\000"
  88      7800
  89 002e 0000     		.align	2
  90              	.LC6:
  91 0030 4E6F726D 		.ascii	"NormallyFull\000"
  91      616C6C79 
  91      46756C6C 
  91      00
  92 003d 000000   		.align	2
  93              	.LC7:
  94 0040 4E6F726D 		.ascii	"NormallyEmpty\000"
  94      616C6C79 
  94      456D7074 
  94      7900
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 3


  95              		.section	.text.vStartInterruptQueueTasks,"ax",%progbits
  96              		.align	2
  97              		.global	vStartInterruptQueueTasks
  98              		.thumb
  99              		.thumb_func
 100              		.type	vStartInterruptQueueTasks, %function
 101              	vStartInterruptQueueTasks:
 102              	.LFB68:
 103              		.file 1 "..\\Common\\Minimal\\IntQueue.c"
   1:..\Common\Minimal/IntQueue.c **** /*
   2:..\Common\Minimal/IntQueue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Common\Minimal/IntQueue.c ****     All rights reserved
   4:..\Common\Minimal/IntQueue.c **** 
   5:..\Common\Minimal/IntQueue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Common\Minimal/IntQueue.c **** 
   7:..\Common\Minimal/IntQueue.c ****     This file is part of the FreeRTOS distribution.
   8:..\Common\Minimal/IntQueue.c **** 
   9:..\Common\Minimal/IntQueue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Common\Minimal/IntQueue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Common\Minimal/IntQueue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Common\Minimal/IntQueue.c **** 
  13:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  14:..\Common\Minimal/IntQueue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Common\Minimal/IntQueue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Common\Minimal/IntQueue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Common\Minimal/IntQueue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  19:..\Common\Minimal/IntQueue.c **** 
  20:..\Common\Minimal/IntQueue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Common\Minimal/IntQueue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Common\Minimal/IntQueue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Common\Minimal/IntQueue.c ****     link: http://www.freertos.org/a00114.html
  24:..\Common\Minimal/IntQueue.c **** 
  25:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  26:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  27:..\Common\Minimal/IntQueue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Common\Minimal/IntQueue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Common\Minimal/IntQueue.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Common\Minimal/IntQueue.c ****      *    is the industry's de facto standard.                               *
  31:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  32:..\Common\Minimal/IntQueue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Common\Minimal/IntQueue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Common\Minimal/IntQueue.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Common\Minimal/IntQueue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Common\Minimal/IntQueue.c ****      *                                                                       *
  37:..\Common\Minimal/IntQueue.c ****     ***************************************************************************
  38:..\Common\Minimal/IntQueue.c **** 
  39:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Common\Minimal/IntQueue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Common\Minimal/IntQueue.c ****     defined configASSERT()?
  42:..\Common\Minimal/IntQueue.c **** 
  43:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Common\Minimal/IntQueue.c ****     embedded software for free we request you assist our global community by
  45:..\Common\Minimal/IntQueue.c ****     participating in the support forum.
  46:..\Common\Minimal/IntQueue.c **** 
  47:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Common\Minimal/IntQueue.c ****     be as productive as possible as early as possible.  Now you can receive
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 4


  49:..\Common\Minimal/IntQueue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Common\Minimal/IntQueue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Common\Minimal/IntQueue.c **** 
  52:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Common\Minimal/IntQueue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Common\Minimal/IntQueue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Common\Minimal/IntQueue.c **** 
  56:..\Common\Minimal/IntQueue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Common\Minimal/IntQueue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Common\Minimal/IntQueue.c **** 
  59:..\Common\Minimal/IntQueue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Common\Minimal/IntQueue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Common\Minimal/IntQueue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Common\Minimal/IntQueue.c **** 
  63:..\Common\Minimal/IntQueue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Common\Minimal/IntQueue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Common\Minimal/IntQueue.c ****     mission critical applications that require provable dependability.
  66:..\Common\Minimal/IntQueue.c **** 
  67:..\Common\Minimal/IntQueue.c ****     1 tab == 4 spaces!
  68:..\Common\Minimal/IntQueue.c **** */
  69:..\Common\Minimal/IntQueue.c **** 
  70:..\Common\Minimal/IntQueue.c **** /*
  71:..\Common\Minimal/IntQueue.c ****  * This file defines one of the more complex set of demo/test tasks.  They are
  72:..\Common\Minimal/IntQueue.c ****  * designed to stress test the queue implementation though pseudo simultaneous
  73:..\Common\Minimal/IntQueue.c ****  * multiple reads and multiple writes from both tasks of varying priority and
  74:..\Common\Minimal/IntQueue.c ****  * interrupts.  The interrupts are prioritised such to ensure that nesting
  75:..\Common\Minimal/IntQueue.c ****  * occurs (for those ports that support it).
  76:..\Common\Minimal/IntQueue.c ****  *
  77:..\Common\Minimal/IntQueue.c ****  * The test ensures that, while being accessed from three tasks and two
  78:..\Common\Minimal/IntQueue.c ****  * interrupts, all the data sent to the queues is also received from
  79:..\Common\Minimal/IntQueue.c ****  * the same queue, and that no duplicate items are either sent or received.
  80:..\Common\Minimal/IntQueue.c ****  * The tests also ensure that a low priority task is never able to successfully
  81:..\Common\Minimal/IntQueue.c ****  * read from or write to a queue when a task of higher priority is attempting
  82:..\Common\Minimal/IntQueue.c ****  * the same operation.
  83:..\Common\Minimal/IntQueue.c ****  */
  84:..\Common\Minimal/IntQueue.c **** 
  85:..\Common\Minimal/IntQueue.c **** /* Standard includes. */
  86:..\Common\Minimal/IntQueue.c **** #include <string.h>
  87:..\Common\Minimal/IntQueue.c **** 
  88:..\Common\Minimal/IntQueue.c **** /* SafeRTOS includes. */
  89:..\Common\Minimal/IntQueue.c **** #include "FreeRTOS.h"
  90:..\Common\Minimal/IntQueue.c **** #include "queue.h"
  91:..\Common\Minimal/IntQueue.c **** #include "task.h"
  92:..\Common\Minimal/IntQueue.c **** 
  93:..\Common\Minimal/IntQueue.c **** /* Demo app includes. */
  94:..\Common\Minimal/IntQueue.c **** #include "IntQueue.h"
  95:..\Common\Minimal/IntQueue.c **** #include "IntQueueTimer.h"
  96:..\Common\Minimal/IntQueue.c **** 
  97:..\Common\Minimal/IntQueue.c **** #if( INCLUDE_eTaskGetState != 1 )
  98:..\Common\Minimal/IntQueue.c **** 	#error INCLUDE_eTaskGetState must be set to 1 in FreeRTOSConfig.h to use this demo file.
  99:..\Common\Minimal/IntQueue.c **** #endif
 100:..\Common\Minimal/IntQueue.c **** 
 101:..\Common\Minimal/IntQueue.c **** /* Priorities used by test tasks. */
 102:..\Common\Minimal/IntQueue.c **** #ifndef intqHIGHER_PRIORITY
 103:..\Common\Minimal/IntQueue.c **** 	#define intqHIGHER_PRIORITY		( configMAX_PRIORITIES - 2 )
 104:..\Common\Minimal/IntQueue.c **** #endif
 105:..\Common\Minimal/IntQueue.c **** #define intqLOWER_PRIORITY		( tskIDLE_PRIORITY )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 5


 106:..\Common\Minimal/IntQueue.c **** 
 107:..\Common\Minimal/IntQueue.c **** /* The number of values to send/receive before checking that all values were
 108:..\Common\Minimal/IntQueue.c **** processed as expected. */
 109:..\Common\Minimal/IntQueue.c **** #define intqNUM_VALUES_TO_LOG	( 200 )
 110:..\Common\Minimal/IntQueue.c **** #define intqSHORT_DELAY			( 140 )
 111:..\Common\Minimal/IntQueue.c **** 
 112:..\Common\Minimal/IntQueue.c **** /* The value by which the value being sent to or received from a queue should
 113:..\Common\Minimal/IntQueue.c **** increment past intqNUM_VALUES_TO_LOG before we check that all values have been
 114:..\Common\Minimal/IntQueue.c **** sent/received correctly.  This is done to ensure that all tasks and interrupts
 115:..\Common\Minimal/IntQueue.c **** accessing the queue have completed their accesses with the
 116:..\Common\Minimal/IntQueue.c **** intqNUM_VALUES_TO_LOG range. */
 117:..\Common\Minimal/IntQueue.c **** #define intqVALUE_OVERRUN		( 50 )
 118:..\Common\Minimal/IntQueue.c **** 
 119:..\Common\Minimal/IntQueue.c **** /* The delay used by the polling task.  A short delay is used for code
 120:..\Common\Minimal/IntQueue.c **** coverage. */
 121:..\Common\Minimal/IntQueue.c **** #define intqONE_TICK_DELAY		( 1 )
 122:..\Common\Minimal/IntQueue.c **** 
 123:..\Common\Minimal/IntQueue.c **** /* Each task and interrupt is given a unique identifier.  This value is used to
 124:..\Common\Minimal/IntQueue.c **** identify which task sent or received each value.  The identifier is also used
 125:..\Common\Minimal/IntQueue.c **** to distinguish between two tasks that are running the same task function. */
 126:..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK1	( ( UBaseType_t ) 1 )
 127:..\Common\Minimal/IntQueue.c **** #define intqHIGH_PRIORITY_TASK2	( ( UBaseType_t ) 2 )
 128:..\Common\Minimal/IntQueue.c **** #define intqLOW_PRIORITY_TASK	( ( UBaseType_t ) 3 )
 129:..\Common\Minimal/IntQueue.c **** #define intqFIRST_INTERRUPT		( ( UBaseType_t ) 4 )
 130:..\Common\Minimal/IntQueue.c **** #define intqSECOND_INTERRUPT	( ( UBaseType_t ) 5 )
 131:..\Common\Minimal/IntQueue.c **** #define intqQUEUE_LENGTH		( ( UBaseType_t ) 10 )
 132:..\Common\Minimal/IntQueue.c **** 
 133:..\Common\Minimal/IntQueue.c **** /* At least intqMIN_ACCEPTABLE_TASK_COUNT values should be sent to/received
 134:..\Common\Minimal/IntQueue.c **** from each queue by each task, otherwise an error is detected. */
 135:..\Common\Minimal/IntQueue.c **** #define intqMIN_ACCEPTABLE_TASK_COUNT		( 5 )
 136:..\Common\Minimal/IntQueue.c **** 
 137:..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally empty.  This is called
 138:..\Common\Minimal/IntQueue.c **** from within the interrupts. */
 139:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_TX()																							\
 140:..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyEmptyQueue ) != pdTRUE )															\
 141:..\Common\Minimal/IntQueue.c **** 	{																														\
 142:..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 143:..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 144:..\Common\Minimal/IntQueue.c **** 		{																													\
 145:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyEmptyQueue++;																					\
 146:..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyEmptyQueue, ( void * ) &uxValueForNormallyEmptyQueue, &xHigherPr
 147:..\Common\Minimal/IntQueue.c **** 			{																												\
 148:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue--;																				\
 149:..\Common\Minimal/IntQueue.c **** 			}																												\
 150:..\Common\Minimal/IntQueue.c **** 		}																													\
 151:..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
 152:..\Common\Minimal/IntQueue.c **** 	}																														\
 153:..\Common\Minimal/IntQueue.c **** 
 154:..\Common\Minimal/IntQueue.c **** /* Send the next value to the queue that is normally full.  This is called
 155:..\Common\Minimal/IntQueue.c **** from within the interrupts. */
 156:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_TX()																								\
 157:..\Common\Minimal/IntQueue.c **** 	if( xQueueIsQueueFullFromISR( xNormallyFullQueue ) != pdTRUE )															\
 158:..\Common\Minimal/IntQueue.c **** 	{																														\
 159:..\Common\Minimal/IntQueue.c **** 	UBaseType_t uxSavedInterruptStatus;																						\
 160:..\Common\Minimal/IntQueue.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();															\
 161:..\Common\Minimal/IntQueue.c **** 		{																													\
 162:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;																					\
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 6


 163:..\Common\Minimal/IntQueue.c **** 			if( xQueueSendFromISR( xNormallyFullQueue, ( void * ) &uxValueForNormallyFullQueue, &xHigherPrio
 164:..\Common\Minimal/IntQueue.c **** 			{																												\
 165:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyFullQueue--;																				\
 166:..\Common\Minimal/IntQueue.c **** 			} 																												\
 167:..\Common\Minimal/IntQueue.c **** 		}																													\
 168:..\Common\Minimal/IntQueue.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );														\
 169:..\Common\Minimal/IntQueue.c **** 	}																														\
 170:..\Common\Minimal/IntQueue.c **** 
 171:..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally empty queue.  This is called from within
 172:..\Common\Minimal/IntQueue.c **** an interrupt. */
 173:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_EMPTY_RX()																			\
 174:..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyEmptyQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) != pdPASS
 175:..\Common\Minimal/IntQueue.c **** 	{																										\
 176:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );																	\
 177:..\Common\Minimal/IntQueue.c **** 	}																										\
 178:..\Common\Minimal/IntQueue.c **** 	else																									\
 179:..\Common\Minimal/IntQueue.c **** 	{																										\
 180:..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyEmpty( uxRxedValue, intqSECOND_INTERRUPT );									\
 181:..\Common\Minimal/IntQueue.c **** 	}
 182:..\Common\Minimal/IntQueue.c **** 
 183:..\Common\Minimal/IntQueue.c **** /* Receive a value from the normally full queue.  This is called from within
 184:..\Common\Minimal/IntQueue.c **** an interrupt. */
 185:..\Common\Minimal/IntQueue.c **** #define timerNORMALLY_FULL_RX()																				\
 186:..\Common\Minimal/IntQueue.c **** 	if( xQueueReceiveFromISR( xNormallyFullQueue, &uxRxedValue, &xHigherPriorityTaskWoken ) == pdPASS 
 187:..\Common\Minimal/IntQueue.c **** 	{																										\
 188:..\Common\Minimal/IntQueue.c **** 		prvRecordValue_NormallyFull( uxRxedValue, intqSECOND_INTERRUPT );									\
 189:..\Common\Minimal/IntQueue.c **** 	}																										\
 190:..\Common\Minimal/IntQueue.c **** 
 191:..\Common\Minimal/IntQueue.c **** 
 192:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 193:..\Common\Minimal/IntQueue.c **** 
 194:..\Common\Minimal/IntQueue.c **** /* The two queues used by the test. */
 195:..\Common\Minimal/IntQueue.c **** static QueueHandle_t xNormallyEmptyQueue, xNormallyFullQueue;
 196:..\Common\Minimal/IntQueue.c **** 
 197:..\Common\Minimal/IntQueue.c **** /* Variables used to detect a stall in one of the tasks. */
 198:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxHighPriorityLoops1 = 0, uxHighPriorityLoops2 = 0, uxLowPriorityLoops1
 199:..\Common\Minimal/IntQueue.c **** 
 200:..\Common\Minimal/IntQueue.c **** /* Any unexpected behaviour sets xErrorStatus to fail and log the line that
 201:..\Common\Minimal/IntQueue.c **** caused the error in xErrorLine. */
 202:..\Common\Minimal/IntQueue.c **** static BaseType_t xErrorStatus = pdPASS;
 203:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t xErrorLine = ( UBaseType_t ) 0;
 204:..\Common\Minimal/IntQueue.c **** 
 205:..\Common\Minimal/IntQueue.c **** /* Used for sequencing between tasks. */
 206:..\Common\Minimal/IntQueue.c **** static BaseType_t xWasSuspended = pdFALSE;
 207:..\Common\Minimal/IntQueue.c **** 
 208:..\Common\Minimal/IntQueue.c **** /* The values that are sent to the queues.  An incremented value is sent each
 209:..\Common\Minimal/IntQueue.c **** time to each queue. */
 210:..\Common\Minimal/IntQueue.c **** static volatile UBaseType_t uxValueForNormallyEmptyQueue = 0, uxValueForNormallyFullQueue = 0;
 211:..\Common\Minimal/IntQueue.c **** 
 212:..\Common\Minimal/IntQueue.c **** /* A handle to some of the tasks is required so they can be suspended/resumed. */
 213:..\Common\Minimal/IntQueue.c **** TaskHandle_t xHighPriorityNormallyEmptyTask1, xHighPriorityNormallyEmptyTask2, xHighPriorityNormall
 214:..\Common\Minimal/IntQueue.c **** 
 215:..\Common\Minimal/IntQueue.c **** /* When a value is received in a queue the value is ticked off in the array
 216:..\Common\Minimal/IntQueue.c **** the array position of the value is set to a the identifier of the task or
 217:..\Common\Minimal/IntQueue.c **** interrupt that accessed the queue.  This way missing or duplicate values can be
 218:..\Common\Minimal/IntQueue.c **** detected. */
 219:..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyEmptyReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 7


 220:..\Common\Minimal/IntQueue.c **** static uint8_t ucNormallyFullReceivedValues[ intqNUM_VALUES_TO_LOG ] = { 0 };
 221:..\Common\Minimal/IntQueue.c **** 
 222:..\Common\Minimal/IntQueue.c **** /* The test tasks themselves. */
 223:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters );
 224:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters );
 225:..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters );
 226:..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters );
 227:..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters );
 228:..\Common\Minimal/IntQueue.c **** 
 229:..\Common\Minimal/IntQueue.c **** /* Used to mark the positions within the ucNormallyEmptyReceivedValues and
 230:..\Common\Minimal/IntQueue.c **** ucNormallyFullReceivedValues arrays, while checking for duplicates. */
 231:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource );
 232:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource );
 233:..\Common\Minimal/IntQueue.c **** 
 234:..\Common\Minimal/IntQueue.c **** /* Logs the line on which an error occurred. */
 235:..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine );
 236:..\Common\Minimal/IntQueue.c **** 
 237:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 238:..\Common\Minimal/IntQueue.c **** 
 239:..\Common\Minimal/IntQueue.c **** void vStartInterruptQueueTasks( void )
 240:..\Common\Minimal/IntQueue.c **** {
 104              		.loc 1 240 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 82B0     		sub	sp, sp, #8
 113              		.cfi_def_cfa_offset 16
 114 0004 02AF     		add	r7, sp, #8
 115              		.cfi_def_cfa 7, 8
 241:..\Common\Minimal/IntQueue.c **** 	/* Start the test tasks. */
 242:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H1QRx", configMINIMAL_STACK_SIZE, ( void * ) int
 116              		.loc 1 242 0
 117 0006 2D4B     		ldr	r3, .L2
 118 0008 0193     		str	r3, [sp, #4]
 119 000a 0323     		movs	r3, #3
 120 000c 0093     		str	r3, [sp]
 121 000e 0123     		movs	r3, #1
 122 0010 6422     		movs	r2, #100
 123 0012 2B49     		ldr	r1, .L2+4
 124 0014 2B48     		ldr	r0, .L2+8
 125 0016 FFF7FEFF 		bl	xTaskCreate
 243:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvHigherPriorityNormallyEmptyTask, "H2QRx", configMINIMAL_STACK_SIZE, ( void * ) int
 126              		.loc 1 243 0
 127 001a 2B4B     		ldr	r3, .L2+12
 128 001c 0193     		str	r3, [sp, #4]
 129 001e 0323     		movs	r3, #3
 130 0020 0093     		str	r3, [sp]
 131 0022 0223     		movs	r3, #2
 132 0024 6422     		movs	r2, #100
 133 0026 2949     		ldr	r1, .L2+16
 134 0028 2648     		ldr	r0, .L2+8
 135 002a FFF7FEFF 		bl	xTaskCreate
 244:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyEmptyTask, "L1QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 8


 136              		.loc 1 244 0
 137 002e 0023     		movs	r3, #0
 138 0030 0193     		str	r3, [sp, #4]
 139 0032 0023     		movs	r3, #0
 140 0034 0093     		str	r3, [sp]
 141 0036 0023     		movs	r3, #0
 142 0038 6422     		movs	r2, #100
 143 003a 2549     		ldr	r1, .L2+20
 144 003c 2548     		ldr	r0, .L2+24
 145 003e FFF7FEFF 		bl	xTaskCreate
 245:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv1stHigherPriorityNormallyFullTask, "H1QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 146              		.loc 1 245 0
 147 0042 254B     		ldr	r3, .L2+28
 148 0044 0193     		str	r3, [sp, #4]
 149 0046 0323     		movs	r3, #3
 150 0048 0093     		str	r3, [sp]
 151 004a 0123     		movs	r3, #1
 152 004c 6422     		movs	r2, #100
 153 004e 2349     		ldr	r1, .L2+32
 154 0050 2348     		ldr	r0, .L2+36
 155 0052 FFF7FEFF 		bl	xTaskCreate
 246:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prv2ndHigherPriorityNormallyFullTask, "H2QTx", configMINIMAL_STACK_SIZE, ( void * ) i
 156              		.loc 1 246 0
 157 0056 234B     		ldr	r3, .L2+40
 158 0058 0193     		str	r3, [sp, #4]
 159 005a 0323     		movs	r3, #3
 160 005c 0093     		str	r3, [sp]
 161 005e 0223     		movs	r3, #2
 162 0060 6422     		movs	r2, #100
 163 0062 2149     		ldr	r1, .L2+44
 164 0064 2148     		ldr	r0, .L2+48
 165 0066 FFF7FEFF 		bl	xTaskCreate
 247:..\Common\Minimal/IntQueue.c **** 	xTaskCreate( prvLowerPriorityNormallyFullTask, "L2QRx", configMINIMAL_STACK_SIZE, NULL, intqLOWER_
 166              		.loc 1 247 0
 167 006a 0023     		movs	r3, #0
 168 006c 0193     		str	r3, [sp, #4]
 169 006e 0023     		movs	r3, #0
 170 0070 0093     		str	r3, [sp]
 171 0072 0023     		movs	r3, #0
 172 0074 6422     		movs	r2, #100
 173 0076 1E49     		ldr	r1, .L2+52
 174 0078 1E48     		ldr	r0, .L2+56
 175 007a FFF7FEFF 		bl	xTaskCreate
 248:..\Common\Minimal/IntQueue.c **** 
 249:..\Common\Minimal/IntQueue.c **** 	/* Create the queues that are accessed by multiple tasks and multiple
 250:..\Common\Minimal/IntQueue.c **** 	interrupts. */
 251:..\Common\Minimal/IntQueue.c **** 	xNormallyFullQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 176              		.loc 1 251 0
 177 007e 0022     		movs	r2, #0
 178 0080 0421     		movs	r1, #4
 179 0082 0A20     		movs	r0, #10
 180 0084 FFF7FEFF 		bl	xQueueGenericCreate
 181 0088 0246     		mov	r2, r0
 182 008a 1B4B     		ldr	r3, .L2+60
 183 008c 1A60     		str	r2, [r3]
 252:..\Common\Minimal/IntQueue.c **** 	xNormallyEmptyQueue = xQueueCreate( intqQUEUE_LENGTH, ( UBaseType_t ) sizeof( UBaseType_t ) );
 184              		.loc 1 252 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 9


 185 008e 0022     		movs	r2, #0
 186 0090 0421     		movs	r1, #4
 187 0092 0A20     		movs	r0, #10
 188 0094 FFF7FEFF 		bl	xQueueGenericCreate
 189 0098 0246     		mov	r2, r0
 190 009a 184B     		ldr	r3, .L2+64
 191 009c 1A60     		str	r2, [r3]
 253:..\Common\Minimal/IntQueue.c **** 
 254:..\Common\Minimal/IntQueue.c **** 	/* vQueueAddToRegistry() adds the queue to the queue registry, if one is
 255:..\Common\Minimal/IntQueue.c **** 	in use.  The queue registry is provided as a means for kernel aware
 256:..\Common\Minimal/IntQueue.c **** 	debuggers to locate queues and has no purpose if a kernel aware debugger
 257:..\Common\Minimal/IntQueue.c **** 	is not being used.  The call to vQueueAddToRegistry() will be removed
 258:..\Common\Minimal/IntQueue.c **** 	by the pre-processor if configQUEUE_REGISTRY_SIZE is not defined or is
 259:..\Common\Minimal/IntQueue.c **** 	defined to be less than 1. */
 260:..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyFullQueue, "NormallyFull" );
 192              		.loc 1 260 0
 193 009e 164B     		ldr	r3, .L2+60
 194 00a0 1B68     		ldr	r3, [r3]
 195 00a2 1749     		ldr	r1, .L2+68
 196 00a4 1846     		mov	r0, r3
 197 00a6 FFF7FEFF 		bl	vQueueAddToRegistry
 261:..\Common\Minimal/IntQueue.c **** 	vQueueAddToRegistry( xNormallyEmptyQueue, "NormallyEmpty" );
 198              		.loc 1 261 0
 199 00aa 144B     		ldr	r3, .L2+64
 200 00ac 1B68     		ldr	r3, [r3]
 201 00ae 1549     		ldr	r1, .L2+72
 202 00b0 1846     		mov	r0, r3
 203 00b2 FFF7FEFF 		bl	vQueueAddToRegistry
 262:..\Common\Minimal/IntQueue.c **** }
 204              		.loc 1 262 0
 205 00b6 00BF     		nop
 206 00b8 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 00ba 80BD     		pop	{r7, pc}
 210              	.L3:
 211              		.align	2
 212              	.L2:
 213 00bc 00000000 		.word	xHighPriorityNormallyEmptyTask1
 214 00c0 00000000 		.word	.LC0
 215 00c4 00000000 		.word	prvHigherPriorityNormallyEmptyTask
 216 00c8 00000000 		.word	xHighPriorityNormallyEmptyTask2
 217 00cc 08000000 		.word	.LC1
 218 00d0 10000000 		.word	.LC2
 219 00d4 00000000 		.word	prvLowerPriorityNormallyEmptyTask
 220 00d8 00000000 		.word	xHighPriorityNormallyFullTask1
 221 00dc 18000000 		.word	.LC3
 222 00e0 00000000 		.word	prv1stHigherPriorityNormallyFullTask
 223 00e4 00000000 		.word	xHighPriorityNormallyFullTask2
 224 00e8 20000000 		.word	.LC4
 225 00ec 00000000 		.word	prv2ndHigherPriorityNormallyFullTask
 226 00f0 28000000 		.word	.LC5
 227 00f4 00000000 		.word	prvLowerPriorityNormallyFullTask
 228 00f8 04000000 		.word	xNormallyFullQueue
 229 00fc 00000000 		.word	xNormallyEmptyQueue
 230 0100 30000000 		.word	.LC6
 231 0104 40000000 		.word	.LC7
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 10


 232              		.cfi_endproc
 233              	.LFE68:
 234              		.size	vStartInterruptQueueTasks, .-vStartInterruptQueueTasks
 235              		.section	.text.prvRecordValue_NormallyFull,"ax",%progbits
 236              		.align	2
 237              		.thumb
 238              		.thumb_func
 239              		.type	prvRecordValue_NormallyFull, %function
 240              	prvRecordValue_NormallyFull:
 241              	.LFB69:
 263:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 264:..\Common\Minimal/IntQueue.c **** 
 265:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyFull( UBaseType_t uxValue, UBaseType_t uxSource )
 266:..\Common\Minimal/IntQueue.c **** {
 242              		.loc 1 266 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 8
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 254 0006 7860     		str	r0, [r7, #4]
 255 0008 3960     		str	r1, [r7]
 267:..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 256              		.loc 1 267 0
 257 000a 7B68     		ldr	r3, [r7, #4]
 258 000c C72B     		cmp	r3, #199
 259 000e 10D8     		bhi	.L7
 268:..\Common\Minimal/IntQueue.c **** 	{
 269:..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 270:..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 271:..\Common\Minimal/IntQueue.c **** 		if( ucNormallyFullReceivedValues[ uxValue ] != 0x00 )
 260              		.loc 1 271 0
 261 0010 0A4A     		ldr	r2, .L8
 262 0012 7B68     		ldr	r3, [r7, #4]
 263 0014 1344     		add	r3, r3, r2
 264 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 265 0018 002B     		cmp	r3, #0
 266 001a 03D0     		beq	.L6
 272:..\Common\Minimal/IntQueue.c **** 		{
 273:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 267              		.loc 1 273 0
 268 001c 40F21110 		movw	r0, #273
 269 0020 FFF7FEFF 		bl	prvQueueAccessLogError
 270              	.L6:
 274:..\Common\Minimal/IntQueue.c **** 		}
 275:..\Common\Minimal/IntQueue.c **** 
 276:..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 277:..\Common\Minimal/IntQueue.c **** 		ucNormallyFullReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 271              		.loc 1 277 0
 272 0024 3B68     		ldr	r3, [r7]
 273 0026 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 11


 274 0028 044A     		ldr	r2, .L8
 275 002a 7B68     		ldr	r3, [r7, #4]
 276 002c 1344     		add	r3, r3, r2
 277 002e 0A46     		mov	r2, r1
 278 0030 1A70     		strb	r2, [r3]
 279              	.L7:
 278:..\Common\Minimal/IntQueue.c **** 	}
 279:..\Common\Minimal/IntQueue.c **** }
 280              		.loc 1 279 0
 281 0032 00BF     		nop
 282 0034 0837     		adds	r7, r7, #8
 283              		.cfi_def_cfa_offset 8
 284 0036 BD46     		mov	sp, r7
 285              		.cfi_def_cfa_register 13
 286              		@ sp needed
 287 0038 80BD     		pop	{r7, pc}
 288              	.L9:
 289 003a 00BF     		.align	2
 290              	.L8:
 291 003c F0000000 		.word	ucNormallyFullReceivedValues
 292              		.cfi_endproc
 293              	.LFE69:
 294              		.size	prvRecordValue_NormallyFull, .-prvRecordValue_NormallyFull
 295              		.section	.text.prvRecordValue_NormallyEmpty,"ax",%progbits
 296              		.align	2
 297              		.thumb
 298              		.thumb_func
 299              		.type	prvRecordValue_NormallyEmpty, %function
 300              	prvRecordValue_NormallyEmpty:
 301              	.LFB70:
 280:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 281:..\Common\Minimal/IntQueue.c **** 
 282:..\Common\Minimal/IntQueue.c **** static void prvRecordValue_NormallyEmpty( UBaseType_t uxValue, UBaseType_t uxSource )
 283:..\Common\Minimal/IntQueue.c **** {
 302              		.loc 1 283 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306 0000 80B5     		push	{r7, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              		.cfi_def_cfa_offset 16
 312 0004 00AF     		add	r7, sp, #0
 313              		.cfi_def_cfa_register 7
 314 0006 7860     		str	r0, [r7, #4]
 315 0008 3960     		str	r1, [r7]
 284:..\Common\Minimal/IntQueue.c **** 	if( uxValue < intqNUM_VALUES_TO_LOG )
 316              		.loc 1 284 0
 317 000a 7B68     		ldr	r3, [r7, #4]
 318 000c C72B     		cmp	r3, #199
 319 000e 10D8     		bhi	.L13
 285:..\Common\Minimal/IntQueue.c **** 	{
 286:..\Common\Minimal/IntQueue.c **** 		/* We don't expect to receive the same value twice, so if the value
 287:..\Common\Minimal/IntQueue.c **** 		has already been marked as received an error has occurred. */
 288:..\Common\Minimal/IntQueue.c **** 		if( ucNormallyEmptyReceivedValues[ uxValue ] != 0x00 )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 12


 320              		.loc 1 288 0
 321 0010 0A4A     		ldr	r2, .L14
 322 0012 7B68     		ldr	r3, [r7, #4]
 323 0014 1344     		add	r3, r3, r2
 324 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 325 0018 002B     		cmp	r3, #0
 326 001a 03D0     		beq	.L12
 289:..\Common\Minimal/IntQueue.c **** 		{
 290:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 327              		.loc 1 290 0
 328 001c 4FF49170 		mov	r0, #290
 329 0020 FFF7FEFF 		bl	prvQueueAccessLogError
 330              	.L12:
 291:..\Common\Minimal/IntQueue.c **** 		}
 292:..\Common\Minimal/IntQueue.c **** 
 293:..\Common\Minimal/IntQueue.c **** 		/* Log that this value has been received. */
 294:..\Common\Minimal/IntQueue.c **** 		ucNormallyEmptyReceivedValues[ uxValue ] = ( uint8_t ) uxSource;
 331              		.loc 1 294 0
 332 0024 3B68     		ldr	r3, [r7]
 333 0026 D9B2     		uxtb	r1, r3
 334 0028 044A     		ldr	r2, .L14
 335 002a 7B68     		ldr	r3, [r7, #4]
 336 002c 1344     		add	r3, r3, r2
 337 002e 0A46     		mov	r2, r1
 338 0030 1A70     		strb	r2, [r3]
 339              	.L13:
 295:..\Common\Minimal/IntQueue.c **** 	}
 296:..\Common\Minimal/IntQueue.c **** }
 340              		.loc 1 296 0
 341 0032 00BF     		nop
 342 0034 0837     		adds	r7, r7, #8
 343              		.cfi_def_cfa_offset 8
 344 0036 BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 0038 80BD     		pop	{r7, pc}
 348              	.L15:
 349 003a 00BF     		.align	2
 350              	.L14:
 351 003c 28000000 		.word	ucNormallyEmptyReceivedValues
 352              		.cfi_endproc
 353              	.LFE70:
 354              		.size	prvRecordValue_NormallyEmpty, .-prvRecordValue_NormallyEmpty
 355              		.section	.text.prvQueueAccessLogError,"ax",%progbits
 356              		.align	2
 357              		.thumb
 358              		.thumb_func
 359              		.type	prvQueueAccessLogError, %function
 360              	prvQueueAccessLogError:
 361              	.LFB71:
 297:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 298:..\Common\Minimal/IntQueue.c **** 
 299:..\Common\Minimal/IntQueue.c **** static void prvQueueAccessLogError( UBaseType_t uxLine )
 300:..\Common\Minimal/IntQueue.c **** {
 362              		.loc 1 300 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 13


 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 7, -4
 370 0002 83B0     		sub	sp, sp, #12
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 7860     		str	r0, [r7, #4]
 301:..\Common\Minimal/IntQueue.c **** 	/* Latch the line number that caused the error. */
 302:..\Common\Minimal/IntQueue.c **** 	xErrorLine = uxLine;
 375              		.loc 1 302 0
 376 0008 054A     		ldr	r2, .L17
 377 000a 7B68     		ldr	r3, [r7, #4]
 378 000c 1360     		str	r3, [r2]
 303:..\Common\Minimal/IntQueue.c **** 	xErrorStatus = pdFAIL;
 379              		.loc 1 303 0
 380 000e 054B     		ldr	r3, .L17+4
 381 0010 0022     		movs	r2, #0
 382 0012 1A60     		str	r2, [r3]
 304:..\Common\Minimal/IntQueue.c **** }
 383              		.loc 1 304 0
 384 0014 00BF     		nop
 385 0016 0C37     		adds	r7, r7, #12
 386              		.cfi_def_cfa_offset 4
 387 0018 BD46     		mov	sp, r7
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 001a 80BC     		pop	{r7}
 391              		.cfi_restore 7
 392              		.cfi_def_cfa_offset 0
 393 001c 7047     		bx	lr
 394              	.L18:
 395 001e 00BF     		.align	2
 396              	.L17:
 397 0020 18000000 		.word	xErrorLine
 398 0024 00000000 		.word	xErrorStatus
 399              		.cfi_endproc
 400              	.LFE71:
 401              		.size	prvQueueAccessLogError, .-prvQueueAccessLogError
 402              		.section	.text.prvHigherPriorityNormallyEmptyTask,"ax",%progbits
 403              		.align	2
 404              		.thumb
 405              		.thumb_func
 406              		.type	prvHigherPriorityNormallyEmptyTask, %function
 407              	prvHigherPriorityNormallyEmptyTask:
 408              	.LFB72:
 305:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 306:..\Common\Minimal/IntQueue.c **** 
 307:..\Common\Minimal/IntQueue.c **** static void prvHigherPriorityNormallyEmptyTask( void *pvParameters )
 308:..\Common\Minimal/IntQueue.c **** {
 409              		.loc 1 308 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 40
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 14


 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 8AB0     		sub	sp, sp, #40
 418              		.cfi_def_cfa_offset 48
 419 0004 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 421 0006 7860     		str	r0, [r7, #4]
 309:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxed, ux, uxTask1, uxTask2, uxInterrupts, uxErrorCount1 = 0, uxErrorCount2 = 0;
 422              		.loc 1 309 0
 423 0008 0023     		movs	r3, #0
 424 000a 7B61     		str	r3, [r7, #20]
 425 000c 0023     		movs	r3, #0
 426 000e 3B61     		str	r3, [r7, #16]
 310:..\Common\Minimal/IntQueue.c **** 
 311:..\Common\Minimal/IntQueue.c **** 	/* The timer should not be started until after the scheduler has started.
 312:..\Common\Minimal/IntQueue.c **** 	More than one task is running this code so we check the parameter value
 313:..\Common\Minimal/IntQueue.c **** 	to determine which task should start the timer. */
 314:..\Common\Minimal/IntQueue.c **** 	if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 427              		.loc 1 314 0
 428 0010 7B68     		ldr	r3, [r7, #4]
 429 0012 012B     		cmp	r3, #1
 430 0014 01D1     		bne	.L20
 315:..\Common\Minimal/IntQueue.c **** 	{
 316:..\Common\Minimal/IntQueue.c **** 		vInitialiseTimerForIntQueueTest();
 431              		.loc 1 316 0
 432 0016 FFF7FEFF 		bl	vInitialiseTimerForIntQueueTest
 433              	.L20:
 317:..\Common\Minimal/IntQueue.c **** 	}
 318:..\Common\Minimal/IntQueue.c **** 
 319:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 320:..\Common\Minimal/IntQueue.c **** 	{
 321:..\Common\Minimal/IntQueue.c **** 		/* Block waiting to receive a value from the normally empty queue.
 322:..\Common\Minimal/IntQueue.c **** 		Interrupts will write to the queue so we should receive a value. */
 323:..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqSHORT_DELAY ) != pdPASS )
 434              		.loc 1 323 0
 435 001a 4F4B     		ldr	r3, .L37
 436 001c 1868     		ldr	r0, [r3]
 437 001e 07F10C01 		add	r1, r7, #12
 438 0022 0023     		movs	r3, #0
 439 0024 8C22     		movs	r2, #140
 440 0026 FFF7FEFF 		bl	xQueueGenericReceive
 441 002a 0346     		mov	r3, r0
 442 002c 012B     		cmp	r3, #1
 443 002e 04D0     		beq	.L21
 324:..\Common\Minimal/IntQueue.c **** 		{
 325:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 444              		.loc 1 325 0
 445 0030 40F24510 		movw	r0, #325
 446 0034 FFF7FEFF 		bl	prvQueueAccessLogError
 447 0038 05E0     		b	.L22
 448              	.L21:
 326:..\Common\Minimal/IntQueue.c **** 		}
 327:..\Common\Minimal/IntQueue.c **** 		else
 328:..\Common\Minimal/IntQueue.c **** 		{
 329:..\Common\Minimal/IntQueue.c **** 			/* Note which value was received so we can check all expected
 330:..\Common\Minimal/IntQueue.c **** 			values are received and no values are duplicated. */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 15


 331:..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, ( UBaseType_t ) pvParameters );
 449              		.loc 1 331 0
 450 003a FB68     		ldr	r3, [r7, #12]
 451 003c 7A68     		ldr	r2, [r7, #4]
 452 003e 1146     		mov	r1, r2
 453 0040 1846     		mov	r0, r3
 454 0042 FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 455              	.L22:
 332:..\Common\Minimal/IntQueue.c **** 		}
 333:..\Common\Minimal/IntQueue.c **** 
 334:..\Common\Minimal/IntQueue.c **** 		/* Ensure the other task running this code gets a chance to execute. */
 335:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 456              		.loc 1 335 0
 457 0046 454B     		ldr	r3, .L37+4
 458 0048 4FF08052 		mov	r2, #268435456
 459 004c 1A60     		str	r2, [r3]
 460              		.syntax unified
 461              	@ 335 "..\Common\Minimal\IntQueue.c" 1
 462 004e BFF34F8F 		dsb
 463              	@ 0 "" 2
 464              	@ 335 "..\Common\Minimal\IntQueue.c" 1
 465 0052 BFF36F8F 		isb
 466              	@ 0 "" 2
 336:..\Common\Minimal/IntQueue.c **** 
 337:..\Common\Minimal/IntQueue.c **** 		if( ( UBaseType_t ) pvParameters == intqHIGH_PRIORITY_TASK1 )
 467              		.loc 1 337 0
 468              		.thumb
 469              		.syntax unified
 470 0056 7B68     		ldr	r3, [r7, #4]
 471 0058 012B     		cmp	r3, #1
 472 005a DED1     		bne	.L20
 338:..\Common\Minimal/IntQueue.c **** 		{
 339:..\Common\Minimal/IntQueue.c **** 			/* Have we received all the expected values? */
 340:..\Common\Minimal/IntQueue.c **** 			if( uxValueForNormallyEmptyQueue > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 473              		.loc 1 340 0
 474 005c 404B     		ldr	r3, .L37+8
 475 005e 1B68     		ldr	r3, [r3]
 476 0060 FA2B     		cmp	r3, #250
 477 0062 DAD9     		bls	.L20
 341:..\Common\Minimal/IntQueue.c **** 			{
 342:..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( xHighPriorityNormallyEmptyTask2 );
 478              		.loc 1 342 0
 479 0064 3F4B     		ldr	r3, .L37+12
 480 0066 1B68     		ldr	r3, [r3]
 481 0068 1846     		mov	r0, r3
 482 006a FFF7FEFF 		bl	vTaskSuspend
 343:..\Common\Minimal/IntQueue.c **** 
 344:..\Common\Minimal/IntQueue.c **** 				uxTask1 = 0;
 483              		.loc 1 344 0
 484 006e 0023     		movs	r3, #0
 485 0070 3B62     		str	r3, [r7, #32]
 345:..\Common\Minimal/IntQueue.c **** 				uxTask2 = 0;
 486              		.loc 1 345 0
 487 0072 0023     		movs	r3, #0
 488 0074 FB61     		str	r3, [r7, #28]
 346:..\Common\Minimal/IntQueue.c **** 				uxInterrupts = 0;
 489              		.loc 1 346 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 16


 490 0076 0023     		movs	r3, #0
 491 0078 BB61     		str	r3, [r7, #24]
 347:..\Common\Minimal/IntQueue.c **** 
 348:..\Common\Minimal/IntQueue.c **** 				/* Loop through the array, checking that both tasks have
 349:..\Common\Minimal/IntQueue.c **** 				placed values into the array, and that no values are missing.
 350:..\Common\Minimal/IntQueue.c **** 				Start at 1 as we expect position 0 to be unused. */
 351:..\Common\Minimal/IntQueue.c **** 				for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 492              		.loc 1 351 0
 493 007a 0123     		movs	r3, #1
 494 007c 7B62     		str	r3, [r7, #36]
 495 007e 2AE0     		b	.L24
 496              	.L29:
 352:..\Common\Minimal/IntQueue.c **** 				{
 353:..\Common\Minimal/IntQueue.c **** 					if( ucNormallyEmptyReceivedValues[ ux ] == 0 )
 497              		.loc 1 353 0
 498 0080 394A     		ldr	r2, .L37+16
 499 0082 7B6A     		ldr	r3, [r7, #36]
 500 0084 1344     		add	r3, r3, r2
 501 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 502 0088 002B     		cmp	r3, #0
 503 008a 04D1     		bne	.L25
 354:..\Common\Minimal/IntQueue.c **** 					{
 355:..\Common\Minimal/IntQueue.c **** 						/* A value is missing. */
 356:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 504              		.loc 1 356 0
 505 008c 4FF4B270 		mov	r0, #356
 506 0090 FFF7FEFF 		bl	prvQueueAccessLogError
 507 0094 1CE0     		b	.L26
 508              	.L25:
 357:..\Common\Minimal/IntQueue.c **** 					}
 358:..\Common\Minimal/IntQueue.c **** 					else
 359:..\Common\Minimal/IntQueue.c **** 					{
 360:..\Common\Minimal/IntQueue.c **** 						if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK1 )
 509              		.loc 1 360 0
 510 0096 344A     		ldr	r2, .L37+16
 511 0098 7B6A     		ldr	r3, [r7, #36]
 512 009a 1344     		add	r3, r3, r2
 513 009c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 514 009e 012B     		cmp	r3, #1
 515 00a0 03D1     		bne	.L27
 361:..\Common\Minimal/IntQueue.c **** 						{
 362:..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 1. */
 363:..\Common\Minimal/IntQueue.c **** 							uxTask1++;
 516              		.loc 1 363 0
 517 00a2 3B6A     		ldr	r3, [r7, #32]
 518 00a4 0133     		adds	r3, r3, #1
 519 00a6 3B62     		str	r3, [r7, #32]
 520 00a8 12E0     		b	.L26
 521              	.L27:
 364:..\Common\Minimal/IntQueue.c **** 						}
 365:..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqHIGH_PRIORITY_TASK2 )
 522              		.loc 1 365 0
 523 00aa 2F4A     		ldr	r2, .L37+16
 524 00ac 7B6A     		ldr	r3, [r7, #36]
 525 00ae 1344     		add	r3, r3, r2
 526 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 527 00b2 022B     		cmp	r3, #2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 17


 528 00b4 03D1     		bne	.L28
 366:..\Common\Minimal/IntQueue.c **** 						{
 367:..\Common\Minimal/IntQueue.c **** 							/* Value was placed into the array by task 2. */
 368:..\Common\Minimal/IntQueue.c **** 							uxTask2++;
 529              		.loc 1 368 0
 530 00b6 FB69     		ldr	r3, [r7, #28]
 531 00b8 0133     		adds	r3, r3, #1
 532 00ba FB61     		str	r3, [r7, #28]
 533 00bc 08E0     		b	.L26
 534              	.L28:
 369:..\Common\Minimal/IntQueue.c **** 						}
 370:..\Common\Minimal/IntQueue.c **** 						else if( ucNormallyEmptyReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 535              		.loc 1 370 0
 536 00be 2A4A     		ldr	r2, .L37+16
 537 00c0 7B6A     		ldr	r3, [r7, #36]
 538 00c2 1344     		add	r3, r3, r2
 539 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 540 00c6 052B     		cmp	r3, #5
 541 00c8 02D1     		bne	.L26
 371:..\Common\Minimal/IntQueue.c **** 						{
 372:..\Common\Minimal/IntQueue.c **** 							uxInterrupts++;
 542              		.loc 1 372 0
 543 00ca BB69     		ldr	r3, [r7, #24]
 544 00cc 0133     		adds	r3, r3, #1
 545 00ce BB61     		str	r3, [r7, #24]
 546              	.L26:
 351:..\Common\Minimal/IntQueue.c **** 				{
 547              		.loc 1 351 0 discriminator 2
 548 00d0 7B6A     		ldr	r3, [r7, #36]
 549 00d2 0133     		adds	r3, r3, #1
 550 00d4 7B62     		str	r3, [r7, #36]
 551              	.L24:
 351:..\Common\Minimal/IntQueue.c **** 				{
 552              		.loc 1 351 0 is_stmt 0 discriminator 1
 553 00d6 7B6A     		ldr	r3, [r7, #36]
 554 00d8 C72B     		cmp	r3, #199
 555 00da D1D9     		bls	.L29
 373:..\Common\Minimal/IntQueue.c **** 						}
 374:..\Common\Minimal/IntQueue.c **** 					}
 375:..\Common\Minimal/IntQueue.c **** 				}
 376:..\Common\Minimal/IntQueue.c **** 
 377:..\Common\Minimal/IntQueue.c **** 				if( uxTask1 < intqMIN_ACCEPTABLE_TASK_COUNT )
 556              		.loc 1 377 0 is_stmt 1
 557 00dc 3B6A     		ldr	r3, [r7, #32]
 558 00de 042B     		cmp	r3, #4
 559 00e0 0AD8     		bhi	.L30
 378:..\Common\Minimal/IntQueue.c **** 				{
 379:..\Common\Minimal/IntQueue.c **** 					/* Only task 2 seemed to log any values. */
 380:..\Common\Minimal/IntQueue.c **** 					uxErrorCount1++;
 560              		.loc 1 380 0
 561 00e2 7B69     		ldr	r3, [r7, #20]
 562 00e4 0133     		adds	r3, r3, #1
 563 00e6 7B61     		str	r3, [r7, #20]
 381:..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount1 > 2 )
 564              		.loc 1 381 0
 565 00e8 7B69     		ldr	r3, [r7, #20]
 566 00ea 022B     		cmp	r3, #2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 18


 567 00ec 06D9     		bls	.L32
 382:..\Common\Minimal/IntQueue.c **** 					{
 383:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 568              		.loc 1 383 0
 569 00ee 40F27F10 		movw	r0, #383
 570 00f2 FFF7FEFF 		bl	prvQueueAccessLogError
 571 00f6 01E0     		b	.L32
 572              	.L30:
 384:..\Common\Minimal/IntQueue.c **** 					}
 385:..\Common\Minimal/IntQueue.c **** 				}
 386:..\Common\Minimal/IntQueue.c **** 				else
 387:..\Common\Minimal/IntQueue.c **** 				{
 388:..\Common\Minimal/IntQueue.c **** 					uxErrorCount1 = 0;
 573              		.loc 1 388 0
 574 00f8 0023     		movs	r3, #0
 575 00fa 7B61     		str	r3, [r7, #20]
 576              	.L32:
 389:..\Common\Minimal/IntQueue.c **** 				}
 390:..\Common\Minimal/IntQueue.c **** 
 391:..\Common\Minimal/IntQueue.c **** 				if( uxTask2 < intqMIN_ACCEPTABLE_TASK_COUNT  )
 577              		.loc 1 391 0
 578 00fc FB69     		ldr	r3, [r7, #28]
 579 00fe 042B     		cmp	r3, #4
 580 0100 0AD8     		bhi	.L33
 392:..\Common\Minimal/IntQueue.c **** 				{
 393:..\Common\Minimal/IntQueue.c **** 					/* Only task 1 seemed to log any values. */
 394:..\Common\Minimal/IntQueue.c **** 					uxErrorCount2++;
 581              		.loc 1 394 0
 582 0102 3B69     		ldr	r3, [r7, #16]
 583 0104 0133     		adds	r3, r3, #1
 584 0106 3B61     		str	r3, [r7, #16]
 395:..\Common\Minimal/IntQueue.c **** 					if( uxErrorCount2 > 2 )
 585              		.loc 1 395 0
 586 0108 3B69     		ldr	r3, [r7, #16]
 587 010a 022B     		cmp	r3, #2
 588 010c 06D9     		bls	.L35
 396:..\Common\Minimal/IntQueue.c **** 					{
 397:..\Common\Minimal/IntQueue.c **** 						prvQueueAccessLogError( __LINE__ );
 589              		.loc 1 397 0
 590 010e 40F28D10 		movw	r0, #397
 591 0112 FFF7FEFF 		bl	prvQueueAccessLogError
 592 0116 01E0     		b	.L35
 593              	.L33:
 398:..\Common\Minimal/IntQueue.c **** 					}
 399:..\Common\Minimal/IntQueue.c **** 				}
 400:..\Common\Minimal/IntQueue.c **** 				else
 401:..\Common\Minimal/IntQueue.c **** 				{
 402:..\Common\Minimal/IntQueue.c **** 					uxErrorCount2 = 0;
 594              		.loc 1 402 0
 595 0118 0023     		movs	r3, #0
 596 011a 3B61     		str	r3, [r7, #16]
 597              	.L35:
 403:..\Common\Minimal/IntQueue.c **** 				}
 404:..\Common\Minimal/IntQueue.c **** 
 405:..\Common\Minimal/IntQueue.c **** 				if( uxInterrupts == 0 )
 598              		.loc 1 405 0
 599 011c BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 19


 600 011e 002B     		cmp	r3, #0
 601 0120 03D1     		bne	.L36
 406:..\Common\Minimal/IntQueue.c **** 				{
 407:..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 602              		.loc 1 407 0
 603 0122 40F29710 		movw	r0, #407
 604 0126 FFF7FEFF 		bl	prvQueueAccessLogError
 605              	.L36:
 408:..\Common\Minimal/IntQueue.c **** 				}
 409:..\Common\Minimal/IntQueue.c **** 
 410:..\Common\Minimal/IntQueue.c **** 				/* Clear the array again, ready to start a new cycle. */
 411:..\Common\Minimal/IntQueue.c **** 				memset( ucNormallyEmptyReceivedValues, 0x00, sizeof( ucNormallyEmptyReceivedValues ) );
 606              		.loc 1 411 0
 607 012a C822     		movs	r2, #200
 608 012c 0021     		movs	r1, #0
 609 012e 0E48     		ldr	r0, .L37+16
 610 0130 FFF7FEFF 		bl	memset
 412:..\Common\Minimal/IntQueue.c **** 
 413:..\Common\Minimal/IntQueue.c **** 				uxHighPriorityLoops1++;
 611              		.loc 1 413 0
 612 0134 0D4B     		ldr	r3, .L37+20
 613 0136 1B68     		ldr	r3, [r3]
 614 0138 0133     		adds	r3, r3, #1
 615 013a 0C4A     		ldr	r2, .L37+20
 616 013c 1360     		str	r3, [r2]
 414:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue = 0;
 617              		.loc 1 414 0
 618 013e 084B     		ldr	r3, .L37+8
 619 0140 0022     		movs	r2, #0
 620 0142 1A60     		str	r2, [r3]
 415:..\Common\Minimal/IntQueue.c **** 
 416:..\Common\Minimal/IntQueue.c **** 				/* Suspend ourselves, allowing the lower priority task to
 417:..\Common\Minimal/IntQueue.c **** 				actually receive something from the queue.  Until now it
 418:..\Common\Minimal/IntQueue.c **** 				will have been prevented from doing so by the higher
 419:..\Common\Minimal/IntQueue.c **** 				priority tasks.  The lower priority task will resume us
 420:..\Common\Minimal/IntQueue.c **** 				if it receives something.  We will then resume the other
 421:..\Common\Minimal/IntQueue.c **** 				higher priority task. */
 422:..\Common\Minimal/IntQueue.c **** 				vTaskSuspend( NULL );
 621              		.loc 1 422 0
 622 0144 0020     		movs	r0, #0
 623 0146 FFF7FEFF 		bl	vTaskSuspend
 423:..\Common\Minimal/IntQueue.c **** 				vTaskResume( xHighPriorityNormallyEmptyTask2 );
 624              		.loc 1 423 0
 625 014a 064B     		ldr	r3, .L37+12
 626 014c 1B68     		ldr	r3, [r3]
 627 014e 1846     		mov	r0, r3
 628 0150 FFF7FEFF 		bl	vTaskResume
 424:..\Common\Minimal/IntQueue.c **** 			}
 425:..\Common\Minimal/IntQueue.c **** 		}
 426:..\Common\Minimal/IntQueue.c **** 	}
 629              		.loc 1 426 0
 630 0154 61E7     		b	.L20
 631              	.L38:
 632 0156 00BF     		.align	2
 633              	.L37:
 634 0158 00000000 		.word	xNormallyEmptyQueue
 635 015c 04ED00E0 		.word	-536810236
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 20


 636 0160 20000000 		.word	uxValueForNormallyEmptyQueue
 637 0164 00000000 		.word	xHighPriorityNormallyEmptyTask2
 638 0168 28000000 		.word	ucNormallyEmptyReceivedValues
 639 016c 08000000 		.word	uxHighPriorityLoops1
 640              		.cfi_endproc
 641              	.LFE72:
 642              		.size	prvHigherPriorityNormallyEmptyTask, .-prvHigherPriorityNormallyEmptyTask
 643              		.section	.text.prvLowerPriorityNormallyEmptyTask,"ax",%progbits
 644              		.align	2
 645              		.thumb
 646              		.thumb_func
 647              		.type	prvLowerPriorityNormallyEmptyTask, %function
 648              	prvLowerPriorityNormallyEmptyTask:
 649              	.LFB73:
 427:..\Common\Minimal/IntQueue.c **** }
 428:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 429:..\Common\Minimal/IntQueue.c **** 
 430:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyEmptyTask( void *pvParameters )
 431:..\Common\Minimal/IntQueue.c **** {
 650              		.loc 1 431 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 16
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 84B0     		sub	sp, sp, #16
 659              		.cfi_def_cfa_offset 24
 660 0004 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 662 0006 7860     		str	r0, [r7, #4]
 663              	.L44:
 432:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxRxed;
 433:..\Common\Minimal/IntQueue.c **** 
 434:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 435:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 436:..\Common\Minimal/IntQueue.c **** 
 437:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 438:..\Common\Minimal/IntQueue.c **** 	{
 439:..\Common\Minimal/IntQueue.c **** 		if( xQueueReceive( xNormallyEmptyQueue, &uxRxed, intqONE_TICK_DELAY ) != errQUEUE_EMPTY )
 664              		.loc 1 439 0
 665 0008 254B     		ldr	r3, .L45
 666 000a 1868     		ldr	r0, [r3]
 667 000c 07F10801 		add	r1, r7, #8
 668 0010 0023     		movs	r3, #0
 669 0012 0122     		movs	r2, #1
 670 0014 FFF7FEFF 		bl	xQueueGenericReceive
 671 0018 0346     		mov	r3, r0
 672 001a 002B     		cmp	r3, #0
 673 001c 1BD0     		beq	.L40
 440:..\Common\Minimal/IntQueue.c **** 		{
 441:..\Common\Minimal/IntQueue.c **** 			/* A value should only be obtained when the high priority task is
 442:..\Common\Minimal/IntQueue.c **** 			suspended. */
 443:..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyEmptyTask1 ) != eSuspended )
 674              		.loc 1 443 0
 675 001e 214B     		ldr	r3, .L45+4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 21


 676 0020 1B68     		ldr	r3, [r3]
 677 0022 1846     		mov	r0, r3
 678 0024 FFF7FEFF 		bl	eTaskGetState
 679 0028 0346     		mov	r3, r0
 680 002a 032B     		cmp	r3, #3
 681 002c 03D0     		beq	.L41
 444:..\Common\Minimal/IntQueue.c **** 			{
 445:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 682              		.loc 1 445 0
 683 002e 40F2BD10 		movw	r0, #445
 684 0032 FFF7FEFF 		bl	prvQueueAccessLogError
 685              	.L41:
 446:..\Common\Minimal/IntQueue.c **** 			}
 447:..\Common\Minimal/IntQueue.c **** 
 448:..\Common\Minimal/IntQueue.c **** 			prvRecordValue_NormallyEmpty( uxRxed, intqLOW_PRIORITY_TASK );
 686              		.loc 1 448 0
 687 0036 BB68     		ldr	r3, [r7, #8]
 688 0038 0321     		movs	r1, #3
 689 003a 1846     		mov	r0, r3
 690 003c FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 449:..\Common\Minimal/IntQueue.c **** 
 450:..\Common\Minimal/IntQueue.c **** 			/* Wake the higher priority task again. */
 451:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyEmptyTask1 );
 691              		.loc 1 451 0
 692 0040 184B     		ldr	r3, .L45+4
 693 0042 1B68     		ldr	r3, [r3]
 694 0044 1846     		mov	r0, r3
 695 0046 FFF7FEFF 		bl	vTaskResume
 452:..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops1++;
 696              		.loc 1 452 0
 697 004a 174B     		ldr	r3, .L45+8
 698 004c 1B68     		ldr	r3, [r3]
 699 004e 0133     		adds	r3, r3, #1
 700 0050 154A     		ldr	r2, .L45+8
 701 0052 1360     		str	r3, [r2]
 702 0054 D8E7     		b	.L44
 703              	.L40:
 453:..\Common\Minimal/IntQueue.c **** 		}
 454:..\Common\Minimal/IntQueue.c **** 		else
 455:..\Common\Minimal/IntQueue.c **** 		{
 456:..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we send so we can preempt the higher
 457:..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the Tx value into the queue. */
 458:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 704              		.loc 1 458 0
 705 0056 0421     		movs	r1, #4
 706 0058 0020     		movs	r0, #0
 707 005a FFF7FEFF 		bl	vTaskPrioritySet
 459:..\Common\Minimal/IntQueue.c **** 
 460:..\Common\Minimal/IntQueue.c **** 			portENTER_CRITICAL();
 708              		.loc 1 460 0
 709 005e FFF7FEFF 		bl	vPortEnterCritical
 461:..\Common\Minimal/IntQueue.c **** 			{
 462:..\Common\Minimal/IntQueue.c **** 				uxValueForNormallyEmptyQueue++;
 710              		.loc 1 462 0
 711 0062 124B     		ldr	r3, .L45+12
 712 0064 1B68     		ldr	r3, [r3]
 713 0066 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 22


 714 0068 104A     		ldr	r2, .L45+12
 715 006a 1360     		str	r3, [r2]
 463:..\Common\Minimal/IntQueue.c **** 				uxValue = uxValueForNormallyEmptyQueue;
 716              		.loc 1 463 0
 717 006c 0F4B     		ldr	r3, .L45+12
 718 006e 1B68     		ldr	r3, [r3]
 719 0070 FB60     		str	r3, [r7, #12]
 464:..\Common\Minimal/IntQueue.c **** 			}
 465:..\Common\Minimal/IntQueue.c **** 			portEXIT_CRITICAL();
 720              		.loc 1 465 0
 721 0072 FFF7FEFF 		bl	vPortExitCritical
 466:..\Common\Minimal/IntQueue.c **** 
 467:..\Common\Minimal/IntQueue.c **** 			if( xQueueSend( xNormallyEmptyQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 722              		.loc 1 467 0
 723 0076 0A4B     		ldr	r3, .L45
 724 0078 1868     		ldr	r0, [r3]
 725 007a 07F10C01 		add	r1, r7, #12
 726 007e 0023     		movs	r3, #0
 727 0080 4FF0FF32 		mov	r2, #-1
 728 0084 FFF7FEFF 		bl	xQueueGenericSend
 729 0088 0346     		mov	r3, r0
 730 008a 012B     		cmp	r3, #1
 731 008c 03D0     		beq	.L43
 468:..\Common\Minimal/IntQueue.c **** 			{
 469:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 732              		.loc 1 469 0
 733 008e 40F2D510 		movw	r0, #469
 734 0092 FFF7FEFF 		bl	prvQueueAccessLogError
 735              	.L43:
 470:..\Common\Minimal/IntQueue.c **** 			}
 471:..\Common\Minimal/IntQueue.c **** 
 472:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 736              		.loc 1 472 0
 737 0096 0021     		movs	r1, #0
 738 0098 0020     		movs	r0, #0
 739 009a FFF7FEFF 		bl	vTaskPrioritySet
 473:..\Common\Minimal/IntQueue.c **** 		}
 474:..\Common\Minimal/IntQueue.c **** 	}
 740              		.loc 1 474 0
 741 009e B3E7     		b	.L44
 742              	.L46:
 743              		.align	2
 744              	.L45:
 745 00a0 00000000 		.word	xNormallyEmptyQueue
 746 00a4 00000000 		.word	xHighPriorityNormallyEmptyTask1
 747 00a8 10000000 		.word	uxLowPriorityLoops1
 748 00ac 20000000 		.word	uxValueForNormallyEmptyQueue
 749              		.cfi_endproc
 750              	.LFE73:
 751              		.size	prvLowerPriorityNormallyEmptyTask, .-prvLowerPriorityNormallyEmptyTask
 752              		.section	.text.prv1stHigherPriorityNormallyFullTask,"ax",%progbits
 753              		.align	2
 754              		.thumb
 755              		.thumb_func
 756              		.type	prv1stHigherPriorityNormallyFullTask, %function
 757              	prv1stHigherPriorityNormallyFullTask:
 758              	.LFB74:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 23


 475:..\Common\Minimal/IntQueue.c **** }
 476:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 477:..\Common\Minimal/IntQueue.c **** 
 478:..\Common\Minimal/IntQueue.c **** static void prv1stHigherPriorityNormallyFullTask( void *pvParameters )
 479:..\Common\Minimal/IntQueue.c **** {
 759              		.loc 1 479 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 24
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 80B5     		push	{r7, lr}
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 86B0     		sub	sp, sp, #24
 768              		.cfi_def_cfa_offset 32
 769 0004 00AF     		add	r7, sp, #0
 770              		.cfi_def_cfa_register 7
 771 0006 7860     		str	r0, [r7, #4]
 480:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux, uxInterrupts;
 481:..\Common\Minimal/IntQueue.c **** 
 482:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 483:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 484:..\Common\Minimal/IntQueue.c **** 
 485:..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 486:..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
 487:..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
 772              		.loc 1 487 0
 773 0008 0023     		movs	r3, #0
 774 000a 7B61     		str	r3, [r7, #20]
 775 000c 16E0     		b	.L48
 776              	.L49:
 488:..\Common\Minimal/IntQueue.c **** 	{
 489:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 777              		.loc 1 489 0 discriminator 3
 778 000e FFF7FEFF 		bl	vPortEnterCritical
 490:..\Common\Minimal/IntQueue.c **** 		{
 491:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 779              		.loc 1 491 0 discriminator 3
 780 0012 464B     		ldr	r3, .L59
 781 0014 1B68     		ldr	r3, [r3]
 782 0016 0133     		adds	r3, r3, #1
 783 0018 444A     		ldr	r2, .L59
 784 001a 1360     		str	r3, [r2]
 492:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 785              		.loc 1 492 0 discriminator 3
 786 001c 434B     		ldr	r3, .L59
 787 001e 1B68     		ldr	r3, [r3]
 788 0020 FB60     		str	r3, [r7, #12]
 493:..\Common\Minimal/IntQueue.c **** 		}
 494:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 789              		.loc 1 494 0 discriminator 3
 790 0022 FFF7FEFF 		bl	vPortExitCritical
 495:..\Common\Minimal/IntQueue.c **** 
 496:..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 791              		.loc 1 496 0 discriminator 3
 792 0026 424B     		ldr	r3, .L59+4
 793 0028 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 24


 794 002a 07F10C01 		add	r1, r7, #12
 795 002e 0023     		movs	r3, #0
 796 0030 8C22     		movs	r2, #140
 797 0032 FFF7FEFF 		bl	xQueueGenericSend
 487:..\Common\Minimal/IntQueue.c **** 	{
 798              		.loc 1 487 0 discriminator 3
 799 0036 7B69     		ldr	r3, [r7, #20]
 800 0038 0133     		adds	r3, r3, #1
 801 003a 7B61     		str	r3, [r7, #20]
 802              	.L48:
 487:..\Common\Minimal/IntQueue.c **** 	{
 803              		.loc 1 487 0 is_stmt 0 discriminator 1
 804 003c 7B69     		ldr	r3, [r7, #20]
 805 003e 042B     		cmp	r3, #4
 806 0040 E5D9     		bls	.L49
 807              	.L58:
 497:..\Common\Minimal/IntQueue.c **** 	}
 498:..\Common\Minimal/IntQueue.c **** 
 499:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 500:..\Common\Minimal/IntQueue.c **** 	{
 501:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 808              		.loc 1 501 0 is_stmt 1
 809 0042 FFF7FEFF 		bl	vPortEnterCritical
 502:..\Common\Minimal/IntQueue.c **** 		{
 503:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 810              		.loc 1 503 0
 811 0046 394B     		ldr	r3, .L59
 812 0048 1B68     		ldr	r3, [r3]
 813 004a 0133     		adds	r3, r3, #1
 814 004c 374A     		ldr	r2, .L59
 815 004e 1360     		str	r3, [r2]
 504:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 816              		.loc 1 504 0
 817 0050 364B     		ldr	r3, .L59
 818 0052 1B68     		ldr	r3, [r3]
 819 0054 FB60     		str	r3, [r7, #12]
 505:..\Common\Minimal/IntQueue.c **** 		}
 506:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 820              		.loc 1 506 0
 821 0056 FFF7FEFF 		bl	vPortExitCritical
 507:..\Common\Minimal/IntQueue.c **** 
 508:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 822              		.loc 1 508 0
 823 005a 354B     		ldr	r3, .L59+4
 824 005c 1868     		ldr	r0, [r3]
 825 005e 07F10C01 		add	r1, r7, #12
 826 0062 0023     		movs	r3, #0
 827 0064 8C22     		movs	r2, #140
 828 0066 FFF7FEFF 		bl	xQueueGenericSend
 829 006a 0346     		mov	r3, r0
 830 006c 012B     		cmp	r3, #1
 831 006e 03D0     		beq	.L50
 509:..\Common\Minimal/IntQueue.c **** 		{
 510:..\Common\Minimal/IntQueue.c **** 			/* intqHIGH_PRIORITY_TASK2 is never suspended so we would not
 511:..\Common\Minimal/IntQueue.c **** 			expect it to ever time out. */
 512:..\Common\Minimal/IntQueue.c **** 			prvQueueAccessLogError( __LINE__ );
 832              		.loc 1 512 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 25


 833 0070 4FF40070 		mov	r0, #512
 834 0074 FFF7FEFF 		bl	prvQueueAccessLogError
 835              	.L50:
 513:..\Common\Minimal/IntQueue.c **** 		}
 514:..\Common\Minimal/IntQueue.c **** 
 515:..\Common\Minimal/IntQueue.c **** 		/* Allow the other task running this code to run. */
 516:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 836              		.loc 1 516 0
 837 0078 2E4B     		ldr	r3, .L59+8
 838 007a 4FF08052 		mov	r2, #268435456
 839 007e 1A60     		str	r2, [r3]
 840              		.syntax unified
 841              	@ 516 "..\Common\Minimal\IntQueue.c" 1
 842 0080 BFF34F8F 		dsb
 843              	@ 0 "" 2
 844              	@ 516 "..\Common\Minimal\IntQueue.c" 1
 845 0084 BFF36F8F 		isb
 846              	@ 0 "" 2
 517:..\Common\Minimal/IntQueue.c **** 
 518:..\Common\Minimal/IntQueue.c **** 		/* Have all the expected values been sent to the queue? */
 519:..\Common\Minimal/IntQueue.c **** 		if( uxValueToTx > ( intqNUM_VALUES_TO_LOG + intqVALUE_OVERRUN ) )
 847              		.loc 1 519 0
 848              		.thumb
 849              		.syntax unified
 850 0088 FB68     		ldr	r3, [r7, #12]
 851 008a FA2B     		cmp	r3, #250
 852 008c D9D9     		bls	.L58
 520:..\Common\Minimal/IntQueue.c **** 		{
 521:..\Common\Minimal/IntQueue.c **** 			/* Make sure the other high priority task completes its send of
 522:..\Common\Minimal/IntQueue.c **** 			any values below intqNUM_VALUE_TO_LOG. */
 523:..\Common\Minimal/IntQueue.c **** 			vTaskDelay( intqSHORT_DELAY );
 853              		.loc 1 523 0
 854 008e 8C20     		movs	r0, #140
 855 0090 FFF7FEFF 		bl	vTaskDelay
 524:..\Common\Minimal/IntQueue.c **** 
 525:..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( xHighPriorityNormallyFullTask2 );
 856              		.loc 1 525 0
 857 0094 284B     		ldr	r3, .L59+12
 858 0096 1B68     		ldr	r3, [r3]
 859 0098 1846     		mov	r0, r3
 860 009a FFF7FEFF 		bl	vTaskSuspend
 526:..\Common\Minimal/IntQueue.c **** 
 527:..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended == pdTRUE )
 861              		.loc 1 527 0
 862 009e 274B     		ldr	r3, .L59+16
 863 00a0 1B68     		ldr	r3, [r3]
 864 00a2 012B     		cmp	r3, #1
 865 00a4 03D1     		bne	.L52
 528:..\Common\Minimal/IntQueue.c **** 			{
 529:..\Common\Minimal/IntQueue.c **** 				/* We would have expected the other high priority task to have
 530:..\Common\Minimal/IntQueue.c **** 				set this back to false by now. */
 531:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 866              		.loc 1 531 0
 867 00a6 40F21320 		movw	r0, #531
 868 00aa FFF7FEFF 		bl	prvQueueAccessLogError
 869              	.L52:
 532:..\Common\Minimal/IntQueue.c **** 			}
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 26


 533:..\Common\Minimal/IntQueue.c **** 
 534:..\Common\Minimal/IntQueue.c **** 			/* Set the suspended flag so an error is not logged if the other
 535:..\Common\Minimal/IntQueue.c **** 			task recognises a time out when it is unsuspended. */
 536:..\Common\Minimal/IntQueue.c **** 			xWasSuspended = pdTRUE;
 870              		.loc 1 536 0
 871 00ae 234B     		ldr	r3, .L59+16
 872 00b0 0122     		movs	r2, #1
 873 00b2 1A60     		str	r2, [r3]
 537:..\Common\Minimal/IntQueue.c **** 
 538:..\Common\Minimal/IntQueue.c **** 			/* Check interrupts are also sending. */
 539:..\Common\Minimal/IntQueue.c **** 			uxInterrupts = 0U;
 874              		.loc 1 539 0
 875 00b4 0023     		movs	r3, #0
 876 00b6 3B61     		str	r3, [r7, #16]
 540:..\Common\Minimal/IntQueue.c **** 
 541:..\Common\Minimal/IntQueue.c **** 			/* Start at 1 as we expect position 0 to be unused. */
 542:..\Common\Minimal/IntQueue.c **** 			for( ux = 1; ux < intqNUM_VALUES_TO_LOG; ux++ )
 877              		.loc 1 542 0
 878 00b8 0123     		movs	r3, #1
 879 00ba 7B61     		str	r3, [r7, #20]
 880 00bc 16E0     		b	.L53
 881              	.L56:
 543:..\Common\Minimal/IntQueue.c **** 			{
 544:..\Common\Minimal/IntQueue.c **** 				if( ucNormallyFullReceivedValues[ ux ] == 0 )
 882              		.loc 1 544 0
 883 00be 204A     		ldr	r2, .L59+20
 884 00c0 7B69     		ldr	r3, [r7, #20]
 885 00c2 1344     		add	r3, r3, r2
 886 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 887 00c6 002B     		cmp	r3, #0
 888 00c8 04D1     		bne	.L54
 545:..\Common\Minimal/IntQueue.c **** 				{
 546:..\Common\Minimal/IntQueue.c **** 					/* A value was missing. */
 547:..\Common\Minimal/IntQueue.c **** 					prvQueueAccessLogError( __LINE__ );
 889              		.loc 1 547 0
 890 00ca 40F22320 		movw	r0, #547
 891 00ce FFF7FEFF 		bl	prvQueueAccessLogError
 892 00d2 08E0     		b	.L55
 893              	.L54:
 548:..\Common\Minimal/IntQueue.c **** 				}
 549:..\Common\Minimal/IntQueue.c **** 				else if( ucNormallyFullReceivedValues[ ux ] == intqSECOND_INTERRUPT )
 894              		.loc 1 549 0
 895 00d4 1A4A     		ldr	r2, .L59+20
 896 00d6 7B69     		ldr	r3, [r7, #20]
 897 00d8 1344     		add	r3, r3, r2
 898 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 899 00dc 052B     		cmp	r3, #5
 900 00de 02D1     		bne	.L55
 550:..\Common\Minimal/IntQueue.c **** 				{
 551:..\Common\Minimal/IntQueue.c **** 					uxInterrupts++;
 901              		.loc 1 551 0
 902 00e0 3B69     		ldr	r3, [r7, #16]
 903 00e2 0133     		adds	r3, r3, #1
 904 00e4 3B61     		str	r3, [r7, #16]
 905              	.L55:
 542:..\Common\Minimal/IntQueue.c **** 			{
 906              		.loc 1 542 0 discriminator 2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 27


 907 00e6 7B69     		ldr	r3, [r7, #20]
 908 00e8 0133     		adds	r3, r3, #1
 909 00ea 7B61     		str	r3, [r7, #20]
 910              	.L53:
 542:..\Common\Minimal/IntQueue.c **** 			{
 911              		.loc 1 542 0 is_stmt 0 discriminator 1
 912 00ec 7B69     		ldr	r3, [r7, #20]
 913 00ee C72B     		cmp	r3, #199
 914 00f0 E5D9     		bls	.L56
 552:..\Common\Minimal/IntQueue.c **** 				}
 553:..\Common\Minimal/IntQueue.c **** 			}
 554:..\Common\Minimal/IntQueue.c **** 
 555:..\Common\Minimal/IntQueue.c **** 			if( uxInterrupts == 0 )
 915              		.loc 1 555 0 is_stmt 1
 916 00f2 3B69     		ldr	r3, [r7, #16]
 917 00f4 002B     		cmp	r3, #0
 918 00f6 03D1     		bne	.L57
 556:..\Common\Minimal/IntQueue.c **** 			{
 557:..\Common\Minimal/IntQueue.c **** 				/* No writes from interrupts were found.  Are interrupts
 558:..\Common\Minimal/IntQueue.c **** 				actually running? */
 559:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 919              		.loc 1 559 0
 920 00f8 40F22F20 		movw	r0, #559
 921 00fc FFF7FEFF 		bl	prvQueueAccessLogError
 922              	.L57:
 560:..\Common\Minimal/IntQueue.c **** 			}
 561:..\Common\Minimal/IntQueue.c **** 
 562:..\Common\Minimal/IntQueue.c **** 			/* Reset the array ready for the next cycle. */
 563:..\Common\Minimal/IntQueue.c **** 			memset( ucNormallyFullReceivedValues, 0x00, sizeof( ucNormallyFullReceivedValues ) );
 923              		.loc 1 563 0
 924 0100 C822     		movs	r2, #200
 925 0102 0021     		movs	r1, #0
 926 0104 0E48     		ldr	r0, .L59+20
 927 0106 FFF7FEFF 		bl	memset
 564:..\Common\Minimal/IntQueue.c **** 
 565:..\Common\Minimal/IntQueue.c **** 			uxHighPriorityLoops2++;
 928              		.loc 1 565 0
 929 010a 0E4B     		ldr	r3, .L59+24
 930 010c 1B68     		ldr	r3, [r3]
 931 010e 0133     		adds	r3, r3, #1
 932 0110 0C4A     		ldr	r2, .L59+24
 933 0112 1360     		str	r3, [r2]
 566:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue = 0;
 934              		.loc 1 566 0
 935 0114 054B     		ldr	r3, .L59
 936 0116 0022     		movs	r2, #0
 937 0118 1A60     		str	r2, [r3]
 567:..\Common\Minimal/IntQueue.c **** 
 568:..\Common\Minimal/IntQueue.c **** 			/* Suspend ourselves, allowing the lower priority task to
 569:..\Common\Minimal/IntQueue.c **** 			actually receive something from the queue.  Until now it
 570:..\Common\Minimal/IntQueue.c **** 			will have been prevented from doing so by the higher
 571:..\Common\Minimal/IntQueue.c **** 			priority tasks.  The lower priority task will resume us
 572:..\Common\Minimal/IntQueue.c **** 			if it receives something.  We will then resume the other
 573:..\Common\Minimal/IntQueue.c **** 			higher priority task. */
 574:..\Common\Minimal/IntQueue.c **** 			vTaskSuspend( NULL );
 938              		.loc 1 574 0
 939 011a 0020     		movs	r0, #0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 28


 940 011c FFF7FEFF 		bl	vTaskSuspend
 575:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask2 );
 941              		.loc 1 575 0
 942 0120 054B     		ldr	r3, .L59+12
 943 0122 1B68     		ldr	r3, [r3]
 944 0124 1846     		mov	r0, r3
 945 0126 FFF7FEFF 		bl	vTaskResume
 576:..\Common\Minimal/IntQueue.c **** 		}
 577:..\Common\Minimal/IntQueue.c **** 	}
 946              		.loc 1 577 0
 947 012a 8AE7     		b	.L58
 948              	.L60:
 949              		.align	2
 950              	.L59:
 951 012c 24000000 		.word	uxValueForNormallyFullQueue
 952 0130 04000000 		.word	xNormallyFullQueue
 953 0134 04ED00E0 		.word	-536810236
 954 0138 00000000 		.word	xHighPriorityNormallyFullTask2
 955 013c 1C000000 		.word	xWasSuspended
 956 0140 F0000000 		.word	ucNormallyFullReceivedValues
 957 0144 0C000000 		.word	uxHighPriorityLoops2
 958              		.cfi_endproc
 959              	.LFE74:
 960              		.size	prv1stHigherPriorityNormallyFullTask, .-prv1stHigherPriorityNormallyFullTask
 961              		.section	.text.prv2ndHigherPriorityNormallyFullTask,"ax",%progbits
 962              		.align	2
 963              		.thumb
 964              		.thumb_func
 965              		.type	prv2ndHigherPriorityNormallyFullTask, %function
 966              	prv2ndHigherPriorityNormallyFullTask:
 967              	.LFB75:
 578:..\Common\Minimal/IntQueue.c **** }
 579:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 580:..\Common\Minimal/IntQueue.c **** 
 581:..\Common\Minimal/IntQueue.c **** static void prv2ndHigherPriorityNormallyFullTask( void *pvParameters )
 582:..\Common\Minimal/IntQueue.c **** {
 968              		.loc 1 582 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 16
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972 0000 80B5     		push	{r7, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 84B0     		sub	sp, sp, #16
 977              		.cfi_def_cfa_offset 24
 978 0004 00AF     		add	r7, sp, #0
 979              		.cfi_def_cfa_register 7
 980 0006 7860     		str	r0, [r7, #4]
 583:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValueToTx, ux;
 584:..\Common\Minimal/IntQueue.c **** 
 585:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 586:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 587:..\Common\Minimal/IntQueue.c **** 
 588:..\Common\Minimal/IntQueue.c **** 	/* Make sure the queue starts full or near full.  >> 1 as there are two
 589:..\Common\Minimal/IntQueue.c **** 	high priority tasks. */
 590:..\Common\Minimal/IntQueue.c **** 	for( ux = 0; ux < ( intqQUEUE_LENGTH >> 1 ); ux++ )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 29


 981              		.loc 1 590 0
 982 0008 0023     		movs	r3, #0
 983 000a FB60     		str	r3, [r7, #12]
 984 000c 16E0     		b	.L62
 985              	.L63:
 591:..\Common\Minimal/IntQueue.c **** 	{
 592:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 986              		.loc 1 592 0 discriminator 3
 987 000e FFF7FEFF 		bl	vPortEnterCritical
 593:..\Common\Minimal/IntQueue.c **** 		{
 594:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 988              		.loc 1 594 0 discriminator 3
 989 0012 214B     		ldr	r3, .L66
 990 0014 1B68     		ldr	r3, [r3]
 991 0016 0133     		adds	r3, r3, #1
 992 0018 1F4A     		ldr	r2, .L66
 993 001a 1360     		str	r3, [r2]
 595:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 994              		.loc 1 595 0 discriminator 3
 995 001c 1E4B     		ldr	r3, .L66
 996 001e 1B68     		ldr	r3, [r3]
 997 0020 BB60     		str	r3, [r7, #8]
 596:..\Common\Minimal/IntQueue.c **** 		}
 597:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 998              		.loc 1 597 0 discriminator 3
 999 0022 FFF7FEFF 		bl	vPortExitCritical
 598:..\Common\Minimal/IntQueue.c **** 
 599:..\Common\Minimal/IntQueue.c **** 		xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY );
 1000              		.loc 1 599 0 discriminator 3
 1001 0026 1D4B     		ldr	r3, .L66+4
 1002 0028 1868     		ldr	r0, [r3]
 1003 002a 07F10801 		add	r1, r7, #8
 1004 002e 0023     		movs	r3, #0
 1005 0030 8C22     		movs	r2, #140
 1006 0032 FFF7FEFF 		bl	xQueueGenericSend
 590:..\Common\Minimal/IntQueue.c **** 	{
 1007              		.loc 1 590 0 discriminator 3
 1008 0036 FB68     		ldr	r3, [r7, #12]
 1009 0038 0133     		adds	r3, r3, #1
 1010 003a FB60     		str	r3, [r7, #12]
 1011              	.L62:
 590:..\Common\Minimal/IntQueue.c **** 	{
 1012              		.loc 1 590 0 is_stmt 0 discriminator 1
 1013 003c FB68     		ldr	r3, [r7, #12]
 1014 003e 042B     		cmp	r3, #4
 1015 0040 E5D9     		bls	.L63
 1016              	.L65:
 600:..\Common\Minimal/IntQueue.c **** 	}
 601:..\Common\Minimal/IntQueue.c **** 
 602:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 603:..\Common\Minimal/IntQueue.c **** 	{
 604:..\Common\Minimal/IntQueue.c **** 		portENTER_CRITICAL();
 1017              		.loc 1 604 0 is_stmt 1
 1018 0042 FFF7FEFF 		bl	vPortEnterCritical
 605:..\Common\Minimal/IntQueue.c **** 		{
 606:..\Common\Minimal/IntQueue.c **** 			uxValueForNormallyFullQueue++;
 1019              		.loc 1 606 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 30


 1020 0046 144B     		ldr	r3, .L66
 1021 0048 1B68     		ldr	r3, [r3]
 1022 004a 0133     		adds	r3, r3, #1
 1023 004c 124A     		ldr	r2, .L66
 1024 004e 1360     		str	r3, [r2]
 607:..\Common\Minimal/IntQueue.c **** 			uxValueToTx = uxValueForNormallyFullQueue;
 1025              		.loc 1 607 0
 1026 0050 114B     		ldr	r3, .L66
 1027 0052 1B68     		ldr	r3, [r3]
 1028 0054 BB60     		str	r3, [r7, #8]
 608:..\Common\Minimal/IntQueue.c **** 		}
 609:..\Common\Minimal/IntQueue.c **** 		portEXIT_CRITICAL();
 1029              		.loc 1 609 0
 1030 0056 FFF7FEFF 		bl	vPortExitCritical
 610:..\Common\Minimal/IntQueue.c **** 
 611:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxValueToTx, intqSHORT_DELAY ) != pdPASS )
 1031              		.loc 1 611 0
 1032 005a 104B     		ldr	r3, .L66+4
 1033 005c 1868     		ldr	r0, [r3]
 1034 005e 07F10801 		add	r1, r7, #8
 1035 0062 0023     		movs	r3, #0
 1036 0064 8C22     		movs	r2, #140
 1037 0066 FFF7FEFF 		bl	xQueueGenericSend
 1038 006a 0346     		mov	r3, r0
 1039 006c 012B     		cmp	r3, #1
 1040 006e 07D0     		beq	.L64
 612:..\Common\Minimal/IntQueue.c **** 		{
 613:..\Common\Minimal/IntQueue.c **** 			if( xWasSuspended != pdTRUE )
 1041              		.loc 1 613 0
 1042 0070 0B4B     		ldr	r3, .L66+8
 1043 0072 1B68     		ldr	r3, [r3]
 1044 0074 012B     		cmp	r3, #1
 1045 0076 03D0     		beq	.L64
 614:..\Common\Minimal/IntQueue.c **** 			{
 615:..\Common\Minimal/IntQueue.c **** 				/* It is ok to time out if the task has been suspended. */
 616:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1046              		.loc 1 616 0
 1047 0078 4FF41A70 		mov	r0, #616
 1048 007c FFF7FEFF 		bl	prvQueueAccessLogError
 1049              	.L64:
 617:..\Common\Minimal/IntQueue.c **** 			}
 618:..\Common\Minimal/IntQueue.c **** 		}
 619:..\Common\Minimal/IntQueue.c **** 
 620:..\Common\Minimal/IntQueue.c **** 		xWasSuspended = pdFALSE;
 1050              		.loc 1 620 0
 1051 0080 074B     		ldr	r3, .L66+8
 1052 0082 0022     		movs	r2, #0
 1053 0084 1A60     		str	r2, [r3]
 621:..\Common\Minimal/IntQueue.c **** 
 622:..\Common\Minimal/IntQueue.c **** 		taskYIELD();
 1054              		.loc 1 622 0
 1055 0086 074B     		ldr	r3, .L66+12
 1056 0088 4FF08052 		mov	r2, #268435456
 1057 008c 1A60     		str	r2, [r3]
 1058              		.syntax unified
 1059              	@ 622 "..\Common\Minimal\IntQueue.c" 1
 1060 008e BFF34F8F 		dsb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 31


 1061              	@ 0 "" 2
 1062              	@ 622 "..\Common\Minimal\IntQueue.c" 1
 1063 0092 BFF36F8F 		isb
 1064              	@ 0 "" 2
 623:..\Common\Minimal/IntQueue.c **** 	}
 1065              		.loc 1 623 0
 1066              		.thumb
 1067              		.syntax unified
 1068 0096 D4E7     		b	.L65
 1069              	.L67:
 1070              		.align	2
 1071              	.L66:
 1072 0098 24000000 		.word	uxValueForNormallyFullQueue
 1073 009c 04000000 		.word	xNormallyFullQueue
 1074 00a0 1C000000 		.word	xWasSuspended
 1075 00a4 04ED00E0 		.word	-536810236
 1076              		.cfi_endproc
 1077              	.LFE75:
 1078              		.size	prv2ndHigherPriorityNormallyFullTask, .-prv2ndHigherPriorityNormallyFullTask
 1079              		.section	.text.prvLowerPriorityNormallyFullTask,"ax",%progbits
 1080              		.align	2
 1081              		.thumb
 1082              		.thumb_func
 1083              		.type	prvLowerPriorityNormallyFullTask, %function
 1084              	prvLowerPriorityNormallyFullTask:
 1085              	.LFB76:
 624:..\Common\Minimal/IntQueue.c **** }
 625:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 626:..\Common\Minimal/IntQueue.c **** 
 627:..\Common\Minimal/IntQueue.c **** static void prvLowerPriorityNormallyFullTask( void *pvParameters )
 628:..\Common\Minimal/IntQueue.c **** {
 1086              		.loc 1 628 0
 1087              		.cfi_startproc
 1088              		@ args = 0, pretend = 0, frame = 16
 1089              		@ frame_needed = 1, uses_anonymous_args = 0
 1090 0000 80B5     		push	{r7, lr}
 1091              		.cfi_def_cfa_offset 8
 1092              		.cfi_offset 7, -8
 1093              		.cfi_offset 14, -4
 1094 0002 84B0     		sub	sp, sp, #16
 1095              		.cfi_def_cfa_offset 24
 1096 0004 00AF     		add	r7, sp, #0
 1097              		.cfi_def_cfa_register 7
 1098 0006 7860     		str	r0, [r7, #4]
 629:..\Common\Minimal/IntQueue.c **** UBaseType_t uxValue, uxTxed = 9999;
 1099              		.loc 1 629 0
 1100 0008 42F20F73 		movw	r3, #9999
 1101 000c BB60     		str	r3, [r7, #8]
 1102              	.L74:
 630:..\Common\Minimal/IntQueue.c **** 
 631:..\Common\Minimal/IntQueue.c **** 	/* The parameters are not being used so avoid compiler warnings. */
 632:..\Common\Minimal/IntQueue.c **** 	( void ) pvParameters;
 633:..\Common\Minimal/IntQueue.c **** 
 634:..\Common\Minimal/IntQueue.c **** 	for( ;; )
 635:..\Common\Minimal/IntQueue.c **** 	{
 636:..\Common\Minimal/IntQueue.c **** 		if( xQueueSend( xNormallyFullQueue, &uxTxed, intqONE_TICK_DELAY ) != errQUEUE_FULL )
 1103              		.loc 1 636 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 32


 1104 000e 204B     		ldr	r3, .L75
 1105 0010 1868     		ldr	r0, [r3]
 1106 0012 07F10801 		add	r1, r7, #8
 1107 0016 0023     		movs	r3, #0
 1108 0018 0122     		movs	r2, #1
 1109 001a FFF7FEFF 		bl	xQueueGenericSend
 1110 001e 0346     		mov	r3, r0
 1111 0020 002B     		cmp	r3, #0
 1112 0022 16D0     		beq	.L69
 637:..\Common\Minimal/IntQueue.c **** 		{
 638:..\Common\Minimal/IntQueue.c **** 			/* Should only succeed when the higher priority task is suspended */
 639:..\Common\Minimal/IntQueue.c **** 			if( eTaskGetState( xHighPriorityNormallyFullTask1 ) != eSuspended )
 1113              		.loc 1 639 0
 1114 0024 1B4B     		ldr	r3, .L75+4
 1115 0026 1B68     		ldr	r3, [r3]
 1116 0028 1846     		mov	r0, r3
 1117 002a FFF7FEFF 		bl	eTaskGetState
 1118 002e 0346     		mov	r3, r0
 1119 0030 032B     		cmp	r3, #3
 1120 0032 03D0     		beq	.L70
 640:..\Common\Minimal/IntQueue.c **** 			{
 641:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1121              		.loc 1 641 0
 1122 0034 40F28120 		movw	r0, #641
 1123 0038 FFF7FEFF 		bl	prvQueueAccessLogError
 1124              	.L70:
 642:..\Common\Minimal/IntQueue.c **** 			}
 643:..\Common\Minimal/IntQueue.c **** 
 644:..\Common\Minimal/IntQueue.c **** 			vTaskResume( xHighPriorityNormallyFullTask1 );
 1125              		.loc 1 644 0
 1126 003c 154B     		ldr	r3, .L75+4
 1127 003e 1B68     		ldr	r3, [r3]
 1128 0040 1846     		mov	r0, r3
 1129 0042 FFF7FEFF 		bl	vTaskResume
 645:..\Common\Minimal/IntQueue.c **** 			uxLowPriorityLoops2++;
 1130              		.loc 1 645 0
 1131 0046 144B     		ldr	r3, .L75+8
 1132 0048 1B68     		ldr	r3, [r3]
 1133 004a 0133     		adds	r3, r3, #1
 1134 004c 124A     		ldr	r2, .L75+8
 1135 004e 1360     		str	r3, [r2]
 1136 0050 DDE7     		b	.L74
 1137              	.L69:
 646:..\Common\Minimal/IntQueue.c **** 		}
 647:..\Common\Minimal/IntQueue.c **** 		else
 648:..\Common\Minimal/IntQueue.c **** 		{
 649:..\Common\Minimal/IntQueue.c **** 			/* Raise our priority while we receive so we can preempt the higher
 650:..\Common\Minimal/IntQueue.c **** 			priority task, and ensure we get the value from the queue. */
 651:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqHIGHER_PRIORITY + 1 );
 1138              		.loc 1 651 0
 1139 0052 0421     		movs	r1, #4
 1140 0054 0020     		movs	r0, #0
 1141 0056 FFF7FEFF 		bl	vTaskPrioritySet
 652:..\Common\Minimal/IntQueue.c **** 
 653:..\Common\Minimal/IntQueue.c **** 			if( xQueueReceive( xNormallyFullQueue, &uxValue, portMAX_DELAY ) != pdPASS )
 1142              		.loc 1 653 0
 1143 005a 0D4B     		ldr	r3, .L75
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 33


 1144 005c 1868     		ldr	r0, [r3]
 1145 005e 07F10C01 		add	r1, r7, #12
 1146 0062 0023     		movs	r3, #0
 1147 0064 4FF0FF32 		mov	r2, #-1
 1148 0068 FFF7FEFF 		bl	xQueueGenericReceive
 1149 006c 0346     		mov	r3, r0
 1150 006e 012B     		cmp	r3, #1
 1151 0070 04D0     		beq	.L72
 654:..\Common\Minimal/IntQueue.c **** 			{
 655:..\Common\Minimal/IntQueue.c **** 				prvQueueAccessLogError( __LINE__ );
 1152              		.loc 1 655 0
 1153 0072 40F28F20 		movw	r0, #655
 1154 0076 FFF7FEFF 		bl	prvQueueAccessLogError
 1155 007a 04E0     		b	.L73
 1156              	.L72:
 656:..\Common\Minimal/IntQueue.c **** 			}
 657:..\Common\Minimal/IntQueue.c **** 			else
 658:..\Common\Minimal/IntQueue.c **** 			{
 659:..\Common\Minimal/IntQueue.c **** 				prvRecordValue_NormallyFull( uxValue, intqLOW_PRIORITY_TASK );
 1157              		.loc 1 659 0
 1158 007c FB68     		ldr	r3, [r7, #12]
 1159 007e 0321     		movs	r1, #3
 1160 0080 1846     		mov	r0, r3
 1161 0082 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1162              	.L73:
 660:..\Common\Minimal/IntQueue.c **** 			}
 661:..\Common\Minimal/IntQueue.c **** 
 662:..\Common\Minimal/IntQueue.c **** 			vTaskPrioritySet( NULL, intqLOWER_PRIORITY );
 1163              		.loc 1 662 0
 1164 0086 0021     		movs	r1, #0
 1165 0088 0020     		movs	r0, #0
 1166 008a FFF7FEFF 		bl	vTaskPrioritySet
 663:..\Common\Minimal/IntQueue.c **** 		}
 664:..\Common\Minimal/IntQueue.c **** 	}
 1167              		.loc 1 664 0
 1168 008e BEE7     		b	.L74
 1169              	.L76:
 1170              		.align	2
 1171              	.L75:
 1172 0090 04000000 		.word	xNormallyFullQueue
 1173 0094 00000000 		.word	xHighPriorityNormallyFullTask1
 1174 0098 14000000 		.word	uxLowPriorityLoops2
 1175              		.cfi_endproc
 1176              	.LFE76:
 1177              		.size	prvLowerPriorityNormallyFullTask, .-prvLowerPriorityNormallyFullTask
 1178              		.section	.text.xFirstTimerHandler,"ax",%progbits
 1179              		.align	2
 1180              		.global	xFirstTimerHandler
 1181              		.thumb
 1182              		.thumb_func
 1183              		.type	xFirstTimerHandler, %function
 1184              	xFirstTimerHandler:
 1185              	.LFB77:
 665:..\Common\Minimal/IntQueue.c **** }
 666:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 667:..\Common\Minimal/IntQueue.c **** 
 668:..\Common\Minimal/IntQueue.c **** BaseType_t xFirstTimerHandler( void )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 34


 669:..\Common\Minimal/IntQueue.c **** {
 1186              		.loc 1 669 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 56
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190 0000 80B5     		push	{r7, lr}
 1191              		.cfi_def_cfa_offset 8
 1192              		.cfi_offset 7, -8
 1193              		.cfi_offset 14, -4
 1194 0002 8EB0     		sub	sp, sp, #56
 1195              		.cfi_def_cfa_offset 64
 1196 0004 00AF     		add	r7, sp, #0
 1197              		.cfi_def_cfa_register 7
 670:..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 1198              		.loc 1 670 0
 1199 0006 0023     		movs	r3, #0
 1200 0008 7B60     		str	r3, [r7, #4]
 671:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 672:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 673:..\Common\Minimal/IntQueue.c **** 
 674:..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 675:..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 676:..\Common\Minimal/IntQueue.c **** 
 677:..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1201              		.loc 1 677 0
 1202 000a 664B     		ldr	r3, .L92
 1203 000c 1B68     		ldr	r3, [r3]
 1204 000e 0133     		adds	r3, r3, #1
 1205 0010 644A     		ldr	r2, .L92
 1206 0012 1360     		str	r3, [r2]
 678:..\Common\Minimal/IntQueue.c **** 
 679:..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1207              		.loc 1 679 0
 1208 0014 634B     		ldr	r3, .L92
 1209 0016 1B68     		ldr	r3, [r3]
 1210 0018 03F00103 		and	r3, r3, #1
 1211 001c 002B     		cmp	r3, #0
 1212 001e 00F08E80 		beq	.L78
 680:..\Common\Minimal/IntQueue.c **** 	{
 681:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1213              		.loc 1 681 0
 1214 0022 614B     		ldr	r3, .L92+4
 1215 0024 1B68     		ldr	r3, [r3]
 1216 0026 1846     		mov	r0, r3
 1217 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1218 002c 0346     		mov	r3, r0
 1219 002e 012B     		cmp	r3, #1
 1220 0030 26D0     		beq	.L79
 1221              	.LBB42:
 1222              	.LBB43:
 1223              	.LBB44:
 1224              		.file 2 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     All rights reserved
   4:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   5:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 35


   6:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   7:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   9:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  13:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  14:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  19:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  20:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  25:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  26:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  27:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  32:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  37:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  38:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  39:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  43:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     participating in the support forum.
  46:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  47:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  52:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  56:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 36


  63:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  67:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:..\Source\portable\GCC\ARM_CM3/portmacro.h **** */
  69:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  70:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  71:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  74:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
  76:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  77:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  81:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  84:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  87:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  88:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  89:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  90:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  93:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  94:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  97:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 101:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
 105:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 112:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 114:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 37


 120:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
 123:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
 126:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 131:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 132:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
 139:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 148:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 150:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:..\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:..\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 157:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 158:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 162:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 164:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 174:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 38


 177:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 178:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 179:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 180:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 184:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 185:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 201:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 202:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 204:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 210:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 213:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:..\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 215:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 216:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 219:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 221:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 223:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 224:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 225:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 227:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 228:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 229:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 230:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 231:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 233:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 39


 234:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 235:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 236:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 237:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 238:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 239:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 242:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 243:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 245:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 246:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 247:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 248:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 249:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 250:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 251:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 252:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1225              		.loc 2 253 0 discriminator 1
 1226              		.syntax unified
 1227              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1228 0032 EFF31182 			mrs r2, basepri											
 1229 0036 4FF0A003 		mov r3, #160												
 1230 003a 83F31188 		msr basepri, r3											
 1231 003e BFF36F8F 		isb														
 1232 0042 BFF34F8F 		dsb														
 1233              	
 1234              	@ 0 "" 2
 1235              		.thumb
 1236              		.syntax unified
 1237 0046 7A61     		str	r2, [r7, #20]
 1238 0048 3B61     		str	r3, [r7, #16]
 254:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 255:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 259:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 260:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 262:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 263:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 1239              		.loc 2 265 0 discriminator 1
 1240 004a 7B69     		ldr	r3, [r7, #20]
 1241              	.LBE44:
 1242              	.LBE43:
 1243              		.loc 1 681 0 discriminator 1
 1244 004c 3B63     		str	r3, [r7, #48]
 1245 004e 574B     		ldr	r3, .L92+8
 1246 0050 1B68     		ldr	r3, [r3]
 1247 0052 0133     		adds	r3, r3, #1
 1248 0054 554A     		ldr	r2, .L92+8
 1249 0056 1360     		str	r3, [r2]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 40


 1250 0058 534B     		ldr	r3, .L92+4
 1251 005a 1868     		ldr	r0, [r3]
 1252 005c 3A1D     		adds	r2, r7, #4
 1253 005e 0023     		movs	r3, #0
 1254 0060 5249     		ldr	r1, .L92+8
 1255 0062 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1256 0066 0346     		mov	r3, r0
 1257 0068 012B     		cmp	r3, #1
 1258 006a 04D0     		beq	.L81
 1259              		.loc 1 681 0 is_stmt 0 discriminator 2
 1260 006c 4F4B     		ldr	r3, .L92+8
 1261 006e 1B68     		ldr	r3, [r3]
 1262 0070 013B     		subs	r3, r3, #1
 1263 0072 4E4A     		ldr	r2, .L92+8
 1264 0074 1360     		str	r3, [r2]
 1265              	.L81:
 1266 0076 3B6B     		ldr	r3, [r7, #48]
 1267 0078 7B63     		str	r3, [r7, #52]
 1268              	.LBB45:
 1269              	.LBB46:
 266:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 267:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 268:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 269:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 270:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 271:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 1270              		.loc 2 271 0 is_stmt 1 discriminator 4
 1271 007a 7B6B     		ldr	r3, [r7, #52]
 1272              		.syntax unified
 1273              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1274 007c 83F31188 			msr basepri, r3	
 1275              	@ 0 "" 2
 1276              		.thumb
 1277              		.syntax unified
 1278              	.L79:
 1279              	.LBE46:
 1280              	.LBE45:
 1281              	.LBE42:
 682:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1282              		.loc 1 682 0
 1283 0080 494B     		ldr	r3, .L92+4
 1284 0082 1B68     		ldr	r3, [r3]
 1285 0084 1846     		mov	r0, r3
 1286 0086 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1287 008a 0346     		mov	r3, r0
 1288 008c 012B     		cmp	r3, #1
 1289 008e 26D0     		beq	.L82
 1290              	.LBB47:
 1291              	.LBB48:
 1292              	.LBB49:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1293              		.loc 2 253 0 discriminator 1
 1294              		.syntax unified
 1295              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1296 0090 EFF31182 			mrs r2, basepri											
 1297 0094 4FF0A003 		mov r3, #160												
 1298 0098 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 41


 1299 009c BFF36F8F 		isb														
 1300 00a0 BFF34F8F 		dsb														
 1301              	
 1302              	@ 0 "" 2
 1303              		.thumb
 1304              		.syntax unified
 1305 00a4 FA62     		str	r2, [r7, #44]
 1306 00a6 FB60     		str	r3, [r7, #12]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1307              		.loc 2 265 0 discriminator 1
 1308 00a8 FB6A     		ldr	r3, [r7, #44]
 1309              	.LBE49:
 1310              	.LBE48:
 1311              		.loc 1 682 0 discriminator 1
 1312 00aa 7B62     		str	r3, [r7, #36]
 1313 00ac 3F4B     		ldr	r3, .L92+8
 1314 00ae 1B68     		ldr	r3, [r3]
 1315 00b0 0133     		adds	r3, r3, #1
 1316 00b2 3E4A     		ldr	r2, .L92+8
 1317 00b4 1360     		str	r3, [r2]
 1318 00b6 3C4B     		ldr	r3, .L92+4
 1319 00b8 1868     		ldr	r0, [r3]
 1320 00ba 3A1D     		adds	r2, r7, #4
 1321 00bc 0023     		movs	r3, #0
 1322 00be 3B49     		ldr	r1, .L92+8
 1323 00c0 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1324 00c4 0346     		mov	r3, r0
 1325 00c6 012B     		cmp	r3, #1
 1326 00c8 04D0     		beq	.L84
 1327              		.loc 1 682 0 is_stmt 0 discriminator 2
 1328 00ca 384B     		ldr	r3, .L92+8
 1329 00cc 1B68     		ldr	r3, [r3]
 1330 00ce 013B     		subs	r3, r3, #1
 1331 00d0 364A     		ldr	r2, .L92+8
 1332 00d2 1360     		str	r3, [r2]
 1333              	.L84:
 1334 00d4 7B6A     		ldr	r3, [r7, #36]
 1335 00d6 BB62     		str	r3, [r7, #40]
 1336              	.LBB50:
 1337              	.LBB51:
 1338              		.loc 2 271 0 is_stmt 1 discriminator 4
 1339 00d8 BB6A     		ldr	r3, [r7, #40]
 1340              		.syntax unified
 1341              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1342 00da 83F31188 			msr basepri, r3	
 1343              	@ 0 "" 2
 1344              		.thumb
 1345              		.syntax unified
 1346              	.L82:
 1347              	.LBE51:
 1348              	.LBE50:
 1349              	.LBE47:
 683:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1350              		.loc 1 683 0
 1351 00de 324B     		ldr	r3, .L92+4
 1352 00e0 1B68     		ldr	r3, [r3]
 1353 00e2 1846     		mov	r0, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 42


 1354 00e4 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1355 00e8 0346     		mov	r3, r0
 1356 00ea 012B     		cmp	r3, #1
 1357 00ec 54D0     		beq	.L88
 1358              	.LBB52:
 1359              	.LBB53:
 1360              	.LBB54:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1361              		.loc 2 253 0 discriminator 1
 1362              		.syntax unified
 1363              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1364 00ee EFF31182 			mrs r2, basepri											
 1365 00f2 4FF0A003 		mov r3, #160												
 1366 00f6 83F31188 		msr basepri, r3											
 1367 00fa BFF36F8F 		isb														
 1368 00fe BFF34F8F 		dsb														
 1369              	
 1370              	@ 0 "" 2
 1371              		.thumb
 1372              		.syntax unified
 1373 0102 3A62     		str	r2, [r7, #32]
 1374 0104 BB60     		str	r3, [r7, #8]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1375              		.loc 2 265 0 discriminator 1
 1376 0106 3B6A     		ldr	r3, [r7, #32]
 1377              	.LBE54:
 1378              	.LBE53:
 1379              		.loc 1 683 0 discriminator 1
 1380 0108 BB61     		str	r3, [r7, #24]
 1381 010a 284B     		ldr	r3, .L92+8
 1382 010c 1B68     		ldr	r3, [r3]
 1383 010e 0133     		adds	r3, r3, #1
 1384 0110 264A     		ldr	r2, .L92+8
 1385 0112 1360     		str	r3, [r2]
 1386 0114 244B     		ldr	r3, .L92+4
 1387 0116 1868     		ldr	r0, [r3]
 1388 0118 3A1D     		adds	r2, r7, #4
 1389 011a 0023     		movs	r3, #0
 1390 011c 2349     		ldr	r1, .L92+8
 1391 011e FFF7FEFF 		bl	xQueueGenericSendFromISR
 1392 0122 0346     		mov	r3, r0
 1393 0124 012B     		cmp	r3, #1
 1394 0126 04D0     		beq	.L87
 1395              		.loc 1 683 0 is_stmt 0 discriminator 2
 1396 0128 204B     		ldr	r3, .L92+8
 1397 012a 1B68     		ldr	r3, [r3]
 1398 012c 013B     		subs	r3, r3, #1
 1399 012e 1F4A     		ldr	r2, .L92+8
 1400 0130 1360     		str	r3, [r2]
 1401              	.L87:
 1402 0132 BB69     		ldr	r3, [r7, #24]
 1403 0134 FB61     		str	r3, [r7, #28]
 1404              	.LBB55:
 1405              	.LBB56:
 1406              		.loc 2 271 0 is_stmt 1 discriminator 4
 1407 0136 FB69     		ldr	r3, [r7, #28]
 1408              		.syntax unified
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 43


 1409              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1410 0138 83F31188 			msr basepri, r3	
 1411              	@ 0 "" 2
 1412              		.thumb
 1413              		.syntax unified
 1414 013c 2CE0     		b	.L88
 1415              	.L78:
 1416              	.LBE56:
 1417              	.LBE55:
 1418              	.LBE52:
 684:..\Common\Minimal/IntQueue.c **** 	}
 685:..\Common\Minimal/IntQueue.c **** 	else
 686:..\Common\Minimal/IntQueue.c **** 	{
 687:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1419              		.loc 1 687 0
 1420 013e 1C4B     		ldr	r3, .L92+12
 1421 0140 1B68     		ldr	r3, [r3]
 1422 0142 3A1D     		adds	r2, r7, #4
 1423 0144 3946     		mov	r1, r7
 1424 0146 1846     		mov	r0, r3
 1425 0148 FFF7FEFF 		bl	xQueueReceiveFromISR
 1426 014c 0346     		mov	r3, r0
 1427 014e 012B     		cmp	r3, #1
 1428 0150 04D1     		bne	.L89
 1429              		.loc 1 687 0 is_stmt 0 discriminator 1
 1430 0152 3B68     		ldr	r3, [r7]
 1431 0154 0521     		movs	r1, #5
 1432 0156 1846     		mov	r0, r3
 1433 0158 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1434              	.L89:
 688:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1435              		.loc 1 688 0 is_stmt 1
 1436 015c 144B     		ldr	r3, .L92+12
 1437 015e 1B68     		ldr	r3, [r3]
 1438 0160 3A1D     		adds	r2, r7, #4
 1439 0162 3946     		mov	r1, r7
 1440 0164 1846     		mov	r0, r3
 1441 0166 FFF7FEFF 		bl	xQueueReceiveFromISR
 1442 016a 0346     		mov	r3, r0
 1443 016c 012B     		cmp	r3, #1
 1444 016e 04D1     		bne	.L90
 1445              		.loc 1 688 0 is_stmt 0 discriminator 1
 1446 0170 3B68     		ldr	r3, [r7]
 1447 0172 0521     		movs	r1, #5
 1448 0174 1846     		mov	r0, r3
 1449 0176 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1450              	.L90:
 689:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1451              		.loc 1 689 0 is_stmt 1
 1452 017a 0D4B     		ldr	r3, .L92+12
 1453 017c 1B68     		ldr	r3, [r3]
 1454 017e 3A1D     		adds	r2, r7, #4
 1455 0180 3946     		mov	r1, r7
 1456 0182 1846     		mov	r0, r3
 1457 0184 FFF7FEFF 		bl	xQueueReceiveFromISR
 1458 0188 0346     		mov	r3, r0
 1459 018a 012B     		cmp	r3, #1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 44


 1460 018c 04D1     		bne	.L88
 1461              		.loc 1 689 0 is_stmt 0 discriminator 1
 1462 018e 3B68     		ldr	r3, [r7]
 1463 0190 0521     		movs	r1, #5
 1464 0192 1846     		mov	r0, r3
 1465 0194 FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1466              	.L88:
 690:..\Common\Minimal/IntQueue.c **** 	}
 691:..\Common\Minimal/IntQueue.c **** 
 692:..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1467              		.loc 1 692 0 is_stmt 1
 1468 0198 7B68     		ldr	r3, [r7, #4]
 693:..\Common\Minimal/IntQueue.c **** }
 1469              		.loc 1 693 0
 1470 019a 1846     		mov	r0, r3
 1471 019c 3837     		adds	r7, r7, #56
 1472              		.cfi_def_cfa_offset 8
 1473 019e BD46     		mov	sp, r7
 1474              		.cfi_def_cfa_register 13
 1475              		@ sp needed
 1476 01a0 80BD     		pop	{r7, pc}
 1477              	.L93:
 1478 01a2 00BF     		.align	2
 1479              	.L92:
 1480 01a4 B8010000 		.word	uxNextOperation.7229
 1481 01a8 00000000 		.word	xNormallyEmptyQueue
 1482 01ac 20000000 		.word	uxValueForNormallyEmptyQueue
 1483 01b0 04000000 		.word	xNormallyFullQueue
 1484              		.cfi_endproc
 1485              	.LFE77:
 1486              		.size	xFirstTimerHandler, .-xFirstTimerHandler
 1487              		.section	.text.xSecondTimerHandler,"ax",%progbits
 1488              		.align	2
 1489              		.global	xSecondTimerHandler
 1490              		.thumb
 1491              		.thumb_func
 1492              		.type	xSecondTimerHandler, %function
 1493              	xSecondTimerHandler:
 1494              	.LFB78:
 694:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 695:..\Common\Minimal/IntQueue.c **** 
 696:..\Common\Minimal/IntQueue.c **** BaseType_t xSecondTimerHandler( void )
 697:..\Common\Minimal/IntQueue.c **** {
 1495              		.loc 1 697 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 88
 1498              		@ frame_needed = 1, uses_anonymous_args = 0
 1499 0000 80B5     		push	{r7, lr}
 1500              		.cfi_def_cfa_offset 8
 1501              		.cfi_offset 7, -8
 1502              		.cfi_offset 14, -4
 1503 0002 96B0     		sub	sp, sp, #88
 1504              		.cfi_def_cfa_offset 96
 1505 0004 00AF     		add	r7, sp, #0
 1506              		.cfi_def_cfa_register 7
 698:..\Common\Minimal/IntQueue.c **** UBaseType_t uxRxedValue;
 699:..\Common\Minimal/IntQueue.c **** BaseType_t xHigherPriorityTaskWoken = pdFALSE;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 45


 1507              		.loc 1 699 0
 1508 0006 0023     		movs	r3, #0
 1509 0008 3B60     		str	r3, [r7]
 700:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxNextOperation = 0;
 701:..\Common\Minimal/IntQueue.c **** 
 702:..\Common\Minimal/IntQueue.c **** 	/* Called from a timer interrupt.  Perform various read and write
 703:..\Common\Minimal/IntQueue.c **** 	accesses on the queues. */
 704:..\Common\Minimal/IntQueue.c **** 
 705:..\Common\Minimal/IntQueue.c **** 	uxNextOperation++;
 1510              		.loc 1 705 0
 1511 000a 9A4B     		ldr	r3, .L117
 1512 000c 1B68     		ldr	r3, [r3]
 1513 000e 0133     		adds	r3, r3, #1
 1514 0010 984A     		ldr	r2, .L117
 1515 0012 1360     		str	r3, [r2]
 706:..\Common\Minimal/IntQueue.c **** 
 707:..\Common\Minimal/IntQueue.c **** 	if( uxNextOperation & ( UBaseType_t ) 0x01 )
 1516              		.loc 1 707 0
 1517 0014 974B     		ldr	r3, .L117
 1518 0016 1B68     		ldr	r3, [r3]
 1519 0018 03F00103 		and	r3, r3, #1
 1520 001c 002B     		cmp	r3, #0
 1521 001e 00F08780 		beq	.L95
 708:..\Common\Minimal/IntQueue.c **** 	{
 709:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1522              		.loc 1 709 0
 1523 0022 954B     		ldr	r3, .L117+4
 1524 0024 1B68     		ldr	r3, [r3]
 1525 0026 1846     		mov	r0, r3
 1526 0028 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1527 002c 0346     		mov	r3, r0
 1528 002e 012B     		cmp	r3, #1
 1529 0030 26D0     		beq	.L96
 1530              	.LBB57:
 1531              	.LBB58:
 1532              	.LBB59:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1533              		.loc 2 253 0 discriminator 1
 1534              		.syntax unified
 1535              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1536 0032 EFF31182 			mrs r2, basepri											
 1537 0036 4FF0A003 		mov r3, #160												
 1538 003a 83F31188 		msr basepri, r3											
 1539 003e BFF36F8F 		isb														
 1540 0042 BFF34F8F 		dsb														
 1541              	
 1542              	@ 0 "" 2
 1543              		.thumb
 1544              		.syntax unified
 1545 0046 FA61     		str	r2, [r7, #28]
 1546 0048 BB61     		str	r3, [r7, #24]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1547              		.loc 2 265 0 discriminator 1
 1548 004a FB69     		ldr	r3, [r7, #28]
 1549              	.LBE59:
 1550              	.LBE58:
 1551              		.loc 1 709 0 discriminator 1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 46


 1552 004c 3B65     		str	r3, [r7, #80]
 1553 004e 8B4B     		ldr	r3, .L117+8
 1554 0050 1B68     		ldr	r3, [r3]
 1555 0052 0133     		adds	r3, r3, #1
 1556 0054 894A     		ldr	r2, .L117+8
 1557 0056 1360     		str	r3, [r2]
 1558 0058 874B     		ldr	r3, .L117+4
 1559 005a 1868     		ldr	r0, [r3]
 1560 005c 3A46     		mov	r2, r7
 1561 005e 0023     		movs	r3, #0
 1562 0060 8649     		ldr	r1, .L117+8
 1563 0062 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1564 0066 0346     		mov	r3, r0
 1565 0068 012B     		cmp	r3, #1
 1566 006a 04D0     		beq	.L98
 1567              		.loc 1 709 0 is_stmt 0 discriminator 2
 1568 006c 834B     		ldr	r3, .L117+8
 1569 006e 1B68     		ldr	r3, [r3]
 1570 0070 013B     		subs	r3, r3, #1
 1571 0072 824A     		ldr	r2, .L117+8
 1572 0074 1360     		str	r3, [r2]
 1573              	.L98:
 1574 0076 3B6D     		ldr	r3, [r7, #80]
 1575 0078 7B65     		str	r3, [r7, #84]
 1576              	.LBB60:
 1577              	.LBB61:
 1578              		.loc 2 271 0 is_stmt 1 discriminator 4
 1579 007a 7B6D     		ldr	r3, [r7, #84]
 1580              		.syntax unified
 1581              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1582 007c 83F31188 			msr basepri, r3	
 1583              	@ 0 "" 2
 1584              		.thumb
 1585              		.syntax unified
 1586              	.L96:
 1587              	.LBE61:
 1588              	.LBE60:
 1589              	.LBE57:
 710:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_TX();
 1590              		.loc 1 710 0
 1591 0080 7D4B     		ldr	r3, .L117+4
 1592 0082 1B68     		ldr	r3, [r3]
 1593 0084 1846     		mov	r0, r3
 1594 0086 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1595 008a 0346     		mov	r3, r0
 1596 008c 012B     		cmp	r3, #1
 1597 008e 26D0     		beq	.L99
 1598              	.LBB62:
 1599              	.LBB63:
 1600              	.LBB64:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1601              		.loc 2 253 0 discriminator 1
 1602              		.syntax unified
 1603              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1604 0090 EFF31182 			mrs r2, basepri											
 1605 0094 4FF0A003 		mov r3, #160												
 1606 0098 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 47


 1607 009c BFF36F8F 		isb														
 1608 00a0 BFF34F8F 		dsb														
 1609              	
 1610              	@ 0 "" 2
 1611              		.thumb
 1612              		.syntax unified
 1613 00a4 FA64     		str	r2, [r7, #76]
 1614 00a6 7B61     		str	r3, [r7, #20]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1615              		.loc 2 265 0 discriminator 1
 1616 00a8 FB6C     		ldr	r3, [r7, #76]
 1617              	.LBE64:
 1618              	.LBE63:
 1619              		.loc 1 710 0 discriminator 1
 1620 00aa 7B64     		str	r3, [r7, #68]
 1621 00ac 734B     		ldr	r3, .L117+8
 1622 00ae 1B68     		ldr	r3, [r3]
 1623 00b0 0133     		adds	r3, r3, #1
 1624 00b2 724A     		ldr	r2, .L117+8
 1625 00b4 1360     		str	r3, [r2]
 1626 00b6 704B     		ldr	r3, .L117+4
 1627 00b8 1868     		ldr	r0, [r3]
 1628 00ba 3A46     		mov	r2, r7
 1629 00bc 0023     		movs	r3, #0
 1630 00be 6F49     		ldr	r1, .L117+8
 1631 00c0 FFF7FEFF 		bl	xQueueGenericSendFromISR
 1632 00c4 0346     		mov	r3, r0
 1633 00c6 012B     		cmp	r3, #1
 1634 00c8 04D0     		beq	.L101
 1635              		.loc 1 710 0 is_stmt 0 discriminator 2
 1636 00ca 6C4B     		ldr	r3, .L117+8
 1637 00cc 1B68     		ldr	r3, [r3]
 1638 00ce 013B     		subs	r3, r3, #1
 1639 00d0 6A4A     		ldr	r2, .L117+8
 1640 00d2 1360     		str	r3, [r2]
 1641              	.L101:
 1642 00d4 7B6C     		ldr	r3, [r7, #68]
 1643 00d6 BB64     		str	r3, [r7, #72]
 1644              	.LBB65:
 1645              	.LBB66:
 1646              		.loc 2 271 0 is_stmt 1 discriminator 4
 1647 00d8 BB6C     		ldr	r3, [r7, #72]
 1648              		.syntax unified
 1649              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1650 00da 83F31188 			msr basepri, r3	
 1651              	@ 0 "" 2
 1652              		.thumb
 1653              		.syntax unified
 1654              	.L99:
 1655              	.LBE66:
 1656              	.LBE65:
 1657              	.LBE62:
 711:..\Common\Minimal/IntQueue.c **** 
 712:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1658              		.loc 1 712 0
 1659 00de 664B     		ldr	r3, .L117+4
 1660 00e0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 48


 1661 00e2 3A46     		mov	r2, r7
 1662 00e4 391D     		adds	r1, r7, #4
 1663 00e6 1846     		mov	r0, r3
 1664 00e8 FFF7FEFF 		bl	xQueueReceiveFromISR
 1665 00ec 0346     		mov	r3, r0
 1666 00ee 012B     		cmp	r3, #1
 1667 00f0 04D0     		beq	.L102
 1668              		.loc 1 712 0 is_stmt 0 discriminator 1
 1669 00f2 4FF43270 		mov	r0, #712
 1670 00f6 FFF7FEFF 		bl	prvQueueAccessLogError
 1671 00fa 04E0     		b	.L103
 1672              	.L102:
 1673              		.loc 1 712 0 discriminator 2
 1674 00fc 7B68     		ldr	r3, [r7, #4]
 1675 00fe 0521     		movs	r1, #5
 1676 0100 1846     		mov	r0, r3
 1677 0102 FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1678              	.L103:
 713:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_EMPTY_RX();
 1679              		.loc 1 713 0 is_stmt 1
 1680 0106 5C4B     		ldr	r3, .L117+4
 1681 0108 1B68     		ldr	r3, [r3]
 1682 010a 3A46     		mov	r2, r7
 1683 010c 391D     		adds	r1, r7, #4
 1684 010e 1846     		mov	r0, r3
 1685 0110 FFF7FEFF 		bl	xQueueReceiveFromISR
 1686 0114 0346     		mov	r3, r0
 1687 0116 012B     		cmp	r3, #1
 1688 0118 04D0     		beq	.L104
 1689              		.loc 1 713 0 is_stmt 0 discriminator 1
 1690 011a 40F2C920 		movw	r0, #713
 1691 011e FFF7FEFF 		bl	prvQueueAccessLogError
 1692 0122 A1E0     		b	.L106
 1693              	.L104:
 1694              		.loc 1 713 0 discriminator 2
 1695 0124 7B68     		ldr	r3, [r7, #4]
 1696 0126 0521     		movs	r1, #5
 1697 0128 1846     		mov	r0, r3
 1698 012a FFF7FEFF 		bl	prvRecordValue_NormallyEmpty
 1699 012e 9BE0     		b	.L106
 1700              	.L95:
 714:..\Common\Minimal/IntQueue.c **** 	}
 715:..\Common\Minimal/IntQueue.c **** 	else
 716:..\Common\Minimal/IntQueue.c **** 	{
 717:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_RX();
 1701              		.loc 1 717 0 is_stmt 1
 1702 0130 534B     		ldr	r3, .L117+12
 1703 0132 1B68     		ldr	r3, [r3]
 1704 0134 3A46     		mov	r2, r7
 1705 0136 391D     		adds	r1, r7, #4
 1706 0138 1846     		mov	r0, r3
 1707 013a FFF7FEFF 		bl	xQueueReceiveFromISR
 1708 013e 0346     		mov	r3, r0
 1709 0140 012B     		cmp	r3, #1
 1710 0142 04D1     		bne	.L107
 1711              		.loc 1 717 0 is_stmt 0 discriminator 1
 1712 0144 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 49


 1713 0146 0521     		movs	r1, #5
 1714 0148 1846     		mov	r0, r3
 1715 014a FFF7FEFF 		bl	prvRecordValue_NormallyFull
 1716              	.L107:
 718:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1717              		.loc 1 718 0 is_stmt 1
 1718 014e 4C4B     		ldr	r3, .L117+12
 1719 0150 1B68     		ldr	r3, [r3]
 1720 0152 1846     		mov	r0, r3
 1721 0154 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1722 0158 0346     		mov	r3, r0
 1723 015a 012B     		cmp	r3, #1
 1724 015c 26D0     		beq	.L108
 1725              	.LBB67:
 1726              	.LBB68:
 1727              	.LBB69:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1728              		.loc 2 253 0 discriminator 1
 1729              		.syntax unified
 1730              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1731 015e EFF31182 			mrs r2, basepri											
 1732 0162 4FF0A003 		mov r3, #160												
 1733 0166 83F31188 		msr basepri, r3											
 1734 016a BFF36F8F 		isb														
 1735 016e BFF34F8F 		dsb														
 1736              	
 1737              	@ 0 "" 2
 1738              		.thumb
 1739              		.syntax unified
 1740 0172 3A64     		str	r2, [r7, #64]
 1741 0174 3B61     		str	r3, [r7, #16]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1742              		.loc 2 265 0 discriminator 1
 1743 0176 3B6C     		ldr	r3, [r7, #64]
 1744              	.LBE69:
 1745              	.LBE68:
 1746              		.loc 1 718 0 discriminator 1
 1747 0178 BB63     		str	r3, [r7, #56]
 1748 017a 424B     		ldr	r3, .L117+16
 1749 017c 1B68     		ldr	r3, [r3]
 1750 017e 0133     		adds	r3, r3, #1
 1751 0180 404A     		ldr	r2, .L117+16
 1752 0182 1360     		str	r3, [r2]
 1753 0184 3E4B     		ldr	r3, .L117+12
 1754 0186 1868     		ldr	r0, [r3]
 1755 0188 3A46     		mov	r2, r7
 1756 018a 0023     		movs	r3, #0
 1757 018c 3D49     		ldr	r1, .L117+16
 1758 018e FFF7FEFF 		bl	xQueueGenericSendFromISR
 1759 0192 0346     		mov	r3, r0
 1760 0194 012B     		cmp	r3, #1
 1761 0196 04D0     		beq	.L110
 1762              		.loc 1 718 0 is_stmt 0 discriminator 2
 1763 0198 3A4B     		ldr	r3, .L117+16
 1764 019a 1B68     		ldr	r3, [r3]
 1765 019c 013B     		subs	r3, r3, #1
 1766 019e 394A     		ldr	r2, .L117+16
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 50


 1767 01a0 1360     		str	r3, [r2]
 1768              	.L110:
 1769 01a2 BB6B     		ldr	r3, [r7, #56]
 1770 01a4 FB63     		str	r3, [r7, #60]
 1771              	.LBB70:
 1772              	.LBB71:
 1773              		.loc 2 271 0 is_stmt 1 discriminator 4
 1774 01a6 FB6B     		ldr	r3, [r7, #60]
 1775              		.syntax unified
 1776              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1777 01a8 83F31188 			msr basepri, r3	
 1778              	@ 0 "" 2
 1779              		.thumb
 1780              		.syntax unified
 1781              	.L108:
 1782              	.LBE71:
 1783              	.LBE70:
 1784              	.LBE67:
 719:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1785              		.loc 1 719 0
 1786 01ac 344B     		ldr	r3, .L117+12
 1787 01ae 1B68     		ldr	r3, [r3]
 1788 01b0 1846     		mov	r0, r3
 1789 01b2 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1790 01b6 0346     		mov	r3, r0
 1791 01b8 012B     		cmp	r3, #1
 1792 01ba 26D0     		beq	.L111
 1793              	.LBB72:
 1794              	.LBB73:
 1795              	.LBB74:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1796              		.loc 2 253 0 discriminator 1
 1797              		.syntax unified
 1798              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1799 01bc EFF31182 			mrs r2, basepri											
 1800 01c0 4FF0A003 		mov r3, #160												
 1801 01c4 83F31188 		msr basepri, r3											
 1802 01c8 BFF36F8F 		isb														
 1803 01cc BFF34F8F 		dsb														
 1804              	
 1805              	@ 0 "" 2
 1806              		.thumb
 1807              		.syntax unified
 1808 01d0 7A63     		str	r2, [r7, #52]
 1809 01d2 FB60     		str	r3, [r7, #12]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1810              		.loc 2 265 0 discriminator 1
 1811 01d4 7B6B     		ldr	r3, [r7, #52]
 1812              	.LBE74:
 1813              	.LBE73:
 1814              		.loc 1 719 0 discriminator 1
 1815 01d6 FB62     		str	r3, [r7, #44]
 1816 01d8 2A4B     		ldr	r3, .L117+16
 1817 01da 1B68     		ldr	r3, [r3]
 1818 01dc 0133     		adds	r3, r3, #1
 1819 01de 294A     		ldr	r2, .L117+16
 1820 01e0 1360     		str	r3, [r2]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 51


 1821 01e2 274B     		ldr	r3, .L117+12
 1822 01e4 1868     		ldr	r0, [r3]
 1823 01e6 3A46     		mov	r2, r7
 1824 01e8 0023     		movs	r3, #0
 1825 01ea 2649     		ldr	r1, .L117+16
 1826 01ec FFF7FEFF 		bl	xQueueGenericSendFromISR
 1827 01f0 0346     		mov	r3, r0
 1828 01f2 012B     		cmp	r3, #1
 1829 01f4 04D0     		beq	.L113
 1830              		.loc 1 719 0 is_stmt 0 discriminator 2
 1831 01f6 234B     		ldr	r3, .L117+16
 1832 01f8 1B68     		ldr	r3, [r3]
 1833 01fa 013B     		subs	r3, r3, #1
 1834 01fc 214A     		ldr	r2, .L117+16
 1835 01fe 1360     		str	r3, [r2]
 1836              	.L113:
 1837 0200 FB6A     		ldr	r3, [r7, #44]
 1838 0202 3B63     		str	r3, [r7, #48]
 1839              	.LBB75:
 1840              	.LBB76:
 1841              		.loc 2 271 0 is_stmt 1 discriminator 4
 1842 0204 3B6B     		ldr	r3, [r7, #48]
 1843              		.syntax unified
 1844              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1845 0206 83F31188 			msr basepri, r3	
 1846              	@ 0 "" 2
 1847              		.thumb
 1848              		.syntax unified
 1849              	.L111:
 1850              	.LBE76:
 1851              	.LBE75:
 1852              	.LBE72:
 720:..\Common\Minimal/IntQueue.c **** 		timerNORMALLY_FULL_TX();
 1853              		.loc 1 720 0
 1854 020a 1D4B     		ldr	r3, .L117+12
 1855 020c 1B68     		ldr	r3, [r3]
 1856 020e 1846     		mov	r0, r3
 1857 0210 FFF7FEFF 		bl	xQueueIsQueueFullFromISR
 1858 0214 0346     		mov	r3, r0
 1859 0216 012B     		cmp	r3, #1
 1860 0218 26D0     		beq	.L106
 1861              	.LBB77:
 1862              	.LBB78:
 1863              	.LBB79:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 1864              		.loc 2 253 0 discriminator 1
 1865              		.syntax unified
 1866              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1867 021a EFF31182 			mrs r2, basepri											
 1868 021e 4FF0A003 		mov r3, #160												
 1869 0222 83F31188 		msr basepri, r3											
 1870 0226 BFF36F8F 		isb														
 1871 022a BFF34F8F 		dsb														
 1872              	
 1873              	@ 0 "" 2
 1874              		.thumb
 1875              		.syntax unified
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 52


 1876 022e BA62     		str	r2, [r7, #40]
 1877 0230 BB60     		str	r3, [r7, #8]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 1878              		.loc 2 265 0 discriminator 1
 1879 0232 BB6A     		ldr	r3, [r7, #40]
 1880              	.LBE79:
 1881              	.LBE78:
 1882              		.loc 1 720 0 discriminator 1
 1883 0234 3B62     		str	r3, [r7, #32]
 1884 0236 134B     		ldr	r3, .L117+16
 1885 0238 1B68     		ldr	r3, [r3]
 1886 023a 0133     		adds	r3, r3, #1
 1887 023c 114A     		ldr	r2, .L117+16
 1888 023e 1360     		str	r3, [r2]
 1889 0240 0F4B     		ldr	r3, .L117+12
 1890 0242 1868     		ldr	r0, [r3]
 1891 0244 3A46     		mov	r2, r7
 1892 0246 0023     		movs	r3, #0
 1893 0248 0E49     		ldr	r1, .L117+16
 1894 024a FFF7FEFF 		bl	xQueueGenericSendFromISR
 1895 024e 0346     		mov	r3, r0
 1896 0250 012B     		cmp	r3, #1
 1897 0252 04D0     		beq	.L115
 1898              		.loc 1 720 0 is_stmt 0 discriminator 2
 1899 0254 0B4B     		ldr	r3, .L117+16
 1900 0256 1B68     		ldr	r3, [r3]
 1901 0258 013B     		subs	r3, r3, #1
 1902 025a 0A4A     		ldr	r2, .L117+16
 1903 025c 1360     		str	r3, [r2]
 1904              	.L115:
 1905 025e 3B6A     		ldr	r3, [r7, #32]
 1906 0260 7B62     		str	r3, [r7, #36]
 1907              	.LBB80:
 1908              	.LBB81:
 1909              		.loc 2 271 0 is_stmt 1 discriminator 4
 1910 0262 7B6A     		ldr	r3, [r7, #36]
 1911              		.syntax unified
 1912              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 1913 0264 83F31188 			msr basepri, r3	
 1914              	@ 0 "" 2
 1915              		.thumb
 1916              		.syntax unified
 1917              	.L106:
 1918              	.LBE81:
 1919              	.LBE80:
 1920              	.LBE77:
 721:..\Common\Minimal/IntQueue.c **** 	}
 722:..\Common\Minimal/IntQueue.c **** 
 723:..\Common\Minimal/IntQueue.c **** 	return xHigherPriorityTaskWoken;
 1921              		.loc 1 723 0
 1922 0268 3B68     		ldr	r3, [r7]
 724:..\Common\Minimal/IntQueue.c **** }
 1923              		.loc 1 724 0
 1924 026a 1846     		mov	r0, r3
 1925 026c 5837     		adds	r7, r7, #88
 1926              		.cfi_def_cfa_offset 8
 1927 026e BD46     		mov	sp, r7
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 53


 1928              		.cfi_def_cfa_register 13
 1929              		@ sp needed
 1930 0270 80BD     		pop	{r7, pc}
 1931              	.L118:
 1932 0272 00BF     		.align	2
 1933              	.L117:
 1934 0274 BC010000 		.word	uxNextOperation.7238
 1935 0278 00000000 		.word	xNormallyEmptyQueue
 1936 027c 20000000 		.word	uxValueForNormallyEmptyQueue
 1937 0280 04000000 		.word	xNormallyFullQueue
 1938 0284 24000000 		.word	uxValueForNormallyFullQueue
 1939              		.cfi_endproc
 1940              	.LFE78:
 1941              		.size	xSecondTimerHandler, .-xSecondTimerHandler
 1942              		.section	.text.xAreIntQueueTasksStillRunning,"ax",%progbits
 1943              		.align	2
 1944              		.global	xAreIntQueueTasksStillRunning
 1945              		.thumb
 1946              		.thumb_func
 1947              		.type	xAreIntQueueTasksStillRunning, %function
 1948              	xAreIntQueueTasksStillRunning:
 1949              	.LFB79:
 725:..\Common\Minimal/IntQueue.c **** /*-----------------------------------------------------------*/
 726:..\Common\Minimal/IntQueue.c **** 
 727:..\Common\Minimal/IntQueue.c **** 
 728:..\Common\Minimal/IntQueue.c **** BaseType_t xAreIntQueueTasksStillRunning( void )
 729:..\Common\Minimal/IntQueue.c **** {
 1950              		.loc 1 729 0
 1951              		.cfi_startproc
 1952              		@ args = 0, pretend = 0, frame = 0
 1953              		@ frame_needed = 1, uses_anonymous_args = 0
 1954 0000 80B5     		push	{r7, lr}
 1955              		.cfi_def_cfa_offset 8
 1956              		.cfi_offset 7, -8
 1957              		.cfi_offset 14, -4
 1958 0002 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 730:..\Common\Minimal/IntQueue.c **** static UBaseType_t uxLastHighPriorityLoops1 = 0, uxLastHighPriorityLoops2 = 0, uxLastLowPriorityLoo
 731:..\Common\Minimal/IntQueue.c **** 
 732:..\Common\Minimal/IntQueue.c **** 	/* xErrorStatus can be set outside of this function.  This function just
 733:..\Common\Minimal/IntQueue.c **** 	checks that all the tasks are still cycling. */
 734:..\Common\Minimal/IntQueue.c **** 
 735:..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops1 == uxLastHighPriorityLoops1 )
 1960              		.loc 1 735 0
 1961 0004 1D4B     		ldr	r3, .L125
 1962 0006 1A68     		ldr	r2, [r3]
 1963 0008 1D4B     		ldr	r3, .L125+4
 1964 000a 1B68     		ldr	r3, [r3]
 1965 000c 9A42     		cmp	r2, r3
 1966 000e 03D1     		bne	.L120
 736:..\Common\Minimal/IntQueue.c **** 	{
 737:..\Common\Minimal/IntQueue.c **** 		/* The high priority 1 task has stalled. */
 738:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1967              		.loc 1 738 0
 1968 0010 40F2E220 		movw	r0, #738
 1969 0014 FFF7FEFF 		bl	prvQueueAccessLogError
 1970              	.L120:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 54


 739:..\Common\Minimal/IntQueue.c **** 	}
 740:..\Common\Minimal/IntQueue.c **** 
 741:..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops1 = uxHighPriorityLoops1;
 1971              		.loc 1 741 0
 1972 0018 184B     		ldr	r3, .L125
 1973 001a 1B68     		ldr	r3, [r3]
 1974 001c 184A     		ldr	r2, .L125+4
 1975 001e 1360     		str	r3, [r2]
 742:..\Common\Minimal/IntQueue.c **** 
 743:..\Common\Minimal/IntQueue.c **** 	if( uxHighPriorityLoops2 == uxLastHighPriorityLoops2 )
 1976              		.loc 1 743 0
 1977 0020 184B     		ldr	r3, .L125+8
 1978 0022 1A68     		ldr	r2, [r3]
 1979 0024 184B     		ldr	r3, .L125+12
 1980 0026 1B68     		ldr	r3, [r3]
 1981 0028 9A42     		cmp	r2, r3
 1982 002a 03D1     		bne	.L121
 744:..\Common\Minimal/IntQueue.c **** 	{
 745:..\Common\Minimal/IntQueue.c **** 		/* The high priority 2 task has stalled. */
 746:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1983              		.loc 1 746 0
 1984 002c 40F2EA20 		movw	r0, #746
 1985 0030 FFF7FEFF 		bl	prvQueueAccessLogError
 1986              	.L121:
 747:..\Common\Minimal/IntQueue.c **** 	}
 748:..\Common\Minimal/IntQueue.c **** 
 749:..\Common\Minimal/IntQueue.c **** 	uxLastHighPriorityLoops2 = uxHighPriorityLoops2;
 1987              		.loc 1 749 0
 1988 0034 134B     		ldr	r3, .L125+8
 1989 0036 1B68     		ldr	r3, [r3]
 1990 0038 134A     		ldr	r2, .L125+12
 1991 003a 1360     		str	r3, [r2]
 750:..\Common\Minimal/IntQueue.c **** 
 751:..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops1 == uxLastLowPriorityLoops1 )
 1992              		.loc 1 751 0
 1993 003c 134B     		ldr	r3, .L125+16
 1994 003e 1A68     		ldr	r2, [r3]
 1995 0040 134B     		ldr	r3, .L125+20
 1996 0042 1B68     		ldr	r3, [r3]
 1997 0044 9A42     		cmp	r2, r3
 1998 0046 03D1     		bne	.L122
 752:..\Common\Minimal/IntQueue.c **** 	{
 753:..\Common\Minimal/IntQueue.c **** 		/* The low priority 1 task has stalled. */
 754:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 1999              		.loc 1 754 0
 2000 0048 40F2F220 		movw	r0, #754
 2001 004c FFF7FEFF 		bl	prvQueueAccessLogError
 2002              	.L122:
 755:..\Common\Minimal/IntQueue.c **** 	}
 756:..\Common\Minimal/IntQueue.c **** 
 757:..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops1 = uxLowPriorityLoops1;
 2003              		.loc 1 757 0
 2004 0050 0E4B     		ldr	r3, .L125+16
 2005 0052 1B68     		ldr	r3, [r3]
 2006 0054 0E4A     		ldr	r2, .L125+20
 2007 0056 1360     		str	r3, [r2]
 758:..\Common\Minimal/IntQueue.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 55


 759:..\Common\Minimal/IntQueue.c **** 	if( uxLowPriorityLoops2 == uxLastLowPriorityLoops2 )
 2008              		.loc 1 759 0
 2009 0058 0E4B     		ldr	r3, .L125+24
 2010 005a 1A68     		ldr	r2, [r3]
 2011 005c 0E4B     		ldr	r3, .L125+28
 2012 005e 1B68     		ldr	r3, [r3]
 2013 0060 9A42     		cmp	r2, r3
 2014 0062 03D1     		bne	.L123
 760:..\Common\Minimal/IntQueue.c **** 	{
 761:..\Common\Minimal/IntQueue.c **** 		/* The low priority 2 task has stalled. */
 762:..\Common\Minimal/IntQueue.c **** 		prvQueueAccessLogError( __LINE__ );
 2015              		.loc 1 762 0
 2016 0064 40F2FA20 		movw	r0, #762
 2017 0068 FFF7FEFF 		bl	prvQueueAccessLogError
 2018              	.L123:
 763:..\Common\Minimal/IntQueue.c **** 	}
 764:..\Common\Minimal/IntQueue.c **** 
 765:..\Common\Minimal/IntQueue.c **** 	uxLastLowPriorityLoops2 = uxLowPriorityLoops2;
 2019              		.loc 1 765 0
 2020 006c 094B     		ldr	r3, .L125+24
 2021 006e 1B68     		ldr	r3, [r3]
 2022 0070 094A     		ldr	r2, .L125+28
 2023 0072 1360     		str	r3, [r2]
 766:..\Common\Minimal/IntQueue.c **** 
 767:..\Common\Minimal/IntQueue.c **** 	return xErrorStatus;
 2024              		.loc 1 767 0
 2025 0074 094B     		ldr	r3, .L125+32
 2026 0076 1B68     		ldr	r3, [r3]
 768:..\Common\Minimal/IntQueue.c **** }
 2027              		.loc 1 768 0
 2028 0078 1846     		mov	r0, r3
 2029 007a 80BD     		pop	{r7, pc}
 2030              	.L126:
 2031              		.align	2
 2032              	.L125:
 2033 007c 08000000 		.word	uxHighPriorityLoops1
 2034 0080 C0010000 		.word	uxLastHighPriorityLoops1.7247
 2035 0084 0C000000 		.word	uxHighPriorityLoops2
 2036 0088 C4010000 		.word	uxLastHighPriorityLoops2.7248
 2037 008c 10000000 		.word	uxLowPriorityLoops1
 2038 0090 C8010000 		.word	uxLastLowPriorityLoops1.7249
 2039 0094 14000000 		.word	uxLowPriorityLoops2
 2040 0098 CC010000 		.word	uxLastLowPriorityLoops2.7250
 2041 009c 00000000 		.word	xErrorStatus
 2042              		.cfi_endproc
 2043              	.LFE79:
 2044              		.size	xAreIntQueueTasksStillRunning, .-xAreIntQueueTasksStillRunning
 2045              		.bss
 2046              		.align	2
 2047              	uxNextOperation.7229:
 2048 01b8 00000000 		.space	4
 2049              		.align	2
 2050              	uxNextOperation.7238:
 2051 01bc 00000000 		.space	4
 2052              		.align	2
 2053              	uxLastHighPriorityLoops1.7247:
 2054 01c0 00000000 		.space	4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 56


 2055              		.align	2
 2056              	uxLastHighPriorityLoops2.7248:
 2057 01c4 00000000 		.space	4
 2058              		.align	2
 2059              	uxLastLowPriorityLoops1.7249:
 2060 01c8 00000000 		.space	4
 2061              		.align	2
 2062              	uxLastLowPriorityLoops2.7250:
 2063 01cc 00000000 		.space	4
 2064              		.text
 2065              	.Letext0:
 2066              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2067              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2068              		.file 5 ".\\Tracer/sniffPayload.h"
 2069              		.file 6 ".\\Tracer/selfFIFO.h"
 2070              		.file 7 "..\\Source\\include/queue.h"
 2071              		.file 8 "..\\Source\\include/task.h"
 2072              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 2073              		.file 10 ".\\Tracer/sniffTask.h"
 2074              		.section	.debug_info,"",%progbits
 2075              	.Ldebug_info0:
 2076 0000 CF0A0000 		.4byte	0xacf
 2077 0004 0400     		.2byte	0x4
 2078 0006 00000000 		.4byte	.Ldebug_abbrev0
 2079 000a 04       		.byte	0x4
 2080 000b 01       		.uleb128 0x1
 2081 000c DA000000 		.4byte	.LASF108
 2082 0010 0C       		.byte	0xc
 2083 0011 0C030000 		.4byte	.LASF109
 2084 0015 90070000 		.4byte	.LASF110
 2085 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2086 001d 00000000 		.4byte	0
 2087 0021 00000000 		.4byte	.Ldebug_line0
 2088 0025 02       		.uleb128 0x2
 2089 0026 04       		.byte	0x4
 2090 0027 05       		.byte	0x5
 2091 0028 696E7400 		.ascii	"int\000"
 2092 002c 03       		.uleb128 0x3
 2093 002d 04       		.byte	0x4
 2094 002e 07       		.byte	0x7
 2095 002f E5040000 		.4byte	.LASF0
 2096 0033 03       		.uleb128 0x3
 2097 0034 08       		.byte	0x8
 2098 0035 05       		.byte	0x5
 2099 0036 F3020000 		.4byte	.LASF1
 2100 003a 03       		.uleb128 0x3
 2101 003b 08       		.byte	0x8
 2102 003c 04       		.byte	0x4
 2103 003d 28040000 		.4byte	.LASF2
 2104 0041 03       		.uleb128 0x3
 2105 0042 01       		.byte	0x1
 2106 0043 06       		.byte	0x6
 2107 0044 A0040000 		.4byte	.LASF3
 2108 0048 04       		.uleb128 0x4
 2109 0049 B2030000 		.4byte	.LASF7
 2110 004d 03       		.byte	0x3
 2111 004e 1D       		.byte	0x1d
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 57


 2112 004f 53000000 		.4byte	0x53
 2113 0053 03       		.uleb128 0x3
 2114 0054 01       		.byte	0x1
 2115 0055 08       		.byte	0x8
 2116 0056 60040000 		.4byte	.LASF4
 2117 005a 03       		.uleb128 0x3
 2118 005b 02       		.byte	0x2
 2119 005c 05       		.byte	0x5
 2120 005d A6020000 		.4byte	.LASF5
 2121 0061 03       		.uleb128 0x3
 2122 0062 02       		.byte	0x2
 2123 0063 07       		.byte	0x7
 2124 0064 D6050000 		.4byte	.LASF6
 2125 0068 04       		.uleb128 0x4
 2126 0069 D2060000 		.4byte	.LASF8
 2127 006d 03       		.byte	0x3
 2128 006e 3F       		.byte	0x3f
 2129 006f 73000000 		.4byte	0x73
 2130 0073 03       		.uleb128 0x3
 2131 0074 04       		.byte	0x4
 2132 0075 05       		.byte	0x5
 2133 0076 30030000 		.4byte	.LASF9
 2134 007a 04       		.uleb128 0x4
 2135 007b 9D060000 		.4byte	.LASF10
 2136 007f 03       		.byte	0x3
 2137 0080 41       		.byte	0x41
 2138 0081 85000000 		.4byte	0x85
 2139 0085 03       		.uleb128 0x3
 2140 0086 04       		.byte	0x4
 2141 0087 07       		.byte	0x7
 2142 0088 33060000 		.4byte	.LASF11
 2143 008c 03       		.uleb128 0x3
 2144 008d 08       		.byte	0x8
 2145 008e 07       		.byte	0x7
 2146 008f AC040000 		.4byte	.LASF12
 2147 0093 03       		.uleb128 0x3
 2148 0094 04       		.byte	0x4
 2149 0095 07       		.byte	0x7
 2150 0096 8E000000 		.4byte	.LASF13
 2151 009a 05       		.uleb128 0x5
 2152 009b 04       		.byte	0x4
 2153 009c 03       		.uleb128 0x3
 2154 009d 01       		.byte	0x1
 2155 009e 08       		.byte	0x8
 2156 009f 40050000 		.4byte	.LASF14
 2157 00a3 04       		.uleb128 0x4
 2158 00a4 26020000 		.4byte	.LASF15
 2159 00a8 04       		.byte	0x4
 2160 00a9 18       		.byte	0x18
 2161 00aa 48000000 		.4byte	0x48
 2162 00ae 04       		.uleb128 0x4
 2163 00af 70050000 		.4byte	.LASF16
 2164 00b3 04       		.byte	0x4
 2165 00b4 2C       		.byte	0x2c
 2166 00b5 68000000 		.4byte	0x68
 2167 00b9 04       		.uleb128 0x4
 2168 00ba DC040000 		.4byte	.LASF17
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 58


 2169 00be 04       		.byte	0x4
 2170 00bf 30       		.byte	0x30
 2171 00c0 7A000000 		.4byte	0x7a
 2172 00c4 03       		.uleb128 0x3
 2173 00c5 04       		.byte	0x4
 2174 00c6 04       		.byte	0x4
 2175 00c7 C0020000 		.4byte	.LASF18
 2176 00cb 03       		.uleb128 0x3
 2177 00cc 08       		.byte	0x8
 2178 00cd 04       		.byte	0x4
 2179 00ce 61060000 		.4byte	.LASF19
 2180 00d2 06       		.uleb128 0x6
 2181 00d3 01       		.byte	0x1
 2182 00d4 53000000 		.4byte	0x53
 2183 00d8 05       		.byte	0x5
 2184 00d9 10       		.byte	0x10
 2185 00da 09010000 		.4byte	0x109
 2186 00de 07       		.uleb128 0x7
 2187 00df F2030000 		.4byte	.LASF20
 2188 00e3 00       		.byte	0
 2189 00e4 07       		.uleb128 0x7
 2190 00e5 AB000000 		.4byte	.LASF21
 2191 00e9 01       		.byte	0x1
 2192 00ea 07       		.uleb128 0x7
 2193 00eb F8030000 		.4byte	.LASF22
 2194 00ef 02       		.byte	0x2
 2195 00f0 07       		.uleb128 0x7
 2196 00f1 68060000 		.4byte	.LASF23
 2197 00f5 03       		.byte	0x3
 2198 00f6 07       		.uleb128 0x7
 2199 00f7 8D030000 		.4byte	.LASF24
 2200 00fb 04       		.byte	0x4
 2201 00fc 07       		.uleb128 0x7
 2202 00fd C2060000 		.4byte	.LASF25
 2203 0101 05       		.byte	0x5
 2204 0102 07       		.uleb128 0x7
 2205 0103 1D060000 		.4byte	.LASF26
 2206 0107 06       		.byte	0x6
 2207 0108 00       		.byte	0
 2208 0109 04       		.uleb128 0x4
 2209 010a 9B020000 		.4byte	.LASF27
 2210 010e 05       		.byte	0x5
 2211 010f 10       		.byte	0x10
 2212 0110 D2000000 		.4byte	0xd2
 2213 0114 08       		.uleb128 0x8
 2214 0115 04       		.byte	0x4
 2215 0116 05       		.byte	0x5
 2216 0117 86       		.byte	0x86
 2217 0118 4D010000 		.4byte	0x14d
 2218 011c 09       		.uleb128 0x9
 2219 011d 67050000 		.4byte	.LASF28
 2220 0121 05       		.byte	0x5
 2221 0122 87       		.byte	0x87
 2222 0123 A3000000 		.4byte	0xa3
 2223 0127 00       		.byte	0
 2224 0128 09       		.uleb128 0x9
 2225 0129 00000000 		.4byte	.LASF29
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 59


 2226 012d 05       		.byte	0x5
 2227 012e 88       		.byte	0x88
 2228 012f A3000000 		.4byte	0xa3
 2229 0133 01       		.byte	0x1
 2230 0134 09       		.uleb128 0x9
 2231 0135 DC060000 		.4byte	.LASF30
 2232 0139 05       		.byte	0x5
 2233 013a 89       		.byte	0x89
 2234 013b 09010000 		.4byte	0x109
 2235 013f 02       		.byte	0x2
 2236 0140 09       		.uleb128 0x9
 2237 0141 B0020000 		.4byte	.LASF31
 2238 0145 05       		.byte	0x5
 2239 0146 8A       		.byte	0x8a
 2240 0147 A3000000 		.4byte	0xa3
 2241 014b 03       		.byte	0x3
 2242 014c 00       		.byte	0
 2243 014d 04       		.uleb128 0x4
 2244 014e F2040000 		.4byte	.LASF32
 2245 0152 05       		.byte	0x5
 2246 0153 8B       		.byte	0x8b
 2247 0154 14010000 		.4byte	0x114
 2248 0158 08       		.uleb128 0x8
 2249 0159 0E       		.byte	0xe
 2250 015a 05       		.byte	0x5
 2251 015b 95       		.byte	0x95
 2252 015c 85010000 		.4byte	0x185
 2253 0160 09       		.uleb128 0x9
 2254 0161 6E040000 		.4byte	.LASF33
 2255 0165 05       		.byte	0x5
 2256 0166 96       		.byte	0x96
 2257 0167 A3000000 		.4byte	0xa3
 2258 016b 00       		.byte	0
 2259 016c 09       		.uleb128 0x9
 2260 016d 5F020000 		.4byte	.LASF34
 2261 0171 05       		.byte	0x5
 2262 0172 97       		.byte	0x97
 2263 0173 A3000000 		.4byte	0xa3
 2264 0177 01       		.byte	0x1
 2265 0178 09       		.uleb128 0x9
 2266 0179 90020000 		.4byte	.LASF35
 2267 017d 05       		.byte	0x5
 2268 017e 98       		.byte	0x98
 2269 017f 85010000 		.4byte	0x185
 2270 0183 02       		.byte	0x2
 2271 0184 00       		.byte	0
 2272 0185 0A       		.uleb128 0xa
 2273 0186 9C000000 		.4byte	0x9c
 2274 018a 95010000 		.4byte	0x195
 2275 018e 0B       		.uleb128 0xb
 2276 018f 93000000 		.4byte	0x93
 2277 0193 0B       		.byte	0xb
 2278 0194 00       		.byte	0
 2279 0195 04       		.uleb128 0x4
 2280 0196 E7020000 		.4byte	.LASF36
 2281 019a 05       		.byte	0x5
 2282 019b 99       		.byte	0x99
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 60


 2283 019c 58010000 		.4byte	0x158
 2284 01a0 0C       		.uleb128 0xc
 2285 01a1 1C01     		.2byte	0x11c
 2286 01a3 05       		.byte	0x5
 2287 01a4 A3       		.byte	0xa3
 2288 01a5 C2010000 		.4byte	0x1c2
 2289 01a9 09       		.uleb128 0x9
 2290 01aa D8010000 		.4byte	.LASF37
 2291 01ae 05       		.byte	0x5
 2292 01af A4       		.byte	0xa4
 2293 01b0 4D010000 		.4byte	0x14d
 2294 01b4 00       		.byte	0
 2295 01b5 09       		.uleb128 0x9
 2296 01b6 53020000 		.4byte	.LASF38
 2297 01ba 05       		.byte	0x5
 2298 01bb A5       		.byte	0xa5
 2299 01bc C2010000 		.4byte	0x1c2
 2300 01c0 04       		.byte	0x4
 2301 01c1 00       		.byte	0
 2302 01c2 0A       		.uleb128 0xa
 2303 01c3 95010000 		.4byte	0x195
 2304 01c7 D2010000 		.4byte	0x1d2
 2305 01cb 0B       		.uleb128 0xb
 2306 01cc 93000000 		.4byte	0x93
 2307 01d0 13       		.byte	0x13
 2308 01d1 00       		.byte	0
 2309 01d2 04       		.uleb128 0x4
 2310 01d3 66070000 		.4byte	.LASF39
 2311 01d7 05       		.byte	0x5
 2312 01d8 A6       		.byte	0xa6
 2313 01d9 A0010000 		.4byte	0x1a0
 2314 01dd 0D       		.uleb128 0xd
 2315 01de 7E070000 		.4byte	.LASF111
 2316 01e2 0210     		.2byte	0x1002
 2317 01e4 06       		.byte	0x6
 2318 01e5 0C       		.byte	0xc
 2319 01e6 11020000 		.4byte	0x211
 2320 01ea 09       		.uleb128 0x9
 2321 01eb 80000000 		.4byte	.LASF40
 2322 01ef 06       		.byte	0x6
 2323 01f0 0D       		.byte	0xd
 2324 01f1 11020000 		.4byte	0x211
 2325 01f5 00       		.byte	0
 2326 01f6 0E       		.uleb128 0xe
 2327 01f7 EE020000 		.4byte	.LASF41
 2328 01fb 06       		.byte	0x6
 2329 01fc 0E       		.byte	0xe
 2330 01fd A3000000 		.4byte	0xa3
 2331 0201 0010     		.2byte	0x1000
 2332 0203 0E       		.uleb128 0xe
 2333 0204 55000000 		.4byte	.LASF42
 2334 0208 06       		.byte	0x6
 2335 0209 0F       		.byte	0xf
 2336 020a A3000000 		.4byte	0xa3
 2337 020e 0110     		.2byte	0x1001
 2338 0210 00       		.byte	0
 2339 0211 0A       		.uleb128 0xa
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 61


 2340 0212 A3000000 		.4byte	0xa3
 2341 0216 22020000 		.4byte	0x222
 2342 021a 0F       		.uleb128 0xf
 2343 021b 93000000 		.4byte	0x93
 2344 021f FF0F     		.2byte	0xfff
 2345 0221 00       		.byte	0
 2346 0222 04       		.uleb128 0x4
 2347 0223 03050000 		.4byte	.LASF43
 2348 0227 02       		.byte	0x2
 2349 0228 62       		.byte	0x62
 2350 0229 73000000 		.4byte	0x73
 2351 022d 04       		.uleb128 0x4
 2352 022e 9B050000 		.4byte	.LASF44
 2353 0232 02       		.byte	0x2
 2354 0233 63       		.byte	0x63
 2355 0234 85000000 		.4byte	0x85
 2356 0238 04       		.uleb128 0x4
 2357 0239 01030000 		.4byte	.LASF45
 2358 023d 02       		.byte	0x2
 2359 023e 69       		.byte	0x69
 2360 023f B9000000 		.4byte	0xb9
 2361 0243 04       		.uleb128 0x4
 2362 0244 CF030000 		.4byte	.LASF46
 2363 0248 07       		.byte	0x7
 2364 0249 58       		.byte	0x58
 2365 024a 9A000000 		.4byte	0x9a
 2366 024e 04       		.uleb128 0x4
 2367 024f B1000000 		.4byte	.LASF47
 2368 0253 08       		.byte	0x8
 2369 0254 67       		.byte	0x67
 2370 0255 9A000000 		.4byte	0x9a
 2371 0259 06       		.uleb128 0x6
 2372 025a 01       		.byte	0x1
 2373 025b 53000000 		.4byte	0x53
 2374 025f 08       		.byte	0x8
 2375 0260 71       		.byte	0x71
 2376 0261 8A020000 		.4byte	0x28a
 2377 0265 07       		.uleb128 0x7
 2378 0266 79060000 		.4byte	.LASF48
 2379 026a 00       		.byte	0
 2380 026b 07       		.uleb128 0x7
 2381 026c 99040000 		.4byte	.LASF49
 2382 0270 01       		.byte	0x1
 2383 0271 07       		.uleb128 0x7
 2384 0272 0E000000 		.4byte	.LASF50
 2385 0276 02       		.byte	0x2
 2386 0277 07       		.uleb128 0x7
 2387 0278 85070000 		.4byte	.LASF51
 2388 027c 03       		.byte	0x3
 2389 027d 07       		.uleb128 0x7
 2390 027e 85000000 		.4byte	.LASF52
 2391 0282 04       		.byte	0x4
 2392 0283 07       		.uleb128 0x7
 2393 0284 E5010000 		.4byte	.LASF53
 2394 0288 05       		.byte	0x5
 2395 0289 00       		.byte	0
 2396 028a 10       		.uleb128 0x10
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 62


 2397 028b 7D020000 		.4byte	.LASF112
 2398 028f 02       		.byte	0x2
 2399 0290 F9       		.byte	0xf9
 2400 0291 B9000000 		.4byte	0xb9
 2401 0295 03       		.byte	0x3
 2402 0296 B1020000 		.4byte	0x2b1
 2403 029a 11       		.uleb128 0x11
 2404 029b 7B040000 		.4byte	.LASF54
 2405 029f 02       		.byte	0x2
 2406 02a0 FB       		.byte	0xfb
 2407 02a1 B9000000 		.4byte	0xb9
 2408 02a5 11       		.uleb128 0x11
 2409 02a6 EB070000 		.4byte	.LASF55
 2410 02aa 02       		.byte	0x2
 2411 02ab FB       		.byte	0xfb
 2412 02ac B9000000 		.4byte	0xb9
 2413 02b0 00       		.byte	0
 2414 02b1 12       		.uleb128 0x12
 2415 02b2 30050000 		.4byte	.LASF113
 2416 02b6 02       		.byte	0x2
 2417 02b7 0D01     		.2byte	0x10d
 2418 02b9 03       		.byte	0x3
 2419 02ba CB020000 		.4byte	0x2cb
 2420 02be 13       		.uleb128 0x13
 2421 02bf 8E060000 		.4byte	.LASF114
 2422 02c3 02       		.byte	0x2
 2423 02c4 0D01     		.2byte	0x10d
 2424 02c6 B9000000 		.4byte	0xb9
 2425 02ca 00       		.byte	0
 2426 02cb 14       		.uleb128 0x14
 2427 02cc A8060000 		.4byte	.LASF115
 2428 02d0 01       		.byte	0x1
 2429 02d1 EF       		.byte	0xef
 2430 02d2 00000000 		.4byte	.LFB68
 2431 02d6 08010000 		.4byte	.LFE68-.LFB68
 2432 02da 01       		.uleb128 0x1
 2433 02db 9C       		.byte	0x9c
 2434 02dc 15       		.uleb128 0x15
 2435 02dd BE000000 		.4byte	.LASF58
 2436 02e1 01       		.byte	0x1
 2437 02e2 0901     		.2byte	0x109
 2438 02e4 00000000 		.4byte	.LFB69
 2439 02e8 40000000 		.4byte	.LFE69-.LFB69
 2440 02ec 01       		.uleb128 0x1
 2441 02ed 9C       		.byte	0x9c
 2442 02ee 11030000 		.4byte	0x311
 2443 02f2 16       		.uleb128 0x16
 2444 02f3 1B050000 		.4byte	.LASF56
 2445 02f7 01       		.byte	0x1
 2446 02f8 0901     		.2byte	0x109
 2447 02fa 2D020000 		.4byte	0x22d
 2448 02fe 02       		.uleb128 0x2
 2449 02ff 91       		.byte	0x91
 2450 0300 74       		.sleb128 -12
 2451 0301 16       		.uleb128 0x16
 2452 0302 B7020000 		.4byte	.LASF57
 2453 0306 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 63


 2454 0307 0901     		.2byte	0x109
 2455 0309 2D020000 		.4byte	0x22d
 2456 030d 02       		.uleb128 0x2
 2457 030e 91       		.byte	0x91
 2458 030f 70       		.sleb128 -16
 2459 0310 00       		.byte	0
 2460 0311 15       		.uleb128 0x15
 2461 0312 A7050000 		.4byte	.LASF59
 2462 0316 01       		.byte	0x1
 2463 0317 1A01     		.2byte	0x11a
 2464 0319 00000000 		.4byte	.LFB70
 2465 031d 40000000 		.4byte	.LFE70-.LFB70
 2466 0321 01       		.uleb128 0x1
 2467 0322 9C       		.byte	0x9c
 2468 0323 46030000 		.4byte	0x346
 2469 0327 16       		.uleb128 0x16
 2470 0328 1B050000 		.4byte	.LASF56
 2471 032c 01       		.byte	0x1
 2472 032d 1A01     		.2byte	0x11a
 2473 032f 2D020000 		.4byte	0x22d
 2474 0333 02       		.uleb128 0x2
 2475 0334 91       		.byte	0x91
 2476 0335 74       		.sleb128 -12
 2477 0336 16       		.uleb128 0x16
 2478 0337 B7020000 		.4byte	.LASF57
 2479 033b 01       		.byte	0x1
 2480 033c 1A01     		.2byte	0x11a
 2481 033e 2D020000 		.4byte	0x22d
 2482 0342 02       		.uleb128 0x2
 2483 0343 91       		.byte	0x91
 2484 0344 70       		.sleb128 -16
 2485 0345 00       		.byte	0
 2486 0346 17       		.uleb128 0x17
 2487 0347 06060000 		.4byte	.LASF60
 2488 034b 01       		.byte	0x1
 2489 034c 2B01     		.2byte	0x12b
 2490 034e 00000000 		.4byte	.LFB71
 2491 0352 28000000 		.4byte	.LFE71-.LFB71
 2492 0356 01       		.uleb128 0x1
 2493 0357 9C       		.byte	0x9c
 2494 0358 6C030000 		.4byte	0x36c
 2495 035c 16       		.uleb128 0x16
 2496 035d A4000000 		.4byte	.LASF61
 2497 0361 01       		.byte	0x1
 2498 0362 2B01     		.2byte	0x12b
 2499 0364 2D020000 		.4byte	0x22d
 2500 0368 02       		.uleb128 0x2
 2501 0369 91       		.byte	0x91
 2502 036a 74       		.sleb128 -12
 2503 036b 00       		.byte	0
 2504 036c 15       		.uleb128 0x15
 2505 036d 78050000 		.4byte	.LASF62
 2506 0371 01       		.byte	0x1
 2507 0372 3301     		.2byte	0x133
 2508 0374 00000000 		.4byte	.LFB72
 2509 0378 70010000 		.4byte	.LFE72-.LFB72
 2510 037c 01       		.uleb128 0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 64


 2511 037d 9C       		.byte	0x9c
 2512 037e FA030000 		.4byte	0x3fa
 2513 0382 16       		.uleb128 0x16
 2514 0383 0E050000 		.4byte	.LASF63
 2515 0387 01       		.byte	0x1
 2516 0388 3301     		.2byte	0x133
 2517 038a 9A000000 		.4byte	0x9a
 2518 038e 02       		.uleb128 0x2
 2519 038f 91       		.byte	0x91
 2520 0390 54       		.sleb128 -44
 2521 0391 18       		.uleb128 0x18
 2522 0392 E7060000 		.4byte	.LASF64
 2523 0396 01       		.byte	0x1
 2524 0397 3501     		.2byte	0x135
 2525 0399 2D020000 		.4byte	0x22d
 2526 039d 02       		.uleb128 0x2
 2527 039e 91       		.byte	0x91
 2528 039f 5C       		.sleb128 -36
 2529 03a0 19       		.uleb128 0x19
 2530 03a1 757800   		.ascii	"ux\000"
 2531 03a4 01       		.byte	0x1
 2532 03a5 3501     		.2byte	0x135
 2533 03a7 2D020000 		.4byte	0x22d
 2534 03ab 02       		.uleb128 0x2
 2535 03ac 91       		.byte	0x91
 2536 03ad 74       		.sleb128 -12
 2537 03ae 18       		.uleb128 0x18
 2538 03af 16020000 		.4byte	.LASF65
 2539 03b3 01       		.byte	0x1
 2540 03b4 3501     		.2byte	0x135
 2541 03b6 2D020000 		.4byte	0x22d
 2542 03ba 02       		.uleb128 0x2
 2543 03bb 91       		.byte	0x91
 2544 03bc 70       		.sleb128 -16
 2545 03bd 18       		.uleb128 0x18
 2546 03be 1E020000 		.4byte	.LASF66
 2547 03c2 01       		.byte	0x1
 2548 03c3 3501     		.2byte	0x135
 2549 03c5 2D020000 		.4byte	0x22d
 2550 03c9 02       		.uleb128 0x2
 2551 03ca 91       		.byte	0x91
 2552 03cb 6C       		.sleb128 -20
 2553 03cc 18       		.uleb128 0x18
 2554 03cd 23050000 		.4byte	.LASF67
 2555 03d1 01       		.byte	0x1
 2556 03d2 3501     		.2byte	0x135
 2557 03d4 2D020000 		.4byte	0x22d
 2558 03d8 02       		.uleb128 0x2
 2559 03d9 91       		.byte	0x91
 2560 03da 68       		.sleb128 -24
 2561 03db 18       		.uleb128 0x18
 2562 03dc 23070000 		.4byte	.LASF68
 2563 03e0 01       		.byte	0x1
 2564 03e1 3501     		.2byte	0x135
 2565 03e3 2D020000 		.4byte	0x22d
 2566 03e7 02       		.uleb128 0x2
 2567 03e8 91       		.byte	0x91
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 65


 2568 03e9 64       		.sleb128 -28
 2569 03ea 18       		.uleb128 0x18
 2570 03eb 31070000 		.4byte	.LASF69
 2571 03ef 01       		.byte	0x1
 2572 03f0 3501     		.2byte	0x135
 2573 03f2 2D020000 		.4byte	0x22d
 2574 03f6 02       		.uleb128 0x2
 2575 03f7 91       		.byte	0x91
 2576 03f8 60       		.sleb128 -32
 2577 03f9 00       		.byte	0
 2578 03fa 15       		.uleb128 0x15
 2579 03fb 45050000 		.4byte	.LASF70
 2580 03ff 01       		.byte	0x1
 2581 0400 AE01     		.2byte	0x1ae
 2582 0402 00000000 		.4byte	.LFB73
 2583 0406 B0000000 		.4byte	.LFE73-.LFB73
 2584 040a 01       		.uleb128 0x1
 2585 040b 9C       		.byte	0x9c
 2586 040c 3E040000 		.4byte	0x43e
 2587 0410 16       		.uleb128 0x16
 2588 0411 0E050000 		.4byte	.LASF63
 2589 0415 01       		.byte	0x1
 2590 0416 AE01     		.2byte	0x1ae
 2591 0418 9A000000 		.4byte	0x9a
 2592 041c 02       		.uleb128 0x2
 2593 041d 91       		.byte	0x91
 2594 041e 6C       		.sleb128 -20
 2595 041f 18       		.uleb128 0x18
 2596 0420 1B050000 		.4byte	.LASF56
 2597 0424 01       		.byte	0x1
 2598 0425 B001     		.2byte	0x1b0
 2599 0427 2D020000 		.4byte	0x22d
 2600 042b 02       		.uleb128 0x2
 2601 042c 91       		.byte	0x91
 2602 042d 74       		.sleb128 -12
 2603 042e 18       		.uleb128 0x18
 2604 042f E7060000 		.4byte	.LASF64
 2605 0433 01       		.byte	0x1
 2606 0434 B001     		.2byte	0x1b0
 2607 0436 2D020000 		.4byte	0x22d
 2608 043a 02       		.uleb128 0x2
 2609 043b 91       		.byte	0x91
 2610 043c 70       		.sleb128 -16
 2611 043d 00       		.byte	0
 2612 043e 15       		.uleb128 0x15
 2613 043f 5B000000 		.4byte	.LASF71
 2614 0443 01       		.byte	0x1
 2615 0444 DE01     		.2byte	0x1de
 2616 0446 00000000 		.4byte	.LFB74
 2617 044a 48010000 		.4byte	.LFE74-.LFB74
 2618 044e 01       		.uleb128 0x1
 2619 044f 9C       		.byte	0x9c
 2620 0450 90040000 		.4byte	0x490
 2621 0454 16       		.uleb128 0x16
 2622 0455 0E050000 		.4byte	.LASF63
 2623 0459 01       		.byte	0x1
 2624 045a DE01     		.2byte	0x1de
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 66


 2625 045c 9A000000 		.4byte	0x9a
 2626 0460 02       		.uleb128 0x2
 2627 0461 91       		.byte	0x91
 2628 0462 64       		.sleb128 -28
 2629 0463 18       		.uleb128 0x18
 2630 0464 8D040000 		.4byte	.LASF72
 2631 0468 01       		.byte	0x1
 2632 0469 E001     		.2byte	0x1e0
 2633 046b 2D020000 		.4byte	0x22d
 2634 046f 02       		.uleb128 0x2
 2635 0470 91       		.byte	0x91
 2636 0471 6C       		.sleb128 -20
 2637 0472 19       		.uleb128 0x19
 2638 0473 757800   		.ascii	"ux\000"
 2639 0476 01       		.byte	0x1
 2640 0477 E001     		.2byte	0x1e0
 2641 0479 2D020000 		.4byte	0x22d
 2642 047d 02       		.uleb128 0x2
 2643 047e 91       		.byte	0x91
 2644 047f 74       		.sleb128 -12
 2645 0480 18       		.uleb128 0x18
 2646 0481 23050000 		.4byte	.LASF67
 2647 0485 01       		.byte	0x1
 2648 0486 E001     		.2byte	0x1e0
 2649 0488 2D020000 		.4byte	0x22d
 2650 048c 02       		.uleb128 0x2
 2651 048d 91       		.byte	0x91
 2652 048e 70       		.sleb128 -16
 2653 048f 00       		.byte	0
 2654 0490 15       		.uleb128 0x15
 2655 0491 2E020000 		.4byte	.LASF73
 2656 0495 01       		.byte	0x1
 2657 0496 4502     		.2byte	0x245
 2658 0498 00000000 		.4byte	.LFB75
 2659 049c A8000000 		.4byte	.LFE75-.LFB75
 2660 04a0 01       		.uleb128 0x1
 2661 04a1 9C       		.byte	0x9c
 2662 04a2 D3040000 		.4byte	0x4d3
 2663 04a6 16       		.uleb128 0x16
 2664 04a7 0E050000 		.4byte	.LASF63
 2665 04ab 01       		.byte	0x1
 2666 04ac 4502     		.2byte	0x245
 2667 04ae 9A000000 		.4byte	0x9a
 2668 04b2 02       		.uleb128 0x2
 2669 04b3 91       		.byte	0x91
 2670 04b4 6C       		.sleb128 -20
 2671 04b5 18       		.uleb128 0x18
 2672 04b6 8D040000 		.4byte	.LASF72
 2673 04ba 01       		.byte	0x1
 2674 04bb 4702     		.2byte	0x247
 2675 04bd 2D020000 		.4byte	0x22d
 2676 04c1 02       		.uleb128 0x2
 2677 04c2 91       		.byte	0x91
 2678 04c3 70       		.sleb128 -16
 2679 04c4 19       		.uleb128 0x19
 2680 04c5 757800   		.ascii	"ux\000"
 2681 04c8 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 67


 2682 04c9 4702     		.2byte	0x247
 2683 04cb 2D020000 		.4byte	0x22d
 2684 04cf 02       		.uleb128 0x2
 2685 04d0 91       		.byte	0x91
 2686 04d1 74       		.sleb128 -12
 2687 04d2 00       		.byte	0
 2688 04d3 15       		.uleb128 0x15
 2689 04d4 C6020000 		.4byte	.LASF74
 2690 04d8 01       		.byte	0x1
 2691 04d9 7302     		.2byte	0x273
 2692 04db 00000000 		.4byte	.LFB76
 2693 04df 9C000000 		.4byte	.LFE76-.LFB76
 2694 04e3 01       		.uleb128 0x1
 2695 04e4 9C       		.byte	0x9c
 2696 04e5 17050000 		.4byte	0x517
 2697 04e9 16       		.uleb128 0x16
 2698 04ea 0E050000 		.4byte	.LASF63
 2699 04ee 01       		.byte	0x1
 2700 04ef 7302     		.2byte	0x273
 2701 04f1 9A000000 		.4byte	0x9a
 2702 04f5 02       		.uleb128 0x2
 2703 04f6 91       		.byte	0x91
 2704 04f7 6C       		.sleb128 -20
 2705 04f8 18       		.uleb128 0x18
 2706 04f9 1B050000 		.4byte	.LASF56
 2707 04fd 01       		.byte	0x1
 2708 04fe 7502     		.2byte	0x275
 2709 0500 2D020000 		.4byte	0x22d
 2710 0504 02       		.uleb128 0x2
 2711 0505 91       		.byte	0x91
 2712 0506 74       		.sleb128 -12
 2713 0507 18       		.uleb128 0x18
 2714 0508 29030000 		.4byte	.LASF75
 2715 050c 01       		.byte	0x1
 2716 050d 7502     		.2byte	0x275
 2717 050f 2D020000 		.4byte	0x22d
 2718 0513 02       		.uleb128 0x2
 2719 0514 91       		.byte	0x91
 2720 0515 70       		.sleb128 -16
 2721 0516 00       		.byte	0
 2722 0517 1A       		.uleb128 0x1a
 2723 0518 BC030000 		.4byte	.LASF80
 2724 051c 01       		.byte	0x1
 2725 051d 9C02     		.2byte	0x29c
 2726 051f 22020000 		.4byte	0x222
 2727 0523 00000000 		.4byte	.LFB77
 2728 0527 B4010000 		.4byte	.LFE77-.LFB77
 2729 052b 01       		.uleb128 0x1
 2730 052c 9C       		.byte	0x9c
 2731 052d 8D060000 		.4byte	0x68d
 2732 0531 18       		.uleb128 0x18
 2733 0532 C3040000 		.4byte	.LASF76
 2734 0536 01       		.byte	0x1
 2735 0537 9E02     		.2byte	0x29e
 2736 0539 22020000 		.4byte	0x222
 2737 053d 02       		.uleb128 0x2
 2738 053e 91       		.byte	0x91
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 68


 2739 053f 44       		.sleb128 -60
 2740 0540 18       		.uleb128 0x18
 2741 0541 82060000 		.4byte	.LASF77
 2742 0545 01       		.byte	0x1
 2743 0546 9F02     		.2byte	0x29f
 2744 0548 2D020000 		.4byte	0x22d
 2745 054c 02       		.uleb128 0x2
 2746 054d 91       		.byte	0x91
 2747 054e 40       		.sleb128 -64
 2748 054f 18       		.uleb128 0x18
 2749 0550 6D020000 		.4byte	.LASF78
 2750 0554 01       		.byte	0x1
 2751 0555 A002     		.2byte	0x2a0
 2752 0557 2D020000 		.4byte	0x22d
 2753 055b 05       		.uleb128 0x5
 2754 055c 03       		.byte	0x3
 2755 055d B8010000 		.4byte	uxNextOperation.7229
 2756 0561 1B       		.uleb128 0x1b
 2757 0562 32000000 		.4byte	.LBB42
 2758 0566 4E000000 		.4byte	.LBE42-.LBB42
 2759 056a C6050000 		.4byte	0x5c6
 2760 056e 18       		.uleb128 0x18
 2761 056f EE060000 		.4byte	.LASF79
 2762 0573 01       		.byte	0x1
 2763 0574 A902     		.2byte	0x2a9
 2764 0576 2D020000 		.4byte	0x22d
 2765 057a 02       		.uleb128 0x2
 2766 057b 91       		.byte	0x91
 2767 057c 70       		.sleb128 -16
 2768 057d 1C       		.uleb128 0x1c
 2769 057e 8A020000 		.4byte	0x28a
 2770 0582 32000000 		.4byte	.LBB43
 2771 0586 1A000000 		.4byte	.LBE43-.LBB43
 2772 058a 01       		.byte	0x1
 2773 058b A902     		.2byte	0x2a9
 2774 058d AC050000 		.4byte	0x5ac
 2775 0591 1D       		.uleb128 0x1d
 2776 0592 32000000 		.4byte	.LBB44
 2777 0596 1A000000 		.4byte	.LBE44-.LBB44
 2778 059a 1E       		.uleb128 0x1e
 2779 059b 9A020000 		.4byte	0x29a
 2780 059f 02       		.uleb128 0x2
 2781 05a0 91       		.byte	0x91
 2782 05a1 54       		.sleb128 -44
 2783 05a2 1E       		.uleb128 0x1e
 2784 05a3 A5020000 		.4byte	0x2a5
 2785 05a7 02       		.uleb128 0x2
 2786 05a8 91       		.byte	0x91
 2787 05a9 50       		.sleb128 -48
 2788 05aa 00       		.byte	0
 2789 05ab 00       		.byte	0
 2790 05ac 1F       		.uleb128 0x1f
 2791 05ad B1020000 		.4byte	0x2b1
 2792 05b1 7A000000 		.4byte	.LBB45
 2793 05b5 06000000 		.4byte	.LBE45-.LBB45
 2794 05b9 01       		.byte	0x1
 2795 05ba A902     		.2byte	0x2a9
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 69


 2796 05bc 20       		.uleb128 0x20
 2797 05bd BE020000 		.4byte	0x2be
 2798 05c1 02       		.uleb128 0x2
 2799 05c2 91       		.byte	0x91
 2800 05c3 74       		.sleb128 -12
 2801 05c4 00       		.byte	0
 2802 05c5 00       		.byte	0
 2803 05c6 1B       		.uleb128 0x1b
 2804 05c7 90000000 		.4byte	.LBB47
 2805 05cb 4E000000 		.4byte	.LBE47-.LBB47
 2806 05cf 2B060000 		.4byte	0x62b
 2807 05d3 18       		.uleb128 0x18
 2808 05d4 EE060000 		.4byte	.LASF79
 2809 05d8 01       		.byte	0x1
 2810 05d9 AA02     		.2byte	0x2aa
 2811 05db 2D020000 		.4byte	0x22d
 2812 05df 02       		.uleb128 0x2
 2813 05e0 91       		.byte	0x91
 2814 05e1 64       		.sleb128 -28
 2815 05e2 1C       		.uleb128 0x1c
 2816 05e3 8A020000 		.4byte	0x28a
 2817 05e7 90000000 		.4byte	.LBB48
 2818 05eb 1A000000 		.4byte	.LBE48-.LBB48
 2819 05ef 01       		.byte	0x1
 2820 05f0 AA02     		.2byte	0x2aa
 2821 05f2 11060000 		.4byte	0x611
 2822 05f6 1D       		.uleb128 0x1d
 2823 05f7 90000000 		.4byte	.LBB49
 2824 05fb 1A000000 		.4byte	.LBE49-.LBB49
 2825 05ff 1E       		.uleb128 0x1e
 2826 0600 9A020000 		.4byte	0x29a
 2827 0604 02       		.uleb128 0x2
 2828 0605 91       		.byte	0x91
 2829 0606 6C       		.sleb128 -20
 2830 0607 1E       		.uleb128 0x1e
 2831 0608 A5020000 		.4byte	0x2a5
 2832 060c 02       		.uleb128 0x2
 2833 060d 91       		.byte	0x91
 2834 060e 4C       		.sleb128 -52
 2835 060f 00       		.byte	0
 2836 0610 00       		.byte	0
 2837 0611 1F       		.uleb128 0x1f
 2838 0612 B1020000 		.4byte	0x2b1
 2839 0616 D8000000 		.4byte	.LBB50
 2840 061a 06000000 		.4byte	.LBE50-.LBB50
 2841 061e 01       		.byte	0x1
 2842 061f AA02     		.2byte	0x2aa
 2843 0621 20       		.uleb128 0x20
 2844 0622 BE020000 		.4byte	0x2be
 2845 0626 02       		.uleb128 0x2
 2846 0627 91       		.byte	0x91
 2847 0628 68       		.sleb128 -24
 2848 0629 00       		.byte	0
 2849 062a 00       		.byte	0
 2850 062b 1D       		.uleb128 0x1d
 2851 062c EE000000 		.4byte	.LBB52
 2852 0630 50000000 		.4byte	.LBE52-.LBB52
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 70


 2853 0634 18       		.uleb128 0x18
 2854 0635 EE060000 		.4byte	.LASF79
 2855 0639 01       		.byte	0x1
 2856 063a AB02     		.2byte	0x2ab
 2857 063c 2D020000 		.4byte	0x22d
 2858 0640 02       		.uleb128 0x2
 2859 0641 91       		.byte	0x91
 2860 0642 58       		.sleb128 -40
 2861 0643 1C       		.uleb128 0x1c
 2862 0644 8A020000 		.4byte	0x28a
 2863 0648 EE000000 		.4byte	.LBB53
 2864 064c 1A000000 		.4byte	.LBE53-.LBB53
 2865 0650 01       		.byte	0x1
 2866 0651 AB02     		.2byte	0x2ab
 2867 0653 72060000 		.4byte	0x672
 2868 0657 1D       		.uleb128 0x1d
 2869 0658 EE000000 		.4byte	.LBB54
 2870 065c 1A000000 		.4byte	.LBE54-.LBB54
 2871 0660 1E       		.uleb128 0x1e
 2872 0661 9A020000 		.4byte	0x29a
 2873 0665 02       		.uleb128 0x2
 2874 0666 91       		.byte	0x91
 2875 0667 60       		.sleb128 -32
 2876 0668 1E       		.uleb128 0x1e
 2877 0669 A5020000 		.4byte	0x2a5
 2878 066d 02       		.uleb128 0x2
 2879 066e 91       		.byte	0x91
 2880 066f 48       		.sleb128 -56
 2881 0670 00       		.byte	0
 2882 0671 00       		.byte	0
 2883 0672 1F       		.uleb128 0x1f
 2884 0673 B1020000 		.4byte	0x2b1
 2885 0677 36010000 		.4byte	.LBB55
 2886 067b 08000000 		.4byte	.LBE55-.LBB55
 2887 067f 01       		.byte	0x1
 2888 0680 AB02     		.2byte	0x2ab
 2889 0682 20       		.uleb128 0x20
 2890 0683 BE020000 		.4byte	0x2be
 2891 0687 02       		.uleb128 0x2
 2892 0688 91       		.byte	0x91
 2893 0689 5C       		.sleb128 -36
 2894 068a 00       		.byte	0
 2895 068b 00       		.byte	0
 2896 068c 00       		.byte	0
 2897 068d 1A       		.uleb128 0x1a
 2898 068e 79030000 		.4byte	.LASF81
 2899 0692 01       		.byte	0x1
 2900 0693 B802     		.2byte	0x2b8
 2901 0695 22020000 		.4byte	0x222
 2902 0699 00000000 		.4byte	.LFB78
 2903 069d 88020000 		.4byte	.LFE78-.LFB78
 2904 06a1 01       		.uleb128 0x1
 2905 06a2 9C       		.byte	0x9c
 2906 06a3 D5080000 		.4byte	0x8d5
 2907 06a7 18       		.uleb128 0x18
 2908 06a8 82060000 		.4byte	.LASF77
 2909 06ac 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 71


 2910 06ad BA02     		.2byte	0x2ba
 2911 06af 2D020000 		.4byte	0x22d
 2912 06b3 03       		.uleb128 0x3
 2913 06b4 91       		.byte	0x91
 2914 06b5 A47F     		.sleb128 -92
 2915 06b7 18       		.uleb128 0x18
 2916 06b8 C3040000 		.4byte	.LASF76
 2917 06bc 01       		.byte	0x1
 2918 06bd BB02     		.2byte	0x2bb
 2919 06bf 22020000 		.4byte	0x222
 2920 06c3 03       		.uleb128 0x3
 2921 06c4 91       		.byte	0x91
 2922 06c5 A07F     		.sleb128 -96
 2923 06c7 18       		.uleb128 0x18
 2924 06c8 6D020000 		.4byte	.LASF78
 2925 06cc 01       		.byte	0x1
 2926 06cd BC02     		.2byte	0x2bc
 2927 06cf 2D020000 		.4byte	0x22d
 2928 06d3 05       		.uleb128 0x5
 2929 06d4 03       		.byte	0x3
 2930 06d5 BC010000 		.4byte	uxNextOperation.7238
 2931 06d9 1B       		.uleb128 0x1b
 2932 06da 32000000 		.4byte	.LBB57
 2933 06de 4E000000 		.4byte	.LBE57-.LBB57
 2934 06e2 40070000 		.4byte	0x740
 2935 06e6 18       		.uleb128 0x18
 2936 06e7 EE060000 		.4byte	.LASF79
 2937 06eb 01       		.byte	0x1
 2938 06ec C502     		.2byte	0x2c5
 2939 06ee 2D020000 		.4byte	0x22d
 2940 06f2 02       		.uleb128 0x2
 2941 06f3 91       		.byte	0x91
 2942 06f4 70       		.sleb128 -16
 2943 06f5 1C       		.uleb128 0x1c
 2944 06f6 8A020000 		.4byte	0x28a
 2945 06fa 32000000 		.4byte	.LBB58
 2946 06fe 1A000000 		.4byte	.LBE58-.LBB58
 2947 0702 01       		.byte	0x1
 2948 0703 C502     		.2byte	0x2c5
 2949 0705 26070000 		.4byte	0x726
 2950 0709 1D       		.uleb128 0x1d
 2951 070a 32000000 		.4byte	.LBB59
 2952 070e 1A000000 		.4byte	.LBE59-.LBB59
 2953 0712 1E       		.uleb128 0x1e
 2954 0713 9A020000 		.4byte	0x29a
 2955 0717 03       		.uleb128 0x3
 2956 0718 91       		.byte	0x91
 2957 0719 BC7F     		.sleb128 -68
 2958 071b 1E       		.uleb128 0x1e
 2959 071c A5020000 		.4byte	0x2a5
 2960 0720 03       		.uleb128 0x3
 2961 0721 91       		.byte	0x91
 2962 0722 B87F     		.sleb128 -72
 2963 0724 00       		.byte	0
 2964 0725 00       		.byte	0
 2965 0726 1F       		.uleb128 0x1f
 2966 0727 B1020000 		.4byte	0x2b1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 72


 2967 072b 7A000000 		.4byte	.LBB60
 2968 072f 06000000 		.4byte	.LBE60-.LBB60
 2969 0733 01       		.byte	0x1
 2970 0734 C502     		.2byte	0x2c5
 2971 0736 20       		.uleb128 0x20
 2972 0737 BE020000 		.4byte	0x2be
 2973 073b 02       		.uleb128 0x2
 2974 073c 91       		.byte	0x91
 2975 073d 74       		.sleb128 -12
 2976 073e 00       		.byte	0
 2977 073f 00       		.byte	0
 2978 0740 1B       		.uleb128 0x1b
 2979 0741 90000000 		.4byte	.LBB62
 2980 0745 4E000000 		.4byte	.LBE62-.LBB62
 2981 0749 A6070000 		.4byte	0x7a6
 2982 074d 18       		.uleb128 0x18
 2983 074e EE060000 		.4byte	.LASF79
 2984 0752 01       		.byte	0x1
 2985 0753 C602     		.2byte	0x2c6
 2986 0755 2D020000 		.4byte	0x22d
 2987 0759 02       		.uleb128 0x2
 2988 075a 91       		.byte	0x91
 2989 075b 64       		.sleb128 -28
 2990 075c 1C       		.uleb128 0x1c
 2991 075d 8A020000 		.4byte	0x28a
 2992 0761 90000000 		.4byte	.LBB63
 2993 0765 1A000000 		.4byte	.LBE63-.LBB63
 2994 0769 01       		.byte	0x1
 2995 076a C602     		.2byte	0x2c6
 2996 076c 8C070000 		.4byte	0x78c
 2997 0770 1D       		.uleb128 0x1d
 2998 0771 90000000 		.4byte	.LBB64
 2999 0775 1A000000 		.4byte	.LBE64-.LBB64
 3000 0779 1E       		.uleb128 0x1e
 3001 077a 9A020000 		.4byte	0x29a
 3002 077e 02       		.uleb128 0x2
 3003 077f 91       		.byte	0x91
 3004 0780 6C       		.sleb128 -20
 3005 0781 1E       		.uleb128 0x1e
 3006 0782 A5020000 		.4byte	0x2a5
 3007 0786 03       		.uleb128 0x3
 3008 0787 91       		.byte	0x91
 3009 0788 B47F     		.sleb128 -76
 3010 078a 00       		.byte	0
 3011 078b 00       		.byte	0
 3012 078c 1F       		.uleb128 0x1f
 3013 078d B1020000 		.4byte	0x2b1
 3014 0791 D8000000 		.4byte	.LBB65
 3015 0795 06000000 		.4byte	.LBE65-.LBB65
 3016 0799 01       		.byte	0x1
 3017 079a C602     		.2byte	0x2c6
 3018 079c 20       		.uleb128 0x20
 3019 079d BE020000 		.4byte	0x2be
 3020 07a1 02       		.uleb128 0x2
 3021 07a2 91       		.byte	0x91
 3022 07a3 68       		.sleb128 -24
 3023 07a4 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 73


 3024 07a5 00       		.byte	0
 3025 07a6 1B       		.uleb128 0x1b
 3026 07a7 5E010000 		.4byte	.LBB67
 3027 07ab 4E000000 		.4byte	.LBE67-.LBB67
 3028 07af 0C080000 		.4byte	0x80c
 3029 07b3 18       		.uleb128 0x18
 3030 07b4 EE060000 		.4byte	.LASF79
 3031 07b8 01       		.byte	0x1
 3032 07b9 CE02     		.2byte	0x2ce
 3033 07bb 2D020000 		.4byte	0x22d
 3034 07bf 02       		.uleb128 0x2
 3035 07c0 91       		.byte	0x91
 3036 07c1 58       		.sleb128 -40
 3037 07c2 1C       		.uleb128 0x1c
 3038 07c3 8A020000 		.4byte	0x28a
 3039 07c7 5E010000 		.4byte	.LBB68
 3040 07cb 1A000000 		.4byte	.LBE68-.LBB68
 3041 07cf 01       		.byte	0x1
 3042 07d0 CE02     		.2byte	0x2ce
 3043 07d2 F2070000 		.4byte	0x7f2
 3044 07d6 1D       		.uleb128 0x1d
 3045 07d7 5E010000 		.4byte	.LBB69
 3046 07db 1A000000 		.4byte	.LBE69-.LBB69
 3047 07df 1E       		.uleb128 0x1e
 3048 07e0 9A020000 		.4byte	0x29a
 3049 07e4 02       		.uleb128 0x2
 3050 07e5 91       		.byte	0x91
 3051 07e6 60       		.sleb128 -32
 3052 07e7 1E       		.uleb128 0x1e
 3053 07e8 A5020000 		.4byte	0x2a5
 3054 07ec 03       		.uleb128 0x3
 3055 07ed 91       		.byte	0x91
 3056 07ee B07F     		.sleb128 -80
 3057 07f0 00       		.byte	0
 3058 07f1 00       		.byte	0
 3059 07f2 1F       		.uleb128 0x1f
 3060 07f3 B1020000 		.4byte	0x2b1
 3061 07f7 A6010000 		.4byte	.LBB70
 3062 07fb 06000000 		.4byte	.LBE70-.LBB70
 3063 07ff 01       		.byte	0x1
 3064 0800 CE02     		.2byte	0x2ce
 3065 0802 20       		.uleb128 0x20
 3066 0803 BE020000 		.4byte	0x2be
 3067 0807 02       		.uleb128 0x2
 3068 0808 91       		.byte	0x91
 3069 0809 5C       		.sleb128 -36
 3070 080a 00       		.byte	0
 3071 080b 00       		.byte	0
 3072 080c 1B       		.uleb128 0x1b
 3073 080d BC010000 		.4byte	.LBB72
 3074 0811 4E000000 		.4byte	.LBE72-.LBB72
 3075 0815 72080000 		.4byte	0x872
 3076 0819 18       		.uleb128 0x18
 3077 081a EE060000 		.4byte	.LASF79
 3078 081e 01       		.byte	0x1
 3079 081f CF02     		.2byte	0x2cf
 3080 0821 2D020000 		.4byte	0x22d
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 74


 3081 0825 02       		.uleb128 0x2
 3082 0826 91       		.byte	0x91
 3083 0827 4C       		.sleb128 -52
 3084 0828 1C       		.uleb128 0x1c
 3085 0829 8A020000 		.4byte	0x28a
 3086 082d BC010000 		.4byte	.LBB73
 3087 0831 1A000000 		.4byte	.LBE73-.LBB73
 3088 0835 01       		.byte	0x1
 3089 0836 CF02     		.2byte	0x2cf
 3090 0838 58080000 		.4byte	0x858
 3091 083c 1D       		.uleb128 0x1d
 3092 083d BC010000 		.4byte	.LBB74
 3093 0841 1A000000 		.4byte	.LBE74-.LBB74
 3094 0845 1E       		.uleb128 0x1e
 3095 0846 9A020000 		.4byte	0x29a
 3096 084a 02       		.uleb128 0x2
 3097 084b 91       		.byte	0x91
 3098 084c 54       		.sleb128 -44
 3099 084d 1E       		.uleb128 0x1e
 3100 084e A5020000 		.4byte	0x2a5
 3101 0852 03       		.uleb128 0x3
 3102 0853 91       		.byte	0x91
 3103 0854 AC7F     		.sleb128 -84
 3104 0856 00       		.byte	0
 3105 0857 00       		.byte	0
 3106 0858 1F       		.uleb128 0x1f
 3107 0859 B1020000 		.4byte	0x2b1
 3108 085d 04020000 		.4byte	.LBB75
 3109 0861 06000000 		.4byte	.LBE75-.LBB75
 3110 0865 01       		.byte	0x1
 3111 0866 CF02     		.2byte	0x2cf
 3112 0868 20       		.uleb128 0x20
 3113 0869 BE020000 		.4byte	0x2be
 3114 086d 02       		.uleb128 0x2
 3115 086e 91       		.byte	0x91
 3116 086f 50       		.sleb128 -48
 3117 0870 00       		.byte	0
 3118 0871 00       		.byte	0
 3119 0872 1D       		.uleb128 0x1d
 3120 0873 1A020000 		.4byte	.LBB77
 3121 0877 4E000000 		.4byte	.LBE77-.LBB77
 3122 087b 18       		.uleb128 0x18
 3123 087c EE060000 		.4byte	.LASF79
 3124 0880 01       		.byte	0x1
 3125 0881 D002     		.2byte	0x2d0
 3126 0883 2D020000 		.4byte	0x22d
 3127 0887 02       		.uleb128 0x2
 3128 0888 91       		.byte	0x91
 3129 0889 40       		.sleb128 -64
 3130 088a 1C       		.uleb128 0x1c
 3131 088b 8A020000 		.4byte	0x28a
 3132 088f 1A020000 		.4byte	.LBB78
 3133 0893 1A000000 		.4byte	.LBE78-.LBB78
 3134 0897 01       		.byte	0x1
 3135 0898 D002     		.2byte	0x2d0
 3136 089a BA080000 		.4byte	0x8ba
 3137 089e 1D       		.uleb128 0x1d
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 75


 3138 089f 1A020000 		.4byte	.LBB79
 3139 08a3 1A000000 		.4byte	.LBE79-.LBB79
 3140 08a7 1E       		.uleb128 0x1e
 3141 08a8 9A020000 		.4byte	0x29a
 3142 08ac 02       		.uleb128 0x2
 3143 08ad 91       		.byte	0x91
 3144 08ae 48       		.sleb128 -56
 3145 08af 1E       		.uleb128 0x1e
 3146 08b0 A5020000 		.4byte	0x2a5
 3147 08b4 03       		.uleb128 0x3
 3148 08b5 91       		.byte	0x91
 3149 08b6 A87F     		.sleb128 -88
 3150 08b8 00       		.byte	0
 3151 08b9 00       		.byte	0
 3152 08ba 1F       		.uleb128 0x1f
 3153 08bb B1020000 		.4byte	0x2b1
 3154 08bf 62020000 		.4byte	.LBB80
 3155 08c3 06000000 		.4byte	.LBE80-.LBB80
 3156 08c7 01       		.byte	0x1
 3157 08c8 D002     		.2byte	0x2d0
 3158 08ca 20       		.uleb128 0x20
 3159 08cb BE020000 		.4byte	0x2be
 3160 08cf 02       		.uleb128 0x2
 3161 08d0 91       		.byte	0x91
 3162 08d1 44       		.sleb128 -60
 3163 08d2 00       		.byte	0
 3164 08d3 00       		.byte	0
 3165 08d4 00       		.byte	0
 3166 08d5 1A       		.uleb128 0x1a
 3167 08d6 34040000 		.4byte	.LASF82
 3168 08da 01       		.byte	0x1
 3169 08db D802     		.2byte	0x2d8
 3170 08dd 22020000 		.4byte	0x222
 3171 08e1 00000000 		.4byte	.LFB79
 3172 08e5 A0000000 		.4byte	.LFE79-.LFB79
 3173 08e9 01       		.uleb128 0x1
 3174 08ea 9C       		.byte	0x9c
 3175 08eb 38090000 		.4byte	0x938
 3176 08ef 18       		.uleb128 0x18
 3177 08f0 47030000 		.4byte	.LASF83
 3178 08f4 01       		.byte	0x1
 3179 08f5 DA02     		.2byte	0x2da
 3180 08f7 2D020000 		.4byte	0x22d
 3181 08fb 05       		.uleb128 0x5
 3182 08fc 03       		.byte	0x3
 3183 08fd C0010000 		.4byte	uxLastHighPriorityLoops1.7247
 3184 0901 18       		.uleb128 0x18
 3185 0902 60030000 		.4byte	.LASF84
 3186 0906 01       		.byte	0x1
 3187 0907 DA02     		.2byte	0x2da
 3188 0909 2D020000 		.4byte	0x22d
 3189 090d 05       		.uleb128 0x5
 3190 090e 03       		.byte	0x3
 3191 090f C4010000 		.4byte	uxLastHighPriorityLoops2.7248
 3192 0913 18       		.uleb128 0x18
 3193 0914 A8010000 		.4byte	.LASF85
 3194 0918 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 76


 3195 0919 DA02     		.2byte	0x2da
 3196 091b 2D020000 		.4byte	0x22d
 3197 091f 05       		.uleb128 0x5
 3198 0920 03       		.byte	0x3
 3199 0921 C8010000 		.4byte	uxLastLowPriorityLoops1.7249
 3200 0925 18       		.uleb128 0x18
 3201 0926 C0010000 		.4byte	.LASF86
 3202 092a 01       		.byte	0x1
 3203 092b DA02     		.2byte	0x2da
 3204 092d 2D020000 		.4byte	0x22d
 3205 0931 05       		.uleb128 0x5
 3206 0932 03       		.byte	0x3
 3207 0933 CC010000 		.4byte	uxLastLowPriorityLoops2.7250
 3208 0937 00       		.byte	0
 3209 0938 21       		.uleb128 0x21
 3210 0939 EE010000 		.4byte	.LASF87
 3211 093d 01       		.byte	0x1
 3212 093e C3       		.byte	0xc3
 3213 093f 43020000 		.4byte	0x243
 3214 0943 05       		.uleb128 0x5
 3215 0944 03       		.byte	0x3
 3216 0945 00000000 		.4byte	xNormallyEmptyQueue
 3217 0949 21       		.uleb128 0x21
 3218 094a 3F070000 		.4byte	.LASF88
 3219 094e 01       		.byte	0x1
 3220 094f C3       		.byte	0xc3
 3221 0950 43020000 		.4byte	0x243
 3222 0954 05       		.uleb128 0x5
 3223 0955 03       		.byte	0x3
 3224 0956 04000000 		.4byte	xNormallyFullQueue
 3225 095a 21       		.uleb128 0x21
 3226 095b 9D030000 		.4byte	.LASF89
 3227 095f 01       		.byte	0x1
 3228 0960 C6       		.byte	0xc6
 3229 0961 6B090000 		.4byte	0x96b
 3230 0965 05       		.uleb128 0x5
 3231 0966 03       		.byte	0x3
 3232 0967 08000000 		.4byte	uxHighPriorityLoops1
 3233 096b 22       		.uleb128 0x22
 3234 096c 2D020000 		.4byte	0x22d
 3235 0970 21       		.uleb128 0x21
 3236 0971 DD030000 		.4byte	.LASF90
 3237 0975 01       		.byte	0x1
 3238 0976 C6       		.byte	0xc6
 3239 0977 6B090000 		.4byte	0x96b
 3240 097b 05       		.uleb128 0x5
 3241 097c 03       		.byte	0x3
 3242 097d 0C000000 		.4byte	uxHighPriorityLoops2
 3243 0981 21       		.uleb128 0x21
 3244 0982 52070000 		.4byte	.LASF91
 3245 0986 01       		.byte	0x1
 3246 0987 C6       		.byte	0xc6
 3247 0988 6B090000 		.4byte	0x96b
 3248 098c 05       		.uleb128 0x5
 3249 098d 03       		.byte	0x3
 3250 098e 10000000 		.4byte	uxLowPriorityLoops1
 3251 0992 21       		.uleb128 0x21
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 77


 3252 0993 02020000 		.4byte	.LASF92
 3253 0997 01       		.byte	0x1
 3254 0998 C6       		.byte	0xc6
 3255 0999 6B090000 		.4byte	0x96b
 3256 099d 05       		.uleb128 0x5
 3257 099e 03       		.byte	0x3
 3258 099f 14000000 		.4byte	uxLowPriorityLoops2
 3259 09a3 21       		.uleb128 0x21
 3260 09a4 97000000 		.4byte	.LASF93
 3261 09a8 01       		.byte	0x1
 3262 09a9 CA       		.byte	0xca
 3263 09aa 22020000 		.4byte	0x222
 3264 09ae 05       		.uleb128 0x5
 3265 09af 03       		.byte	0x3
 3266 09b0 00000000 		.4byte	xErrorStatus
 3267 09b4 21       		.uleb128 0x21
 3268 09b5 C4050000 		.4byte	.LASF94
 3269 09b9 01       		.byte	0x1
 3270 09ba CB       		.byte	0xcb
 3271 09bb 6B090000 		.4byte	0x96b
 3272 09bf 05       		.uleb128 0x5
 3273 09c0 03       		.byte	0x3
 3274 09c1 18000000 		.4byte	xErrorLine
 3275 09c5 21       		.uleb128 0x21
 3276 09c6 52040000 		.4byte	.LASF95
 3277 09ca 01       		.byte	0x1
 3278 09cb CE       		.byte	0xce
 3279 09cc 22020000 		.4byte	0x222
 3280 09d0 05       		.uleb128 0x5
 3281 09d1 03       		.byte	0x3
 3282 09d2 1C000000 		.4byte	xWasSuspended
 3283 09d6 21       		.uleb128 0x21
 3284 09d7 E9050000 		.4byte	.LASF96
 3285 09db 01       		.byte	0x1
 3286 09dc D2       		.byte	0xd2
 3287 09dd 6B090000 		.4byte	0x96b
 3288 09e1 05       		.uleb128 0x5
 3289 09e2 03       		.byte	0x3
 3290 09e3 20000000 		.4byte	uxValueForNormallyEmptyQueue
 3291 09e7 21       		.uleb128 0x21
 3292 09e8 45060000 		.4byte	.LASF97
 3293 09ec 01       		.byte	0x1
 3294 09ed D2       		.byte	0xd2
 3295 09ee 6B090000 		.4byte	0x96b
 3296 09f2 05       		.uleb128 0x5
 3297 09f3 03       		.byte	0x3
 3298 09f4 24000000 		.4byte	uxValueForNormallyFullQueue
 3299 09f8 0A       		.uleb128 0xa
 3300 09f9 A3000000 		.4byte	0xa3
 3301 09fd 080A0000 		.4byte	0xa08
 3302 0a01 0B       		.uleb128 0xb
 3303 0a02 93000000 		.4byte	0x93
 3304 0a06 C7       		.byte	0xc7
 3305 0a07 00       		.byte	0
 3306 0a08 21       		.uleb128 0x21
 3307 0a09 05070000 		.4byte	.LASF98
 3308 0a0d 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 78


 3309 0a0e DB       		.byte	0xdb
 3310 0a0f F8090000 		.4byte	0x9f8
 3311 0a13 05       		.uleb128 0x5
 3312 0a14 03       		.byte	0x3
 3313 0a15 28000000 		.4byte	ucNormallyEmptyReceivedValues
 3314 0a19 21       		.uleb128 0x21
 3315 0a1a 0B040000 		.4byte	.LASF99
 3316 0a1e 01       		.byte	0x1
 3317 0a1f DC       		.byte	0xdc
 3318 0a20 F8090000 		.4byte	0x9f8
 3319 0a24 05       		.uleb128 0x5
 3320 0a25 03       		.byte	0x3
 3321 0a26 F0000000 		.4byte	ucNormallyFullReceivedValues
 3322 0a2a 23       		.uleb128 0x23
 3323 0a2b 71070000 		.4byte	.LASF100
 3324 0a2f 09       		.byte	0x9
 3325 0a30 9606     		.2byte	0x696
 3326 0a32 360A0000 		.4byte	0xa36
 3327 0a36 22       		.uleb128 0x22
 3328 0a37 AE000000 		.4byte	0xae
 3329 0a3b 0A       		.uleb128 0xa
 3330 0a3c A3000000 		.4byte	0xa3
 3331 0a40 4B0A0000 		.4byte	0xa4b
 3332 0a44 0B       		.uleb128 0xb
 3333 0a45 93000000 		.4byte	0x93
 3334 0a49 0C       		.byte	0xc
 3335 0a4a 00       		.byte	0
 3336 0a4b 24       		.uleb128 0x24
 3337 0a4c 39030000 		.4byte	.LASF101
 3338 0a50 05       		.byte	0x5
 3339 0a51 12       		.byte	0x12
 3340 0a52 3B0A0000 		.4byte	0xa3b
 3341 0a56 05       		.uleb128 0x5
 3342 0a57 03       		.byte	0x3
 3343 0a58 00000000 		.4byte	sniffIDFilter
 3344 0a5c 24       		.uleb128 0x24
 3345 0a5d CF050000 		.4byte	.LASF102
 3346 0a61 06       		.byte	0x6
 3347 0a62 10       		.byte	0x10
 3348 0a63 DD010000 		.4byte	0x1dd
 3349 0a67 05       		.uleb128 0x5
 3350 0a68 03       		.byte	0x3
 3351 0a69 00000000 		.4byte	buffer
 3352 0a6d 0A       		.uleb128 0xa
 3353 0a6e D2010000 		.4byte	0x1d2
 3354 0a72 7D0A0000 		.4byte	0xa7d
 3355 0a76 0B       		.uleb128 0xb
 3356 0a77 93000000 		.4byte	0x93
 3357 0a7b 05       		.byte	0x5
 3358 0a7c 00       		.byte	0
 3359 0a7d 24       		.uleb128 0x24
 3360 0a7e C7060000 		.4byte	.LASF103
 3361 0a82 0A       		.byte	0xa
 3362 0a83 0D       		.byte	0xd
 3363 0a84 6D0A0000 		.4byte	0xa6d
 3364 0a88 05       		.uleb128 0x5
 3365 0a89 03       		.byte	0x3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 79


 3366 0a8a 00000000 		.4byte	objectList
 3367 0a8e 24       		.uleb128 0x24
 3368 0a8f 68010000 		.4byte	.LASF104
 3369 0a93 01       		.byte	0x1
 3370 0a94 D5       		.byte	0xd5
 3371 0a95 4E020000 		.4byte	0x24e
 3372 0a99 05       		.uleb128 0x5
 3373 0a9a 03       		.byte	0x3
 3374 0a9b 00000000 		.4byte	xHighPriorityNormallyEmptyTask1
 3375 0a9f 24       		.uleb128 0x24
 3376 0aa0 88010000 		.4byte	.LASF105
 3377 0aa4 01       		.byte	0x1
 3378 0aa5 D5       		.byte	0xd5
 3379 0aa6 4E020000 		.4byte	0x24e
 3380 0aaa 05       		.uleb128 0x5
 3381 0aab 03       		.byte	0x3
 3382 0aac 00000000 		.4byte	xHighPriorityNormallyEmptyTask2
 3383 0ab0 24       		.uleb128 0x24
 3384 0ab1 17000000 		.4byte	.LASF106
 3385 0ab5 01       		.byte	0x1
 3386 0ab6 D5       		.byte	0xd5
 3387 0ab7 4E020000 		.4byte	0x24e
 3388 0abb 05       		.uleb128 0x5
 3389 0abc 03       		.byte	0x3
 3390 0abd 00000000 		.4byte	xHighPriorityNormallyFullTask1
 3391 0ac1 24       		.uleb128 0x24
 3392 0ac2 36000000 		.4byte	.LASF107
 3393 0ac6 01       		.byte	0x1
 3394 0ac7 D5       		.byte	0xd5
 3395 0ac8 4E020000 		.4byte	0x24e
 3396 0acc 05       		.uleb128 0x5
 3397 0acd 03       		.byte	0x3
 3398 0ace 00000000 		.4byte	xHighPriorityNormallyFullTask2
 3399 0ad2 00       		.byte	0
 3400              		.section	.debug_abbrev,"",%progbits
 3401              	.Ldebug_abbrev0:
 3402 0000 01       		.uleb128 0x1
 3403 0001 11       		.uleb128 0x11
 3404 0002 01       		.byte	0x1
 3405 0003 25       		.uleb128 0x25
 3406 0004 0E       		.uleb128 0xe
 3407 0005 13       		.uleb128 0x13
 3408 0006 0B       		.uleb128 0xb
 3409 0007 03       		.uleb128 0x3
 3410 0008 0E       		.uleb128 0xe
 3411 0009 1B       		.uleb128 0x1b
 3412 000a 0E       		.uleb128 0xe
 3413 000b 55       		.uleb128 0x55
 3414 000c 17       		.uleb128 0x17
 3415 000d 11       		.uleb128 0x11
 3416 000e 01       		.uleb128 0x1
 3417 000f 10       		.uleb128 0x10
 3418 0010 17       		.uleb128 0x17
 3419 0011 00       		.byte	0
 3420 0012 00       		.byte	0
 3421 0013 02       		.uleb128 0x2
 3422 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 80


 3423 0015 00       		.byte	0
 3424 0016 0B       		.uleb128 0xb
 3425 0017 0B       		.uleb128 0xb
 3426 0018 3E       		.uleb128 0x3e
 3427 0019 0B       		.uleb128 0xb
 3428 001a 03       		.uleb128 0x3
 3429 001b 08       		.uleb128 0x8
 3430 001c 00       		.byte	0
 3431 001d 00       		.byte	0
 3432 001e 03       		.uleb128 0x3
 3433 001f 24       		.uleb128 0x24
 3434 0020 00       		.byte	0
 3435 0021 0B       		.uleb128 0xb
 3436 0022 0B       		.uleb128 0xb
 3437 0023 3E       		.uleb128 0x3e
 3438 0024 0B       		.uleb128 0xb
 3439 0025 03       		.uleb128 0x3
 3440 0026 0E       		.uleb128 0xe
 3441 0027 00       		.byte	0
 3442 0028 00       		.byte	0
 3443 0029 04       		.uleb128 0x4
 3444 002a 16       		.uleb128 0x16
 3445 002b 00       		.byte	0
 3446 002c 03       		.uleb128 0x3
 3447 002d 0E       		.uleb128 0xe
 3448 002e 3A       		.uleb128 0x3a
 3449 002f 0B       		.uleb128 0xb
 3450 0030 3B       		.uleb128 0x3b
 3451 0031 0B       		.uleb128 0xb
 3452 0032 49       		.uleb128 0x49
 3453 0033 13       		.uleb128 0x13
 3454 0034 00       		.byte	0
 3455 0035 00       		.byte	0
 3456 0036 05       		.uleb128 0x5
 3457 0037 0F       		.uleb128 0xf
 3458 0038 00       		.byte	0
 3459 0039 0B       		.uleb128 0xb
 3460 003a 0B       		.uleb128 0xb
 3461 003b 00       		.byte	0
 3462 003c 00       		.byte	0
 3463 003d 06       		.uleb128 0x6
 3464 003e 04       		.uleb128 0x4
 3465 003f 01       		.byte	0x1
 3466 0040 0B       		.uleb128 0xb
 3467 0041 0B       		.uleb128 0xb
 3468 0042 49       		.uleb128 0x49
 3469 0043 13       		.uleb128 0x13
 3470 0044 3A       		.uleb128 0x3a
 3471 0045 0B       		.uleb128 0xb
 3472 0046 3B       		.uleb128 0x3b
 3473 0047 0B       		.uleb128 0xb
 3474 0048 01       		.uleb128 0x1
 3475 0049 13       		.uleb128 0x13
 3476 004a 00       		.byte	0
 3477 004b 00       		.byte	0
 3478 004c 07       		.uleb128 0x7
 3479 004d 28       		.uleb128 0x28
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 81


 3480 004e 00       		.byte	0
 3481 004f 03       		.uleb128 0x3
 3482 0050 0E       		.uleb128 0xe
 3483 0051 1C       		.uleb128 0x1c
 3484 0052 0B       		.uleb128 0xb
 3485 0053 00       		.byte	0
 3486 0054 00       		.byte	0
 3487 0055 08       		.uleb128 0x8
 3488 0056 13       		.uleb128 0x13
 3489 0057 01       		.byte	0x1
 3490 0058 0B       		.uleb128 0xb
 3491 0059 0B       		.uleb128 0xb
 3492 005a 3A       		.uleb128 0x3a
 3493 005b 0B       		.uleb128 0xb
 3494 005c 3B       		.uleb128 0x3b
 3495 005d 0B       		.uleb128 0xb
 3496 005e 01       		.uleb128 0x1
 3497 005f 13       		.uleb128 0x13
 3498 0060 00       		.byte	0
 3499 0061 00       		.byte	0
 3500 0062 09       		.uleb128 0x9
 3501 0063 0D       		.uleb128 0xd
 3502 0064 00       		.byte	0
 3503 0065 03       		.uleb128 0x3
 3504 0066 0E       		.uleb128 0xe
 3505 0067 3A       		.uleb128 0x3a
 3506 0068 0B       		.uleb128 0xb
 3507 0069 3B       		.uleb128 0x3b
 3508 006a 0B       		.uleb128 0xb
 3509 006b 49       		.uleb128 0x49
 3510 006c 13       		.uleb128 0x13
 3511 006d 38       		.uleb128 0x38
 3512 006e 0B       		.uleb128 0xb
 3513 006f 00       		.byte	0
 3514 0070 00       		.byte	0
 3515 0071 0A       		.uleb128 0xa
 3516 0072 01       		.uleb128 0x1
 3517 0073 01       		.byte	0x1
 3518 0074 49       		.uleb128 0x49
 3519 0075 13       		.uleb128 0x13
 3520 0076 01       		.uleb128 0x1
 3521 0077 13       		.uleb128 0x13
 3522 0078 00       		.byte	0
 3523 0079 00       		.byte	0
 3524 007a 0B       		.uleb128 0xb
 3525 007b 21       		.uleb128 0x21
 3526 007c 00       		.byte	0
 3527 007d 49       		.uleb128 0x49
 3528 007e 13       		.uleb128 0x13
 3529 007f 2F       		.uleb128 0x2f
 3530 0080 0B       		.uleb128 0xb
 3531 0081 00       		.byte	0
 3532 0082 00       		.byte	0
 3533 0083 0C       		.uleb128 0xc
 3534 0084 13       		.uleb128 0x13
 3535 0085 01       		.byte	0x1
 3536 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 82


 3537 0087 05       		.uleb128 0x5
 3538 0088 3A       		.uleb128 0x3a
 3539 0089 0B       		.uleb128 0xb
 3540 008a 3B       		.uleb128 0x3b
 3541 008b 0B       		.uleb128 0xb
 3542 008c 01       		.uleb128 0x1
 3543 008d 13       		.uleb128 0x13
 3544 008e 00       		.byte	0
 3545 008f 00       		.byte	0
 3546 0090 0D       		.uleb128 0xd
 3547 0091 13       		.uleb128 0x13
 3548 0092 01       		.byte	0x1
 3549 0093 03       		.uleb128 0x3
 3550 0094 0E       		.uleb128 0xe
 3551 0095 0B       		.uleb128 0xb
 3552 0096 05       		.uleb128 0x5
 3553 0097 3A       		.uleb128 0x3a
 3554 0098 0B       		.uleb128 0xb
 3555 0099 3B       		.uleb128 0x3b
 3556 009a 0B       		.uleb128 0xb
 3557 009b 01       		.uleb128 0x1
 3558 009c 13       		.uleb128 0x13
 3559 009d 00       		.byte	0
 3560 009e 00       		.byte	0
 3561 009f 0E       		.uleb128 0xe
 3562 00a0 0D       		.uleb128 0xd
 3563 00a1 00       		.byte	0
 3564 00a2 03       		.uleb128 0x3
 3565 00a3 0E       		.uleb128 0xe
 3566 00a4 3A       		.uleb128 0x3a
 3567 00a5 0B       		.uleb128 0xb
 3568 00a6 3B       		.uleb128 0x3b
 3569 00a7 0B       		.uleb128 0xb
 3570 00a8 49       		.uleb128 0x49
 3571 00a9 13       		.uleb128 0x13
 3572 00aa 38       		.uleb128 0x38
 3573 00ab 05       		.uleb128 0x5
 3574 00ac 00       		.byte	0
 3575 00ad 00       		.byte	0
 3576 00ae 0F       		.uleb128 0xf
 3577 00af 21       		.uleb128 0x21
 3578 00b0 00       		.byte	0
 3579 00b1 49       		.uleb128 0x49
 3580 00b2 13       		.uleb128 0x13
 3581 00b3 2F       		.uleb128 0x2f
 3582 00b4 05       		.uleb128 0x5
 3583 00b5 00       		.byte	0
 3584 00b6 00       		.byte	0
 3585 00b7 10       		.uleb128 0x10
 3586 00b8 2E       		.uleb128 0x2e
 3587 00b9 01       		.byte	0x1
 3588 00ba 03       		.uleb128 0x3
 3589 00bb 0E       		.uleb128 0xe
 3590 00bc 3A       		.uleb128 0x3a
 3591 00bd 0B       		.uleb128 0xb
 3592 00be 3B       		.uleb128 0x3b
 3593 00bf 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 83


 3594 00c0 27       		.uleb128 0x27
 3595 00c1 19       		.uleb128 0x19
 3596 00c2 49       		.uleb128 0x49
 3597 00c3 13       		.uleb128 0x13
 3598 00c4 20       		.uleb128 0x20
 3599 00c5 0B       		.uleb128 0xb
 3600 00c6 01       		.uleb128 0x1
 3601 00c7 13       		.uleb128 0x13
 3602 00c8 00       		.byte	0
 3603 00c9 00       		.byte	0
 3604 00ca 11       		.uleb128 0x11
 3605 00cb 34       		.uleb128 0x34
 3606 00cc 00       		.byte	0
 3607 00cd 03       		.uleb128 0x3
 3608 00ce 0E       		.uleb128 0xe
 3609 00cf 3A       		.uleb128 0x3a
 3610 00d0 0B       		.uleb128 0xb
 3611 00d1 3B       		.uleb128 0x3b
 3612 00d2 0B       		.uleb128 0xb
 3613 00d3 49       		.uleb128 0x49
 3614 00d4 13       		.uleb128 0x13
 3615 00d5 00       		.byte	0
 3616 00d6 00       		.byte	0
 3617 00d7 12       		.uleb128 0x12
 3618 00d8 2E       		.uleb128 0x2e
 3619 00d9 01       		.byte	0x1
 3620 00da 03       		.uleb128 0x3
 3621 00db 0E       		.uleb128 0xe
 3622 00dc 3A       		.uleb128 0x3a
 3623 00dd 0B       		.uleb128 0xb
 3624 00de 3B       		.uleb128 0x3b
 3625 00df 05       		.uleb128 0x5
 3626 00e0 27       		.uleb128 0x27
 3627 00e1 19       		.uleb128 0x19
 3628 00e2 20       		.uleb128 0x20
 3629 00e3 0B       		.uleb128 0xb
 3630 00e4 01       		.uleb128 0x1
 3631 00e5 13       		.uleb128 0x13
 3632 00e6 00       		.byte	0
 3633 00e7 00       		.byte	0
 3634 00e8 13       		.uleb128 0x13
 3635 00e9 05       		.uleb128 0x5
 3636 00ea 00       		.byte	0
 3637 00eb 03       		.uleb128 0x3
 3638 00ec 0E       		.uleb128 0xe
 3639 00ed 3A       		.uleb128 0x3a
 3640 00ee 0B       		.uleb128 0xb
 3641 00ef 3B       		.uleb128 0x3b
 3642 00f0 05       		.uleb128 0x5
 3643 00f1 49       		.uleb128 0x49
 3644 00f2 13       		.uleb128 0x13
 3645 00f3 00       		.byte	0
 3646 00f4 00       		.byte	0
 3647 00f5 14       		.uleb128 0x14
 3648 00f6 2E       		.uleb128 0x2e
 3649 00f7 00       		.byte	0
 3650 00f8 3F       		.uleb128 0x3f
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 84


 3651 00f9 19       		.uleb128 0x19
 3652 00fa 03       		.uleb128 0x3
 3653 00fb 0E       		.uleb128 0xe
 3654 00fc 3A       		.uleb128 0x3a
 3655 00fd 0B       		.uleb128 0xb
 3656 00fe 3B       		.uleb128 0x3b
 3657 00ff 0B       		.uleb128 0xb
 3658 0100 27       		.uleb128 0x27
 3659 0101 19       		.uleb128 0x19
 3660 0102 11       		.uleb128 0x11
 3661 0103 01       		.uleb128 0x1
 3662 0104 12       		.uleb128 0x12
 3663 0105 06       		.uleb128 0x6
 3664 0106 40       		.uleb128 0x40
 3665 0107 18       		.uleb128 0x18
 3666 0108 9642     		.uleb128 0x2116
 3667 010a 19       		.uleb128 0x19
 3668 010b 00       		.byte	0
 3669 010c 00       		.byte	0
 3670 010d 15       		.uleb128 0x15
 3671 010e 2E       		.uleb128 0x2e
 3672 010f 01       		.byte	0x1
 3673 0110 03       		.uleb128 0x3
 3674 0111 0E       		.uleb128 0xe
 3675 0112 3A       		.uleb128 0x3a
 3676 0113 0B       		.uleb128 0xb
 3677 0114 3B       		.uleb128 0x3b
 3678 0115 05       		.uleb128 0x5
 3679 0116 27       		.uleb128 0x27
 3680 0117 19       		.uleb128 0x19
 3681 0118 11       		.uleb128 0x11
 3682 0119 01       		.uleb128 0x1
 3683 011a 12       		.uleb128 0x12
 3684 011b 06       		.uleb128 0x6
 3685 011c 40       		.uleb128 0x40
 3686 011d 18       		.uleb128 0x18
 3687 011e 9642     		.uleb128 0x2116
 3688 0120 19       		.uleb128 0x19
 3689 0121 01       		.uleb128 0x1
 3690 0122 13       		.uleb128 0x13
 3691 0123 00       		.byte	0
 3692 0124 00       		.byte	0
 3693 0125 16       		.uleb128 0x16
 3694 0126 05       		.uleb128 0x5
 3695 0127 00       		.byte	0
 3696 0128 03       		.uleb128 0x3
 3697 0129 0E       		.uleb128 0xe
 3698 012a 3A       		.uleb128 0x3a
 3699 012b 0B       		.uleb128 0xb
 3700 012c 3B       		.uleb128 0x3b
 3701 012d 05       		.uleb128 0x5
 3702 012e 49       		.uleb128 0x49
 3703 012f 13       		.uleb128 0x13
 3704 0130 02       		.uleb128 0x2
 3705 0131 18       		.uleb128 0x18
 3706 0132 00       		.byte	0
 3707 0133 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 85


 3708 0134 17       		.uleb128 0x17
 3709 0135 2E       		.uleb128 0x2e
 3710 0136 01       		.byte	0x1
 3711 0137 03       		.uleb128 0x3
 3712 0138 0E       		.uleb128 0xe
 3713 0139 3A       		.uleb128 0x3a
 3714 013a 0B       		.uleb128 0xb
 3715 013b 3B       		.uleb128 0x3b
 3716 013c 05       		.uleb128 0x5
 3717 013d 27       		.uleb128 0x27
 3718 013e 19       		.uleb128 0x19
 3719 013f 11       		.uleb128 0x11
 3720 0140 01       		.uleb128 0x1
 3721 0141 12       		.uleb128 0x12
 3722 0142 06       		.uleb128 0x6
 3723 0143 40       		.uleb128 0x40
 3724 0144 18       		.uleb128 0x18
 3725 0145 9742     		.uleb128 0x2117
 3726 0147 19       		.uleb128 0x19
 3727 0148 01       		.uleb128 0x1
 3728 0149 13       		.uleb128 0x13
 3729 014a 00       		.byte	0
 3730 014b 00       		.byte	0
 3731 014c 18       		.uleb128 0x18
 3732 014d 34       		.uleb128 0x34
 3733 014e 00       		.byte	0
 3734 014f 03       		.uleb128 0x3
 3735 0150 0E       		.uleb128 0xe
 3736 0151 3A       		.uleb128 0x3a
 3737 0152 0B       		.uleb128 0xb
 3738 0153 3B       		.uleb128 0x3b
 3739 0154 05       		.uleb128 0x5
 3740 0155 49       		.uleb128 0x49
 3741 0156 13       		.uleb128 0x13
 3742 0157 02       		.uleb128 0x2
 3743 0158 18       		.uleb128 0x18
 3744 0159 00       		.byte	0
 3745 015a 00       		.byte	0
 3746 015b 19       		.uleb128 0x19
 3747 015c 34       		.uleb128 0x34
 3748 015d 00       		.byte	0
 3749 015e 03       		.uleb128 0x3
 3750 015f 08       		.uleb128 0x8
 3751 0160 3A       		.uleb128 0x3a
 3752 0161 0B       		.uleb128 0xb
 3753 0162 3B       		.uleb128 0x3b
 3754 0163 05       		.uleb128 0x5
 3755 0164 49       		.uleb128 0x49
 3756 0165 13       		.uleb128 0x13
 3757 0166 02       		.uleb128 0x2
 3758 0167 18       		.uleb128 0x18
 3759 0168 00       		.byte	0
 3760 0169 00       		.byte	0
 3761 016a 1A       		.uleb128 0x1a
 3762 016b 2E       		.uleb128 0x2e
 3763 016c 01       		.byte	0x1
 3764 016d 3F       		.uleb128 0x3f
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 86


 3765 016e 19       		.uleb128 0x19
 3766 016f 03       		.uleb128 0x3
 3767 0170 0E       		.uleb128 0xe
 3768 0171 3A       		.uleb128 0x3a
 3769 0172 0B       		.uleb128 0xb
 3770 0173 3B       		.uleb128 0x3b
 3771 0174 05       		.uleb128 0x5
 3772 0175 27       		.uleb128 0x27
 3773 0176 19       		.uleb128 0x19
 3774 0177 49       		.uleb128 0x49
 3775 0178 13       		.uleb128 0x13
 3776 0179 11       		.uleb128 0x11
 3777 017a 01       		.uleb128 0x1
 3778 017b 12       		.uleb128 0x12
 3779 017c 06       		.uleb128 0x6
 3780 017d 40       		.uleb128 0x40
 3781 017e 18       		.uleb128 0x18
 3782 017f 9642     		.uleb128 0x2116
 3783 0181 19       		.uleb128 0x19
 3784 0182 01       		.uleb128 0x1
 3785 0183 13       		.uleb128 0x13
 3786 0184 00       		.byte	0
 3787 0185 00       		.byte	0
 3788 0186 1B       		.uleb128 0x1b
 3789 0187 0B       		.uleb128 0xb
 3790 0188 01       		.byte	0x1
 3791 0189 11       		.uleb128 0x11
 3792 018a 01       		.uleb128 0x1
 3793 018b 12       		.uleb128 0x12
 3794 018c 06       		.uleb128 0x6
 3795 018d 01       		.uleb128 0x1
 3796 018e 13       		.uleb128 0x13
 3797 018f 00       		.byte	0
 3798 0190 00       		.byte	0
 3799 0191 1C       		.uleb128 0x1c
 3800 0192 1D       		.uleb128 0x1d
 3801 0193 01       		.byte	0x1
 3802 0194 31       		.uleb128 0x31
 3803 0195 13       		.uleb128 0x13
 3804 0196 11       		.uleb128 0x11
 3805 0197 01       		.uleb128 0x1
 3806 0198 12       		.uleb128 0x12
 3807 0199 06       		.uleb128 0x6
 3808 019a 58       		.uleb128 0x58
 3809 019b 0B       		.uleb128 0xb
 3810 019c 59       		.uleb128 0x59
 3811 019d 05       		.uleb128 0x5
 3812 019e 01       		.uleb128 0x1
 3813 019f 13       		.uleb128 0x13
 3814 01a0 00       		.byte	0
 3815 01a1 00       		.byte	0
 3816 01a2 1D       		.uleb128 0x1d
 3817 01a3 0B       		.uleb128 0xb
 3818 01a4 01       		.byte	0x1
 3819 01a5 11       		.uleb128 0x11
 3820 01a6 01       		.uleb128 0x1
 3821 01a7 12       		.uleb128 0x12
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 87


 3822 01a8 06       		.uleb128 0x6
 3823 01a9 00       		.byte	0
 3824 01aa 00       		.byte	0
 3825 01ab 1E       		.uleb128 0x1e
 3826 01ac 34       		.uleb128 0x34
 3827 01ad 00       		.byte	0
 3828 01ae 31       		.uleb128 0x31
 3829 01af 13       		.uleb128 0x13
 3830 01b0 02       		.uleb128 0x2
 3831 01b1 18       		.uleb128 0x18
 3832 01b2 00       		.byte	0
 3833 01b3 00       		.byte	0
 3834 01b4 1F       		.uleb128 0x1f
 3835 01b5 1D       		.uleb128 0x1d
 3836 01b6 01       		.byte	0x1
 3837 01b7 31       		.uleb128 0x31
 3838 01b8 13       		.uleb128 0x13
 3839 01b9 11       		.uleb128 0x11
 3840 01ba 01       		.uleb128 0x1
 3841 01bb 12       		.uleb128 0x12
 3842 01bc 06       		.uleb128 0x6
 3843 01bd 58       		.uleb128 0x58
 3844 01be 0B       		.uleb128 0xb
 3845 01bf 59       		.uleb128 0x59
 3846 01c0 05       		.uleb128 0x5
 3847 01c1 00       		.byte	0
 3848 01c2 00       		.byte	0
 3849 01c3 20       		.uleb128 0x20
 3850 01c4 05       		.uleb128 0x5
 3851 01c5 00       		.byte	0
 3852 01c6 31       		.uleb128 0x31
 3853 01c7 13       		.uleb128 0x13
 3854 01c8 02       		.uleb128 0x2
 3855 01c9 18       		.uleb128 0x18
 3856 01ca 00       		.byte	0
 3857 01cb 00       		.byte	0
 3858 01cc 21       		.uleb128 0x21
 3859 01cd 34       		.uleb128 0x34
 3860 01ce 00       		.byte	0
 3861 01cf 03       		.uleb128 0x3
 3862 01d0 0E       		.uleb128 0xe
 3863 01d1 3A       		.uleb128 0x3a
 3864 01d2 0B       		.uleb128 0xb
 3865 01d3 3B       		.uleb128 0x3b
 3866 01d4 0B       		.uleb128 0xb
 3867 01d5 49       		.uleb128 0x49
 3868 01d6 13       		.uleb128 0x13
 3869 01d7 02       		.uleb128 0x2
 3870 01d8 18       		.uleb128 0x18
 3871 01d9 00       		.byte	0
 3872 01da 00       		.byte	0
 3873 01db 22       		.uleb128 0x22
 3874 01dc 35       		.uleb128 0x35
 3875 01dd 00       		.byte	0
 3876 01de 49       		.uleb128 0x49
 3877 01df 13       		.uleb128 0x13
 3878 01e0 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 88


 3879 01e1 00       		.byte	0
 3880 01e2 23       		.uleb128 0x23
 3881 01e3 34       		.uleb128 0x34
 3882 01e4 00       		.byte	0
 3883 01e5 03       		.uleb128 0x3
 3884 01e6 0E       		.uleb128 0xe
 3885 01e7 3A       		.uleb128 0x3a
 3886 01e8 0B       		.uleb128 0xb
 3887 01e9 3B       		.uleb128 0x3b
 3888 01ea 05       		.uleb128 0x5
 3889 01eb 49       		.uleb128 0x49
 3890 01ec 13       		.uleb128 0x13
 3891 01ed 3F       		.uleb128 0x3f
 3892 01ee 19       		.uleb128 0x19
 3893 01ef 3C       		.uleb128 0x3c
 3894 01f0 19       		.uleb128 0x19
 3895 01f1 00       		.byte	0
 3896 01f2 00       		.byte	0
 3897 01f3 24       		.uleb128 0x24
 3898 01f4 34       		.uleb128 0x34
 3899 01f5 00       		.byte	0
 3900 01f6 03       		.uleb128 0x3
 3901 01f7 0E       		.uleb128 0xe
 3902 01f8 3A       		.uleb128 0x3a
 3903 01f9 0B       		.uleb128 0xb
 3904 01fa 3B       		.uleb128 0x3b
 3905 01fb 0B       		.uleb128 0xb
 3906 01fc 49       		.uleb128 0x49
 3907 01fd 13       		.uleb128 0x13
 3908 01fe 3F       		.uleb128 0x3f
 3909 01ff 19       		.uleb128 0x19
 3910 0200 02       		.uleb128 0x2
 3911 0201 18       		.uleb128 0x18
 3912 0202 00       		.byte	0
 3913 0203 00       		.byte	0
 3914 0204 00       		.byte	0
 3915              		.section	.debug_aranges,"",%progbits
 3916 0000 74000000 		.4byte	0x74
 3917 0004 0200     		.2byte	0x2
 3918 0006 00000000 		.4byte	.Ldebug_info0
 3919 000a 04       		.byte	0x4
 3920 000b 00       		.byte	0
 3921 000c 0000     		.2byte	0
 3922 000e 0000     		.2byte	0
 3923 0010 00000000 		.4byte	.LFB68
 3924 0014 08010000 		.4byte	.LFE68-.LFB68
 3925 0018 00000000 		.4byte	.LFB69
 3926 001c 40000000 		.4byte	.LFE69-.LFB69
 3927 0020 00000000 		.4byte	.LFB70
 3928 0024 40000000 		.4byte	.LFE70-.LFB70
 3929 0028 00000000 		.4byte	.LFB71
 3930 002c 28000000 		.4byte	.LFE71-.LFB71
 3931 0030 00000000 		.4byte	.LFB72
 3932 0034 70010000 		.4byte	.LFE72-.LFB72
 3933 0038 00000000 		.4byte	.LFB73
 3934 003c B0000000 		.4byte	.LFE73-.LFB73
 3935 0040 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 89


 3936 0044 48010000 		.4byte	.LFE74-.LFB74
 3937 0048 00000000 		.4byte	.LFB75
 3938 004c A8000000 		.4byte	.LFE75-.LFB75
 3939 0050 00000000 		.4byte	.LFB76
 3940 0054 9C000000 		.4byte	.LFE76-.LFB76
 3941 0058 00000000 		.4byte	.LFB77
 3942 005c B4010000 		.4byte	.LFE77-.LFB77
 3943 0060 00000000 		.4byte	.LFB78
 3944 0064 88020000 		.4byte	.LFE78-.LFB78
 3945 0068 00000000 		.4byte	.LFB79
 3946 006c A0000000 		.4byte	.LFE79-.LFB79
 3947 0070 00000000 		.4byte	0
 3948 0074 00000000 		.4byte	0
 3949              		.section	.debug_ranges,"",%progbits
 3950              	.Ldebug_ranges0:
 3951 0000 00000000 		.4byte	.LFB68
 3952 0004 08010000 		.4byte	.LFE68
 3953 0008 00000000 		.4byte	.LFB69
 3954 000c 40000000 		.4byte	.LFE69
 3955 0010 00000000 		.4byte	.LFB70
 3956 0014 40000000 		.4byte	.LFE70
 3957 0018 00000000 		.4byte	.LFB71
 3958 001c 28000000 		.4byte	.LFE71
 3959 0020 00000000 		.4byte	.LFB72
 3960 0024 70010000 		.4byte	.LFE72
 3961 0028 00000000 		.4byte	.LFB73
 3962 002c B0000000 		.4byte	.LFE73
 3963 0030 00000000 		.4byte	.LFB74
 3964 0034 48010000 		.4byte	.LFE74
 3965 0038 00000000 		.4byte	.LFB75
 3966 003c A8000000 		.4byte	.LFE75
 3967 0040 00000000 		.4byte	.LFB76
 3968 0044 9C000000 		.4byte	.LFE76
 3969 0048 00000000 		.4byte	.LFB77
 3970 004c B4010000 		.4byte	.LFE77
 3971 0050 00000000 		.4byte	.LFB78
 3972 0054 88020000 		.4byte	.LFE78
 3973 0058 00000000 		.4byte	.LFB79
 3974 005c A0000000 		.4byte	.LFE79
 3975 0060 00000000 		.4byte	0
 3976 0064 00000000 		.4byte	0
 3977              		.section	.debug_line,"",%progbits
 3978              	.Ldebug_line0:
 3979 0000 7E050000 		.section	.debug_str,"MS",%progbits,1
 3979      0200E201 
 3979      00000201 
 3979      FB0E0D00 
 3979      01010101 
 3980              	.LASF29:
 3981 0000 696E666F 		.ascii	"informationID\000"
 3981      726D6174 
 3981      696F6E49 
 3981      4400
 3982              	.LASF50:
 3983 000e 65426C6F 		.ascii	"eBlocked\000"
 3983      636B6564 
 3983      00
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 90


 3984              	.LASF106:
 3985 0017 78486967 		.ascii	"xHighPriorityNormallyFullTask1\000"
 3985      68507269 
 3985      6F726974 
 3985      794E6F72 
 3985      6D616C6C 
 3986              	.LASF107:
 3987 0036 78486967 		.ascii	"xHighPriorityNormallyFullTask2\000"
 3987      68507269 
 3987      6F726974 
 3987      794E6F72 
 3987      6D616C6C 
 3988              	.LASF42:
 3989 0055 77726974 		.ascii	"write\000"
 3989      6500
 3990              	.LASF71:
 3991 005b 70727631 		.ascii	"prv1stHigherPriorityNormallyFullTask\000"
 3991      73744869 
 3991      67686572 
 3991      5072696F 
 3991      72697479 
 3992              	.LASF40:
 3993 0080 64617461 		.ascii	"data\000"
 3993      00
 3994              	.LASF52:
 3995 0085 6544656C 		.ascii	"eDeleted\000"
 3995      65746564 
 3995      00
 3996              	.LASF13:
 3997 008e 73697A65 		.ascii	"sizetype\000"
 3997      74797065 
 3997      00
 3998              	.LASF93:
 3999 0097 78457272 		.ascii	"xErrorStatus\000"
 3999      6F725374 
 3999      61747573 
 3999      00
 4000              	.LASF61:
 4001 00a4 75784C69 		.ascii	"uxLine\000"
 4001      6E6500
 4002              	.LASF21:
 4003 00ab 4D555445 		.ascii	"MUTEX\000"
 4003      5800
 4004              	.LASF47:
 4005 00b1 5461736B 		.ascii	"TaskHandle_t\000"
 4005      48616E64 
 4005      6C655F74 
 4005      00
 4006              	.LASF58:
 4007 00be 70727652 		.ascii	"prvRecordValue_NormallyFull\000"
 4007      65636F72 
 4007      6456616C 
 4007      75655F4E 
 4007      6F726D61 
 4008              	.LASF108:
 4009 00da 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4009      43313120 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 91


 4009      352E342E 
 4009      31203230 
 4009      31363036 
 4010 010d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4010      20726576 
 4010      6973696F 
 4010      6E203233 
 4010      37373135 
 4011 0140 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4011      66756E63 
 4011      74696F6E 
 4011      2D736563 
 4011      74696F6E 
 4012              	.LASF104:
 4013 0168 78486967 		.ascii	"xHighPriorityNormallyEmptyTask1\000"
 4013      68507269 
 4013      6F726974 
 4013      794E6F72 
 4013      6D616C6C 
 4014              	.LASF105:
 4015 0188 78486967 		.ascii	"xHighPriorityNormallyEmptyTask2\000"
 4015      68507269 
 4015      6F726974 
 4015      794E6F72 
 4015      6D616C6C 
 4016              	.LASF85:
 4017 01a8 75784C61 		.ascii	"uxLastLowPriorityLoops1\000"
 4017      73744C6F 
 4017      77507269 
 4017      6F726974 
 4017      794C6F6F 
 4018              	.LASF86:
 4019 01c0 75784C61 		.ascii	"uxLastLowPriorityLoops2\000"
 4019      73744C6F 
 4019      77507269 
 4019      6F726974 
 4019      794C6F6F 
 4020              	.LASF37:
 4021 01d8 6F626A65 		.ascii	"objectHeader\000"
 4021      63744865 
 4021      61646572 
 4021      00
 4022              	.LASF53:
 4023 01e5 65496E76 		.ascii	"eInvalid\000"
 4023      616C6964 
 4023      00
 4024              	.LASF87:
 4025 01ee 784E6F72 		.ascii	"xNormallyEmptyQueue\000"
 4025      6D616C6C 
 4025      79456D70 
 4025      74795175 
 4025      65756500 
 4026              	.LASF92:
 4027 0202 75784C6F 		.ascii	"uxLowPriorityLoops2\000"
 4027      77507269 
 4027      6F726974 
 4027      794C6F6F 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 92


 4027      70733200 
 4028              	.LASF65:
 4029 0216 75785461 		.ascii	"uxTask1\000"
 4029      736B3100 
 4030              	.LASF66:
 4031 021e 75785461 		.ascii	"uxTask2\000"
 4031      736B3200 
 4032              	.LASF15:
 4033 0226 75696E74 		.ascii	"uint8_t\000"
 4033      385F7400 
 4034              	.LASF73:
 4035 022e 70727632 		.ascii	"prv2ndHigherPriorityNormallyFullTask\000"
 4035      6E644869 
 4035      67686572 
 4035      5072696F 
 4035      72697479 
 4036              	.LASF38:
 4037 0253 6F626A65 		.ascii	"objectArray\000"
 4037      63744172 
 4037      72617900 
 4038              	.LASF34:
 4039 025f 6C656E4F 		.ascii	"lenObjectName\000"
 4039      626A6563 
 4039      744E616D 
 4039      6500
 4040              	.LASF78:
 4041 026d 75784E65 		.ascii	"uxNextOperation\000"
 4041      78744F70 
 4041      65726174 
 4041      696F6E00 
 4042              	.LASF112:
 4043 027d 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 4043      72745261 
 4043      69736542 
 4043      41534550 
 4043      524900
 4044              	.LASF35:
 4045 0290 6F626A65 		.ascii	"objectName\000"
 4045      63744E61 
 4045      6D6500
 4046              	.LASF27:
 4047 029b 4F626A65 		.ascii	"ObjectType\000"
 4047      63745479 
 4047      706500
 4048              	.LASF5:
 4049 02a6 73686F72 		.ascii	"short int\000"
 4049      7420696E 
 4049      7400
 4050              	.LASF31:
 4051 02b0 6C656E67 		.ascii	"length\000"
 4051      746800
 4052              	.LASF57:
 4053 02b7 7578536F 		.ascii	"uxSource\000"
 4053      75726365 
 4053      00
 4054              	.LASF18:
 4055 02c0 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 93


 4055      7400
 4056              	.LASF74:
 4057 02c6 7072764C 		.ascii	"prvLowerPriorityNormallyFullTask\000"
 4057      6F776572 
 4057      5072696F 
 4057      72697479 
 4057      4E6F726D 
 4058              	.LASF36:
 4059 02e7 4F626A65 		.ascii	"Object\000"
 4059      637400
 4060              	.LASF41:
 4061 02ee 72656164 		.ascii	"read\000"
 4061      00
 4062              	.LASF1:
 4063 02f3 6C6F6E67 		.ascii	"long long int\000"
 4063      206C6F6E 
 4063      6720696E 
 4063      7400
 4064              	.LASF45:
 4065 0301 5469636B 		.ascii	"TickType_t\000"
 4065      54797065 
 4065      5F7400
 4066              	.LASF109:
 4067 030c 2E2E5C43 		.ascii	"..\\Common\\Minimal\\IntQueue.c\000"
 4067      6F6D6D6F 
 4067      6E5C4D69 
 4067      6E696D61 
 4067      6C5C496E 
 4068              	.LASF75:
 4069 0329 75785478 		.ascii	"uxTxed\000"
 4069      656400
 4070              	.LASF9:
 4071 0330 6C6F6E67 		.ascii	"long int\000"
 4071      20696E74 
 4071      00
 4072              	.LASF101:
 4073 0339 736E6966 		.ascii	"sniffIDFilter\000"
 4073      66494446 
 4073      696C7465 
 4073      7200
 4074              	.LASF83:
 4075 0347 75784C61 		.ascii	"uxLastHighPriorityLoops1\000"
 4075      73744869 
 4075      67685072 
 4075      696F7269 
 4075      74794C6F 
 4076              	.LASF84:
 4077 0360 75784C61 		.ascii	"uxLastHighPriorityLoops2\000"
 4077      73744869 
 4077      67685072 
 4077      696F7269 
 4077      74794C6F 
 4078              	.LASF81:
 4079 0379 78536563 		.ascii	"xSecondTimerHandler\000"
 4079      6F6E6454 
 4079      696D6572 
 4079      48616E64 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 94


 4079      6C657200 
 4080              	.LASF24:
 4081 038d 52454355 		.ascii	"RECURSIVE_MUTEX\000"
 4081      52534956 
 4081      455F4D55 
 4081      54455800 
 4082              	.LASF89:
 4083 039d 75784869 		.ascii	"uxHighPriorityLoops1\000"
 4083      67685072 
 4083      696F7269 
 4083      74794C6F 
 4083      6F707331 
 4084              	.LASF7:
 4085 03b2 5F5F7569 		.ascii	"__uint8_t\000"
 4085      6E74385F 
 4085      7400
 4086              	.LASF80:
 4087 03bc 78466972 		.ascii	"xFirstTimerHandler\000"
 4087      73745469 
 4087      6D657248 
 4087      616E646C 
 4087      657200
 4088              	.LASF46:
 4089 03cf 51756575 		.ascii	"QueueHandle_t\000"
 4089      6548616E 
 4089      646C655F 
 4089      7400
 4090              	.LASF90:
 4091 03dd 75784869 		.ascii	"uxHighPriorityLoops2\000"
 4091      67685072 
 4091      696F7269 
 4091      74794C6F 
 4091      6F707332 
 4092              	.LASF20:
 4093 03f2 51554555 		.ascii	"QUEUE\000"
 4093      4500
 4094              	.LASF22:
 4095 03f8 434F554E 		.ascii	"COUNTING_SEMAPHORE\000"
 4095      54494E47 
 4095      5F53454D 
 4095      4150484F 
 4095      524500
 4096              	.LASF99:
 4097 040b 75634E6F 		.ascii	"ucNormallyFullReceivedValues\000"
 4097      726D616C 
 4097      6C794675 
 4097      6C6C5265 
 4097      63656976 
 4098              	.LASF2:
 4099 0428 6C6F6E67 		.ascii	"long double\000"
 4099      20646F75 
 4099      626C6500 
 4100              	.LASF82:
 4101 0434 78417265 		.ascii	"xAreIntQueueTasksStillRunning\000"
 4101      496E7451 
 4101      75657565 
 4101      5461736B 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 95


 4101      73537469 
 4102              	.LASF95:
 4103 0452 78576173 		.ascii	"xWasSuspended\000"
 4103      53757370 
 4103      656E6465 
 4103      6400
 4104              	.LASF4:
 4105 0460 756E7369 		.ascii	"unsigned char\000"
 4105      676E6564 
 4105      20636861 
 4105      7200
 4106              	.LASF33:
 4107 046e 6F626A65 		.ascii	"objectNumber\000"
 4107      63744E75 
 4107      6D626572 
 4107      00
 4108              	.LASF54:
 4109 047b 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 4109      6967696E 
 4109      616C4241 
 4109      53455052 
 4109      4900
 4110              	.LASF72:
 4111 048d 75785661 		.ascii	"uxValueToTx\000"
 4111      6C756554 
 4111      6F547800 
 4112              	.LASF49:
 4113 0499 65526561 		.ascii	"eReady\000"
 4113      647900
 4114              	.LASF3:
 4115 04a0 7369676E 		.ascii	"signed char\000"
 4115      65642063 
 4115      68617200 
 4116              	.LASF12:
 4117 04ac 6C6F6E67 		.ascii	"long long unsigned int\000"
 4117      206C6F6E 
 4117      6720756E 
 4117      7369676E 
 4117      65642069 
 4118              	.LASF76:
 4119 04c3 78486967 		.ascii	"xHigherPriorityTaskWoken\000"
 4119      68657250 
 4119      72696F72 
 4119      69747954 
 4119      61736B57 
 4120              	.LASF17:
 4121 04dc 75696E74 		.ascii	"uint32_t\000"
 4121      33325F74 
 4121      00
 4122              	.LASF0:
 4123 04e5 756E7369 		.ascii	"unsigned int\000"
 4123      676E6564 
 4123      20696E74 
 4123      00
 4124              	.LASF32:
 4125 04f2 4F626A65 		.ascii	"ObjectListHeader\000"
 4125      63744C69 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 96


 4125      73744865 
 4125      61646572 
 4125      00
 4126              	.LASF43:
 4127 0503 42617365 		.ascii	"BaseType_t\000"
 4127      54797065 
 4127      5F7400
 4128              	.LASF63:
 4129 050e 70765061 		.ascii	"pvParameters\000"
 4129      72616D65 
 4129      74657273 
 4129      00
 4130              	.LASF56:
 4131 051b 75785661 		.ascii	"uxValue\000"
 4131      6C756500 
 4132              	.LASF67:
 4133 0523 7578496E 		.ascii	"uxInterrupts\000"
 4133      74657272 
 4133      75707473 
 4133      00
 4134              	.LASF113:
 4135 0530 76506F72 		.ascii	"vPortSetBASEPRI\000"
 4135      74536574 
 4135      42415345 
 4135      50524900 
 4136              	.LASF14:
 4137 0540 63686172 		.ascii	"char\000"
 4137      00
 4138              	.LASF70:
 4139 0545 7072764C 		.ascii	"prvLowerPriorityNormallyEmptyTask\000"
 4139      6F776572 
 4139      5072696F 
 4139      72697479 
 4139      4E6F726D 
 4140              	.LASF28:
 4141 0567 7061636B 		.ascii	"packetID\000"
 4141      65744944 
 4141      00
 4142              	.LASF16:
 4143 0570 696E7433 		.ascii	"int32_t\000"
 4143      325F7400 
 4144              	.LASF62:
 4145 0578 70727648 		.ascii	"prvHigherPriorityNormallyEmptyTask\000"
 4145      69676865 
 4145      72507269 
 4145      6F726974 
 4145      794E6F72 
 4146              	.LASF44:
 4147 059b 55426173 		.ascii	"UBaseType_t\000"
 4147      65547970 
 4147      655F7400 
 4148              	.LASF59:
 4149 05a7 70727652 		.ascii	"prvRecordValue_NormallyEmpty\000"
 4149      65636F72 
 4149      6456616C 
 4149      75655F4E 
 4149      6F726D61 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 97


 4150              	.LASF94:
 4151 05c4 78457272 		.ascii	"xErrorLine\000"
 4151      6F724C69 
 4151      6E6500
 4152              	.LASF102:
 4153 05cf 62756666 		.ascii	"buffer\000"
 4153      657200
 4154              	.LASF6:
 4155 05d6 73686F72 		.ascii	"short unsigned int\000"
 4155      7420756E 
 4155      7369676E 
 4155      65642069 
 4155      6E7400
 4156              	.LASF96:
 4157 05e9 75785661 		.ascii	"uxValueForNormallyEmptyQueue\000"
 4157      6C756546 
 4157      6F724E6F 
 4157      726D616C 
 4157      6C79456D 
 4158              	.LASF60:
 4159 0606 70727651 		.ascii	"prvQueueAccessLogError\000"
 4159      75657565 
 4159      41636365 
 4159      73734C6F 
 4159      67457272 
 4160              	.LASF26:
 4161 061d 4E554D42 		.ascii	"NUMBER_OF_OBJECTTYPES\000"
 4161      45525F4F 
 4161      465F4F42 
 4161      4A454354 
 4161      54595045 
 4162              	.LASF11:
 4163 0633 6C6F6E67 		.ascii	"long unsigned int\000"
 4163      20756E73 
 4163      69676E65 
 4163      6420696E 
 4163      7400
 4164              	.LASF97:
 4165 0645 75785661 		.ascii	"uxValueForNormallyFullQueue\000"
 4165      6C756546 
 4165      6F724E6F 
 4165      726D616C 
 4165      6C794675 
 4166              	.LASF19:
 4167 0661 646F7562 		.ascii	"double\000"
 4167      6C6500
 4168              	.LASF23:
 4169 0668 42494E41 		.ascii	"BINARY_SEMAPHORE\000"
 4169      52595F53 
 4169      454D4150 
 4169      484F5245 
 4169      00
 4170              	.LASF48:
 4171 0679 6552756E 		.ascii	"eRunning\000"
 4171      6E696E67 
 4171      00
 4172              	.LASF77:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 98


 4173 0682 75785278 		.ascii	"uxRxedValue\000"
 4173      65645661 
 4173      6C756500 
 4174              	.LASF114:
 4175 068e 756C4E65 		.ascii	"ulNewMaskValue\000"
 4175      774D6173 
 4175      6B56616C 
 4175      756500
 4176              	.LASF10:
 4177 069d 5F5F7569 		.ascii	"__uint32_t\000"
 4177      6E743332 
 4177      5F7400
 4178              	.LASF115:
 4179 06a8 76537461 		.ascii	"vStartInterruptQueueTasks\000"
 4179      7274496E 
 4179      74657272 
 4179      75707451 
 4179      75657565 
 4180              	.LASF25:
 4181 06c2 5441534B 		.ascii	"TASK\000"
 4181      00
 4182              	.LASF103:
 4183 06c7 6F626A65 		.ascii	"objectList\000"
 4183      63744C69 
 4183      737400
 4184              	.LASF8:
 4185 06d2 5F5F696E 		.ascii	"__int32_t\000"
 4185      7433325F 
 4185      7400
 4186              	.LASF30:
 4187 06dc 6F626A65 		.ascii	"objectType\000"
 4187      63745479 
 4187      706500
 4188              	.LASF64:
 4189 06e7 75785278 		.ascii	"uxRxed\000"
 4189      656400
 4190              	.LASF79:
 4191 06ee 75785361 		.ascii	"uxSavedInterruptStatus\000"
 4191      76656449 
 4191      6E746572 
 4191      72757074 
 4191      53746174 
 4192              	.LASF98:
 4193 0705 75634E6F 		.ascii	"ucNormallyEmptyReceivedValues\000"
 4193      726D616C 
 4193      6C79456D 
 4193      70747952 
 4193      65636569 
 4194              	.LASF68:
 4195 0723 75784572 		.ascii	"uxErrorCount1\000"
 4195      726F7243 
 4195      6F756E74 
 4195      3100
 4196              	.LASF69:
 4197 0731 75784572 		.ascii	"uxErrorCount2\000"
 4197      726F7243 
 4197      6F756E74 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccjD8PP6.s 			page 99


 4197      3200
 4198              	.LASF88:
 4199 073f 784E6F72 		.ascii	"xNormallyFullQueue\000"
 4199      6D616C6C 
 4199      7946756C 
 4199      6C517565 
 4199      756500
 4200              	.LASF91:
 4201 0752 75784C6F 		.ascii	"uxLowPriorityLoops1\000"
 4201      77507269 
 4201      6F726974 
 4201      794C6F6F 
 4201      70733100 
 4202              	.LASF39:
 4203 0766 4F626A65 		.ascii	"ObjectList\000"
 4203      63744C69 
 4203      737400
 4204              	.LASF100:
 4205 0771 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4205      52784275 
 4205      66666572 
 4205      00
 4206              	.LASF111:
 4207 077e 42756666 		.ascii	"Buffer\000"
 4207      657200
 4208              	.LASF51:
 4209 0785 65537573 		.ascii	"eSuspended\000"
 4209      70656E64 
 4209      656400
 4210              	.LASF110:
 4211 0790 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 4211      726F6772 
 4211      616D6D65 
 4211      5F536372 
 4211      69707473 
 4212 07bf 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 4212      5F435938 
 4212      434B4954 
 4212      5F303539 
 4212      2D6D6173 
 4213              	.LASF55:
 4214 07eb 756C4E65 		.ascii	"ulNewBASEPRI\000"
 4214      77424153 
 4214      45505249 
 4214      00
 4215              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
