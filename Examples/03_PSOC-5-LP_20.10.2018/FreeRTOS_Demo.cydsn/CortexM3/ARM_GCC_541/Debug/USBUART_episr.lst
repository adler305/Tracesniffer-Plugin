ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** 
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  38              		.loc 1 55 0
  39 0004 0D4B     		ldr	r3, .L3
  40 0006 0122     		movs	r2, #1
  41 0008 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  42              		.loc 1 66 0
  43 000a 0D4B     		ldr	r3, .L3+4
  44 000c 9B7C     		ldrb	r3, [r3, #18]
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  45              		.loc 1 69 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 3


  46 000e 0D4B     		ldr	r3, .L3+8
  47 0010 1B7B     		ldrb	r3, [r3, #12]
  48 0012 DBB2     		uxtb	r3, r3
  49 0014 03F00303 		and	r3, r3, #3
  50 0018 012B     		cmp	r3, #1
  51 001a 08D0     		beq	.L2
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  52              		.loc 1 71 0
  53 001c 094B     		ldr	r3, .L3+8
  54 001e DB7B     		ldrb	r3, [r3, #15]
  55 0020 DBB2     		uxtb	r3, r3
  56 0022 83F07F03 		eor	r3, r3, #127
  57 0026 DB43     		mvns	r3, r3
  58 0028 DAB2     		uxtb	r2, r3
  59 002a 064B     		ldr	r3, .L3+8
  60 002c DA73     		strb	r2, [r3, #15]
  61              	.L2:
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  62              		.loc 1 80 0
  63 002e 054B     		ldr	r3, .L3+8
  64 0030 0122     		movs	r2, #1
  65 0032 5A73     		strb	r2, [r3, #13]
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 4


 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
  66              		.loc 1 107 0
  67 0034 00BF     		nop
  68 0036 BD46     		mov	sp, r7
  69              		.cfi_def_cfa_register 13
  70              		@ sp needed
  71 0038 80BC     		pop	{r7}
  72              		.cfi_restore 7
  73              		.cfi_def_cfa_offset 0
  74 003a 7047     		bx	lr
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 003c 0B600040 		.word	1073766411
  79 0040 FC5F0040 		.word	1073766396
  80 0044 00000000 		.word	USBUART_EP
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  84              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  85              		.align	2
  86              		.global	USBUART_EP_2_ISR
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBUART_EP_2_ISR, %function
  90              	USBUART_EP_2_ISR:
  91              	.LFB1:
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  92              		.loc 1 121 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 5


 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
 102              		.loc 1 137 0
 103 0004 0E4B     		ldr	r3, .L7
 104 0006 0222     		movs	r2, #2
 105 0008 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
 106              		.loc 1 148 0
 107 000a 0E4B     		ldr	r3, .L7+4
 108 000c 93F82230 		ldrb	r3, [r3, #34]
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
 109              		.loc 1 151 0
 110 0010 0D4B     		ldr	r3, .L7+8
 111 0012 1B7E     		ldrb	r3, [r3, #24]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 03F00303 		and	r3, r3, #3
 114 001a 012B     		cmp	r3, #1
 115 001c 08D0     		beq	.L6
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 116              		.loc 1 153 0
 117 001e 0A4B     		ldr	r3, .L7+8
 118 0020 DB7E     		ldrb	r3, [r3, #27]
 119 0022 DBB2     		uxtb	r3, r3
 120 0024 83F07F03 		eor	r3, r3, #127
 121 0028 DB43     		mvns	r3, r3
 122 002a DAB2     		uxtb	r2, r3
 123 002c 064B     		ldr	r3, .L7+8
 124 002e DA76     		strb	r2, [r3, #27]
 125              	.L6:
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 6


 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
 126              		.loc 1 162 0
 127 0030 054B     		ldr	r3, .L7+8
 128 0032 0122     		movs	r2, #1
 129 0034 5A76     		strb	r2, [r3, #25]
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 130              		.loc 1 189 0
 131 0036 00BF     		nop
 132 0038 BD46     		mov	sp, r7
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 003a 80BC     		pop	{r7}
 136              		.cfi_restore 7
 137              		.cfi_def_cfa_offset 0
 138 003c 7047     		bx	lr
 139              	.L8:
 140 003e 00BF     		.align	2
 141              	.L7:
 142 0040 0B600040 		.word	1073766411
 143 0044 FC5F0040 		.word	1073766396
 144 0048 00000000 		.word	USBUART_EP
 145              		.cfi_endproc
 146              	.LFE1:
 147              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 148              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 149              		.align	2
 150              		.global	USBUART_EP_3_ISR
 151              		.thumb
 152              		.thumb_func
 153              		.type	USBUART_EP_3_ISR, %function
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 7


 154              	USBUART_EP_3_ISR:
 155              	.LFB2:
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 156              		.loc 1 202 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161 0000 80B4     		push	{r7}
 162              		.cfi_def_cfa_offset 4
 163              		.cfi_offset 7, -4
 164 0002 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 166              		.loc 1 218 0
 167 0004 104B     		ldr	r3, .L11
 168 0006 0422     		movs	r2, #4
 169 0008 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 170              		.loc 1 229 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 8


 171 000a 104B     		ldr	r3, .L11+4
 172 000c 93F83230 		ldrb	r3, [r3, #50]
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 173              		.loc 1 232 0
 174 0010 0F4B     		ldr	r3, .L11+8
 175 0012 93F82430 		ldrb	r3, [r3, #36]
 176 0016 DBB2     		uxtb	r3, r3
 177 0018 03F00303 		and	r3, r3, #3
 178 001c 012B     		cmp	r3, #1
 179 001e 0AD0     		beq	.L10
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 180              		.loc 1 234 0
 181 0020 0B4B     		ldr	r3, .L11+8
 182 0022 93F82730 		ldrb	r3, [r3, #39]
 183 0026 DBB2     		uxtb	r3, r3
 184 0028 83F07F03 		eor	r3, r3, #127
 185 002c DB43     		mvns	r3, r3
 186 002e DAB2     		uxtb	r2, r3
 187 0030 074B     		ldr	r3, .L11+8
 188 0032 83F82720 		strb	r2, [r3, #39]
 189              	.L10:
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 190              		.loc 1 243 0
 191 0036 064B     		ldr	r3, .L11+8
 192 0038 0122     		movs	r2, #1
 193 003a 83F82520 		strb	r2, [r3, #37]
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 9


 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 194              		.loc 1 270 0
 195 003e 00BF     		nop
 196 0040 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0042 80BC     		pop	{r7}
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 0044 7047     		bx	lr
 203              	.L12:
 204 0046 00BF     		.align	2
 205              	.L11:
 206 0048 0B600040 		.word	1073766411
 207 004c FC5F0040 		.word	1073766396
 208 0050 00000000 		.word	USBUART_EP
 209              		.cfi_endproc
 210              	.LFE2:
 211              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 212              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 213              		.align	2
 214              		.global	USBUART_SOF_ISR
 215              		.thumb
 216              		.thumb_func
 217              		.type	USBUART_SOF_ISR, %function
 218              	USBUART_SOF_ISR:
 219              	.LFB3:
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 10


 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 11


 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 12


 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 13


 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 14


 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 15


 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 16


 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 17


 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 220              		.loc 1 694 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 1, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225 0000 80B4     		push	{r7}
 226              		.cfi_def_cfa_offset 4
 227              		.cfi_offset 7, -4
 228 0002 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 230              		.loc 1 708 0
 231 0004 00BF     		nop
 232 0006 BD46     		mov	sp, r7
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 0008 80BC     		pop	{r7}
 236              		.cfi_restore 7
 237              		.cfi_def_cfa_offset 0
 238 000a 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 242              		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 243              		.align	2
 244              		.global	USBUART_BUS_RESET_ISR
 245              		.thumb
 246              		.thumb_func
 247              		.type	USBUART_BUS_RESET_ISR, %function
 248              	USBUART_BUS_RESET_ISR:
 249              	.LFB4:
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 18


 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 250              		.loc 1 723 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 260              		.loc 1 734 0
 261 0004 FFF7FEFF 		bl	USBUART_ReInitComponent
 735:Generated_Source\PSoC5/USBUART_episr.c **** 
 736:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_EXIT_CALLBACK
 737:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_ExitCallback();
 738:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:Generated_Source\PSoC5/USBUART_episr.c **** }
 262              		.loc 1 739 0
 263 0008 00BF     		nop
 264 000a 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE4:
 267              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 268              		.text
 269              	.Letext0:
 270              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 271              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 272              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 273              		.section	.debug_info,"",%progbits
 274              	.Ldebug_info0:
 275 0000 37020000 		.4byte	0x237
 276 0004 0400     		.2byte	0x4
 277 0006 00000000 		.4byte	.Ldebug_abbrev0
 278 000a 04       		.byte	0x4
 279 000b 01       		.uleb128 0x1
 280 000c 11000000 		.4byte	.LASF38
 281 0010 0C       		.byte	0xc
 282 0011 48010000 		.4byte	.LASF39
 283 0015 85020000 		.4byte	.LASF40
 284 0019 00000000 		.4byte	.Ldebug_ranges0+0
 285 001d 00000000 		.4byte	0
 286 0021 00000000 		.4byte	.Ldebug_line0
 287 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 19


 288 0026 01       		.byte	0x1
 289 0027 06       		.byte	0x6
 290 0028 68020000 		.4byte	.LASF0
 291 002c 02       		.uleb128 0x2
 292 002d 01       		.byte	0x1
 293 002e 08       		.byte	0x8
 294 002f 3A010000 		.4byte	.LASF1
 295 0033 02       		.uleb128 0x2
 296 0034 02       		.byte	0x2
 297 0035 05       		.byte	0x5
 298 0036 0C020000 		.4byte	.LASF2
 299 003a 02       		.uleb128 0x2
 300 003b 02       		.byte	0x2
 301 003c 07       		.byte	0x7
 302 003d AB000000 		.4byte	.LASF3
 303 0041 02       		.uleb128 0x2
 304 0042 04       		.byte	0x4
 305 0043 05       		.byte	0x5
 306 0044 3C020000 		.4byte	.LASF4
 307 0048 02       		.uleb128 0x2
 308 0049 04       		.byte	0x4
 309 004a 07       		.byte	0x7
 310 004b 06010000 		.4byte	.LASF5
 311 004f 02       		.uleb128 0x2
 312 0050 08       		.byte	0x8
 313 0051 05       		.byte	0x5
 314 0052 EE010000 		.4byte	.LASF6
 315 0056 02       		.uleb128 0x2
 316 0057 08       		.byte	0x8
 317 0058 07       		.byte	0x7
 318 0059 A7010000 		.4byte	.LASF7
 319 005d 03       		.uleb128 0x3
 320 005e 04       		.byte	0x4
 321 005f 05       		.byte	0x5
 322 0060 696E7400 		.ascii	"int\000"
 323 0064 02       		.uleb128 0x2
 324 0065 04       		.byte	0x4
 325 0066 07       		.byte	0x7
 326 0067 9A010000 		.4byte	.LASF8
 327 006b 04       		.uleb128 0x4
 328 006c 2C020000 		.4byte	.LASF9
 329 0070 02       		.byte	0x2
 330 0071 9201     		.2byte	0x192
 331 0073 2C000000 		.4byte	0x2c
 332 0077 04       		.uleb128 0x4
 333 0078 88010000 		.4byte	.LASF10
 334 007c 02       		.byte	0x2
 335 007d 9301     		.2byte	0x193
 336 007f 3A000000 		.4byte	0x3a
 337 0083 02       		.uleb128 0x2
 338 0084 04       		.byte	0x4
 339 0085 04       		.byte	0x4
 340 0086 A5000000 		.4byte	.LASF11
 341 008a 02       		.uleb128 0x2
 342 008b 08       		.byte	0x8
 343 008c 04       		.byte	0x4
 344 008d 6F010000 		.4byte	.LASF12
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 20


 345 0091 02       		.uleb128 0x2
 346 0092 01       		.byte	0x1
 347 0093 08       		.byte	0x8
 348 0094 FC010000 		.4byte	.LASF13
 349 0098 04       		.uleb128 0x4
 350 0099 01010000 		.4byte	.LASF14
 351 009d 02       		.byte	0x2
 352 009e 3C02     		.2byte	0x23c
 353 00a0 A4000000 		.4byte	0xa4
 354 00a4 05       		.uleb128 0x5
 355 00a5 6B000000 		.4byte	0x6b
 356 00a9 02       		.uleb128 0x2
 357 00aa 08       		.byte	0x8
 358 00ab 04       		.byte	0x4
 359 00ac 5C020000 		.4byte	.LASF15
 360 00b0 02       		.uleb128 0x2
 361 00b1 04       		.byte	0x4
 362 00b2 07       		.byte	0x7
 363 00b3 DE010000 		.4byte	.LASF16
 364 00b7 06       		.uleb128 0x6
 365 00b8 0C       		.byte	0xc
 366 00b9 03       		.byte	0x3
 367 00ba 8D       		.byte	0x8d
 368 00bb 2C010000 		.4byte	0x12c
 369 00bf 07       		.uleb128 0x7
 370 00c0 76010000 		.4byte	.LASF17
 371 00c4 03       		.byte	0x3
 372 00c5 8F       		.byte	0x8f
 373 00c6 6B000000 		.4byte	0x6b
 374 00ca 00       		.byte	0
 375 00cb 07       		.uleb128 0x7
 376 00cc 8F010000 		.4byte	.LASF18
 377 00d0 03       		.byte	0x3
 378 00d1 90       		.byte	0x90
 379 00d2 6B000000 		.4byte	0x6b
 380 00d6 01       		.byte	0x1
 381 00d7 07       		.uleb128 0x7
 382 00d8 BE010000 		.4byte	.LASF19
 383 00dc 03       		.byte	0x3
 384 00dd 91       		.byte	0x91
 385 00de 6B000000 		.4byte	0x6b
 386 00e2 02       		.byte	0x2
 387 00e3 07       		.uleb128 0x7
 388 00e4 ED000000 		.4byte	.LASF20
 389 00e8 03       		.byte	0x3
 390 00e9 92       		.byte	0x92
 391 00ea 6B000000 		.4byte	0x6b
 392 00ee 03       		.byte	0x3
 393 00ef 07       		.uleb128 0x7
 394 00f0 18010000 		.4byte	.LASF21
 395 00f4 03       		.byte	0x3
 396 00f5 93       		.byte	0x93
 397 00f6 6B000000 		.4byte	0x6b
 398 00fa 04       		.byte	0x4
 399 00fb 07       		.uleb128 0x7
 400 00fc E7010000 		.4byte	.LASF22
 401 0100 03       		.byte	0x3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 21


 402 0101 94       		.byte	0x94
 403 0102 6B000000 		.4byte	0x6b
 404 0106 05       		.byte	0x5
 405 0107 07       		.uleb128 0x7
 406 0108 7D010000 		.4byte	.LASF23
 407 010c 03       		.byte	0x3
 408 010d 95       		.byte	0x95
 409 010e 77000000 		.4byte	0x77
 410 0112 06       		.byte	0x6
 411 0113 07       		.uleb128 0x7
 412 0114 01020000 		.4byte	.LASF24
 413 0118 03       		.byte	0x3
 414 0119 96       		.byte	0x96
 415 011a 77000000 		.4byte	0x77
 416 011e 08       		.byte	0x8
 417 011f 07       		.uleb128 0x7
 418 0120 32020000 		.4byte	.LASF25
 419 0124 03       		.byte	0x3
 420 0125 97       		.byte	0x97
 421 0126 6B000000 		.4byte	0x6b
 422 012a 0A       		.byte	0xa
 423 012b 00       		.byte	0
 424 012c 08       		.uleb128 0x8
 425 012d 45020000 		.4byte	.LASF26
 426 0131 03       		.byte	0x3
 427 0132 98       		.byte	0x98
 428 0133 B7000000 		.4byte	0xb7
 429 0137 06       		.uleb128 0x6
 430 0138 10       		.byte	0x10
 431 0139 03       		.byte	0x3
 432 013a D4       		.byte	0xd4
 433 013b 70010000 		.4byte	0x170
 434 013f 07       		.uleb128 0x7
 435 0140 DF000000 		.4byte	.LASF27
 436 0144 03       		.byte	0x3
 437 0145 D6       		.byte	0xd6
 438 0146 6B000000 		.4byte	0x6b
 439 014a 00       		.byte	0
 440 014b 07       		.uleb128 0x7
 441 014c E6000000 		.4byte	.LASF28
 442 0150 03       		.byte	0x3
 443 0151 D7       		.byte	0xd7
 444 0152 6B000000 		.4byte	0x6b
 445 0156 01       		.byte	0x1
 446 0157 07       		.uleb128 0x7
 447 0158 9F000000 		.4byte	.LASF29
 448 015c 03       		.byte	0x3
 449 015d D8       		.byte	0xd8
 450 015e 6B000000 		.4byte	0x6b
 451 0162 02       		.byte	0x2
 452 0163 09       		.uleb128 0x9
 453 0164 67617000 		.ascii	"gap\000"
 454 0168 03       		.byte	0x3
 455 0169 D9       		.byte	0xd9
 456 016a 70010000 		.4byte	0x170
 457 016e 03       		.byte	0x3
 458 016f 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 22


 459 0170 0A       		.uleb128 0xa
 460 0171 6B000000 		.4byte	0x6b
 461 0175 80010000 		.4byte	0x180
 462 0179 0B       		.uleb128 0xb
 463 017a B0000000 		.4byte	0xb0
 464 017e 0C       		.byte	0xc
 465 017f 00       		.byte	0
 466 0180 08       		.uleb128 0x8
 467 0181 C8010000 		.4byte	.LASF30
 468 0185 03       		.byte	0x3
 469 0186 DA       		.byte	0xda
 470 0187 37010000 		.4byte	0x137
 471 018b 0C       		.uleb128 0xc
 472 018c 90       		.byte	0x90
 473 018d 03       		.byte	0x3
 474 018e 0E01     		.2byte	0x10e
 475 0190 A2010000 		.4byte	0x1a2
 476 0194 0D       		.uleb128 0xd
 477 0195 1D010000 		.4byte	.LASF31
 478 0199 03       		.byte	0x3
 479 019a 1001     		.2byte	0x110
 480 019c A2010000 		.4byte	0x1a2
 481 01a0 00       		.byte	0
 482 01a1 00       		.byte	0
 483 01a2 0A       		.uleb128 0xa
 484 01a3 80010000 		.4byte	0x180
 485 01a7 B2010000 		.4byte	0x1b2
 486 01ab 0B       		.uleb128 0xb
 487 01ac B0000000 		.4byte	0xb0
 488 01b0 08       		.byte	0x8
 489 01b1 00       		.byte	0
 490 01b2 04       		.uleb128 0x4
 491 01b3 23010000 		.4byte	.LASF32
 492 01b7 03       		.byte	0x3
 493 01b8 1101     		.2byte	0x111
 494 01ba 8B010000 		.4byte	0x18b
 495 01be 0E       		.uleb128 0xe
 496 01bf 74020000 		.4byte	.LASF33
 497 01c3 01       		.byte	0x1
 498 01c4 25       		.byte	0x25
 499 01c5 00000000 		.4byte	.LFB0
 500 01c9 48000000 		.4byte	.LFE0-.LFB0
 501 01cd 01       		.uleb128 0x1
 502 01ce 9C       		.byte	0x9c
 503 01cf 0E       		.uleb128 0xe
 504 01d0 BE000000 		.4byte	.LASF34
 505 01d4 01       		.byte	0x1
 506 01d5 78       		.byte	0x78
 507 01d6 00000000 		.4byte	.LFB1
 508 01da 4C000000 		.4byte	.LFE1-.LFB1
 509 01de 01       		.uleb128 0x1
 510 01df 9C       		.byte	0x9c
 511 01e0 0E       		.uleb128 0xe
 512 01e1 00000000 		.4byte	.LASF35
 513 01e5 01       		.byte	0x1
 514 01e6 C9       		.byte	0xc9
 515 01e7 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 23


 516 01eb 54000000 		.4byte	.LFE2-.LFB2
 517 01ef 01       		.uleb128 0x1
 518 01f0 9C       		.byte	0x9c
 519 01f1 0F       		.uleb128 0xf
 520 01f2 CF000000 		.4byte	.LASF36
 521 01f6 01       		.byte	0x1
 522 01f7 B502     		.2byte	0x2b5
 523 01f9 00000000 		.4byte	.LFB3
 524 01fd 0C000000 		.4byte	.LFE3-.LFB3
 525 0201 01       		.uleb128 0x1
 526 0202 9C       		.byte	0x9c
 527 0203 10       		.uleb128 0x10
 528 0204 16020000 		.4byte	.LASF37
 529 0208 01       		.byte	0x1
 530 0209 D202     		.2byte	0x2d2
 531 020b 00000000 		.4byte	.LFB4
 532 020f 0C000000 		.4byte	.LFE4-.LFB4
 533 0213 01       		.uleb128 0x1
 534 0214 9C       		.byte	0x9c
 535 0215 0A       		.uleb128 0xa
 536 0216 25020000 		.4byte	0x225
 537 021a 25020000 		.4byte	0x225
 538 021e 0B       		.uleb128 0xb
 539 021f B0000000 		.4byte	0xb0
 540 0223 08       		.byte	0x8
 541 0224 00       		.byte	0
 542 0225 05       		.uleb128 0x5
 543 0226 2C010000 		.4byte	0x12c
 544 022a 11       		.uleb128 0x11
 545 022b F6000000 		.4byte	.LASF41
 546 022f 04       		.byte	0x4
 547 0230 79       		.byte	0x79
 548 0231 35020000 		.4byte	0x235
 549 0235 05       		.uleb128 0x5
 550 0236 15020000 		.4byte	0x215
 551 023a 00       		.byte	0
 552              		.section	.debug_abbrev,"",%progbits
 553              	.Ldebug_abbrev0:
 554 0000 01       		.uleb128 0x1
 555 0001 11       		.uleb128 0x11
 556 0002 01       		.byte	0x1
 557 0003 25       		.uleb128 0x25
 558 0004 0E       		.uleb128 0xe
 559 0005 13       		.uleb128 0x13
 560 0006 0B       		.uleb128 0xb
 561 0007 03       		.uleb128 0x3
 562 0008 0E       		.uleb128 0xe
 563 0009 1B       		.uleb128 0x1b
 564 000a 0E       		.uleb128 0xe
 565 000b 55       		.uleb128 0x55
 566 000c 17       		.uleb128 0x17
 567 000d 11       		.uleb128 0x11
 568 000e 01       		.uleb128 0x1
 569 000f 10       		.uleb128 0x10
 570 0010 17       		.uleb128 0x17
 571 0011 00       		.byte	0
 572 0012 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 24


 573 0013 02       		.uleb128 0x2
 574 0014 24       		.uleb128 0x24
 575 0015 00       		.byte	0
 576 0016 0B       		.uleb128 0xb
 577 0017 0B       		.uleb128 0xb
 578 0018 3E       		.uleb128 0x3e
 579 0019 0B       		.uleb128 0xb
 580 001a 03       		.uleb128 0x3
 581 001b 0E       		.uleb128 0xe
 582 001c 00       		.byte	0
 583 001d 00       		.byte	0
 584 001e 03       		.uleb128 0x3
 585 001f 24       		.uleb128 0x24
 586 0020 00       		.byte	0
 587 0021 0B       		.uleb128 0xb
 588 0022 0B       		.uleb128 0xb
 589 0023 3E       		.uleb128 0x3e
 590 0024 0B       		.uleb128 0xb
 591 0025 03       		.uleb128 0x3
 592 0026 08       		.uleb128 0x8
 593 0027 00       		.byte	0
 594 0028 00       		.byte	0
 595 0029 04       		.uleb128 0x4
 596 002a 16       		.uleb128 0x16
 597 002b 00       		.byte	0
 598 002c 03       		.uleb128 0x3
 599 002d 0E       		.uleb128 0xe
 600 002e 3A       		.uleb128 0x3a
 601 002f 0B       		.uleb128 0xb
 602 0030 3B       		.uleb128 0x3b
 603 0031 05       		.uleb128 0x5
 604 0032 49       		.uleb128 0x49
 605 0033 13       		.uleb128 0x13
 606 0034 00       		.byte	0
 607 0035 00       		.byte	0
 608 0036 05       		.uleb128 0x5
 609 0037 35       		.uleb128 0x35
 610 0038 00       		.byte	0
 611 0039 49       		.uleb128 0x49
 612 003a 13       		.uleb128 0x13
 613 003b 00       		.byte	0
 614 003c 00       		.byte	0
 615 003d 06       		.uleb128 0x6
 616 003e 13       		.uleb128 0x13
 617 003f 01       		.byte	0x1
 618 0040 0B       		.uleb128 0xb
 619 0041 0B       		.uleb128 0xb
 620 0042 3A       		.uleb128 0x3a
 621 0043 0B       		.uleb128 0xb
 622 0044 3B       		.uleb128 0x3b
 623 0045 0B       		.uleb128 0xb
 624 0046 01       		.uleb128 0x1
 625 0047 13       		.uleb128 0x13
 626 0048 00       		.byte	0
 627 0049 00       		.byte	0
 628 004a 07       		.uleb128 0x7
 629 004b 0D       		.uleb128 0xd
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 25


 630 004c 00       		.byte	0
 631 004d 03       		.uleb128 0x3
 632 004e 0E       		.uleb128 0xe
 633 004f 3A       		.uleb128 0x3a
 634 0050 0B       		.uleb128 0xb
 635 0051 3B       		.uleb128 0x3b
 636 0052 0B       		.uleb128 0xb
 637 0053 49       		.uleb128 0x49
 638 0054 13       		.uleb128 0x13
 639 0055 38       		.uleb128 0x38
 640 0056 0B       		.uleb128 0xb
 641 0057 00       		.byte	0
 642 0058 00       		.byte	0
 643 0059 08       		.uleb128 0x8
 644 005a 16       		.uleb128 0x16
 645 005b 00       		.byte	0
 646 005c 03       		.uleb128 0x3
 647 005d 0E       		.uleb128 0xe
 648 005e 3A       		.uleb128 0x3a
 649 005f 0B       		.uleb128 0xb
 650 0060 3B       		.uleb128 0x3b
 651 0061 0B       		.uleb128 0xb
 652 0062 49       		.uleb128 0x49
 653 0063 13       		.uleb128 0x13
 654 0064 00       		.byte	0
 655 0065 00       		.byte	0
 656 0066 09       		.uleb128 0x9
 657 0067 0D       		.uleb128 0xd
 658 0068 00       		.byte	0
 659 0069 03       		.uleb128 0x3
 660 006a 08       		.uleb128 0x8
 661 006b 3A       		.uleb128 0x3a
 662 006c 0B       		.uleb128 0xb
 663 006d 3B       		.uleb128 0x3b
 664 006e 0B       		.uleb128 0xb
 665 006f 49       		.uleb128 0x49
 666 0070 13       		.uleb128 0x13
 667 0071 38       		.uleb128 0x38
 668 0072 0B       		.uleb128 0xb
 669 0073 00       		.byte	0
 670 0074 00       		.byte	0
 671 0075 0A       		.uleb128 0xa
 672 0076 01       		.uleb128 0x1
 673 0077 01       		.byte	0x1
 674 0078 49       		.uleb128 0x49
 675 0079 13       		.uleb128 0x13
 676 007a 01       		.uleb128 0x1
 677 007b 13       		.uleb128 0x13
 678 007c 00       		.byte	0
 679 007d 00       		.byte	0
 680 007e 0B       		.uleb128 0xb
 681 007f 21       		.uleb128 0x21
 682 0080 00       		.byte	0
 683 0081 49       		.uleb128 0x49
 684 0082 13       		.uleb128 0x13
 685 0083 2F       		.uleb128 0x2f
 686 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 26


 687 0085 00       		.byte	0
 688 0086 00       		.byte	0
 689 0087 0C       		.uleb128 0xc
 690 0088 13       		.uleb128 0x13
 691 0089 01       		.byte	0x1
 692 008a 0B       		.uleb128 0xb
 693 008b 0B       		.uleb128 0xb
 694 008c 3A       		.uleb128 0x3a
 695 008d 0B       		.uleb128 0xb
 696 008e 3B       		.uleb128 0x3b
 697 008f 05       		.uleb128 0x5
 698 0090 01       		.uleb128 0x1
 699 0091 13       		.uleb128 0x13
 700 0092 00       		.byte	0
 701 0093 00       		.byte	0
 702 0094 0D       		.uleb128 0xd
 703 0095 0D       		.uleb128 0xd
 704 0096 00       		.byte	0
 705 0097 03       		.uleb128 0x3
 706 0098 0E       		.uleb128 0xe
 707 0099 3A       		.uleb128 0x3a
 708 009a 0B       		.uleb128 0xb
 709 009b 3B       		.uleb128 0x3b
 710 009c 05       		.uleb128 0x5
 711 009d 49       		.uleb128 0x49
 712 009e 13       		.uleb128 0x13
 713 009f 38       		.uleb128 0x38
 714 00a0 0B       		.uleb128 0xb
 715 00a1 00       		.byte	0
 716 00a2 00       		.byte	0
 717 00a3 0E       		.uleb128 0xe
 718 00a4 2E       		.uleb128 0x2e
 719 00a5 00       		.byte	0
 720 00a6 3F       		.uleb128 0x3f
 721 00a7 19       		.uleb128 0x19
 722 00a8 03       		.uleb128 0x3
 723 00a9 0E       		.uleb128 0xe
 724 00aa 3A       		.uleb128 0x3a
 725 00ab 0B       		.uleb128 0xb
 726 00ac 3B       		.uleb128 0x3b
 727 00ad 0B       		.uleb128 0xb
 728 00ae 27       		.uleb128 0x27
 729 00af 19       		.uleb128 0x19
 730 00b0 11       		.uleb128 0x11
 731 00b1 01       		.uleb128 0x1
 732 00b2 12       		.uleb128 0x12
 733 00b3 06       		.uleb128 0x6
 734 00b4 40       		.uleb128 0x40
 735 00b5 18       		.uleb128 0x18
 736 00b6 9742     		.uleb128 0x2117
 737 00b8 19       		.uleb128 0x19
 738 00b9 00       		.byte	0
 739 00ba 00       		.byte	0
 740 00bb 0F       		.uleb128 0xf
 741 00bc 2E       		.uleb128 0x2e
 742 00bd 00       		.byte	0
 743 00be 3F       		.uleb128 0x3f
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 27


 744 00bf 19       		.uleb128 0x19
 745 00c0 03       		.uleb128 0x3
 746 00c1 0E       		.uleb128 0xe
 747 00c2 3A       		.uleb128 0x3a
 748 00c3 0B       		.uleb128 0xb
 749 00c4 3B       		.uleb128 0x3b
 750 00c5 05       		.uleb128 0x5
 751 00c6 27       		.uleb128 0x27
 752 00c7 19       		.uleb128 0x19
 753 00c8 11       		.uleb128 0x11
 754 00c9 01       		.uleb128 0x1
 755 00ca 12       		.uleb128 0x12
 756 00cb 06       		.uleb128 0x6
 757 00cc 40       		.uleb128 0x40
 758 00cd 18       		.uleb128 0x18
 759 00ce 9742     		.uleb128 0x2117
 760 00d0 19       		.uleb128 0x19
 761 00d1 00       		.byte	0
 762 00d2 00       		.byte	0
 763 00d3 10       		.uleb128 0x10
 764 00d4 2E       		.uleb128 0x2e
 765 00d5 00       		.byte	0
 766 00d6 3F       		.uleb128 0x3f
 767 00d7 19       		.uleb128 0x19
 768 00d8 03       		.uleb128 0x3
 769 00d9 0E       		.uleb128 0xe
 770 00da 3A       		.uleb128 0x3a
 771 00db 0B       		.uleb128 0xb
 772 00dc 3B       		.uleb128 0x3b
 773 00dd 05       		.uleb128 0x5
 774 00de 27       		.uleb128 0x27
 775 00df 19       		.uleb128 0x19
 776 00e0 11       		.uleb128 0x11
 777 00e1 01       		.uleb128 0x1
 778 00e2 12       		.uleb128 0x12
 779 00e3 06       		.uleb128 0x6
 780 00e4 40       		.uleb128 0x40
 781 00e5 18       		.uleb128 0x18
 782 00e6 9642     		.uleb128 0x2116
 783 00e8 19       		.uleb128 0x19
 784 00e9 00       		.byte	0
 785 00ea 00       		.byte	0
 786 00eb 11       		.uleb128 0x11
 787 00ec 34       		.uleb128 0x34
 788 00ed 00       		.byte	0
 789 00ee 03       		.uleb128 0x3
 790 00ef 0E       		.uleb128 0xe
 791 00f0 3A       		.uleb128 0x3a
 792 00f1 0B       		.uleb128 0xb
 793 00f2 3B       		.uleb128 0x3b
 794 00f3 0B       		.uleb128 0xb
 795 00f4 49       		.uleb128 0x49
 796 00f5 13       		.uleb128 0x13
 797 00f6 3F       		.uleb128 0x3f
 798 00f7 19       		.uleb128 0x19
 799 00f8 3C       		.uleb128 0x3c
 800 00f9 19       		.uleb128 0x19
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 28


 801 00fa 00       		.byte	0
 802 00fb 00       		.byte	0
 803 00fc 00       		.byte	0
 804              		.section	.debug_aranges,"",%progbits
 805 0000 3C000000 		.4byte	0x3c
 806 0004 0200     		.2byte	0x2
 807 0006 00000000 		.4byte	.Ldebug_info0
 808 000a 04       		.byte	0x4
 809 000b 00       		.byte	0
 810 000c 0000     		.2byte	0
 811 000e 0000     		.2byte	0
 812 0010 00000000 		.4byte	.LFB0
 813 0014 48000000 		.4byte	.LFE0-.LFB0
 814 0018 00000000 		.4byte	.LFB1
 815 001c 4C000000 		.4byte	.LFE1-.LFB1
 816 0020 00000000 		.4byte	.LFB2
 817 0024 54000000 		.4byte	.LFE2-.LFB2
 818 0028 00000000 		.4byte	.LFB3
 819 002c 0C000000 		.4byte	.LFE3-.LFB3
 820 0030 00000000 		.4byte	.LFB4
 821 0034 0C000000 		.4byte	.LFE4-.LFB4
 822 0038 00000000 		.4byte	0
 823 003c 00000000 		.4byte	0
 824              		.section	.debug_ranges,"",%progbits
 825              	.Ldebug_ranges0:
 826 0000 00000000 		.4byte	.LFB0
 827 0004 48000000 		.4byte	.LFE0
 828 0008 00000000 		.4byte	.LFB1
 829 000c 4C000000 		.4byte	.LFE1
 830 0010 00000000 		.4byte	.LFB2
 831 0014 54000000 		.4byte	.LFE2
 832 0018 00000000 		.4byte	.LFB3
 833 001c 0C000000 		.4byte	.LFE3
 834 0020 00000000 		.4byte	.LFB4
 835 0024 0C000000 		.4byte	.LFE4
 836 0028 00000000 		.4byte	0
 837 002c 00000000 		.4byte	0
 838              		.section	.debug_line,"",%progbits
 839              	.Ldebug_line0:
 840 0000 EE000000 		.section	.debug_str,"MS",%progbits,1
 840      02006800 
 840      00000201 
 840      FB0E0D00 
 840      01010101 
 841              	.LASF35:
 842 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 842      4152545F 
 842      45505F33 
 842      5F495352 
 842      00
 843              	.LASF38:
 844 0011 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 844      43313120 
 844      352E342E 
 844      31203230 
 844      31363036 
 845 0044 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 29


 845      20726576 
 845      6973696F 
 845      6E203233 
 845      37373135 
 846 0077 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 846      66756E63 
 846      74696F6E 
 846      2D736563 
 846      74696F6E 
 847              	.LASF29:
 848 009f 65704372 		.ascii	"epCr0\000"
 848      3000
 849              	.LASF11:
 850 00a5 666C6F61 		.ascii	"float\000"
 850      7400
 851              	.LASF3:
 852 00ab 73686F72 		.ascii	"short unsigned int\000"
 852      7420756E 
 852      7369676E 
 852      65642069 
 852      6E7400
 853              	.LASF34:
 854 00be 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 854      4152545F 
 854      45505F32 
 854      5F495352 
 854      00
 855              	.LASF36:
 856 00cf 55534255 		.ascii	"USBUART_SOF_ISR\000"
 856      4152545F 
 856      534F465F 
 856      49535200 
 857              	.LASF27:
 858 00df 6570436E 		.ascii	"epCnt0\000"
 858      743000
 859              	.LASF28:
 860 00e6 6570436E 		.ascii	"epCnt1\000"
 860      743100
 861              	.LASF20:
 862 00ed 6570546F 		.ascii	"epToggle\000"
 862      67676C65 
 862      00
 863              	.LASF41:
 864 00f6 55534255 		.ascii	"USBUART_EP\000"
 864      4152545F 
 864      455000
 865              	.LASF14:
 866 0101 72656738 		.ascii	"reg8\000"
 866      00
 867              	.LASF5:
 868 0106 6C6F6E67 		.ascii	"long unsigned int\000"
 868      20756E73 
 868      69676E65 
 868      6420696E 
 868      7400
 869              	.LASF21:
 870 0118 61646472 		.ascii	"addr\000"
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 30


 870      00
 871              	.LASF31:
 872 011d 73696545 		.ascii	"sieEp\000"
 872      7000
 873              	.LASF32:
 874 0123 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 874      4152545F 
 874      7369655F 
 874      6570735F 
 874      73747275 
 875              	.LASF1:
 876 013a 756E7369 		.ascii	"unsigned char\000"
 876      676E6564 
 876      20636861 
 876      7200
 877              	.LASF39:
 878 0148 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 878      72617465 
 878      645F536F 
 878      75726365 
 878      5C50536F 
 879              	.LASF12:
 880 016f 646F7562 		.ascii	"double\000"
 880      6C6500
 881              	.LASF17:
 882 0176 61747472 		.ascii	"attrib\000"
 882      696200
 883              	.LASF23:
 884 017d 62756666 		.ascii	"buffOffset\000"
 884      4F666673 
 884      657400
 885              	.LASF10:
 886 0188 75696E74 		.ascii	"uint16\000"
 886      313600
 887              	.LASF18:
 888 018f 61706945 		.ascii	"apiEpState\000"
 888      70537461 
 888      746500
 889              	.LASF8:
 890 019a 756E7369 		.ascii	"unsigned int\000"
 890      676E6564 
 890      20696E74 
 890      00
 891              	.LASF7:
 892 01a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 892      206C6F6E 
 892      6720756E 
 892      7369676E 
 892      65642069 
 893              	.LASF19:
 894 01be 68774570 		.ascii	"hwEpState\000"
 894      53746174 
 894      6500
 895              	.LASF30:
 896 01c8 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 896      4152545F 
 896      7369655F 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 31


 896      65705F73 
 896      74727563 
 897              	.LASF16:
 898 01de 73697A65 		.ascii	"sizetype\000"
 898      74797065 
 898      00
 899              	.LASF22:
 900 01e7 65704D6F 		.ascii	"epMode\000"
 900      646500
 901              	.LASF6:
 902 01ee 6C6F6E67 		.ascii	"long long int\000"
 902      206C6F6E 
 902      6720696E 
 902      7400
 903              	.LASF13:
 904 01fc 63686172 		.ascii	"char\000"
 904      00
 905              	.LASF24:
 906 0201 62756666 		.ascii	"bufferSize\000"
 906      65725369 
 906      7A6500
 907              	.LASF2:
 908 020c 73686F72 		.ascii	"short int\000"
 908      7420696E 
 908      7400
 909              	.LASF37:
 910 0216 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 910      4152545F 
 910      4255535F 
 910      52455345 
 910      545F4953 
 911              	.LASF9:
 912 022c 75696E74 		.ascii	"uint8\000"
 912      3800
 913              	.LASF25:
 914 0232 696E7465 		.ascii	"interface\000"
 914      72666163 
 914      6500
 915              	.LASF4:
 916 023c 6C6F6E67 		.ascii	"long int\000"
 916      20696E74 
 916      00
 917              	.LASF26:
 918 0245 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 918      42554152 
 918      545F4550 
 918      5F43544C 
 918      5F424C4F 
 919              	.LASF15:
 920 025c 6C6F6E67 		.ascii	"long double\000"
 920      20646F75 
 920      626C6500 
 921              	.LASF0:
 922 0268 7369676E 		.ascii	"signed char\000"
 922      65642063 
 922      68617200 
 923              	.LASF33:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccBxAp3j.s 			page 32


 924 0274 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 924      4152545F 
 924      45505F31 
 924      5F495352 
 924      00
 925              	.LASF40:
 926 0285 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 926      726F6772 
 926      616D6D65 
 926      5F536372 
 926      69707473 
 927 02b4 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 927      5F435938 
 927      434B4954 
 927      5F303539 
 927      2D6D6173 
 928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
