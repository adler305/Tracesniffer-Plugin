ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"comtest.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sniffIDFilter,13,4
  20              		.comm	buffer,4098,4
  21              		.comm	objectList,1704,4
  22              		.bss
  23              		.align	2
  24              	xPort:
  25 0000 00000000 		.space	4
  26              		.align	2
  27              	uxBaseLED:
  28 0004 00000000 		.space	4
  29              		.align	2
  30              	uxRxLoops:
  31 0008 00000000 		.space	4
  32              		.section	.rodata
  33              		.align	2
  34              	.LC0:
  35 0000 434F4D54 		.ascii	"COMTx\000"
  35      7800
  36 0006 0000     		.align	2
  37              	.LC1:
  38 0008 434F4D52 		.ascii	"COMRx\000"
  38      7800
  39              		.section	.text.vAltStartComTestTasks,"ax",%progbits
  40              		.align	2
  41              		.global	vAltStartComTestTasks
  42              		.thumb
  43              		.thumb_func
  44              		.type	vAltStartComTestTasks, %function
  45              	vAltStartComTestTasks:
  46              	.LFB68:
  47              		.file 1 "..\\Common\\Minimal\\comtest.c"
   1:..\Common\Minimal/comtest.c **** /*
   2:..\Common\Minimal/comtest.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Common\Minimal/comtest.c ****     All rights reserved
   4:..\Common\Minimal/comtest.c **** 
   5:..\Common\Minimal/comtest.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Common\Minimal/comtest.c **** 
   7:..\Common\Minimal/comtest.c ****     This file is part of the FreeRTOS distribution.
   8:..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 2


   9:..\Common\Minimal/comtest.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Common\Minimal/comtest.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Common\Minimal/comtest.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Common\Minimal/comtest.c **** 
  13:..\Common\Minimal/comtest.c ****     ***************************************************************************
  14:..\Common\Minimal/comtest.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Common\Minimal/comtest.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Common\Minimal/comtest.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Common\Minimal/comtest.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Common\Minimal/comtest.c ****     ***************************************************************************
  19:..\Common\Minimal/comtest.c **** 
  20:..\Common\Minimal/comtest.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Common\Minimal/comtest.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Common\Minimal/comtest.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Common\Minimal/comtest.c ****     link: http://www.freertos.org/a00114.html
  24:..\Common\Minimal/comtest.c **** 
  25:..\Common\Minimal/comtest.c ****     ***************************************************************************
  26:..\Common\Minimal/comtest.c ****      *                                                                       *
  27:..\Common\Minimal/comtest.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Common\Minimal/comtest.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Common\Minimal/comtest.c ****      *    platform software that is more than just the market leader, it     *
  30:..\Common\Minimal/comtest.c ****      *    is the industry's de facto standard.                               *
  31:..\Common\Minimal/comtest.c ****      *                                                                       *
  32:..\Common\Minimal/comtest.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Common\Minimal/comtest.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Common\Minimal/comtest.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\Common\Minimal/comtest.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Common\Minimal/comtest.c ****      *                                                                       *
  37:..\Common\Minimal/comtest.c ****     ***************************************************************************
  38:..\Common\Minimal/comtest.c **** 
  39:..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Common\Minimal/comtest.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Common\Minimal/comtest.c ****     defined configASSERT()?
  42:..\Common\Minimal/comtest.c **** 
  43:..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Common\Minimal/comtest.c ****     embedded software for free we request you assist our global community by
  45:..\Common\Minimal/comtest.c ****     participating in the support forum.
  46:..\Common\Minimal/comtest.c **** 
  47:..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Common\Minimal/comtest.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Common\Minimal/comtest.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Common\Minimal/comtest.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Common\Minimal/comtest.c **** 
  52:..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Common\Minimal/comtest.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Common\Minimal/comtest.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Common\Minimal/comtest.c **** 
  56:..\Common\Minimal/comtest.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Common\Minimal/comtest.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Common\Minimal/comtest.c **** 
  59:..\Common\Minimal/comtest.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Common\Minimal/comtest.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Common\Minimal/comtest.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Common\Minimal/comtest.c **** 
  63:..\Common\Minimal/comtest.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Common\Minimal/comtest.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Common\Minimal/comtest.c ****     mission critical applications that require provable dependability.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 3


  66:..\Common\Minimal/comtest.c **** 
  67:..\Common\Minimal/comtest.c ****     1 tab == 4 spaces!
  68:..\Common\Minimal/comtest.c **** */
  69:..\Common\Minimal/comtest.c **** 
  70:..\Common\Minimal/comtest.c **** 
  71:..\Common\Minimal/comtest.c **** /*
  72:..\Common\Minimal/comtest.c ****  * This version of comtest. c is for use on systems that have limited stack
  73:..\Common\Minimal/comtest.c ****  * space and no display facilities.  The complete version can be found in
  74:..\Common\Minimal/comtest.c ****  * the Demo/Common/Full directory.
  75:..\Common\Minimal/comtest.c ****  *
  76:..\Common\Minimal/comtest.c ****  * Creates two tasks that operate on an interrupt driven serial port.  A
  77:..\Common\Minimal/comtest.c ****  * loopback connector should be used so that everything that is transmitted is
  78:..\Common\Minimal/comtest.c ****  * also received.  The serial port does not use any flow control.  On a
  79:..\Common\Minimal/comtest.c ****  * standard 9way 'D' connector pins two and three should be connected together.
  80:..\Common\Minimal/comtest.c ****  *
  81:..\Common\Minimal/comtest.c ****  * The first task posts a sequence of characters to the Tx queue, toggling an
  82:..\Common\Minimal/comtest.c ****  * LED on each successful post.  At the end of the sequence it sleeps for a
  83:..\Common\Minimal/comtest.c ****  * pseudo-random period before resending the same sequence.
  84:..\Common\Minimal/comtest.c ****  *
  85:..\Common\Minimal/comtest.c ****  * The UART Tx end interrupt is enabled whenever data is available in the Tx
  86:..\Common\Minimal/comtest.c ****  * queue.  The Tx end ISR removes a single character from the Tx queue and
  87:..\Common\Minimal/comtest.c ****  * passes it to the UART for transmission.
  88:..\Common\Minimal/comtest.c ****  *
  89:..\Common\Minimal/comtest.c ****  * The second task blocks on the Rx queue waiting for a character to become
  90:..\Common\Minimal/comtest.c ****  * available.  When the UART Rx end interrupt receives a character it places
  91:..\Common\Minimal/comtest.c ****  * it in the Rx queue, waking the second task.  The second task checks that the
  92:..\Common\Minimal/comtest.c ****  * characters removed from the Rx queue form the same sequence as those posted
  93:..\Common\Minimal/comtest.c ****  * to the Tx queue, and toggles an LED for each correct character.
  94:..\Common\Minimal/comtest.c ****  *
  95:..\Common\Minimal/comtest.c ****  * The receiving task is spawned with a higher priority than the transmitting
  96:..\Common\Minimal/comtest.c ****  * task.  The receiver will therefore wake every time a character is
  97:..\Common\Minimal/comtest.c ****  * transmitted so neither the Tx or Rx queue should ever hold more than a few
  98:..\Common\Minimal/comtest.c ****  * characters.
  99:..\Common\Minimal/comtest.c ****  *
 100:..\Common\Minimal/comtest.c ****  */
 101:..\Common\Minimal/comtest.c **** 
 102:..\Common\Minimal/comtest.c **** /* Scheduler include files. */
 103:..\Common\Minimal/comtest.c **** #include <stdlib.h>
 104:..\Common\Minimal/comtest.c **** #include "FreeRTOS.h"
 105:..\Common\Minimal/comtest.c **** #include "task.h"
 106:..\Common\Minimal/comtest.c **** 
 107:..\Common\Minimal/comtest.c **** /* Demo program include files. */
 108:..\Common\Minimal/comtest.c **** #include "serial.h"
 109:..\Common\Minimal/comtest.c **** #include "comtest.h"
 110:..\Common\Minimal/comtest.c **** #include "partest.h"
 111:..\Common\Minimal/comtest.c **** 
 112:..\Common\Minimal/comtest.c **** #define comSTACK_SIZE				configMINIMAL_STACK_SIZE
 113:..\Common\Minimal/comtest.c **** #define comTX_LED_OFFSET			( 0 )
 114:..\Common\Minimal/comtest.c **** #define comRX_LED_OFFSET			( 1 )
 115:..\Common\Minimal/comtest.c **** #define comTOTAL_PERMISSIBLE_ERRORS ( 2 )
 116:..\Common\Minimal/comtest.c **** 
 117:..\Common\Minimal/comtest.c **** /* The Tx task will transmit the sequence of characters at a pseudo random
 118:..\Common\Minimal/comtest.c **** interval.  This is the maximum and minimum block time between sends. */
 119:..\Common\Minimal/comtest.c **** #define comTX_MAX_BLOCK_TIME		( ( TickType_t ) 0x96 )
 120:..\Common\Minimal/comtest.c **** #define comTX_MIN_BLOCK_TIME		( ( TickType_t ) 0x32 )
 121:..\Common\Minimal/comtest.c **** #define comOFFSET_TIME				( ( TickType_t ) 3 )
 122:..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 4


 123:..\Common\Minimal/comtest.c **** /* We should find that each character can be queued for Tx immediately and we
 124:..\Common\Minimal/comtest.c **** don't have to block to send. */
 125:..\Common\Minimal/comtest.c **** #define comNO_BLOCK					( ( TickType_t ) 0 )
 126:..\Common\Minimal/comtest.c **** 
 127:..\Common\Minimal/comtest.c **** /* The Rx task will block on the Rx queue for a long period. */
 128:..\Common\Minimal/comtest.c **** #define comRX_BLOCK_TIME			( ( TickType_t ) 0xffff )
 129:..\Common\Minimal/comtest.c **** 
 130:..\Common\Minimal/comtest.c **** /* The sequence transmitted is from comFIRST_BYTE to and including comLAST_BYTE. */
 131:..\Common\Minimal/comtest.c **** #define comFIRST_BYTE				( 'A' )
 132:..\Common\Minimal/comtest.c **** #define comLAST_BYTE				( 'X' )
 133:..\Common\Minimal/comtest.c **** 
 134:..\Common\Minimal/comtest.c **** #define comBUFFER_LEN				( ( UBaseType_t ) ( comLAST_BYTE - comFIRST_BYTE ) + ( UBaseType_t ) 1 )
 135:..\Common\Minimal/comtest.c **** #define comINITIAL_RX_COUNT_VALUE	( 0 )
 136:..\Common\Minimal/comtest.c **** 
 137:..\Common\Minimal/comtest.c **** /* Handle to the com port used by both tasks. */
 138:..\Common\Minimal/comtest.c **** static xComPortHandle xPort = NULL;
 139:..\Common\Minimal/comtest.c **** 
 140:..\Common\Minimal/comtest.c **** /* The transmit task as described at the top of the file. */
 141:..\Common\Minimal/comtest.c **** static portTASK_FUNCTION_PROTO( vComTxTask, pvParameters );
 142:..\Common\Minimal/comtest.c **** 
 143:..\Common\Minimal/comtest.c **** /* The receive task as described at the top of the file. */
 144:..\Common\Minimal/comtest.c **** static portTASK_FUNCTION_PROTO( vComRxTask, pvParameters );
 145:..\Common\Minimal/comtest.c **** 
 146:..\Common\Minimal/comtest.c **** /* The LED that should be toggled by the Rx and Tx tasks.  The Rx task will
 147:..\Common\Minimal/comtest.c **** toggle LED ( uxBaseLED + comRX_LED_OFFSET).  The Tx task will toggle LED
 148:..\Common\Minimal/comtest.c **** ( uxBaseLED + comTX_LED_OFFSET ). */
 149:..\Common\Minimal/comtest.c **** static UBaseType_t uxBaseLED = 0;
 150:..\Common\Minimal/comtest.c **** 
 151:..\Common\Minimal/comtest.c **** /* Check variable used to ensure no error have occurred.  The Rx task will
 152:..\Common\Minimal/comtest.c **** increment this variable after every successfully received sequence.  If at any
 153:..\Common\Minimal/comtest.c **** time the sequence is incorrect the the variable will stop being incremented. */
 154:..\Common\Minimal/comtest.c **** static volatile UBaseType_t uxRxLoops = comINITIAL_RX_COUNT_VALUE;
 155:..\Common\Minimal/comtest.c **** 
 156:..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 157:..\Common\Minimal/comtest.c **** 
 158:..\Common\Minimal/comtest.c **** void vAltStartComTestTasks( UBaseType_t uxPriority, uint32_t ulBaudRate, UBaseType_t uxLED )
 159:..\Common\Minimal/comtest.c **** {
  48              		.loc 1 159 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 16
  51              		@ frame_needed = 1, uses_anonymous_args = 0
  52 0000 80B5     		push	{r7, lr}
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 86B0     		sub	sp, sp, #24
  57              		.cfi_def_cfa_offset 32
  58 0004 02AF     		add	r7, sp, #8
  59              		.cfi_def_cfa 7, 24
  60 0006 F860     		str	r0, [r7, #12]
  61 0008 B960     		str	r1, [r7, #8]
  62 000a 7A60     		str	r2, [r7, #4]
 160:..\Common\Minimal/comtest.c **** 	/* Initialise the com port then spawn the Rx and Tx tasks. */
 161:..\Common\Minimal/comtest.c **** 	uxBaseLED = uxLED;
  63              		.loc 1 161 0
  64 000c 0F4A     		ldr	r2, .L2
  65 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 5


  66 0010 1360     		str	r3, [r2]
 162:..\Common\Minimal/comtest.c **** 	xSerialPortInitMinimal( ulBaudRate, comBUFFER_LEN );
  67              		.loc 1 162 0
  68 0012 1821     		movs	r1, #24
  69 0014 B868     		ldr	r0, [r7, #8]
  70 0016 FFF7FEFF 		bl	xSerialPortInitMinimal
 163:..\Common\Minimal/comtest.c **** 
 164:..\Common\Minimal/comtest.c **** 	/* The Tx task is spawned with a lower priority than the Rx task. */
 165:..\Common\Minimal/comtest.c **** 	xTaskCreate( vComTxTask, "COMTx", comSTACK_SIZE, NULL, uxPriority - 1, ( TaskHandle_t * ) NULL );
  71              		.loc 1 165 0
  72 001a FB68     		ldr	r3, [r7, #12]
  73 001c 013B     		subs	r3, r3, #1
  74 001e 0022     		movs	r2, #0
  75 0020 0192     		str	r2, [sp, #4]
  76 0022 0093     		str	r3, [sp]
  77 0024 0023     		movs	r3, #0
  78 0026 6422     		movs	r2, #100
  79 0028 0949     		ldr	r1, .L2+4
  80 002a 0A48     		ldr	r0, .L2+8
  81 002c FFF7FEFF 		bl	xTaskCreate
 166:..\Common\Minimal/comtest.c **** 	xTaskCreate( vComRxTask, "COMRx", comSTACK_SIZE, NULL, uxPriority, ( TaskHandle_t * ) NULL );
  82              		.loc 1 166 0
  83 0030 0023     		movs	r3, #0
  84 0032 0193     		str	r3, [sp, #4]
  85 0034 FB68     		ldr	r3, [r7, #12]
  86 0036 0093     		str	r3, [sp]
  87 0038 0023     		movs	r3, #0
  88 003a 6422     		movs	r2, #100
  89 003c 0649     		ldr	r1, .L2+12
  90 003e 0748     		ldr	r0, .L2+16
  91 0040 FFF7FEFF 		bl	xTaskCreate
 167:..\Common\Minimal/comtest.c **** }
  92              		.loc 1 167 0
  93 0044 00BF     		nop
  94 0046 1037     		adds	r7, r7, #16
  95              		.cfi_def_cfa_offset 8
  96 0048 BD46     		mov	sp, r7
  97              		.cfi_def_cfa_register 13
  98              		@ sp needed
  99 004a 80BD     		pop	{r7, pc}
 100              	.L3:
 101              		.align	2
 102              	.L2:
 103 004c 04000000 		.word	uxBaseLED
 104 0050 00000000 		.word	.LC0
 105 0054 00000000 		.word	vComTxTask
 106 0058 08000000 		.word	.LC1
 107 005c 00000000 		.word	vComRxTask
 108              		.cfi_endproc
 109              	.LFE68:
 110              		.size	vAltStartComTestTasks, .-vAltStartComTestTasks
 111              		.section	.text.vComTxTask,"ax",%progbits
 112              		.align	2
 113              		.thumb
 114              		.thumb_func
 115              		.type	vComTxTask, %function
 116              	vComTxTask:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 6


 117              	.LFB69:
 168:..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 169:..\Common\Minimal/comtest.c **** 
 170:..\Common\Minimal/comtest.c **** static portTASK_FUNCTION( vComTxTask, pvParameters )
 171:..\Common\Minimal/comtest.c **** {
 118              		.loc 1 171 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 16
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 84B0     		sub	sp, sp, #16
 127              		.cfi_def_cfa_offset 24
 128 0004 00AF     		add	r7, sp, #0
 129              		.cfi_def_cfa_register 7
 130 0006 7860     		str	r0, [r7, #4]
 131              	.L9:
 172:..\Common\Minimal/comtest.c **** char cByteToSend;
 173:..\Common\Minimal/comtest.c **** TickType_t xTimeToWait;
 174:..\Common\Minimal/comtest.c **** 
 175:..\Common\Minimal/comtest.c **** 	/* Just to stop compiler warnings. */
 176:..\Common\Minimal/comtest.c **** 	( void ) pvParameters;
 177:..\Common\Minimal/comtest.c **** 
 178:..\Common\Minimal/comtest.c **** 	for( ;; )
 179:..\Common\Minimal/comtest.c **** 	{
 180:..\Common\Minimal/comtest.c **** 		/* Simply transmit a sequence of characters from comFIRST_BYTE to
 181:..\Common\Minimal/comtest.c **** 		comLAST_BYTE. */
 182:..\Common\Minimal/comtest.c **** 		for( cByteToSend = comFIRST_BYTE; cByteToSend <= comLAST_BYTE; cByteToSend++ )
 132              		.loc 1 182 0
 133 0008 4123     		movs	r3, #65
 134 000a FB73     		strb	r3, [r7, #15]
 135 000c 12E0     		b	.L5
 136              	.L7:
 183:..\Common\Minimal/comtest.c **** 		{
 184:..\Common\Minimal/comtest.c **** 			if( xSerialPutChar( xPort, cByteToSend, comNO_BLOCK ) == pdPASS )
 137              		.loc 1 184 0
 138 000e 1A4B     		ldr	r3, .L10
 139 0010 1B68     		ldr	r3, [r3]
 140 0012 97F90F10 		ldrsb	r1, [r7, #15]
 141 0016 0022     		movs	r2, #0
 142 0018 1846     		mov	r0, r3
 143 001a FFF7FEFF 		bl	xSerialPutChar
 144 001e 0346     		mov	r3, r0
 145 0020 012B     		cmp	r3, #1
 146 0022 04D1     		bne	.L6
 185:..\Common\Minimal/comtest.c **** 			{
 186:..\Common\Minimal/comtest.c **** 				vParTestToggleLED( uxBaseLED + comTX_LED_OFFSET );
 147              		.loc 1 186 0
 148 0024 154B     		ldr	r3, .L10+4
 149 0026 1B68     		ldr	r3, [r3]
 150 0028 1846     		mov	r0, r3
 151 002a FFF7FEFF 		bl	vParTestToggleLED
 152              	.L6:
 182:..\Common\Minimal/comtest.c **** 		{
 153              		.loc 1 182 0 discriminator 2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 7


 154 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 155 0030 0133     		adds	r3, r3, #1
 156 0032 FB73     		strb	r3, [r7, #15]
 157              	.L5:
 182:..\Common\Minimal/comtest.c **** 		{
 158              		.loc 1 182 0 is_stmt 0 discriminator 1
 159 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 160 0036 582B     		cmp	r3, #88
 161 0038 E9D9     		bls	.L7
 187:..\Common\Minimal/comtest.c **** 			}
 188:..\Common\Minimal/comtest.c **** 		}
 189:..\Common\Minimal/comtest.c **** 
 190:..\Common\Minimal/comtest.c **** 		/* Turn the LED off while we are not doing anything. */
 191:..\Common\Minimal/comtest.c **** 		vParTestSetLED( uxBaseLED + comTX_LED_OFFSET, pdFALSE );
 162              		.loc 1 191 0 is_stmt 1
 163 003a 104B     		ldr	r3, .L10+4
 164 003c 1B68     		ldr	r3, [r3]
 165 003e 0021     		movs	r1, #0
 166 0040 1846     		mov	r0, r3
 167 0042 FFF7FEFF 		bl	vParTestSetLED
 192:..\Common\Minimal/comtest.c **** 
 193:..\Common\Minimal/comtest.c **** 		/* We have posted all the characters in the string - wait before
 194:..\Common\Minimal/comtest.c **** 		re-sending.  Wait a pseudo-random time as this will provide a better
 195:..\Common\Minimal/comtest.c **** 		test. */
 196:..\Common\Minimal/comtest.c **** 		xTimeToWait = xTaskGetTickCount() + comOFFSET_TIME;
 168              		.loc 1 196 0
 169 0046 FFF7FEFF 		bl	xTaskGetTickCount
 170 004a 0346     		mov	r3, r0
 171 004c 0333     		adds	r3, r3, #3
 172 004e BB60     		str	r3, [r7, #8]
 197:..\Common\Minimal/comtest.c **** 
 198:..\Common\Minimal/comtest.c **** 		/* Make sure we don't wait too long... */
 199:..\Common\Minimal/comtest.c **** 		xTimeToWait %= comTX_MAX_BLOCK_TIME;
 173              		.loc 1 199 0
 174 0050 BB68     		ldr	r3, [r7, #8]
 175 0052 0B4A     		ldr	r2, .L10+8
 176 0054 A2FB0312 		umull	r1, r2, r2, r3
 177 0058 1209     		lsrs	r2, r2, #4
 178 005a 9621     		movs	r1, #150
 179 005c 01FB02F2 		mul	r2, r1, r2
 180 0060 9B1A     		subs	r3, r3, r2
 181 0062 BB60     		str	r3, [r7, #8]
 200:..\Common\Minimal/comtest.c **** 
 201:..\Common\Minimal/comtest.c **** 		/* ...but we do want to wait. */
 202:..\Common\Minimal/comtest.c **** 		if( xTimeToWait < comTX_MIN_BLOCK_TIME )
 182              		.loc 1 202 0
 183 0064 BB68     		ldr	r3, [r7, #8]
 184 0066 312B     		cmp	r3, #49
 185 0068 01D8     		bhi	.L8
 203:..\Common\Minimal/comtest.c **** 		{
 204:..\Common\Minimal/comtest.c **** 			xTimeToWait = comTX_MIN_BLOCK_TIME;
 186              		.loc 1 204 0
 187 006a 3223     		movs	r3, #50
 188 006c BB60     		str	r3, [r7, #8]
 189              	.L8:
 205:..\Common\Minimal/comtest.c **** 		}
 206:..\Common\Minimal/comtest.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 8


 207:..\Common\Minimal/comtest.c **** 		vTaskDelay( xTimeToWait );
 190              		.loc 1 207 0
 191 006e B868     		ldr	r0, [r7, #8]
 192 0070 FFF7FEFF 		bl	vTaskDelay
 208:..\Common\Minimal/comtest.c **** 	}
 193              		.loc 1 208 0
 194 0074 C8E7     		b	.L9
 195              	.L11:
 196 0076 00BF     		.align	2
 197              	.L10:
 198 0078 00000000 		.word	xPort
 199 007c 04000000 		.word	uxBaseLED
 200 0080 B5814E1B 		.word	458129845
 201              		.cfi_endproc
 202              	.LFE69:
 203              		.size	vComTxTask, .-vComTxTask
 204              		.section	.text.vComRxTask,"ax",%progbits
 205              		.align	2
 206              		.thumb
 207              		.thumb_func
 208              		.type	vComRxTask, %function
 209              	vComRxTask:
 210              	.LFB70:
 209:..\Common\Minimal/comtest.c **** } /*lint !e715 !e818 pvParameters is required for a task function even if it is not referenced. */
 210:..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 211:..\Common\Minimal/comtest.c **** 
 212:..\Common\Minimal/comtest.c **** static portTASK_FUNCTION( vComRxTask, pvParameters )
 213:..\Common\Minimal/comtest.c **** {
 211              		.loc 1 213 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 24
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 86B0     		sub	sp, sp, #24
 220              		.cfi_def_cfa_offset 32
 221 0004 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
 214:..\Common\Minimal/comtest.c **** signed char cExpectedByte, cByteRxed;
 215:..\Common\Minimal/comtest.c **** BaseType_t xResyncRequired = pdFALSE, xErrorOccurred = pdFALSE;
 224              		.loc 1 215 0
 225 0008 0023     		movs	r3, #0
 226 000a 3B61     		str	r3, [r7, #16]
 227 000c 0023     		movs	r3, #0
 228 000e FB60     		str	r3, [r7, #12]
 229              	.L22:
 216:..\Common\Minimal/comtest.c **** 
 217:..\Common\Minimal/comtest.c **** 	/* Just to stop compiler warnings. */
 218:..\Common\Minimal/comtest.c **** 	( void ) pvParameters;
 219:..\Common\Minimal/comtest.c **** 
 220:..\Common\Minimal/comtest.c **** 	for( ;; )
 221:..\Common\Minimal/comtest.c **** 	{
 222:..\Common\Minimal/comtest.c **** 		/* We expect to receive the characters from comFIRST_BYTE to
 223:..\Common\Minimal/comtest.c **** 		comLAST_BYTE in an incrementing order.  Loop to receive each byte. */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 9


 224:..\Common\Minimal/comtest.c **** 		for( cExpectedByte = comFIRST_BYTE; cExpectedByte <= comLAST_BYTE; cExpectedByte++ )
 230              		.loc 1 224 0
 231 0010 4123     		movs	r3, #65
 232 0012 FB75     		strb	r3, [r7, #23]
 233 0014 21E0     		b	.L13
 234              	.L17:
 225:..\Common\Minimal/comtest.c **** 		{
 226:..\Common\Minimal/comtest.c **** 			/* Block on the queue that contains received bytes until a byte is
 227:..\Common\Minimal/comtest.c **** 			available. */
 228:..\Common\Minimal/comtest.c **** 			if( xSerialGetChar( xPort, &cByteRxed, comRX_BLOCK_TIME ) )
 235              		.loc 1 228 0
 236 0016 264B     		ldr	r3, .L23
 237 0018 1B68     		ldr	r3, [r3]
 238 001a 07F10B01 		add	r1, r7, #11
 239 001e 4FF6FF72 		movw	r2, #65535
 240 0022 1846     		mov	r0, r3
 241 0024 FFF7FEFF 		bl	xSerialGetChar
 242 0028 0346     		mov	r3, r0
 243 002a 002B     		cmp	r3, #0
 244 002c 0FD0     		beq	.L14
 229:..\Common\Minimal/comtest.c **** 			{
 230:..\Common\Minimal/comtest.c **** 				/* Was this the byte we were expecting?  If so, toggle the LED,
 231:..\Common\Minimal/comtest.c **** 				otherwise we are out on sync and should break out of the loop
 232:..\Common\Minimal/comtest.c **** 				until the expected character sequence is about to restart. */
 233:..\Common\Minimal/comtest.c **** 				if( cByteRxed == cExpectedByte )
 245              		.loc 1 233 0
 246 002e 97F90B30 		ldrsb	r3, [r7, #11]
 247 0032 97F91720 		ldrsb	r2, [r7, #23]
 248 0036 9A42     		cmp	r2, r3
 249 0038 06D1     		bne	.L15
 234:..\Common\Minimal/comtest.c **** 				{
 235:..\Common\Minimal/comtest.c **** 					vParTestToggleLED( uxBaseLED + comRX_LED_OFFSET );
 250              		.loc 1 235 0
 251 003a 1E4B     		ldr	r3, .L23+4
 252 003c 1B68     		ldr	r3, [r3]
 253 003e 0133     		adds	r3, r3, #1
 254 0040 1846     		mov	r0, r3
 255 0042 FFF7FEFF 		bl	vParTestToggleLED
 256 0046 02E0     		b	.L14
 257              	.L15:
 236:..\Common\Minimal/comtest.c **** 				}
 237:..\Common\Minimal/comtest.c **** 				else
 238:..\Common\Minimal/comtest.c **** 				{
 239:..\Common\Minimal/comtest.c **** 					xResyncRequired = pdTRUE;
 258              		.loc 1 239 0
 259 0048 0123     		movs	r3, #1
 260 004a 3B61     		str	r3, [r7, #16]
 240:..\Common\Minimal/comtest.c **** 					break; /*lint !e960 Non-switch break allowed. */
 261              		.loc 1 240 0
 262 004c 09E0     		b	.L16
 263              	.L14:
 224:..\Common\Minimal/comtest.c **** 		{
 264              		.loc 1 224 0 discriminator 2
 265 004e 97F91730 		ldrsb	r3, [r7, #23]
 266 0052 DBB2     		uxtb	r3, r3
 267 0054 0133     		adds	r3, r3, #1
 268 0056 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 10


 269 0058 FB75     		strb	r3, [r7, #23]
 270              	.L13:
 224:..\Common\Minimal/comtest.c **** 		{
 271              		.loc 1 224 0 is_stmt 0 discriminator 1
 272 005a 97F91730 		ldrsb	r3, [r7, #23]
 273 005e 582B     		cmp	r3, #88
 274 0060 D9DD     		ble	.L17
 275              	.L16:
 241:..\Common\Minimal/comtest.c **** 				}
 242:..\Common\Minimal/comtest.c **** 			}
 243:..\Common\Minimal/comtest.c **** 		}
 244:..\Common\Minimal/comtest.c **** 
 245:..\Common\Minimal/comtest.c **** 		/* Turn the LED off while we are not doing anything. */
 246:..\Common\Minimal/comtest.c **** 		vParTestSetLED( uxBaseLED + comRX_LED_OFFSET, pdFALSE );
 276              		.loc 1 246 0 is_stmt 1
 277 0062 144B     		ldr	r3, .L23+4
 278 0064 1B68     		ldr	r3, [r3]
 279 0066 0133     		adds	r3, r3, #1
 280 0068 0021     		movs	r1, #0
 281 006a 1846     		mov	r0, r3
 282 006c FFF7FEFF 		bl	vParTestSetLED
 247:..\Common\Minimal/comtest.c **** 
 248:..\Common\Minimal/comtest.c **** 		/* Did we break out of the loop because the characters were received in
 249:..\Common\Minimal/comtest.c **** 		an unexpected order?  If so wait here until the character sequence is
 250:..\Common\Minimal/comtest.c **** 		about to restart. */
 251:..\Common\Minimal/comtest.c **** 		if( xResyncRequired == pdTRUE )
 283              		.loc 1 251 0
 284 0070 3B69     		ldr	r3, [r7, #16]
 285 0072 012B     		cmp	r3, #1
 286 0074 13D1     		bne	.L18
 252:..\Common\Minimal/comtest.c **** 		{
 253:..\Common\Minimal/comtest.c **** 			while( cByteRxed != comLAST_BYTE )
 287              		.loc 1 253 0
 288 0076 08E0     		b	.L19
 289              	.L20:
 254:..\Common\Minimal/comtest.c **** 			{
 255:..\Common\Minimal/comtest.c **** 				/* Block until the next char is available. */
 256:..\Common\Minimal/comtest.c **** 				xSerialGetChar( xPort, &cByteRxed, comRX_BLOCK_TIME );
 290              		.loc 1 256 0
 291 0078 0D4B     		ldr	r3, .L23
 292 007a 1B68     		ldr	r3, [r3]
 293 007c 07F10B01 		add	r1, r7, #11
 294 0080 4FF6FF72 		movw	r2, #65535
 295 0084 1846     		mov	r0, r3
 296 0086 FFF7FEFF 		bl	xSerialGetChar
 297              	.L19:
 253:..\Common\Minimal/comtest.c **** 			{
 298              		.loc 1 253 0
 299 008a 97F90B30 		ldrsb	r3, [r7, #11]
 300 008e 582B     		cmp	r3, #88
 301 0090 F2D1     		bne	.L20
 257:..\Common\Minimal/comtest.c **** 			}
 258:..\Common\Minimal/comtest.c **** 
 259:..\Common\Minimal/comtest.c **** 			/* Note that an error occurred which caused us to have to resync.
 260:..\Common\Minimal/comtest.c **** 			We use this to stop incrementing the loop counter so
 261:..\Common\Minimal/comtest.c **** 			sAreComTestTasksStillRunning() will return false - indicating an
 262:..\Common\Minimal/comtest.c **** 			error. */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 11


 263:..\Common\Minimal/comtest.c **** 			xErrorOccurred++;
 302              		.loc 1 263 0
 303 0092 FB68     		ldr	r3, [r7, #12]
 304 0094 0133     		adds	r3, r3, #1
 305 0096 FB60     		str	r3, [r7, #12]
 264:..\Common\Minimal/comtest.c **** 
 265:..\Common\Minimal/comtest.c **** 			/* We have now resynced with the Tx task and can continue. */
 266:..\Common\Minimal/comtest.c **** 			xResyncRequired = pdFALSE;
 306              		.loc 1 266 0
 307 0098 0023     		movs	r3, #0
 308 009a 3B61     		str	r3, [r7, #16]
 309 009c B8E7     		b	.L22
 310              	.L18:
 267:..\Common\Minimal/comtest.c **** 		}
 268:..\Common\Minimal/comtest.c **** 		else
 269:..\Common\Minimal/comtest.c **** 		{
 270:..\Common\Minimal/comtest.c **** 			if( xErrorOccurred < comTOTAL_PERMISSIBLE_ERRORS )
 311              		.loc 1 270 0
 312 009e FB68     		ldr	r3, [r7, #12]
 313 00a0 012B     		cmp	r3, #1
 314 00a2 B5DC     		bgt	.L22
 271:..\Common\Minimal/comtest.c **** 			{
 272:..\Common\Minimal/comtest.c **** 				/* Increment the count of successful loops.  As error
 273:..\Common\Minimal/comtest.c **** 				occurring (i.e. an unexpected character being received) will
 274:..\Common\Minimal/comtest.c **** 				prevent this counter being incremented for the rest of the
 275:..\Common\Minimal/comtest.c **** 				execution.   Don't worry about mutual exclusion on this
 276:..\Common\Minimal/comtest.c **** 				variable - it doesn't really matter as we just want it
 277:..\Common\Minimal/comtest.c **** 				to change. */
 278:..\Common\Minimal/comtest.c **** 				uxRxLoops++;
 315              		.loc 1 278 0
 316 00a4 044B     		ldr	r3, .L23+8
 317 00a6 1B68     		ldr	r3, [r3]
 318 00a8 0133     		adds	r3, r3, #1
 319 00aa 034A     		ldr	r2, .L23+8
 320 00ac 1360     		str	r3, [r2]
 279:..\Common\Minimal/comtest.c **** 			}
 280:..\Common\Minimal/comtest.c **** 		}
 281:..\Common\Minimal/comtest.c **** 	}
 321              		.loc 1 281 0
 322 00ae AFE7     		b	.L22
 323              	.L24:
 324              		.align	2
 325              	.L23:
 326 00b0 00000000 		.word	xPort
 327 00b4 04000000 		.word	uxBaseLED
 328 00b8 08000000 		.word	uxRxLoops
 329              		.cfi_endproc
 330              	.LFE70:
 331              		.size	vComRxTask, .-vComRxTask
 332              		.section	.text.xAreComTestTasksStillRunning,"ax",%progbits
 333              		.align	2
 334              		.global	xAreComTestTasksStillRunning
 335              		.thumb
 336              		.thumb_func
 337              		.type	xAreComTestTasksStillRunning, %function
 338              	xAreComTestTasksStillRunning:
 339              	.LFB71:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 12


 282:..\Common\Minimal/comtest.c **** } /*lint !e715 !e818 pvParameters is required for a task function even if it is not referenced. */
 283:..\Common\Minimal/comtest.c **** /*-----------------------------------------------------------*/
 284:..\Common\Minimal/comtest.c **** 
 285:..\Common\Minimal/comtest.c **** BaseType_t xAreComTestTasksStillRunning( void )
 286:..\Common\Minimal/comtest.c **** {
 340              		.loc 1 286 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 83B0     		sub	sp, sp, #12
 349              		.cfi_def_cfa_offset 16
 350 0004 00AF     		add	r7, sp, #0
 351              		.cfi_def_cfa_register 7
 287:..\Common\Minimal/comtest.c **** BaseType_t xReturn;
 288:..\Common\Minimal/comtest.c **** 
 289:..\Common\Minimal/comtest.c **** 	/* If the count of successful reception loops has not changed than at
 290:..\Common\Minimal/comtest.c **** 	some time an error occurred (i.e. a character was received out of sequence)
 291:..\Common\Minimal/comtest.c **** 	and we will return false. */
 292:..\Common\Minimal/comtest.c **** 	if( uxRxLoops == comINITIAL_RX_COUNT_VALUE )
 352              		.loc 1 292 0
 353 0006 094B     		ldr	r3, .L29
 354 0008 1B68     		ldr	r3, [r3]
 355 000a 002B     		cmp	r3, #0
 356 000c 02D1     		bne	.L26
 293:..\Common\Minimal/comtest.c **** 	{
 294:..\Common\Minimal/comtest.c **** 		xReturn = pdFALSE;
 357              		.loc 1 294 0
 358 000e 0023     		movs	r3, #0
 359 0010 7B60     		str	r3, [r7, #4]
 360 0012 01E0     		b	.L27
 361              	.L26:
 295:..\Common\Minimal/comtest.c **** 	}
 296:..\Common\Minimal/comtest.c **** 	else
 297:..\Common\Minimal/comtest.c **** 	{
 298:..\Common\Minimal/comtest.c **** 		xReturn = pdTRUE;
 362              		.loc 1 298 0
 363 0014 0123     		movs	r3, #1
 364 0016 7B60     		str	r3, [r7, #4]
 365              	.L27:
 299:..\Common\Minimal/comtest.c **** 	}
 300:..\Common\Minimal/comtest.c **** 
 301:..\Common\Minimal/comtest.c **** 	/* Reset the count of successful Rx loops.  When this function is called
 302:..\Common\Minimal/comtest.c **** 	again we expect this to have been incremented. */
 303:..\Common\Minimal/comtest.c **** 	uxRxLoops = comINITIAL_RX_COUNT_VALUE;
 366              		.loc 1 303 0
 367 0018 044B     		ldr	r3, .L29
 368 001a 0022     		movs	r2, #0
 369 001c 1A60     		str	r2, [r3]
 304:..\Common\Minimal/comtest.c **** 
 305:..\Common\Minimal/comtest.c **** 	return xReturn;
 370              		.loc 1 305 0
 371 001e 7B68     		ldr	r3, [r7, #4]
 306:..\Common\Minimal/comtest.c **** }
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 13


 372              		.loc 1 306 0
 373 0020 1846     		mov	r0, r3
 374 0022 0C37     		adds	r7, r7, #12
 375              		.cfi_def_cfa_offset 4
 376 0024 BD46     		mov	sp, r7
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 0026 80BC     		pop	{r7}
 380              		.cfi_restore 7
 381              		.cfi_def_cfa_offset 0
 382 0028 7047     		bx	lr
 383              	.L30:
 384 002a 00BF     		.align	2
 385              	.L29:
 386 002c 08000000 		.word	uxRxLoops
 387              		.cfi_endproc
 388              	.LFE71:
 389              		.size	xAreComTestTasksStillRunning, .-xAreComTestTasksStillRunning
 390              		.text
 391              	.Letext0:
 392              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 393              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 394              		.file 4 ".\\Tracer/sniffPayload.h"
 395              		.file 5 ".\\Tracer/selfFIFO.h"
 396              		.file 6 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
 397              		.file 7 "..\\Source\\include/task.h"
 398              		.file 8 "..\\Common\\include/serial.h"
 399              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 400              		.file 10 ".\\Tracer/sniffTask.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 F8030000 		.4byte	0x3f8
 404 0004 0400     		.2byte	0x4
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c 82000000 		.4byte	.LASF68
 409 0010 0C       		.byte	0xc
 410 0011 1B010000 		.4byte	.LASF69
 411 0015 E3030000 		.4byte	.LASF70
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	.Ldebug_line0
 415 0025 02       		.uleb128 0x2
 416 0026 04       		.byte	0x4
 417 0027 07       		.byte	0x7
 418 0028 BC020000 		.4byte	.LASF0
 419 002c 03       		.uleb128 0x3
 420 002d 04       		.byte	0x4
 421 002e 05       		.byte	0x5
 422 002f 696E7400 		.ascii	"int\000"
 423 0033 02       		.uleb128 0x2
 424 0034 08       		.byte	0x8
 425 0035 05       		.byte	0x5
 426 0036 B5010000 		.4byte	.LASF1
 427 003a 02       		.uleb128 0x2
 428 003b 08       		.byte	0x8
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 14


 429 003c 04       		.byte	0x4
 430 003d 33020000 		.4byte	.LASF2
 431 0041 02       		.uleb128 0x2
 432 0042 01       		.byte	0x1
 433 0043 06       		.byte	0x6
 434 0044 90020000 		.4byte	.LASF3
 435 0048 04       		.uleb128 0x4
 436 0049 FF010000 		.4byte	.LASF7
 437 004d 02       		.byte	0x2
 438 004e 1D       		.byte	0x1d
 439 004f 53000000 		.4byte	0x53
 440 0053 02       		.uleb128 0x2
 441 0054 01       		.byte	0x1
 442 0055 08       		.byte	0x8
 443 0056 55020000 		.4byte	.LASF4
 444 005a 02       		.uleb128 0x2
 445 005b 02       		.byte	0x2
 446 005c 05       		.byte	0x5
 447 005d 47000000 		.4byte	.LASF5
 448 0061 02       		.uleb128 0x2
 449 0062 02       		.byte	0x2
 450 0063 07       		.byte	0x7
 451 0064 FD020000 		.4byte	.LASF6
 452 0068 04       		.uleb128 0x4
 453 0069 A8030000 		.4byte	.LASF8
 454 006d 02       		.byte	0x2
 455 006e 3F       		.byte	0x3f
 456 006f 73000000 		.4byte	0x73
 457 0073 02       		.uleb128 0x2
 458 0074 04       		.byte	0x4
 459 0075 05       		.byte	0x5
 460 0076 D8010000 		.4byte	.LASF9
 461 007a 04       		.uleb128 0x4
 462 007b 10010000 		.4byte	.LASF10
 463 007f 02       		.byte	0x2
 464 0080 41       		.byte	0x41
 465 0081 85000000 		.4byte	0x85
 466 0085 02       		.uleb128 0x2
 467 0086 04       		.byte	0x4
 468 0087 07       		.byte	0x7
 469 0088 63030000 		.4byte	.LASF11
 470 008c 02       		.uleb128 0x2
 471 008d 08       		.byte	0x8
 472 008e 07       		.byte	0x7
 473 008f 9C020000 		.4byte	.LASF12
 474 0093 02       		.uleb128 0x2
 475 0094 04       		.byte	0x4
 476 0095 07       		.byte	0x7
 477 0096 5B000000 		.4byte	.LASF13
 478 009a 05       		.uleb128 0x5
 479 009b 04       		.byte	0x4
 480 009c 02       		.uleb128 0x2
 481 009d 01       		.byte	0x1
 482 009e 08       		.byte	0x8
 483 009f 10030000 		.4byte	.LASF14
 484 00a3 04       		.uleb128 0x4
 485 00a4 44010000 		.4byte	.LASF15
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 15


 486 00a8 03       		.byte	0x3
 487 00a9 18       		.byte	0x18
 488 00aa 48000000 		.4byte	0x48
 489 00ae 04       		.uleb128 0x4
 490 00af 1E030000 		.4byte	.LASF16
 491 00b3 03       		.byte	0x3
 492 00b4 2C       		.byte	0x2c
 493 00b5 68000000 		.4byte	0x68
 494 00b9 04       		.uleb128 0x4
 495 00ba B3020000 		.4byte	.LASF17
 496 00be 03       		.byte	0x3
 497 00bf 30       		.byte	0x30
 498 00c0 7A000000 		.4byte	0x7a
 499 00c4 02       		.uleb128 0x2
 500 00c5 04       		.byte	0x4
 501 00c6 04       		.byte	0x4
 502 00c7 A3010000 		.4byte	.LASF18
 503 00cb 02       		.uleb128 0x2
 504 00cc 08       		.byte	0x8
 505 00cd 04       		.byte	0x4
 506 00ce 75030000 		.4byte	.LASF19
 507 00d2 06       		.uleb128 0x6
 508 00d3 01       		.byte	0x1
 509 00d4 53000000 		.4byte	0x53
 510 00d8 04       		.byte	0x4
 511 00d9 10       		.byte	0x10
 512 00da 09010000 		.4byte	0x109
 513 00de 07       		.uleb128 0x7
 514 00df 0F020000 		.4byte	.LASF20
 515 00e3 00       		.byte	0
 516 00e4 07       		.uleb128 0x7
 517 00e5 64000000 		.4byte	.LASF21
 518 00e9 01       		.byte	0x1
 519 00ea 07       		.uleb128 0x7
 520 00eb 15020000 		.4byte	.LASF22
 521 00ef 02       		.byte	0x2
 522 00f0 07       		.uleb128 0x7
 523 00f1 7C030000 		.4byte	.LASF23
 524 00f5 03       		.byte	0x3
 525 00f6 07       		.uleb128 0x7
 526 00f7 EF010000 		.4byte	.LASF24
 527 00fb 04       		.byte	0x4
 528 00fc 07       		.uleb128 0x7
 529 00fd A3030000 		.4byte	.LASF25
 530 0101 05       		.byte	0x5
 531 0102 07       		.uleb128 0x7
 532 0103 4D030000 		.4byte	.LASF26
 533 0107 06       		.byte	0x6
 534 0108 00       		.byte	0
 535 0109 04       		.uleb128 0x4
 536 010a 74010000 		.4byte	.LASF27
 537 010e 04       		.byte	0x4
 538 010f 10       		.byte	0x10
 539 0110 D2000000 		.4byte	0xd2
 540 0114 08       		.uleb128 0x8
 541 0115 04       		.byte	0x4
 542 0116 04       		.byte	0x4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 16


 543 0117 86       		.byte	0x86
 544 0118 4D010000 		.4byte	0x14d
 545 011c 09       		.uleb128 0x9
 546 011d 15030000 		.4byte	.LASF28
 547 0121 04       		.byte	0x4
 548 0122 87       		.byte	0x87
 549 0123 A3000000 		.4byte	0xa3
 550 0127 00       		.byte	0
 551 0128 09       		.uleb128 0x9
 552 0129 00000000 		.4byte	.LASF29
 553 012d 04       		.byte	0x4
 554 012e 88       		.byte	0x88
 555 012f A3000000 		.4byte	0xa3
 556 0133 01       		.byte	0x1
 557 0134 09       		.uleb128 0x9
 558 0135 77000000 		.4byte	.LASF30
 559 0139 04       		.byte	0x4
 560 013a 89       		.byte	0x89
 561 013b 09010000 		.4byte	0x109
 562 013f 02       		.byte	0x2
 563 0140 09       		.uleb128 0x9
 564 0141 9C010000 		.4byte	.LASF31
 565 0145 04       		.byte	0x4
 566 0146 8A       		.byte	0x8a
 567 0147 A3000000 		.4byte	0xa3
 568 014b 03       		.byte	0x3
 569 014c 00       		.byte	0
 570 014d 04       		.uleb128 0x4
 571 014e C9020000 		.4byte	.LASF32
 572 0152 04       		.byte	0x4
 573 0153 8B       		.byte	0x8b
 574 0154 14010000 		.4byte	0x114
 575 0158 08       		.uleb128 0x8
 576 0159 0E       		.byte	0xe
 577 015a 04       		.byte	0x4
 578 015b 95       		.byte	0x95
 579 015c 85010000 		.4byte	0x185
 580 0160 09       		.uleb128 0x9
 581 0161 3A000000 		.4byte	.LASF33
 582 0165 04       		.byte	0x4
 583 0166 96       		.byte	0x96
 584 0167 A3000000 		.4byte	0xa3
 585 016b 00       		.byte	0
 586 016c 09       		.uleb128 0x9
 587 016d 58010000 		.4byte	.LASF34
 588 0171 04       		.byte	0x4
 589 0172 97       		.byte	0x97
 590 0173 A3000000 		.4byte	0xa3
 591 0177 01       		.byte	0x1
 592 0178 09       		.uleb128 0x9
 593 0179 28020000 		.4byte	.LASF35
 594 017d 04       		.byte	0x4
 595 017e 98       		.byte	0x98
 596 017f 85010000 		.4byte	0x185
 597 0183 02       		.byte	0x2
 598 0184 00       		.byte	0
 599 0185 0A       		.uleb128 0xa
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 17


 600 0186 9C000000 		.4byte	0x9c
 601 018a 95010000 		.4byte	0x195
 602 018e 0B       		.uleb128 0xb
 603 018f 93000000 		.4byte	0x93
 604 0193 0B       		.byte	0xb
 605 0194 00       		.byte	0
 606 0195 04       		.uleb128 0x4
 607 0196 A9010000 		.4byte	.LASF36
 608 019a 04       		.byte	0x4
 609 019b 99       		.byte	0x99
 610 019c 58010000 		.4byte	0x158
 611 01a0 0C       		.uleb128 0xc
 612 01a1 1C01     		.2byte	0x11c
 613 01a3 04       		.byte	0x4
 614 01a4 A3       		.byte	0xa3
 615 01a5 C2010000 		.4byte	0x1c2
 616 01a9 09       		.uleb128 0x9
 617 01aa 37010000 		.4byte	.LASF37
 618 01ae 04       		.byte	0x4
 619 01af A4       		.byte	0xa4
 620 01b0 4D010000 		.4byte	0x14d
 621 01b4 00       		.byte	0
 622 01b5 09       		.uleb128 0x9
 623 01b6 4C010000 		.4byte	.LASF38
 624 01ba 04       		.byte	0x4
 625 01bb A5       		.byte	0xa5
 626 01bc C2010000 		.4byte	0x1c2
 627 01c0 04       		.byte	0x4
 628 01c1 00       		.byte	0
 629 01c2 0A       		.uleb128 0xa
 630 01c3 95010000 		.4byte	0x195
 631 01c7 D2010000 		.4byte	0x1d2
 632 01cb 0B       		.uleb128 0xb
 633 01cc 93000000 		.4byte	0x93
 634 01d0 13       		.byte	0x13
 635 01d1 00       		.byte	0
 636 01d2 04       		.uleb128 0x4
 637 01d3 BA030000 		.4byte	.LASF39
 638 01d7 04       		.byte	0x4
 639 01d8 A6       		.byte	0xa6
 640 01d9 A0010000 		.4byte	0x1a0
 641 01dd 0D       		.uleb128 0xd
 642 01de DC030000 		.4byte	.LASF71
 643 01e2 0210     		.2byte	0x1002
 644 01e4 05       		.byte	0x5
 645 01e5 0C       		.byte	0xc
 646 01e6 11020000 		.4byte	0x211
 647 01ea 09       		.uleb128 0x9
 648 01eb 41030000 		.4byte	.LASF40
 649 01ef 05       		.byte	0x5
 650 01f0 0D       		.byte	0xd
 651 01f1 11020000 		.4byte	0x211
 652 01f5 00       		.byte	0
 653 01f6 0E       		.uleb128 0xe
 654 01f7 B0010000 		.4byte	.LASF41
 655 01fb 05       		.byte	0x5
 656 01fc 0E       		.byte	0xe
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 18


 657 01fd A3000000 		.4byte	0xa3
 658 0201 0010     		.2byte	0x1000
 659 0203 0E       		.uleb128 0xe
 660 0204 28000000 		.4byte	.LASF42
 661 0208 05       		.byte	0x5
 662 0209 0F       		.byte	0xf
 663 020a A3000000 		.4byte	0xa3
 664 020e 0110     		.2byte	0x1001
 665 0210 00       		.byte	0
 666 0211 0A       		.uleb128 0xa
 667 0212 A3000000 		.4byte	0xa3
 668 0216 22020000 		.4byte	0x222
 669 021a 0F       		.uleb128 0xf
 670 021b 93000000 		.4byte	0x93
 671 021f FF0F     		.2byte	0xfff
 672 0221 00       		.byte	0
 673 0222 04       		.uleb128 0x4
 674 0223 DA020000 		.4byte	.LASF43
 675 0227 06       		.byte	0x6
 676 0228 62       		.byte	0x62
 677 0229 73000000 		.4byte	0x73
 678 022d 04       		.uleb128 0x4
 679 022e 26030000 		.4byte	.LASF44
 680 0232 06       		.byte	0x6
 681 0233 63       		.byte	0x63
 682 0234 85000000 		.4byte	0x85
 683 0238 04       		.uleb128 0x4
 684 0239 C3010000 		.4byte	.LASF45
 685 023d 06       		.byte	0x6
 686 023e 69       		.byte	0x69
 687 023f B9000000 		.4byte	0xb9
 688 0243 04       		.uleb128 0x4
 689 0244 6A000000 		.4byte	.LASF46
 690 0248 07       		.byte	0x7
 691 0249 67       		.byte	0x67
 692 024a 9A000000 		.4byte	0x9a
 693 024e 04       		.uleb128 0x4
 694 024f 32030000 		.4byte	.LASF47
 695 0253 08       		.byte	0x8
 696 0254 49       		.byte	0x49
 697 0255 9A000000 		.4byte	0x9a
 698 0259 10       		.uleb128 0x10
 699 025a 6F020000 		.4byte	.LASF72
 700 025e 01       		.byte	0x1
 701 025f 9E       		.byte	0x9e
 702 0260 00000000 		.4byte	.LFB68
 703 0264 60000000 		.4byte	.LFE68-.LFB68
 704 0268 01       		.uleb128 0x1
 705 0269 9C       		.byte	0x9c
 706 026a 99020000 		.4byte	0x299
 707 026e 11       		.uleb128 0x11
 708 026f 1D000000 		.4byte	.LASF48
 709 0273 01       		.byte	0x1
 710 0274 9E       		.byte	0x9e
 711 0275 2D020000 		.4byte	0x22d
 712 0279 02       		.uleb128 0x2
 713 027a 91       		.byte	0x91
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 19


 714 027b 74       		.sleb128 -12
 715 027c 11       		.uleb128 0x11
 716 027d E5020000 		.4byte	.LASF49
 717 0281 01       		.byte	0x1
 718 0282 9E       		.byte	0x9e
 719 0283 B9000000 		.4byte	0xb9
 720 0287 02       		.uleb128 0x2
 721 0288 91       		.byte	0x91
 722 0289 70       		.sleb128 -16
 723 028a 11       		.uleb128 0x11
 724 028b 4F020000 		.4byte	.LASF50
 725 028f 01       		.byte	0x1
 726 0290 9E       		.byte	0x9e
 727 0291 2D020000 		.4byte	0x22d
 728 0295 02       		.uleb128 0x2
 729 0296 91       		.byte	0x91
 730 0297 6C       		.sleb128 -20
 731 0298 00       		.byte	0
 732 0299 12       		.uleb128 0x12
 733 029a 85020000 		.4byte	.LASF54
 734 029e 01       		.byte	0x1
 735 029f AA       		.byte	0xaa
 736 02a0 00000000 		.4byte	.LFB69
 737 02a4 84000000 		.4byte	.LFE69-.LFB69
 738 02a8 01       		.uleb128 0x1
 739 02a9 9C       		.byte	0x9c
 740 02aa D9020000 		.4byte	0x2d9
 741 02ae 11       		.uleb128 0x11
 742 02af F0020000 		.4byte	.LASF51
 743 02b3 01       		.byte	0x1
 744 02b4 AA       		.byte	0xaa
 745 02b5 9A000000 		.4byte	0x9a
 746 02b9 02       		.uleb128 0x2
 747 02ba 91       		.byte	0x91
 748 02bb 6C       		.sleb128 -20
 749 02bc 13       		.uleb128 0x13
 750 02bd 2E000000 		.4byte	.LASF52
 751 02c1 01       		.byte	0x1
 752 02c2 AC       		.byte	0xac
 753 02c3 9C000000 		.4byte	0x9c
 754 02c7 02       		.uleb128 0x2
 755 02c8 91       		.byte	0x91
 756 02c9 77       		.sleb128 -9
 757 02ca 13       		.uleb128 0x13
 758 02cb 63020000 		.4byte	.LASF53
 759 02cf 01       		.byte	0x1
 760 02d0 AD       		.byte	0xad
 761 02d1 38020000 		.4byte	0x238
 762 02d5 02       		.uleb128 0x2
 763 02d6 91       		.byte	0x91
 764 02d7 70       		.sleb128 -16
 765 02d8 00       		.byte	0
 766 02d9 12       		.uleb128 0x12
 767 02da 98030000 		.4byte	.LASF55
 768 02de 01       		.byte	0x1
 769 02df D4       		.byte	0xd4
 770 02e0 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 20


 771 02e4 BC000000 		.4byte	.LFE70-.LFB70
 772 02e8 01       		.uleb128 0x1
 773 02e9 9C       		.byte	0x9c
 774 02ea 35030000 		.4byte	0x335
 775 02ee 11       		.uleb128 0x11
 776 02ef F0020000 		.4byte	.LASF51
 777 02f3 01       		.byte	0x1
 778 02f4 D4       		.byte	0xd4
 779 02f5 9A000000 		.4byte	0x9a
 780 02f9 02       		.uleb128 0x2
 781 02fa 91       		.byte	0x91
 782 02fb 64       		.sleb128 -28
 783 02fc 13       		.uleb128 0x13
 784 02fd 66010000 		.4byte	.LASF56
 785 0301 01       		.byte	0x1
 786 0302 D6       		.byte	0xd6
 787 0303 41000000 		.4byte	0x41
 788 0307 02       		.uleb128 0x2
 789 0308 91       		.byte	0x91
 790 0309 77       		.sleb128 -9
 791 030a 13       		.uleb128 0x13
 792 030b CE010000 		.4byte	.LASF57
 793 030f 01       		.byte	0x1
 794 0310 D6       		.byte	0xd6
 795 0311 41000000 		.4byte	0x41
 796 0315 02       		.uleb128 0x2
 797 0316 91       		.byte	0x91
 798 0317 6B       		.sleb128 -21
 799 0318 13       		.uleb128 0x13
 800 0319 3F020000 		.4byte	.LASF58
 801 031d 01       		.byte	0x1
 802 031e D7       		.byte	0xd7
 803 031f 22020000 		.4byte	0x222
 804 0323 02       		.uleb128 0x2
 805 0324 91       		.byte	0x91
 806 0325 70       		.sleb128 -16
 807 0326 13       		.uleb128 0x13
 808 0327 0E000000 		.4byte	.LASF59
 809 032b 01       		.byte	0x1
 810 032c D7       		.byte	0xd7
 811 032d 22020000 		.4byte	0x222
 812 0331 02       		.uleb128 0x2
 813 0332 91       		.byte	0x91
 814 0333 6C       		.sleb128 -20
 815 0334 00       		.byte	0
 816 0335 14       		.uleb128 0x14
 817 0336 7F010000 		.4byte	.LASF73
 818 033a 01       		.byte	0x1
 819 033b 1D01     		.2byte	0x11d
 820 033d 22020000 		.4byte	0x222
 821 0341 00000000 		.4byte	.LFB71
 822 0345 30000000 		.4byte	.LFE71-.LFB71
 823 0349 01       		.uleb128 0x1
 824 034a 9C       		.byte	0x9c
 825 034b 5F030000 		.4byte	0x35f
 826 034f 15       		.uleb128 0x15
 827 0350 B2030000 		.4byte	.LASF60
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 21


 828 0354 01       		.byte	0x1
 829 0355 1F01     		.2byte	0x11f
 830 0357 22020000 		.4byte	0x222
 831 035b 02       		.uleb128 0x2
 832 035c 91       		.byte	0x91
 833 035d 74       		.sleb128 -12
 834 035e 00       		.byte	0
 835 035f 13       		.uleb128 0x13
 836 0360 09020000 		.4byte	.LASF61
 837 0364 01       		.byte	0x1
 838 0365 8A       		.byte	0x8a
 839 0366 4E020000 		.4byte	0x24e
 840 036a 05       		.uleb128 0x5
 841 036b 03       		.byte	0x3
 842 036c 00000000 		.4byte	xPort
 843 0370 13       		.uleb128 0x13
 844 0371 51000000 		.4byte	.LASF62
 845 0375 01       		.byte	0x1
 846 0376 95       		.byte	0x95
 847 0377 2D020000 		.4byte	0x22d
 848 037b 05       		.uleb128 0x5
 849 037c 03       		.byte	0x3
 850 037d 04000000 		.4byte	uxBaseLED
 851 0381 13       		.uleb128 0x13
 852 0382 C5030000 		.4byte	.LASF63
 853 0386 01       		.byte	0x1
 854 0387 9A       		.byte	0x9a
 855 0388 92030000 		.4byte	0x392
 856 038c 05       		.uleb128 0x5
 857 038d 03       		.byte	0x3
 858 038e 08000000 		.4byte	uxRxLoops
 859 0392 16       		.uleb128 0x16
 860 0393 2D020000 		.4byte	0x22d
 861 0397 17       		.uleb128 0x17
 862 0398 CF030000 		.4byte	.LASF64
 863 039c 09       		.byte	0x9
 864 039d 9606     		.2byte	0x696
 865 039f A3030000 		.4byte	0x3a3
 866 03a3 16       		.uleb128 0x16
 867 03a4 AE000000 		.4byte	0xae
 868 03a8 0A       		.uleb128 0xa
 869 03a9 A3000000 		.4byte	0xa3
 870 03ad B8030000 		.4byte	0x3b8
 871 03b1 0B       		.uleb128 0xb
 872 03b2 93000000 		.4byte	0x93
 873 03b6 0C       		.byte	0xc
 874 03b7 00       		.byte	0
 875 03b8 18       		.uleb128 0x18
 876 03b9 E1010000 		.4byte	.LASF65
 877 03bd 04       		.byte	0x4
 878 03be 12       		.byte	0x12
 879 03bf A8030000 		.4byte	0x3a8
 880 03c3 05       		.uleb128 0x5
 881 03c4 03       		.byte	0x3
 882 03c5 00000000 		.4byte	sniffIDFilter
 883 03c9 18       		.uleb128 0x18
 884 03ca 46030000 		.4byte	.LASF66
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 22


 885 03ce 05       		.byte	0x5
 886 03cf 10       		.byte	0x10
 887 03d0 DD010000 		.4byte	0x1dd
 888 03d4 05       		.uleb128 0x5
 889 03d5 03       		.byte	0x3
 890 03d6 00000000 		.4byte	buffer
 891 03da 0A       		.uleb128 0xa
 892 03db D2010000 		.4byte	0x1d2
 893 03df EA030000 		.4byte	0x3ea
 894 03e3 0B       		.uleb128 0xb
 895 03e4 93000000 		.4byte	0x93
 896 03e8 05       		.byte	0x5
 897 03e9 00       		.byte	0
 898 03ea 18       		.uleb128 0x18
 899 03eb 8D030000 		.4byte	.LASF67
 900 03ef 0A       		.byte	0xa
 901 03f0 0D       		.byte	0xd
 902 03f1 DA030000 		.4byte	0x3da
 903 03f5 05       		.uleb128 0x5
 904 03f6 03       		.byte	0x3
 905 03f7 00000000 		.4byte	objectList
 906 03fb 00       		.byte	0
 907              		.section	.debug_abbrev,"",%progbits
 908              	.Ldebug_abbrev0:
 909 0000 01       		.uleb128 0x1
 910 0001 11       		.uleb128 0x11
 911 0002 01       		.byte	0x1
 912 0003 25       		.uleb128 0x25
 913 0004 0E       		.uleb128 0xe
 914 0005 13       		.uleb128 0x13
 915 0006 0B       		.uleb128 0xb
 916 0007 03       		.uleb128 0x3
 917 0008 0E       		.uleb128 0xe
 918 0009 1B       		.uleb128 0x1b
 919 000a 0E       		.uleb128 0xe
 920 000b 55       		.uleb128 0x55
 921 000c 17       		.uleb128 0x17
 922 000d 11       		.uleb128 0x11
 923 000e 01       		.uleb128 0x1
 924 000f 10       		.uleb128 0x10
 925 0010 17       		.uleb128 0x17
 926 0011 00       		.byte	0
 927 0012 00       		.byte	0
 928 0013 02       		.uleb128 0x2
 929 0014 24       		.uleb128 0x24
 930 0015 00       		.byte	0
 931 0016 0B       		.uleb128 0xb
 932 0017 0B       		.uleb128 0xb
 933 0018 3E       		.uleb128 0x3e
 934 0019 0B       		.uleb128 0xb
 935 001a 03       		.uleb128 0x3
 936 001b 0E       		.uleb128 0xe
 937 001c 00       		.byte	0
 938 001d 00       		.byte	0
 939 001e 03       		.uleb128 0x3
 940 001f 24       		.uleb128 0x24
 941 0020 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 23


 942 0021 0B       		.uleb128 0xb
 943 0022 0B       		.uleb128 0xb
 944 0023 3E       		.uleb128 0x3e
 945 0024 0B       		.uleb128 0xb
 946 0025 03       		.uleb128 0x3
 947 0026 08       		.uleb128 0x8
 948 0027 00       		.byte	0
 949 0028 00       		.byte	0
 950 0029 04       		.uleb128 0x4
 951 002a 16       		.uleb128 0x16
 952 002b 00       		.byte	0
 953 002c 03       		.uleb128 0x3
 954 002d 0E       		.uleb128 0xe
 955 002e 3A       		.uleb128 0x3a
 956 002f 0B       		.uleb128 0xb
 957 0030 3B       		.uleb128 0x3b
 958 0031 0B       		.uleb128 0xb
 959 0032 49       		.uleb128 0x49
 960 0033 13       		.uleb128 0x13
 961 0034 00       		.byte	0
 962 0035 00       		.byte	0
 963 0036 05       		.uleb128 0x5
 964 0037 0F       		.uleb128 0xf
 965 0038 00       		.byte	0
 966 0039 0B       		.uleb128 0xb
 967 003a 0B       		.uleb128 0xb
 968 003b 00       		.byte	0
 969 003c 00       		.byte	0
 970 003d 06       		.uleb128 0x6
 971 003e 04       		.uleb128 0x4
 972 003f 01       		.byte	0x1
 973 0040 0B       		.uleb128 0xb
 974 0041 0B       		.uleb128 0xb
 975 0042 49       		.uleb128 0x49
 976 0043 13       		.uleb128 0x13
 977 0044 3A       		.uleb128 0x3a
 978 0045 0B       		.uleb128 0xb
 979 0046 3B       		.uleb128 0x3b
 980 0047 0B       		.uleb128 0xb
 981 0048 01       		.uleb128 0x1
 982 0049 13       		.uleb128 0x13
 983 004a 00       		.byte	0
 984 004b 00       		.byte	0
 985 004c 07       		.uleb128 0x7
 986 004d 28       		.uleb128 0x28
 987 004e 00       		.byte	0
 988 004f 03       		.uleb128 0x3
 989 0050 0E       		.uleb128 0xe
 990 0051 1C       		.uleb128 0x1c
 991 0052 0B       		.uleb128 0xb
 992 0053 00       		.byte	0
 993 0054 00       		.byte	0
 994 0055 08       		.uleb128 0x8
 995 0056 13       		.uleb128 0x13
 996 0057 01       		.byte	0x1
 997 0058 0B       		.uleb128 0xb
 998 0059 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 24


 999 005a 3A       		.uleb128 0x3a
 1000 005b 0B       		.uleb128 0xb
 1001 005c 3B       		.uleb128 0x3b
 1002 005d 0B       		.uleb128 0xb
 1003 005e 01       		.uleb128 0x1
 1004 005f 13       		.uleb128 0x13
 1005 0060 00       		.byte	0
 1006 0061 00       		.byte	0
 1007 0062 09       		.uleb128 0x9
 1008 0063 0D       		.uleb128 0xd
 1009 0064 00       		.byte	0
 1010 0065 03       		.uleb128 0x3
 1011 0066 0E       		.uleb128 0xe
 1012 0067 3A       		.uleb128 0x3a
 1013 0068 0B       		.uleb128 0xb
 1014 0069 3B       		.uleb128 0x3b
 1015 006a 0B       		.uleb128 0xb
 1016 006b 49       		.uleb128 0x49
 1017 006c 13       		.uleb128 0x13
 1018 006d 38       		.uleb128 0x38
 1019 006e 0B       		.uleb128 0xb
 1020 006f 00       		.byte	0
 1021 0070 00       		.byte	0
 1022 0071 0A       		.uleb128 0xa
 1023 0072 01       		.uleb128 0x1
 1024 0073 01       		.byte	0x1
 1025 0074 49       		.uleb128 0x49
 1026 0075 13       		.uleb128 0x13
 1027 0076 01       		.uleb128 0x1
 1028 0077 13       		.uleb128 0x13
 1029 0078 00       		.byte	0
 1030 0079 00       		.byte	0
 1031 007a 0B       		.uleb128 0xb
 1032 007b 21       		.uleb128 0x21
 1033 007c 00       		.byte	0
 1034 007d 49       		.uleb128 0x49
 1035 007e 13       		.uleb128 0x13
 1036 007f 2F       		.uleb128 0x2f
 1037 0080 0B       		.uleb128 0xb
 1038 0081 00       		.byte	0
 1039 0082 00       		.byte	0
 1040 0083 0C       		.uleb128 0xc
 1041 0084 13       		.uleb128 0x13
 1042 0085 01       		.byte	0x1
 1043 0086 0B       		.uleb128 0xb
 1044 0087 05       		.uleb128 0x5
 1045 0088 3A       		.uleb128 0x3a
 1046 0089 0B       		.uleb128 0xb
 1047 008a 3B       		.uleb128 0x3b
 1048 008b 0B       		.uleb128 0xb
 1049 008c 01       		.uleb128 0x1
 1050 008d 13       		.uleb128 0x13
 1051 008e 00       		.byte	0
 1052 008f 00       		.byte	0
 1053 0090 0D       		.uleb128 0xd
 1054 0091 13       		.uleb128 0x13
 1055 0092 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 25


 1056 0093 03       		.uleb128 0x3
 1057 0094 0E       		.uleb128 0xe
 1058 0095 0B       		.uleb128 0xb
 1059 0096 05       		.uleb128 0x5
 1060 0097 3A       		.uleb128 0x3a
 1061 0098 0B       		.uleb128 0xb
 1062 0099 3B       		.uleb128 0x3b
 1063 009a 0B       		.uleb128 0xb
 1064 009b 01       		.uleb128 0x1
 1065 009c 13       		.uleb128 0x13
 1066 009d 00       		.byte	0
 1067 009e 00       		.byte	0
 1068 009f 0E       		.uleb128 0xe
 1069 00a0 0D       		.uleb128 0xd
 1070 00a1 00       		.byte	0
 1071 00a2 03       		.uleb128 0x3
 1072 00a3 0E       		.uleb128 0xe
 1073 00a4 3A       		.uleb128 0x3a
 1074 00a5 0B       		.uleb128 0xb
 1075 00a6 3B       		.uleb128 0x3b
 1076 00a7 0B       		.uleb128 0xb
 1077 00a8 49       		.uleb128 0x49
 1078 00a9 13       		.uleb128 0x13
 1079 00aa 38       		.uleb128 0x38
 1080 00ab 05       		.uleb128 0x5
 1081 00ac 00       		.byte	0
 1082 00ad 00       		.byte	0
 1083 00ae 0F       		.uleb128 0xf
 1084 00af 21       		.uleb128 0x21
 1085 00b0 00       		.byte	0
 1086 00b1 49       		.uleb128 0x49
 1087 00b2 13       		.uleb128 0x13
 1088 00b3 2F       		.uleb128 0x2f
 1089 00b4 05       		.uleb128 0x5
 1090 00b5 00       		.byte	0
 1091 00b6 00       		.byte	0
 1092 00b7 10       		.uleb128 0x10
 1093 00b8 2E       		.uleb128 0x2e
 1094 00b9 01       		.byte	0x1
 1095 00ba 3F       		.uleb128 0x3f
 1096 00bb 19       		.uleb128 0x19
 1097 00bc 03       		.uleb128 0x3
 1098 00bd 0E       		.uleb128 0xe
 1099 00be 3A       		.uleb128 0x3a
 1100 00bf 0B       		.uleb128 0xb
 1101 00c0 3B       		.uleb128 0x3b
 1102 00c1 0B       		.uleb128 0xb
 1103 00c2 27       		.uleb128 0x27
 1104 00c3 19       		.uleb128 0x19
 1105 00c4 11       		.uleb128 0x11
 1106 00c5 01       		.uleb128 0x1
 1107 00c6 12       		.uleb128 0x12
 1108 00c7 06       		.uleb128 0x6
 1109 00c8 40       		.uleb128 0x40
 1110 00c9 18       		.uleb128 0x18
 1111 00ca 9642     		.uleb128 0x2116
 1112 00cc 19       		.uleb128 0x19
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 26


 1113 00cd 01       		.uleb128 0x1
 1114 00ce 13       		.uleb128 0x13
 1115 00cf 00       		.byte	0
 1116 00d0 00       		.byte	0
 1117 00d1 11       		.uleb128 0x11
 1118 00d2 05       		.uleb128 0x5
 1119 00d3 00       		.byte	0
 1120 00d4 03       		.uleb128 0x3
 1121 00d5 0E       		.uleb128 0xe
 1122 00d6 3A       		.uleb128 0x3a
 1123 00d7 0B       		.uleb128 0xb
 1124 00d8 3B       		.uleb128 0x3b
 1125 00d9 0B       		.uleb128 0xb
 1126 00da 49       		.uleb128 0x49
 1127 00db 13       		.uleb128 0x13
 1128 00dc 02       		.uleb128 0x2
 1129 00dd 18       		.uleb128 0x18
 1130 00de 00       		.byte	0
 1131 00df 00       		.byte	0
 1132 00e0 12       		.uleb128 0x12
 1133 00e1 2E       		.uleb128 0x2e
 1134 00e2 01       		.byte	0x1
 1135 00e3 03       		.uleb128 0x3
 1136 00e4 0E       		.uleb128 0xe
 1137 00e5 3A       		.uleb128 0x3a
 1138 00e6 0B       		.uleb128 0xb
 1139 00e7 3B       		.uleb128 0x3b
 1140 00e8 0B       		.uleb128 0xb
 1141 00e9 27       		.uleb128 0x27
 1142 00ea 19       		.uleb128 0x19
 1143 00eb 11       		.uleb128 0x11
 1144 00ec 01       		.uleb128 0x1
 1145 00ed 12       		.uleb128 0x12
 1146 00ee 06       		.uleb128 0x6
 1147 00ef 40       		.uleb128 0x40
 1148 00f0 18       		.uleb128 0x18
 1149 00f1 9642     		.uleb128 0x2116
 1150 00f3 19       		.uleb128 0x19
 1151 00f4 01       		.uleb128 0x1
 1152 00f5 13       		.uleb128 0x13
 1153 00f6 00       		.byte	0
 1154 00f7 00       		.byte	0
 1155 00f8 13       		.uleb128 0x13
 1156 00f9 34       		.uleb128 0x34
 1157 00fa 00       		.byte	0
 1158 00fb 03       		.uleb128 0x3
 1159 00fc 0E       		.uleb128 0xe
 1160 00fd 3A       		.uleb128 0x3a
 1161 00fe 0B       		.uleb128 0xb
 1162 00ff 3B       		.uleb128 0x3b
 1163 0100 0B       		.uleb128 0xb
 1164 0101 49       		.uleb128 0x49
 1165 0102 13       		.uleb128 0x13
 1166 0103 02       		.uleb128 0x2
 1167 0104 18       		.uleb128 0x18
 1168 0105 00       		.byte	0
 1169 0106 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 27


 1170 0107 14       		.uleb128 0x14
 1171 0108 2E       		.uleb128 0x2e
 1172 0109 01       		.byte	0x1
 1173 010a 3F       		.uleb128 0x3f
 1174 010b 19       		.uleb128 0x19
 1175 010c 03       		.uleb128 0x3
 1176 010d 0E       		.uleb128 0xe
 1177 010e 3A       		.uleb128 0x3a
 1178 010f 0B       		.uleb128 0xb
 1179 0110 3B       		.uleb128 0x3b
 1180 0111 05       		.uleb128 0x5
 1181 0112 27       		.uleb128 0x27
 1182 0113 19       		.uleb128 0x19
 1183 0114 49       		.uleb128 0x49
 1184 0115 13       		.uleb128 0x13
 1185 0116 11       		.uleb128 0x11
 1186 0117 01       		.uleb128 0x1
 1187 0118 12       		.uleb128 0x12
 1188 0119 06       		.uleb128 0x6
 1189 011a 40       		.uleb128 0x40
 1190 011b 18       		.uleb128 0x18
 1191 011c 9742     		.uleb128 0x2117
 1192 011e 19       		.uleb128 0x19
 1193 011f 01       		.uleb128 0x1
 1194 0120 13       		.uleb128 0x13
 1195 0121 00       		.byte	0
 1196 0122 00       		.byte	0
 1197 0123 15       		.uleb128 0x15
 1198 0124 34       		.uleb128 0x34
 1199 0125 00       		.byte	0
 1200 0126 03       		.uleb128 0x3
 1201 0127 0E       		.uleb128 0xe
 1202 0128 3A       		.uleb128 0x3a
 1203 0129 0B       		.uleb128 0xb
 1204 012a 3B       		.uleb128 0x3b
 1205 012b 05       		.uleb128 0x5
 1206 012c 49       		.uleb128 0x49
 1207 012d 13       		.uleb128 0x13
 1208 012e 02       		.uleb128 0x2
 1209 012f 18       		.uleb128 0x18
 1210 0130 00       		.byte	0
 1211 0131 00       		.byte	0
 1212 0132 16       		.uleb128 0x16
 1213 0133 35       		.uleb128 0x35
 1214 0134 00       		.byte	0
 1215 0135 49       		.uleb128 0x49
 1216 0136 13       		.uleb128 0x13
 1217 0137 00       		.byte	0
 1218 0138 00       		.byte	0
 1219 0139 17       		.uleb128 0x17
 1220 013a 34       		.uleb128 0x34
 1221 013b 00       		.byte	0
 1222 013c 03       		.uleb128 0x3
 1223 013d 0E       		.uleb128 0xe
 1224 013e 3A       		.uleb128 0x3a
 1225 013f 0B       		.uleb128 0xb
 1226 0140 3B       		.uleb128 0x3b
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 28


 1227 0141 05       		.uleb128 0x5
 1228 0142 49       		.uleb128 0x49
 1229 0143 13       		.uleb128 0x13
 1230 0144 3F       		.uleb128 0x3f
 1231 0145 19       		.uleb128 0x19
 1232 0146 3C       		.uleb128 0x3c
 1233 0147 19       		.uleb128 0x19
 1234 0148 00       		.byte	0
 1235 0149 00       		.byte	0
 1236 014a 18       		.uleb128 0x18
 1237 014b 34       		.uleb128 0x34
 1238 014c 00       		.byte	0
 1239 014d 03       		.uleb128 0x3
 1240 014e 0E       		.uleb128 0xe
 1241 014f 3A       		.uleb128 0x3a
 1242 0150 0B       		.uleb128 0xb
 1243 0151 3B       		.uleb128 0x3b
 1244 0152 0B       		.uleb128 0xb
 1245 0153 49       		.uleb128 0x49
 1246 0154 13       		.uleb128 0x13
 1247 0155 3F       		.uleb128 0x3f
 1248 0156 19       		.uleb128 0x19
 1249 0157 02       		.uleb128 0x2
 1250 0158 18       		.uleb128 0x18
 1251 0159 00       		.byte	0
 1252 015a 00       		.byte	0
 1253 015b 00       		.byte	0
 1254              		.section	.debug_aranges,"",%progbits
 1255 0000 34000000 		.4byte	0x34
 1256 0004 0200     		.2byte	0x2
 1257 0006 00000000 		.4byte	.Ldebug_info0
 1258 000a 04       		.byte	0x4
 1259 000b 00       		.byte	0
 1260 000c 0000     		.2byte	0
 1261 000e 0000     		.2byte	0
 1262 0010 00000000 		.4byte	.LFB68
 1263 0014 60000000 		.4byte	.LFE68-.LFB68
 1264 0018 00000000 		.4byte	.LFB69
 1265 001c 84000000 		.4byte	.LFE69-.LFB69
 1266 0020 00000000 		.4byte	.LFB70
 1267 0024 BC000000 		.4byte	.LFE70-.LFB70
 1268 0028 00000000 		.4byte	.LFB71
 1269 002c 30000000 		.4byte	.LFE71-.LFB71
 1270 0030 00000000 		.4byte	0
 1271 0034 00000000 		.4byte	0
 1272              		.section	.debug_ranges,"",%progbits
 1273              	.Ldebug_ranges0:
 1274 0000 00000000 		.4byte	.LFB68
 1275 0004 60000000 		.4byte	.LFE68
 1276 0008 00000000 		.4byte	.LFB69
 1277 000c 84000000 		.4byte	.LFE69
 1278 0010 00000000 		.4byte	.LFB70
 1279 0014 BC000000 		.4byte	.LFE70
 1280 0018 00000000 		.4byte	.LFB71
 1281 001c 30000000 		.4byte	.LFE71
 1282 0020 00000000 		.4byte	0
 1283 0024 00000000 		.4byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 29


 1284              		.section	.debug_line,"",%progbits
 1285              	.Ldebug_line0:
 1286 0000 84020000 		.section	.debug_str,"MS",%progbits,1
 1286      0200F401 
 1286      00000201 
 1286      FB0E0D00 
 1286      01010101 
 1287              	.LASF29:
 1288 0000 696E666F 		.ascii	"informationID\000"
 1288      726D6174 
 1288      696F6E49 
 1288      4400
 1289              	.LASF59:
 1290 000e 78457272 		.ascii	"xErrorOccurred\000"
 1290      6F724F63 
 1290      63757272 
 1290      656400
 1291              	.LASF48:
 1292 001d 75785072 		.ascii	"uxPriority\000"
 1292      696F7269 
 1292      747900
 1293              	.LASF42:
 1294 0028 77726974 		.ascii	"write\000"
 1294      6500
 1295              	.LASF52:
 1296 002e 63427974 		.ascii	"cByteToSend\000"
 1296      65546F53 
 1296      656E6400 
 1297              	.LASF33:
 1298 003a 6F626A65 		.ascii	"objectNumber\000"
 1298      63744E75 
 1298      6D626572 
 1298      00
 1299              	.LASF5:
 1300 0047 73686F72 		.ascii	"short int\000"
 1300      7420696E 
 1300      7400
 1301              	.LASF62:
 1302 0051 75784261 		.ascii	"uxBaseLED\000"
 1302      73654C45 
 1302      4400
 1303              	.LASF13:
 1304 005b 73697A65 		.ascii	"sizetype\000"
 1304      74797065 
 1304      00
 1305              	.LASF21:
 1306 0064 4D555445 		.ascii	"MUTEX\000"
 1306      5800
 1307              	.LASF46:
 1308 006a 5461736B 		.ascii	"TaskHandle_t\000"
 1308      48616E64 
 1308      6C655F74 
 1308      00
 1309              	.LASF30:
 1310 0077 6F626A65 		.ascii	"objectType\000"
 1310      63745479 
 1310      706500
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 30


 1311              	.LASF68:
 1312 0082 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1312      43313120 
 1312      352E342E 
 1312      31203230 
 1312      31363036 
 1313 00b5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1313      20726576 
 1313      6973696F 
 1313      6E203233 
 1313      37373135 
 1314 00e8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1314      66756E63 
 1314      74696F6E 
 1314      2D736563 
 1314      74696F6E 
 1315              	.LASF10:
 1316 0110 5F5F7569 		.ascii	"__uint32_t\000"
 1316      6E743332 
 1316      5F7400
 1317              	.LASF69:
 1318 011b 2E2E5C43 		.ascii	"..\\Common\\Minimal\\comtest.c\000"
 1318      6F6D6D6F 
 1318      6E5C4D69 
 1318      6E696D61 
 1318      6C5C636F 
 1319              	.LASF37:
 1320 0137 6F626A65 		.ascii	"objectHeader\000"
 1320      63744865 
 1320      61646572 
 1320      00
 1321              	.LASF15:
 1322 0144 75696E74 		.ascii	"uint8_t\000"
 1322      385F7400 
 1323              	.LASF38:
 1324 014c 6F626A65 		.ascii	"objectArray\000"
 1324      63744172 
 1324      72617900 
 1325              	.LASF34:
 1326 0158 6C656E4F 		.ascii	"lenObjectName\000"
 1326      626A6563 
 1326      744E616D 
 1326      6500
 1327              	.LASF56:
 1328 0166 63457870 		.ascii	"cExpectedByte\000"
 1328      65637465 
 1328      64427974 
 1328      6500
 1329              	.LASF27:
 1330 0174 4F626A65 		.ascii	"ObjectType\000"
 1330      63745479 
 1330      706500
 1331              	.LASF73:
 1332 017f 78417265 		.ascii	"xAreComTestTasksStillRunning\000"
 1332      436F6D54 
 1332      65737454 
 1332      61736B73 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 31


 1332      5374696C 
 1333              	.LASF31:
 1334 019c 6C656E67 		.ascii	"length\000"
 1334      746800
 1335              	.LASF18:
 1336 01a3 666C6F61 		.ascii	"float\000"
 1336      7400
 1337              	.LASF36:
 1338 01a9 4F626A65 		.ascii	"Object\000"
 1338      637400
 1339              	.LASF41:
 1340 01b0 72656164 		.ascii	"read\000"
 1340      00
 1341              	.LASF1:
 1342 01b5 6C6F6E67 		.ascii	"long long int\000"
 1342      206C6F6E 
 1342      6720696E 
 1342      7400
 1343              	.LASF45:
 1344 01c3 5469636B 		.ascii	"TickType_t\000"
 1344      54797065 
 1344      5F7400
 1345              	.LASF57:
 1346 01ce 63427974 		.ascii	"cByteRxed\000"
 1346      65527865 
 1346      6400
 1347              	.LASF9:
 1348 01d8 6C6F6E67 		.ascii	"long int\000"
 1348      20696E74 
 1348      00
 1349              	.LASF65:
 1350 01e1 736E6966 		.ascii	"sniffIDFilter\000"
 1350      66494446 
 1350      696C7465 
 1350      7200
 1351              	.LASF24:
 1352 01ef 52454355 		.ascii	"RECURSIVE_MUTEX\000"
 1352      52534956 
 1352      455F4D55 
 1352      54455800 
 1353              	.LASF7:
 1354 01ff 5F5F7569 		.ascii	"__uint8_t\000"
 1354      6E74385F 
 1354      7400
 1355              	.LASF61:
 1356 0209 78506F72 		.ascii	"xPort\000"
 1356      7400
 1357              	.LASF20:
 1358 020f 51554555 		.ascii	"QUEUE\000"
 1358      4500
 1359              	.LASF22:
 1360 0215 434F554E 		.ascii	"COUNTING_SEMAPHORE\000"
 1360      54494E47 
 1360      5F53454D 
 1360      4150484F 
 1360      524500
 1361              	.LASF35:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 32


 1362 0228 6F626A65 		.ascii	"objectName\000"
 1362      63744E61 
 1362      6D6500
 1363              	.LASF2:
 1364 0233 6C6F6E67 		.ascii	"long double\000"
 1364      20646F75 
 1364      626C6500 
 1365              	.LASF58:
 1366 023f 78526573 		.ascii	"xResyncRequired\000"
 1366      796E6352 
 1366      65717569 
 1366      72656400 
 1367              	.LASF50:
 1368 024f 75784C45 		.ascii	"uxLED\000"
 1368      4400
 1369              	.LASF4:
 1370 0255 756E7369 		.ascii	"unsigned char\000"
 1370      676E6564 
 1370      20636861 
 1370      7200
 1371              	.LASF53:
 1372 0263 7854696D 		.ascii	"xTimeToWait\000"
 1372      65546F57 
 1372      61697400 
 1373              	.LASF72:
 1374 026f 76416C74 		.ascii	"vAltStartComTestTasks\000"
 1374      53746172 
 1374      74436F6D 
 1374      54657374 
 1374      5461736B 
 1375              	.LASF54:
 1376 0285 76436F6D 		.ascii	"vComTxTask\000"
 1376      54785461 
 1376      736B00
 1377              	.LASF3:
 1378 0290 7369676E 		.ascii	"signed char\000"
 1378      65642063 
 1378      68617200 
 1379              	.LASF12:
 1380 029c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1380      206C6F6E 
 1380      6720756E 
 1380      7369676E 
 1380      65642069 
 1381              	.LASF17:
 1382 02b3 75696E74 		.ascii	"uint32_t\000"
 1382      33325F74 
 1382      00
 1383              	.LASF0:
 1384 02bc 756E7369 		.ascii	"unsigned int\000"
 1384      676E6564 
 1384      20696E74 
 1384      00
 1385              	.LASF32:
 1386 02c9 4F626A65 		.ascii	"ObjectListHeader\000"
 1386      63744C69 
 1386      73744865 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 33


 1386      61646572 
 1386      00
 1387              	.LASF43:
 1388 02da 42617365 		.ascii	"BaseType_t\000"
 1388      54797065 
 1388      5F7400
 1389              	.LASF49:
 1390 02e5 756C4261 		.ascii	"ulBaudRate\000"
 1390      75645261 
 1390      746500
 1391              	.LASF51:
 1392 02f0 70765061 		.ascii	"pvParameters\000"
 1392      72616D65 
 1392      74657273 
 1392      00
 1393              	.LASF6:
 1394 02fd 73686F72 		.ascii	"short unsigned int\000"
 1394      7420756E 
 1394      7369676E 
 1394      65642069 
 1394      6E7400
 1395              	.LASF14:
 1396 0310 63686172 		.ascii	"char\000"
 1396      00
 1397              	.LASF28:
 1398 0315 7061636B 		.ascii	"packetID\000"
 1398      65744944 
 1398      00
 1399              	.LASF16:
 1400 031e 696E7433 		.ascii	"int32_t\000"
 1400      325F7400 
 1401              	.LASF44:
 1402 0326 55426173 		.ascii	"UBaseType_t\000"
 1402      65547970 
 1402      655F7400 
 1403              	.LASF47:
 1404 0332 78436F6D 		.ascii	"xComPortHandle\000"
 1404      506F7274 
 1404      48616E64 
 1404      6C6500
 1405              	.LASF40:
 1406 0341 64617461 		.ascii	"data\000"
 1406      00
 1407              	.LASF66:
 1408 0346 62756666 		.ascii	"buffer\000"
 1408      657200
 1409              	.LASF26:
 1410 034d 4E554D42 		.ascii	"NUMBER_OF_OBJECTTYPES\000"
 1410      45525F4F 
 1410      465F4F42 
 1410      4A454354 
 1410      54595045 
 1411              	.LASF11:
 1412 0363 6C6F6E67 		.ascii	"long unsigned int\000"
 1412      20756E73 
 1412      69676E65 
 1412      6420696E 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\cc2MFmny.s 			page 34


 1412      7400
 1413              	.LASF19:
 1414 0375 646F7562 		.ascii	"double\000"
 1414      6C6500
 1415              	.LASF23:
 1416 037c 42494E41 		.ascii	"BINARY_SEMAPHORE\000"
 1416      52595F53 
 1416      454D4150 
 1416      484F5245 
 1416      00
 1417              	.LASF67:
 1418 038d 6F626A65 		.ascii	"objectList\000"
 1418      63744C69 
 1418      737400
 1419              	.LASF55:
 1420 0398 76436F6D 		.ascii	"vComRxTask\000"
 1420      52785461 
 1420      736B00
 1421              	.LASF25:
 1422 03a3 5441534B 		.ascii	"TASK\000"
 1422      00
 1423              	.LASF8:
 1424 03a8 5F5F696E 		.ascii	"__int32_t\000"
 1424      7433325F 
 1424      7400
 1425              	.LASF60:
 1426 03b2 78526574 		.ascii	"xReturn\000"
 1426      75726E00 
 1427              	.LASF39:
 1428 03ba 4F626A65 		.ascii	"ObjectList\000"
 1428      63744C69 
 1428      737400
 1429              	.LASF63:
 1430 03c5 75785278 		.ascii	"uxRxLoops\000"
 1430      4C6F6F70 
 1430      7300
 1431              	.LASF64:
 1432 03cf 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1432      52784275 
 1432      66666572 
 1432      00
 1433              	.LASF71:
 1434 03dc 42756666 		.ascii	"Buffer\000"
 1434      657200
 1435              	.LASF70:
 1436 03e3 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 1436      726F6772 
 1436      616D6D65 
 1436      5F536372 
 1436      69707473 
 1437 0412 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 1437      5F435938 
 1437      434B4954 
 1437      5F303539 
 1437      2D6D6173 
 1438              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
