ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_1_initVar
  20              		.bss
  21              		.type	UART_1_initVar, %object
  22              		.size	UART_1_initVar, 1
  23              	UART_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.UART_1_Start,"ax",%progbits
  26              		.align	2
  27              		.global	UART_1_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	UART_1_Start, %function
  31              	UART_1_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 2


  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  34              		.loc 1 77 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 3


  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  44              		.loc 1 79 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  49              		.loc 1 81 0
  50 000c FFF7FEFF 		bl	UART_1_Init
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  51              		.loc 1 82 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  56              		.loc 1 85 0
  57 0016 FFF7FEFF 		bl	UART_1_Enable
  86:Generated_Source\PSoC5/UART_1.c **** }
  58              		.loc 1 86 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	UART_1_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	UART_1_Start, .-UART_1_Start
  68              		.section	.text.UART_1_Init,"ax",%progbits
  69              		.align	2
  70              		.global	UART_1_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	UART_1_Init, %function
  74              	UART_1_Init:
  75              	.LFB1:
  87:Generated_Source\PSoC5/UART_1.c **** 
  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 4


  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  76              		.loc 1 107 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81 0000 80B4     		push	{r7}
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 7, -4
  84 0002 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  86              		.loc 1 124 0
  87 0004 094B     		ldr	r3, .L6
  88 0006 7A22     		movs	r2, #122
  89 0008 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
  90              		.loc 1 126 0
  91 000a 094B     		ldr	r3, .L6+4
  92 000c 2022     		movs	r2, #32
  93 000e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 5


 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  94              		.loc 1 138 0
  95 0010 084B     		ldr	r3, .L6+8
  96 0012 0622     		movs	r2, #6
  97 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  98              		.loc 1 139 0
  99 0016 084B     		ldr	r3, .L6+12
 100 0018 4722     		movs	r2, #71
 101 001a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 102              		.loc 1 150 0
 103 001c 074B     		ldr	r3, .L6+16
 104 001e 0122     		movs	r2, #1
 105 0020 1A70     		strb	r2, [r3]
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
 106              		.loc 1 160 0
 107 0022 00BF     		nop
 108 0024 BD46     		mov	sp, r7
 109              		.cfi_def_cfa_register 13
 110              		@ sp needed
 111 0026 80BC     		pop	{r7}
 112              		.cfi_restore 7
 113              		.cfi_def_cfa_offset 0
 114 0028 7047     		bx	lr
 115              	.L7:
 116 002a 00BF     		.align	2
 117              	.L6:
 118 002c 89650040 		.word	1073767817
 119 0030 88640040 		.word	1073767560
 120 0034 2B640040 		.word	1073767467
 121 0038 3B640040 		.word	1073767483
 122 003c 8A640040 		.word	1073767562
 123              		.cfi_endproc
 124              	.LFE1:
 125              		.size	UART_1_Init, .-UART_1_Init
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 6


 126              		.section	.text.UART_1_Enable,"ax",%progbits
 127              		.align	2
 128              		.global	UART_1_Enable
 129              		.thumb
 130              		.thumb_func
 131              		.type	UART_1_Enable, %function
 132              	UART_1_Enable:
 133              	.LFB2:
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
 134              		.loc 1 184 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 82B0     		sub	sp, sp, #8
 143              		.cfi_def_cfa_offset 16
 144 0004 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 146              		.loc 1 186 0
 147 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 148 000a 0346     		mov	r3, r0
 149 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 150              		.loc 1 190 0
 151 000e 114A     		ldr	r2, .L9
 152 0010 104B     		ldr	r3, .L9
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 7


 153 0012 1B78     		ldrb	r3, [r3]
 154 0014 DBB2     		uxtb	r3, r3
 155 0016 43F02003 		orr	r3, r3, #32
 156 001a DBB2     		uxtb	r3, r3
 157 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 158              		.loc 1 193 0
 159 001e 0E4A     		ldr	r2, .L9+4
 160 0020 0D4B     		ldr	r3, .L9+4
 161 0022 1B78     		ldrb	r3, [r3]
 162 0024 DBB2     		uxtb	r3, r3
 163 0026 43F01003 		orr	r3, r3, #16
 164 002a DBB2     		uxtb	r3, r3
 165 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 166              		.loc 1 211 0
 167 002e 0B4A     		ldr	r2, .L9+8
 168 0030 0A4B     		ldr	r3, .L9+8
 169 0032 1B78     		ldrb	r3, [r3]
 170 0034 DBB2     		uxtb	r3, r3
 171 0036 43F01003 		orr	r3, r3, #16
 172 003a DBB2     		uxtb	r3, r3
 173 003c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 174              		.loc 1 219 0
 175 003e FFF7FEFF 		bl	UART_1_IntClock_Start
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 176              		.loc 1 222 0
 177 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 8


 178 0044 1846     		mov	r0, r3
 179 0046 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_1.c **** }
 180              		.loc 1 223 0
 181 004a 00BF     		nop
 182 004c 0837     		adds	r7, r7, #8
 183              		.cfi_def_cfa_offset 8
 184 004e BD46     		mov	sp, r7
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0050 80BD     		pop	{r7, pc}
 188              	.L10:
 189 0052 00BF     		.align	2
 190              	.L9:
 191 0054 99650040 		.word	1073767833
 192 0058 98640040 		.word	1073767576
 193 005c 9A640040 		.word	1073767578
 194              		.cfi_endproc
 195              	.LFE2:
 196              		.size	UART_1_Enable, .-UART_1_Enable
 197              		.section	.text.UART_1_Stop,"ax",%progbits
 198              		.align	2
 199              		.global	UART_1_Stop
 200              		.thumb
 201              		.thumb_func
 202              		.type	UART_1_Stop, %function
 203              	UART_1_Stop:
 204              	.LFB3:
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 205              		.loc 1 241 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 9


 216              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 217              		.loc 1 243 0
 218 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 219 000a 0346     		mov	r3, r0
 220 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 221              		.loc 1 247 0
 222 000e 114A     		ldr	r2, .L12
 223 0010 104B     		ldr	r3, .L12
 224 0012 1B78     		ldrb	r3, [r3]
 225 0014 DBB2     		uxtb	r3, r3
 226 0016 23F02003 		bic	r3, r3, #32
 227 001a DBB2     		uxtb	r3, r3
 228 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 229              		.loc 1 257 0
 230 001e FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 231              		.loc 1 262 0
 232 0022 0D4A     		ldr	r2, .L12+4
 233 0024 0C4B     		ldr	r3, .L12+4
 234 0026 1B78     		ldrb	r3, [r3]
 235 0028 DBB2     		uxtb	r3, r3
 236 002a 23F01003 		bic	r3, r3, #16
 237 002e DBB2     		uxtb	r3, r3
 238 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 239              		.loc 1 270 0
 240 0032 0A4A     		ldr	r2, .L12+8
 241 0034 094B     		ldr	r3, .L12+8
 242 0036 1B78     		ldrb	r3, [r3]
 243 0038 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 10


 244 003a 23F01003 		bic	r3, r3, #16
 245 003e DBB2     		uxtb	r3, r3
 246 0040 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 247              		.loc 1 277 0
 248 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 249 0044 1846     		mov	r0, r3
 250 0046 FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_1.c **** }
 251              		.loc 1 278 0
 252 004a 00BF     		nop
 253 004c 0837     		adds	r7, r7, #8
 254              		.cfi_def_cfa_offset 8
 255 004e BD46     		mov	sp, r7
 256              		.cfi_def_cfa_register 13
 257              		@ sp needed
 258 0050 80BD     		pop	{r7, pc}
 259              	.L13:
 260 0052 00BF     		.align	2
 261              	.L12:
 262 0054 99650040 		.word	1073767833
 263 0058 98640040 		.word	1073767576
 264 005c 9A640040 		.word	1073767578
 265              		.cfi_endproc
 266              	.LFE3:
 267              		.size	UART_1_Stop, .-UART_1_Stop
 268              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 269              		.align	2
 270              		.global	UART_1_ReadControlRegister
 271              		.thumb
 272              		.thumb_func
 273              		.type	UART_1_ReadControlRegister, %function
 274              	UART_1_ReadControlRegister:
 275              	.LFB4:
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 11


 296:Generated_Source\PSoC5/UART_1.c **** {
 276              		.loc 1 296 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280              		@ link register save eliminated.
 281 0000 80B4     		push	{r7}
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 7, -4
 284 0002 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 286              		.loc 1 298 0
 287 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 288              		.loc 1 302 0
 289 0006 1846     		mov	r0, r3
 290 0008 BD46     		mov	sp, r7
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
 293 000a 80BC     		pop	{r7}
 294              		.cfi_restore 7
 295              		.cfi_def_cfa_offset 0
 296 000c 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE4:
 299              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 300 000e 00BF     		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 301              		.align	2
 302              		.global	UART_1_WriteControlRegister
 303              		.thumb
 304              		.thumb_func
 305              		.type	UART_1_WriteControlRegister, %function
 306              	UART_1_WriteControlRegister:
 307              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 12


 308              		.loc 1 320 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              		.cfi_def_cfa_offset 4
 315              		.cfi_offset 7, -4
 316 0002 83B0     		sub	sp, sp, #12
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
 320 0006 0346     		mov	r3, r0
 321 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 322              		.loc 1 329 0
 323 000a 00BF     		nop
 324 000c 0C37     		adds	r7, r7, #12
 325              		.cfi_def_cfa_offset 4
 326 000e BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0010 80BC     		pop	{r7}
 330              		.cfi_restore 7
 331              		.cfi_def_cfa_offset 0
 332 0012 7047     		bx	lr
 333              		.cfi_endproc
 334              	.LFE5:
 335              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 336              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 337              		.align	2
 338              		.global	UART_1_SetRxInterruptMode
 339              		.thumb
 340              		.thumb_func
 341              		.type	UART_1_SetRxInterruptMode, %function
 342              	UART_1_SetRxInterruptMode:
 343              	.LFB6:
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 13


 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 344              		.loc 1 360 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 8
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349 0000 80B4     		push	{r7}
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 7, -4
 352 0002 83B0     		sub	sp, sp, #12
 353              		.cfi_def_cfa_offset 16
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 0346     		mov	r3, r0
 357 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 358              		.loc 1 361 0
 359 000a 044A     		ldr	r2, .L18
 360 000c FB79     		ldrb	r3, [r7, #7]
 361 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART_1.c ****     }
 362              		.loc 1 362 0
 363 0010 00BF     		nop
 364 0012 0C37     		adds	r7, r7, #12
 365              		.cfi_def_cfa_offset 4
 366 0014 BD46     		mov	sp, r7
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 0016 80BC     		pop	{r7}
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 0018 7047     		bx	lr
 373              	.L19:
 374 001a 00BF     		.align	2
 375              	.L18:
 376 001c 88640040 		.word	1073767560
 377              		.cfi_endproc
 378              	.LFE6:
 379              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 14


 380              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 381              		.align	2
 382              		.global	UART_1_ReadRxData
 383              		.thumb
 384              		.thumb_func
 385              		.type	UART_1_ReadRxData, %function
 386              	UART_1_ReadRxData:
 387              	.LFB7:
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 388              		.loc 1 393 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 8
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              		.cfi_def_cfa_offset 16
 398 0004 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 15


 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 400              		.loc 1 448 0
 401 0006 044B     		ldr	r3, .L22
 402 0008 1B78     		ldrb	r3, [r3]
 403 000a FB71     		strb	r3, [r7, #7]
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 16


 404              		.loc 1 452 0
 405 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART_1.c ****     }
 406              		.loc 1 453 0
 407 000e 1846     		mov	r0, r3
 408 0010 0C37     		adds	r7, r7, #12
 409              		.cfi_def_cfa_offset 4
 410 0012 BD46     		mov	sp, r7
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0014 80BC     		pop	{r7}
 414              		.cfi_restore 7
 415              		.cfi_def_cfa_offset 0
 416 0016 7047     		bx	lr
 417              	.L23:
 418              		.align	2
 419              	.L22:
 420 0018 48640040 		.word	1073767496
 421              		.cfi_endproc
 422              	.LFE7:
 423              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 424              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 425              		.align	2
 426              		.global	UART_1_ReadRxStatus
 427              		.thumb
 428              		.thumb_func
 429              		.type	UART_1_ReadRxStatus, %function
 430              	UART_1_ReadRxStatus:
 431              	.LFB8:
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 17


 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 432              		.loc 1 486 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 16
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 444              		.loc 1 489 0
 445 0006 064B     		ldr	r3, .L26
 446 0008 1B78     		ldrb	r3, [r3]
 447 000a DBB2     		uxtb	r3, r3
 448 000c 03F07F03 		and	r3, r3, #127
 449 0010 FB71     		strb	r3, [r7, #7]
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 450              		.loc 1 499 0
 451 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART_1.c ****     }
 452              		.loc 1 500 0
 453 0014 1846     		mov	r0, r3
 454 0016 0C37     		adds	r7, r7, #12
 455              		.cfi_def_cfa_offset 4
 456 0018 BD46     		mov	sp, r7
 457              		.cfi_def_cfa_register 13
 458              		@ sp needed
 459 001a 80BC     		pop	{r7}
 460              		.cfi_restore 7
 461              		.cfi_def_cfa_offset 0
 462 001c 7047     		bx	lr
 463              	.L27:
 464 001e 00BF     		.align	2
 465              	.L26:
 466 0020 68640040 		.word	1073767528
 467              		.cfi_endproc
 468              	.LFE8:
 469              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 18


 470              		.section	.text.UART_1_GetChar,"ax",%progbits
 471              		.align	2
 472              		.global	UART_1_GetChar
 473              		.thumb
 474              		.thumb_func
 475              		.type	UART_1_GetChar, %function
 476              	UART_1_GetChar:
 477              	.LFB9:
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 478              		.loc 1 533 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 8
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482              		@ link register save eliminated.
 483 0000 80B4     		push	{r7}
 484              		.cfi_def_cfa_offset 4
 485              		.cfi_offset 7, -4
 486 0002 83B0     		sub	sp, sp, #12
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 490              		.loc 1 534 0
 491 0006 0023     		movs	r3, #0
 492 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 19


 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 20


 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 493              		.loc 1 596 0
 494 000a 0C4B     		ldr	r3, .L31
 495 000c 1B78     		ldrb	r3, [r3]
 496 000e BB71     		strb	r3, [r7, #6]
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 497              		.loc 1 597 0
 498 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 499 0012 03F02003 		and	r3, r3, #32
 500 0016 002B     		cmp	r3, #0
 501 0018 09D0     		beq	.L29
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 502              		.loc 1 600 0
 503 001a 094B     		ldr	r3, .L31+4
 504 001c 1B78     		ldrb	r3, [r3]
 505 001e FB71     		strb	r3, [r7, #7]
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 506              		.loc 1 604 0
 507 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 508 0022 03F01E03 		and	r3, r3, #30
 603:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 509              		.loc 1 603 0
 510 0026 002B     		cmp	r3, #0
 511 0028 01D0     		beq	.L29
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 512              		.loc 1 606 0
 513 002a 0023     		movs	r3, #0
 514 002c FB71     		strb	r3, [r7, #7]
 515              	.L29:
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 516              		.loc 1 611 0
 517 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART_1.c ****     }
 518              		.loc 1 612 0
 519 0030 1846     		mov	r0, r3
 520 0032 0C37     		adds	r7, r7, #12
 521              		.cfi_def_cfa_offset 4
 522 0034 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0036 80BC     		pop	{r7}
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 21


 528 0038 7047     		bx	lr
 529              	.L32:
 530 003a 00BF     		.align	2
 531              	.L31:
 532 003c 68640040 		.word	1073767528
 533 0040 48640040 		.word	1073767496
 534              		.cfi_endproc
 535              	.LFE9:
 536              		.size	UART_1_GetChar, .-UART_1_GetChar
 537              		.section	.text.UART_1_GetByte,"ax",%progbits
 538              		.align	2
 539              		.global	UART_1_GetByte
 540              		.thumb
 541              		.thumb_func
 542              		.type	UART_1_GetByte, %function
 543              	UART_1_GetByte:
 544              	.LFB10:
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 545              		.loc 1 635 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 1, uses_anonymous_args = 0
 549 0000 98B5     		push	{r3, r4, r7, lr}
 550              		.cfi_def_cfa_offset 16
 551              		.cfi_offset 3, -16
 552              		.cfi_offset 4, -12
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 00AF     		add	r7, sp, #0
 556              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 22


 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 557              		.loc 1 646 0
 558 0004 FFF7FEFF 		bl	UART_1_ReadRxStatus
 559 0008 0346     		mov	r3, r0
 560 000a 1B02     		lsls	r3, r3, #8
 561 000c 1CB2     		sxth	r4, r3
 562 000e FFF7FEFF 		bl	UART_1_ReadRxData
 563 0012 0346     		mov	r3, r0
 564 0014 1BB2     		sxth	r3, r3
 565 0016 2343     		orrs	r3, r3, r4
 566 0018 1BB2     		sxth	r3, r3
 567 001a 9BB2     		uxth	r3, r3
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 568              		.loc 1 649 0
 569 001c 1846     		mov	r0, r3
 570 001e 98BD     		pop	{r3, r4, r7, pc}
 571              		.cfi_endproc
 572              	.LFE10:
 573              		.size	UART_1_GetByte, .-UART_1_GetByte
 574              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 575              		.align	2
 576              		.global	UART_1_GetRxBufferSize
 577              		.thumb
 578              		.thumb_func
 579              		.type	UART_1_GetRxBufferSize, %function
 580              	UART_1_GetRxBufferSize:
 581              	.LFB11:
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 23


 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 582              		.loc 1 685 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0000 80B4     		push	{r7}
 588              		.cfi_def_cfa_offset 4
 589              		.cfi_offset 7, -4
 590 0002 83B0     		sub	sp, sp, #12
 591              		.cfi_def_cfa_offset 16
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 24


 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 594              		.loc 1 718 0
 595 0006 084B     		ldr	r3, .L39
 596 0008 1B78     		ldrb	r3, [r3]
 597 000a DBB2     		uxtb	r3, r3
 598 000c 03F02003 		and	r3, r3, #32
 599 0010 002B     		cmp	r3, #0
 600 0012 01D0     		beq	.L36
 601              		.loc 1 718 0 is_stmt 0 discriminator 1
 602 0014 0123     		movs	r3, #1
 603 0016 00E0     		b	.L37
 604              	.L36:
 605              		.loc 1 718 0 discriminator 2
 606 0018 0023     		movs	r3, #0
 607              	.L37:
 608              		.loc 1 718 0 discriminator 4
 609 001a FB71     		strb	r3, [r7, #7]
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 610              		.loc 1 722 0 is_stmt 1 discriminator 4
 611 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART_1.c ****     }
 612              		.loc 1 723 0 discriminator 4
 613 001e 1846     		mov	r0, r3
 614 0020 0C37     		adds	r7, r7, #12
 615              		.cfi_def_cfa_offset 4
 616 0022 BD46     		mov	sp, r7
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0024 80BC     		pop	{r7}
 620              		.cfi_restore 7
 621              		.cfi_def_cfa_offset 0
 622 0026 7047     		bx	lr
 623              	.L40:
 624              		.align	2
 625              	.L39:
 626 0028 68640040 		.word	1073767528
 627              		.cfi_endproc
 628              	.LFE11:
 629              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 630              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 631              		.align	2
 632              		.global	UART_1_ClearRxBuffer
 633              		.thumb
 634              		.thumb_func
 635              		.type	UART_1_ClearRxBuffer, %function
 636              	UART_1_ClearRxBuffer:
 637              	.LFB12:
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 25


 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 638              		.loc 1 758 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 650              		.loc 1 762 0
 651 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 652 000a 0346     		mov	r3, r0
 653 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 654              		.loc 1 763 0
 655 000e 0C4A     		ldr	r2, .L42
 656 0010 0B4B     		ldr	r3, .L42
 657 0012 1B78     		ldrb	r3, [r3]
 658 0014 DBB2     		uxtb	r3, r3
 659 0016 43F00103 		orr	r3, r3, #1
 660 001a DBB2     		uxtb	r3, r3
 661 001c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 26


 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 662              		.loc 1 764 0
 663 001e 084A     		ldr	r2, .L42
 664 0020 074B     		ldr	r3, .L42
 665 0022 1B78     		ldrb	r3, [r3]
 666 0024 DBB2     		uxtb	r3, r3
 667 0026 23F00103 		bic	r3, r3, #1
 668 002a DBB2     		uxtb	r3, r3
 669 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 670              		.loc 1 765 0
 671 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 672 0030 1846     		mov	r0, r3
 673 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 674              		.loc 1 781 0
 675 0036 00BF     		nop
 676 0038 0837     		adds	r7, r7, #8
 677              		.cfi_def_cfa_offset 8
 678 003a BD46     		mov	sp, r7
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 003c 80BD     		pop	{r7, pc}
 682              	.L43:
 683 003e 00BF     		.align	2
 684              	.L42:
 685 0040 98640040 		.word	1073767576
 686              		.cfi_endproc
 687              	.LFE12:
 688              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 689              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 690              		.align	2
 691              		.global	UART_1_SetRxAddressMode
 692              		.thumb
 693              		.thumb_func
 694              		.type	UART_1_SetRxAddressMode, %function
 695              	UART_1_SetRxAddressMode:
 696              	.LFB13:
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 27


 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 697              		.loc 1 815 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702 0000 80B4     		push	{r7}
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              		.cfi_def_cfa_offset 16
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 0346     		mov	r3, r0
 710 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 28


 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 711              		.loc 1 840 0
 712 000a 00BF     		nop
 713 000c 0C37     		adds	r7, r7, #12
 714              		.cfi_def_cfa_offset 4
 715 000e BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 0010 80BC     		pop	{r7}
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0012 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE13:
 724              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 725              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 726              		.align	2
 727              		.global	UART_1_SetRxAddress1
 728              		.thumb
 729              		.thumb_func
 730              		.type	UART_1_SetRxAddress1, %function
 731              	UART_1_SetRxAddress1:
 732              	.LFB14:
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 733              		.loc 1 858 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 8
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737              		@ link register save eliminated.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 29


 738 0000 80B4     		push	{r7}
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 7, -4
 741 0002 83B0     		sub	sp, sp, #12
 742              		.cfi_def_cfa_offset 16
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 745 0006 0346     		mov	r3, r0
 746 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 747              		.loc 1 859 0
 748 000a 044A     		ldr	r2, .L46
 749 000c FB79     		ldrb	r3, [r7, #7]
 750 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART_1.c ****     }
 751              		.loc 1 860 0
 752 0010 00BF     		nop
 753 0012 0C37     		adds	r7, r7, #12
 754              		.cfi_def_cfa_offset 4
 755 0014 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 0016 80BC     		pop	{r7}
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 0018 7047     		bx	lr
 762              	.L47:
 763 001a 00BF     		.align	2
 764              	.L46:
 765 001c 28640040 		.word	1073767464
 766              		.cfi_endproc
 767              	.LFE14:
 768              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 769              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 770              		.align	2
 771              		.global	UART_1_SetRxAddress2
 772              		.thumb
 773              		.thumb_func
 774              		.type	UART_1_SetRxAddress2, %function
 775              	UART_1_SetRxAddress2:
 776              	.LFB15:
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 30


 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 777              		.loc 1 878 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 80B4     		push	{r7}
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 7, -4
 785 0002 83B0     		sub	sp, sp, #12
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 789 0006 0346     		mov	r3, r0
 790 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 791              		.loc 1 879 0
 792 000a 044A     		ldr	r2, .L49
 793 000c FB79     		ldrb	r3, [r7, #7]
 794 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART_1.c ****     }
 795              		.loc 1 880 0
 796 0010 00BF     		nop
 797 0012 0C37     		adds	r7, r7, #12
 798              		.cfi_def_cfa_offset 4
 799 0014 BD46     		mov	sp, r7
 800              		.cfi_def_cfa_register 13
 801              		@ sp needed
 802 0016 80BC     		pop	{r7}
 803              		.cfi_restore 7
 804              		.cfi_def_cfa_offset 0
 805 0018 7047     		bx	lr
 806              	.L50:
 807 001a 00BF     		.align	2
 808              	.L49:
 809 001c 38640040 		.word	1073767480
 810              		.cfi_endproc
 811              	.LFE15:
 812              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 813              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 814              		.align	2
 815              		.global	UART_1_SetTxInterruptMode
 816              		.thumb
 817              		.thumb_func
 818              		.type	UART_1_SetTxInterruptMode, %function
 819              	UART_1_SetTxInterruptMode:
 820              	.LFB16:
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 31


 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 821              		.loc 1 909 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 8
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826 0000 80B4     		push	{r7}
 827              		.cfi_def_cfa_offset 4
 828              		.cfi_offset 7, -4
 829 0002 83B0     		sub	sp, sp, #12
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 833 0006 0346     		mov	r3, r0
 834 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 835              		.loc 1 910 0
 836 000a 044A     		ldr	r2, .L52
 837 000c FB79     		ldrb	r3, [r7, #7]
 838 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_1.c ****     }
 839              		.loc 1 911 0
 840 0010 00BF     		nop
 841 0012 0C37     		adds	r7, r7, #12
 842              		.cfi_def_cfa_offset 4
 843 0014 BD46     		mov	sp, r7
 844              		.cfi_def_cfa_register 13
 845              		@ sp needed
 846 0016 80BC     		pop	{r7}
 847              		.cfi_restore 7
 848              		.cfi_def_cfa_offset 0
 849 0018 7047     		bx	lr
 850              	.L53:
 851 001a 00BF     		.align	2
 852              	.L52:
 853 001c 8A640040 		.word	1073767562
 854              		.cfi_endproc
 855              	.LFE16:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 32


 856              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 857              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 858              		.align	2
 859              		.global	UART_1_WriteTxData
 860              		.thumb
 861              		.thumb_func
 862              		.type	UART_1_WriteTxData, %function
 863              	UART_1_WriteTxData:
 864              	.LFB17:
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 865              		.loc 1 943 0
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 8
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870 0000 80B4     		push	{r7}
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 83B0     		sub	sp, sp, #12
 874              		.cfi_def_cfa_offset 16
 875 0004 00AF     		add	r7, sp, #0
 876              		.cfi_def_cfa_register 7
 877 0006 0346     		mov	r3, r0
 878 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 33


 879              		.loc 1 945 0
 880 000a 064B     		ldr	r3, .L57
 881 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882 000e 002B     		cmp	r3, #0
 883 0010 02D0     		beq	.L56
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 884              		.loc 1 976 0
 885 0012 054A     		ldr	r2, .L57+4
 886 0014 FB79     		ldrb	r3, [r7, #7]
 887 0016 1370     		strb	r3, [r2]
 888              	.L56:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 889              		.loc 1 980 0
 890 0018 00BF     		nop
 891 001a 0C37     		adds	r7, r7, #12
 892              		.cfi_def_cfa_offset 4
 893 001c BD46     		mov	sp, r7
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 001e 80BC     		pop	{r7}
 897              		.cfi_restore 7
 898              		.cfi_def_cfa_offset 0
 899 0020 7047     		bx	lr
 900              	.L58:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 34


 901 0022 00BF     		.align	2
 902              	.L57:
 903 0024 00000000 		.word	UART_1_initVar
 904 0028 4A640040 		.word	1073767498
 905              		.cfi_endproc
 906              	.LFE17:
 907              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 908              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 909              		.align	2
 910              		.global	UART_1_ReadTxStatus
 911              		.thumb
 912              		.thumb_func
 913              		.type	UART_1_ReadTxStatus, %function
 914              	UART_1_ReadTxStatus:
 915              	.LFB18:
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 916              		.loc 1 1004 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 0
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920              		@ link register save eliminated.
 921 0000 80B4     		push	{r7}
 922              		.cfi_def_cfa_offset 4
 923              		.cfi_offset 7, -4
 924 0002 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 926              		.loc 1 1005 0
 927 0004 034B     		ldr	r3, .L61
 928 0006 1B78     		ldrb	r3, [r3]
 929 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_1.c ****     }
 930              		.loc 1 1006 0
 931 000a 1846     		mov	r0, r3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 35


 932 000c BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 000e 80BC     		pop	{r7}
 936              		.cfi_restore 7
 937              		.cfi_def_cfa_offset 0
 938 0010 7047     		bx	lr
 939              	.L62:
 940 0012 00BF     		.align	2
 941              	.L61:
 942 0014 6A640040 		.word	1073767530
 943              		.cfi_endproc
 944              	.LFE18:
 945              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 946              		.section	.text.UART_1_PutChar,"ax",%progbits
 947              		.align	2
 948              		.global	UART_1_PutChar
 949              		.thumb
 950              		.thumb_func
 951              		.type	UART_1_PutChar, %function
 952              	UART_1_PutChar:
 953              	.LFB19:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 36


1042:Generated_Source\PSoC5/UART_1.c ****     {
 954              		.loc 1 1042 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 8
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 959 0000 80B4     		push	{r7}
 960              		.cfi_def_cfa_offset 4
 961              		.cfi_offset 7, -4
 962 0002 83B0     		sub	sp, sp, #12
 963              		.cfi_def_cfa_offset 16
 964 0004 00AF     		add	r7, sp, #0
 965              		.cfi_def_cfa_register 7
 966 0006 0346     		mov	r3, r0
 967 0008 FB71     		strb	r3, [r7, #7]
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 37


1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 968              		.loc 1 1107 0
 969 000a 00BF     		nop
 970              	.L64:
 971              		.loc 1 1107 0 is_stmt 0 discriminator 1
 972 000c 074B     		ldr	r3, .L65
 973 000e 1B78     		ldrb	r3, [r3]
 974 0010 DBB2     		uxtb	r3, r3
 975 0012 03F00403 		and	r3, r3, #4
 976 0016 002B     		cmp	r3, #0
 977 0018 F8D1     		bne	.L64
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 978              		.loc 1 1113 0 is_stmt 1
 979 001a 054A     		ldr	r2, .L65+4
 980 001c FB79     		ldrb	r3, [r7, #7]
 981 001e 1370     		strb	r3, [r2]
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
 982              		.loc 1 1116 0
 983 0020 00BF     		nop
 984 0022 0C37     		adds	r7, r7, #12
 985              		.cfi_def_cfa_offset 4
 986 0024 BD46     		mov	sp, r7
 987              		.cfi_def_cfa_register 13
 988              		@ sp needed
 989 0026 80BC     		pop	{r7}
 990              		.cfi_restore 7
 991              		.cfi_def_cfa_offset 0
 992 0028 7047     		bx	lr
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 38


 993              	.L66:
 994 002a 00BF     		.align	2
 995              	.L65:
 996 002c 6A640040 		.word	1073767530
 997 0030 4A640040 		.word	1073767498
 998              		.cfi_endproc
 999              	.LFE19:
 1000              		.size	UART_1_PutChar, .-UART_1_PutChar
 1001              		.section	.text.UART_1_PutString,"ax",%progbits
 1002              		.align	2
 1003              		.global	UART_1_PutString
 1004              		.thumb
 1005              		.thumb_func
 1006              		.type	UART_1_PutString, %function
 1007              	UART_1_PutString:
 1008              	.LFB20:
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 1009              		.loc 1 1146 0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 16
 1012              		@ frame_needed = 1, uses_anonymous_args = 0
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 84B0     		sub	sp, sp, #16
 1018              		.cfi_def_cfa_offset 24
 1019 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 39


 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 1022              		.loc 1 1147 0
 1023 0008 0023     		movs	r3, #0
 1024 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1025              		.loc 1 1150 0
 1026 000c 0C4B     		ldr	r3, .L72
 1027 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1028 0010 002B     		cmp	r3, #0
 1029 0012 10D0     		beq	.L71
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 1030              		.loc 1 1153 0
 1031 0014 09E0     		b	.L69
 1032              	.L70:
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 1033              		.loc 1 1155 0
 1034 0016 FB89     		ldrh	r3, [r7, #14]
 1035 0018 7A68     		ldr	r2, [r7, #4]
 1036 001a 1344     		add	r3, r3, r2
 1037 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1038 001e 1846     		mov	r0, r3
 1039 0020 FFF7FEFF 		bl	UART_1_PutChar
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 1040              		.loc 1 1156 0
 1041 0024 FB89     		ldrh	r3, [r7, #14]
 1042 0026 0133     		adds	r3, r3, #1
 1043 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1044              	.L69:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 1045              		.loc 1 1153 0
 1046 002a FB89     		ldrh	r3, [r7, #14]
 1047 002c 7A68     		ldr	r2, [r7, #4]
 1048 002e 1344     		add	r3, r3, r2
 1049 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1050 0032 002B     		cmp	r3, #0
 1051 0034 EFD1     		bne	.L70
 1052              	.L71:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
 1053              		.loc 1 1159 0
 1054 0036 00BF     		nop
 1055 0038 1037     		adds	r7, r7, #16
 1056              		.cfi_def_cfa_offset 8
 1057 003a BD46     		mov	sp, r7
 1058              		.cfi_def_cfa_register 13
 1059              		@ sp needed
 1060 003c 80BD     		pop	{r7, pc}
 1061              	.L73:
 1062 003e 00BF     		.align	2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 40


 1063              	.L72:
 1064 0040 00000000 		.word	UART_1_initVar
 1065              		.cfi_endproc
 1066              	.LFE20:
 1067              		.size	UART_1_PutString, .-UART_1_PutString
 1068              		.section	.text.UART_1_PutArray,"ax",%progbits
 1069              		.align	2
 1070              		.global	UART_1_PutArray
 1071              		.thumb
 1072              		.thumb_func
 1073              		.type	UART_1_PutArray, %function
 1074              	UART_1_PutArray:
 1075              	.LFB21:
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 1076              		.loc 1 1193 0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 16
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080 0000 80B5     		push	{r7, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084 0002 84B0     		sub	sp, sp, #16
 1085              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 41


 1086 0004 00AF     		add	r7, sp, #0
 1087              		.cfi_def_cfa_register 7
 1088 0006 7860     		str	r0, [r7, #4]
 1089 0008 0B46     		mov	r3, r1
 1090 000a FB70     		strb	r3, [r7, #3]
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
 1091              		.loc 1 1194 0
 1092 000c 0023     		movs	r3, #0
 1093 000e FB73     		strb	r3, [r7, #15]
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1094              		.loc 1 1197 0
 1095 0010 0B4B     		ldr	r3, .L79
 1096 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1097 0014 002B     		cmp	r3, #0
 1098 0016 0ED0     		beq	.L78
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 1099              		.loc 1 1199 0
 1100 0018 09E0     		b	.L76
 1101              	.L77:
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 1102              		.loc 1 1201 0
 1103 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1104 001c 7A68     		ldr	r2, [r7, #4]
 1105 001e 1344     		add	r3, r3, r2
 1106 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1107 0022 1846     		mov	r0, r3
 1108 0024 FFF7FEFF 		bl	UART_1_PutChar
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 1109              		.loc 1 1202 0
 1110 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1111 002a 0133     		adds	r3, r3, #1
 1112 002c FB73     		strb	r3, [r7, #15]
 1113              	.L76:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 1114              		.loc 1 1199 0
 1115 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1116 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1117 0032 9A42     		cmp	r2, r3
 1118 0034 F1D3     		bcc	.L77
 1119              	.L78:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
 1120              		.loc 1 1205 0
 1121 0036 00BF     		nop
 1122 0038 1037     		adds	r7, r7, #16
 1123              		.cfi_def_cfa_offset 8
 1124 003a BD46     		mov	sp, r7
 1125              		.cfi_def_cfa_register 13
 1126              		@ sp needed
 1127 003c 80BD     		pop	{r7, pc}
 1128              	.L80:
 1129 003e 00BF     		.align	2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 42


 1130              	.L79:
 1131 0040 00000000 		.word	UART_1_initVar
 1132              		.cfi_endproc
 1133              	.LFE21:
 1134              		.size	UART_1_PutArray, .-UART_1_PutArray
 1135              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 1136              		.align	2
 1137              		.global	UART_1_PutCRLF
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	UART_1_PutCRLF, %function
 1141              	UART_1_PutCRLF:
 1142              	.LFB22:
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 1143              		.loc 1 1231 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 8
 1146              		@ frame_needed = 1, uses_anonymous_args = 0
 1147 0000 80B5     		push	{r7, lr}
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 7, -8
 1150              		.cfi_offset 14, -4
 1151 0002 82B0     		sub	sp, sp, #8
 1152              		.cfi_def_cfa_offset 16
 1153 0004 00AF     		add	r7, sp, #0
 1154              		.cfi_def_cfa_register 7
 1155 0006 0346     		mov	r3, r0
 1156 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1157              		.loc 1 1233 0
 1158 000a 094B     		ldr	r3, .L84
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 43


 1159 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1160 000e 002B     		cmp	r3, #0
 1161 0010 09D0     		beq	.L83
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 1162              		.loc 1 1235 0
 1163 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1164 0014 1846     		mov	r0, r3
 1165 0016 FFF7FEFF 		bl	UART_1_PutChar
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 1166              		.loc 1 1236 0
 1167 001a 0D20     		movs	r0, #13
 1168 001c FFF7FEFF 		bl	UART_1_PutChar
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 1169              		.loc 1 1237 0
 1170 0020 0A20     		movs	r0, #10
 1171 0022 FFF7FEFF 		bl	UART_1_PutChar
 1172              	.L83:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
 1173              		.loc 1 1239 0
 1174 0026 00BF     		nop
 1175 0028 0837     		adds	r7, r7, #8
 1176              		.cfi_def_cfa_offset 8
 1177 002a BD46     		mov	sp, r7
 1178              		.cfi_def_cfa_register 13
 1179              		@ sp needed
 1180 002c 80BD     		pop	{r7, pc}
 1181              	.L85:
 1182 002e 00BF     		.align	2
 1183              	.L84:
 1184 0030 00000000 		.word	UART_1_initVar
 1185              		.cfi_endproc
 1186              	.LFE22:
 1187              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 1188              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 1189              		.align	2
 1190              		.global	UART_1_GetTxBufferSize
 1191              		.thumb
 1192              		.thumb_func
 1193              		.type	UART_1_GetTxBufferSize, %function
 1194              	UART_1_GetTxBufferSize:
 1195              	.LFB23:
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 44


1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 1196              		.loc 1 1275 0
 1197              		.cfi_startproc
 1198              		@ args = 0, pretend = 0, frame = 8
 1199              		@ frame_needed = 1, uses_anonymous_args = 0
 1200              		@ link register save eliminated.
 1201 0000 80B4     		push	{r7}
 1202              		.cfi_def_cfa_offset 4
 1203              		.cfi_offset 7, -4
 1204 0002 83B0     		sub	sp, sp, #12
 1205              		.cfi_def_cfa_offset 16
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 45


1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 1208              		.loc 1 1301 0
 1209 0006 0D4B     		ldr	r3, .L91
 1210 0008 1B78     		ldrb	r3, [r3]
 1211 000a FB71     		strb	r3, [r7, #7]
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 1212              		.loc 1 1304 0
 1213 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 000e 03F00403 		and	r3, r3, #4
 1215 0012 002B     		cmp	r3, #0
 1216 0014 02D0     		beq	.L87
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
 1217              		.loc 1 1306 0
 1218 0016 0423     		movs	r3, #4
 1219 0018 FB71     		strb	r3, [r7, #7]
 1220 001a 09E0     		b	.L88
 1221              	.L87:
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 1222              		.loc 1 1308 0
 1223 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1224 001e 03F00203 		and	r3, r3, #2
 1225 0022 002B     		cmp	r3, #0
 1226 0024 02D0     		beq	.L89
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 1227              		.loc 1 1310 0
 1228 0026 0023     		movs	r3, #0
 1229 0028 FB71     		strb	r3, [r7, #7]
 1230 002a 01E0     		b	.L88
 1231              	.L89:
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
 1232              		.loc 1 1315 0
 1233 002c 0123     		movs	r3, #1
 1234 002e FB71     		strb	r3, [r7, #7]
 1235              	.L88:
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
 1236              		.loc 1 1320 0
 1237 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:Generated_Source\PSoC5/UART_1.c ****     }
 1238              		.loc 1 1321 0
 1239 0032 1846     		mov	r0, r3
 1240 0034 0C37     		adds	r7, r7, #12
 1241              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 46


 1242 0036 BD46     		mov	sp, r7
 1243              		.cfi_def_cfa_register 13
 1244              		@ sp needed
 1245 0038 80BC     		pop	{r7}
 1246              		.cfi_restore 7
 1247              		.cfi_def_cfa_offset 0
 1248 003a 7047     		bx	lr
 1249              	.L92:
 1250              		.align	2
 1251              	.L91:
 1252 003c 6A640040 		.word	1073767530
 1253              		.cfi_endproc
 1254              	.LFE23:
 1255              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 1256              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 1257              		.align	2
 1258              		.global	UART_1_ClearTxBuffer
 1259              		.thumb
 1260              		.thumb_func
 1261              		.type	UART_1_ClearTxBuffer, %function
 1262              	UART_1_ClearTxBuffer:
 1263              	.LFB24:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 1264              		.loc 1 1355 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 47


 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 8
 1267              		@ frame_needed = 1, uses_anonymous_args = 0
 1268 0000 80B5     		push	{r7, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 82B0     		sub	sp, sp, #8
 1273              		.cfi_def_cfa_offset 16
 1274 0004 00AF     		add	r7, sp, #0
 1275              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 1276              		.loc 1 1358 0
 1277 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1278 000a 0346     		mov	r3, r0
 1279 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 1280              		.loc 1 1360 0
 1281 000e 0C4A     		ldr	r2, .L94
 1282 0010 0B4B     		ldr	r3, .L94
 1283 0012 1B78     		ldrb	r3, [r3]
 1284 0014 DBB2     		uxtb	r3, r3
 1285 0016 43F00103 		orr	r3, r3, #1
 1286 001a DBB2     		uxtb	r3, r3
 1287 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 1288              		.loc 1 1361 0
 1289 001e 084A     		ldr	r2, .L94
 1290 0020 074B     		ldr	r3, .L94
 1291 0022 1B78     		ldrb	r3, [r3]
 1292 0024 DBB2     		uxtb	r3, r3
 1293 0026 23F00103 		bic	r3, r3, #1
 1294 002a DBB2     		uxtb	r3, r3
 1295 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 1296              		.loc 1 1362 0
 1297 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1298 0030 1846     		mov	r0, r3
 1299 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
 1300              		.loc 1 1376 0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 48


 1301 0036 00BF     		nop
 1302 0038 0837     		adds	r7, r7, #8
 1303              		.cfi_def_cfa_offset 8
 1304 003a BD46     		mov	sp, r7
 1305              		.cfi_def_cfa_register 13
 1306              		@ sp needed
 1307 003c 80BD     		pop	{r7, pc}
 1308              	.L95:
 1309 003e 00BF     		.align	2
 1310              	.L94:
 1311 0040 9A640040 		.word	1073767578
 1312              		.cfi_endproc
 1313              	.LFE24:
 1314              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1315              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1316              		.align	2
 1317              		.global	UART_1_SendBreak
 1318              		.thumb
 1319              		.thumb_func
 1320              		.type	UART_1_SendBreak, %function
 1321              	UART_1_SendBreak:
 1322              	.LFB25:
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 49


1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 1323              		.loc 1 1441 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 16
 1326              		@ frame_needed = 1, uses_anonymous_args = 0
 1327              		@ link register save eliminated.
 1328 0000 80B4     		push	{r7}
 1329              		.cfi_def_cfa_offset 4
 1330              		.cfi_offset 7, -4
 1331 0002 85B0     		sub	sp, sp, #20
 1332              		.cfi_def_cfa_offset 24
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
 1335 0006 0346     		mov	r3, r0
 1336 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1337              		.loc 1 1444 0
 1338 000a 1F4B     		ldr	r3, .L105
 1339 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 000e 002B     		cmp	r3, #0
 1341 0010 35D0     		beq	.L104
 1342              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 50


1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1343              		.loc 1 1490 0
 1344 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1345 0014 002B     		cmp	r3, #0
 1346 0016 02D0     		beq	.L98
 1347              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1348 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1349 001a 032B     		cmp	r3, #3
 1350 001c 12D1     		bne	.L99
 1351              	.L98:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 51


1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 1352              		.loc 1 1501 0 is_stmt 1
 1353 001e 1B4B     		ldr	r3, .L105+4
 1354 0020 1B78     		ldrb	r3, [r3]
 1355 0022 DAB2     		uxtb	r2, r3
 1356 0024 1A4B     		ldr	r3, .L105+8
 1357 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1358              		.loc 1 1502 0
 1359 0028 184B     		ldr	r3, .L105+4
 1360 002a 6F22     		movs	r2, #111
 1361 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1362              		.loc 1 1509 0
 1363 002e 194B     		ldr	r3, .L105+12
 1364 0030 0022     		movs	r2, #0
 1365 0032 1A70     		strb	r2, [r3]
 1366              	.L100:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1367              		.loc 1 1513 0 discriminator 1
 1368 0034 184B     		ldr	r3, .L105+16
 1369 0036 1B78     		ldrb	r3, [r3]
 1370 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1371              		.loc 1 1515 0 discriminator 1
 1372 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1373 003c 03F00203 		and	r3, r3, #2
 1374 0040 002B     		cmp	r3, #0
 1375 0042 F7D1     		bne	.L100
 1376              	.L99:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1377              		.loc 1 1518 0
 1378 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1379 0046 012B     		cmp	r3, #1
 1380 0048 02D0     		beq	.L101
 1381              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1382 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1383 004c 032B     		cmp	r3, #3
 1384 004e 09D1     		bne	.L102
 1385              	.L101:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 52


1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1386              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1387 0050 114B     		ldr	r3, .L105+16
 1388 0052 1B78     		ldrb	r3, [r3]
 1389 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1390              		.loc 1 1525 0 discriminator 1
 1391 0056 FB7B     		ldrb	r3, [r7, #15]
 1392 0058 DB43     		mvns	r3, r3
 1393 005a DBB2     		uxtb	r3, r3
 1394 005c 03F00103 		and	r3, r3, #1
 1395 0060 002B     		cmp	r3, #0
 1396 0062 F5D1     		bne	.L101
 1397              	.L102:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1398              		.loc 1 1528 0
 1399 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1400 0066 012B     		cmp	r3, #1
 1401 0068 05D0     		beq	.L103
 1402              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1403 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1404 006c 022B     		cmp	r3, #2
 1405 006e 02D0     		beq	.L103
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1406              		.loc 1 1529 0 is_stmt 1
 1407 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1408 0072 032B     		cmp	r3, #3
 1409 0074 03D1     		bne	.L104
 1410              	.L103:
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1411              		.loc 1 1534 0
 1412 0076 054B     		ldr	r3, .L105+4
 1413 0078 054A     		ldr	r2, .L105+8
 1414 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1415 007c 1A70     		strb	r2, [r3]
 1416              	.L104:
 1417              	.LBE2:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 53


1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
 1418              		.loc 1 1547 0
 1419 007e 00BF     		nop
 1420 0080 1437     		adds	r7, r7, #20
 1421              		.cfi_def_cfa_offset 4
 1422 0082 BD46     		mov	sp, r7
 1423              		.cfi_def_cfa_register 13
 1424              		@ sp needed
 1425 0084 80BC     		pop	{r7}
 1426              		.cfi_restore 7
 1427              		.cfi_def_cfa_offset 0
 1428 0086 7047     		bx	lr
 1429              	.L106:
 1430              		.align	2
 1431              	.L105:
 1432 0088 00000000 		.word	UART_1_initVar
 1433 008c 3B640040 		.word	1073767483
 1434 0090 01000000 		.word	txPeriod.5111
 1435 0094 4A640040 		.word	1073767498
 1436 0098 6A640040 		.word	1073767530
 1437              		.cfi_endproc
 1438              	.LFE25:
 1439              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1440              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1441              		.align	2
 1442              		.global	UART_1_SetTxAddressMode
 1443              		.thumb
 1444              		.thumb_func
 1445              		.type	UART_1_SetTxAddressMode, %function
 1446              	UART_1_SetTxAddressMode:
 1447              	.LFB26:
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 54


1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 1448              		.loc 1 1573 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 8
 1451              		@ frame_needed = 1, uses_anonymous_args = 0
 1452              		@ link register save eliminated.
 1453 0000 80B4     		push	{r7}
 1454              		.cfi_def_cfa_offset 4
 1455              		.cfi_offset 7, -4
 1456 0002 83B0     		sub	sp, sp, #12
 1457              		.cfi_def_cfa_offset 16
 1458 0004 00AF     		add	r7, sp, #0
 1459              		.cfi_def_cfa_register 7
 1460 0006 0346     		mov	r3, r0
 1461 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_1.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_1.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_1.c ****         {
1577:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_1.c ****         }
1582:Generated_Source\PSoC5/UART_1.c ****         else
1583:Generated_Source\PSoC5/UART_1.c ****         {
1584:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_1.c ****         }
1589:Generated_Source\PSoC5/UART_1.c ****     }
 1462              		.loc 1 1589 0
 1463 000a 00BF     		nop
 1464 000c 0C37     		adds	r7, r7, #12
 1465              		.cfi_def_cfa_offset 4
 1466 000e BD46     		mov	sp, r7
 1467              		.cfi_def_cfa_register 13
 1468              		@ sp needed
 1469 0010 80BC     		pop	{r7}
 1470              		.cfi_restore 7
 1471              		.cfi_def_cfa_offset 0
 1472 0012 7047     		bx	lr
 1473              		.cfi_endproc
 1474              	.LFE26:
 1475              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1476              		.bss
 1477              	txPeriod.5111:
 1478 0001 00       		.space	1
 1479              		.text
 1480              	.Letext0:
 1481              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1482              		.section	.debug_info,"",%progbits
 1483              	.Ldebug_info0:
 1484 0000 06050000 		.4byte	0x506
 1485 0004 0400     		.2byte	0x4
 1486 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 55


 1487 000a 04       		.byte	0x4
 1488 000b 01       		.uleb128 0x1
 1489 000c 6E000000 		.4byte	.LASF61
 1490 0010 0C       		.byte	0xc
 1491 0011 00000000 		.4byte	.LASF62
 1492 0015 C2030000 		.4byte	.LASF63
 1493 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1494 001d 00000000 		.4byte	0
 1495 0021 00000000 		.4byte	.Ldebug_line0
 1496 0025 02       		.uleb128 0x2
 1497 0026 01       		.byte	0x1
 1498 0027 06       		.byte	0x6
 1499 0028 4A010000 		.4byte	.LASF0
 1500 002c 02       		.uleb128 0x2
 1501 002d 01       		.byte	0x1
 1502 002e 08       		.byte	0x8
 1503 002f 4C030000 		.4byte	.LASF1
 1504 0033 02       		.uleb128 0x2
 1505 0034 02       		.byte	0x2
 1506 0035 05       		.byte	0x5
 1507 0036 5A030000 		.4byte	.LASF2
 1508 003a 02       		.uleb128 0x2
 1509 003b 02       		.byte	0x2
 1510 003c 07       		.byte	0x7
 1511 003d FF010000 		.4byte	.LASF3
 1512 0041 02       		.uleb128 0x2
 1513 0042 04       		.byte	0x4
 1514 0043 05       		.byte	0x5
 1515 0044 6E010000 		.4byte	.LASF4
 1516 0048 02       		.uleb128 0x2
 1517 0049 04       		.byte	0x4
 1518 004a 07       		.byte	0x7
 1519 004b E8010000 		.4byte	.LASF5
 1520 004f 02       		.uleb128 0x2
 1521 0050 08       		.byte	0x8
 1522 0051 05       		.byte	0x5
 1523 0052 3C010000 		.4byte	.LASF6
 1524 0056 02       		.uleb128 0x2
 1525 0057 08       		.byte	0x8
 1526 0058 07       		.byte	0x7
 1527 0059 0E010000 		.4byte	.LASF7
 1528 005d 03       		.uleb128 0x3
 1529 005e 04       		.byte	0x4
 1530 005f 05       		.byte	0x5
 1531 0060 696E7400 		.ascii	"int\000"
 1532 0064 02       		.uleb128 0x2
 1533 0065 04       		.byte	0x4
 1534 0066 07       		.byte	0x7
 1535 0067 C7010000 		.4byte	.LASF8
 1536 006b 04       		.uleb128 0x4
 1537 006c 84010000 		.4byte	.LASF9
 1538 0070 02       		.byte	0x2
 1539 0071 9201     		.2byte	0x192
 1540 0073 2C000000 		.4byte	0x2c
 1541 0077 04       		.uleb128 0x4
 1542 0078 20000000 		.4byte	.LASF10
 1543 007c 02       		.byte	0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 56


 1544 007d 9301     		.2byte	0x193
 1545 007f 3A000000 		.4byte	0x3a
 1546 0083 02       		.uleb128 0x2
 1547 0084 04       		.byte	0x4
 1548 0085 04       		.byte	0x4
 1549 0086 03030000 		.4byte	.LASF11
 1550 008a 02       		.uleb128 0x2
 1551 008b 08       		.byte	0x8
 1552 008c 04       		.byte	0x4
 1553 008d 8A010000 		.4byte	.LASF12
 1554 0091 04       		.uleb128 0x4
 1555 0092 BC030000 		.4byte	.LASF13
 1556 0096 02       		.byte	0x2
 1557 0097 A301     		.2byte	0x1a3
 1558 0099 9D000000 		.4byte	0x9d
 1559 009d 02       		.uleb128 0x2
 1560 009e 01       		.byte	0x1
 1561 009f 08       		.byte	0x8
 1562 00a0 B7030000 		.4byte	.LASF14
 1563 00a4 04       		.uleb128 0x4
 1564 00a5 47030000 		.4byte	.LASF15
 1565 00a9 02       		.byte	0x2
 1566 00aa 3C02     		.2byte	0x23c
 1567 00ac B0000000 		.4byte	0xb0
 1568 00b0 05       		.uleb128 0x5
 1569 00b1 6B000000 		.4byte	0x6b
 1570 00b5 02       		.uleb128 0x2
 1571 00b6 08       		.byte	0x8
 1572 00b7 04       		.byte	0x4
 1573 00b8 CC020000 		.4byte	.LASF16
 1574 00bc 02       		.uleb128 0x2
 1575 00bd 04       		.byte	0x4
 1576 00be 07       		.byte	0x7
 1577 00bf 99020000 		.4byte	.LASF17
 1578 00c3 06       		.uleb128 0x6
 1579 00c4 77010000 		.4byte	.LASF18
 1580 00c8 01       		.byte	0x1
 1581 00c9 4C       		.byte	0x4c
 1582 00ca 00000000 		.4byte	.LFB0
 1583 00ce 24000000 		.4byte	.LFE0-.LFB0
 1584 00d2 01       		.uleb128 0x1
 1585 00d3 9C       		.byte	0x9c
 1586 00d4 07       		.uleb128 0x7
 1587 00d5 1D040000 		.4byte	.LASF19
 1588 00d9 01       		.byte	0x1
 1589 00da 6A       		.byte	0x6a
 1590 00db 00000000 		.4byte	.LFB1
 1591 00df 40000000 		.4byte	.LFE1-.LFB1
 1592 00e3 01       		.uleb128 0x1
 1593 00e4 9C       		.byte	0x9c
 1594 00e5 08       		.uleb128 0x8
 1595 00e6 12020000 		.4byte	.LASF20
 1596 00ea 01       		.byte	0x1
 1597 00eb B7       		.byte	0xb7
 1598 00ec 00000000 		.4byte	.LFB2
 1599 00f0 60000000 		.4byte	.LFE2-.LFB2
 1600 00f4 01       		.uleb128 0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 57


 1601 00f5 9C       		.byte	0x9c
 1602 00f6 09010000 		.4byte	0x109
 1603 00fa 09       		.uleb128 0x9
 1604 00fb 29040000 		.4byte	.LASF22
 1605 00ff 01       		.byte	0x1
 1606 0100 B9       		.byte	0xb9
 1607 0101 6B000000 		.4byte	0x6b
 1608 0105 02       		.uleb128 0x2
 1609 0106 91       		.byte	0x91
 1610 0107 77       		.sleb128 -9
 1611 0108 00       		.byte	0
 1612 0109 08       		.uleb128 0x8
 1613 010a 63020000 		.4byte	.LASF21
 1614 010e 01       		.byte	0x1
 1615 010f F0       		.byte	0xf0
 1616 0110 00000000 		.4byte	.LFB3
 1617 0114 60000000 		.4byte	.LFE3-.LFB3
 1618 0118 01       		.uleb128 0x1
 1619 0119 9C       		.byte	0x9c
 1620 011a 2D010000 		.4byte	0x12d
 1621 011e 09       		.uleb128 0x9
 1622 011f 29040000 		.4byte	.LASF22
 1623 0123 01       		.byte	0x1
 1624 0124 F2       		.byte	0xf2
 1625 0125 6B000000 		.4byte	0x6b
 1626 0129 02       		.uleb128 0x2
 1627 012a 91       		.byte	0x91
 1628 012b 77       		.sleb128 -9
 1629 012c 00       		.byte	0
 1630 012d 0A       		.uleb128 0xa
 1631 012e 48020000 		.4byte	.LASF33
 1632 0132 01       		.byte	0x1
 1633 0133 2701     		.2byte	0x127
 1634 0135 6B000000 		.4byte	0x6b
 1635 0139 00000000 		.4byte	.LFB4
 1636 013d 0E000000 		.4byte	.LFE4-.LFB4
 1637 0141 01       		.uleb128 0x1
 1638 0142 9C       		.byte	0x9c
 1639 0143 0B       		.uleb128 0xb
 1640 0144 64030000 		.4byte	.LASF23
 1641 0148 01       		.byte	0x1
 1642 0149 3F01     		.2byte	0x13f
 1643 014b 00000000 		.4byte	.LFB5
 1644 014f 14000000 		.4byte	.LFE5-.LFB5
 1645 0153 01       		.uleb128 0x1
 1646 0154 9C       		.byte	0x9c
 1647 0155 69010000 		.4byte	0x169
 1648 0159 0C       		.uleb128 0xc
 1649 015a 9D010000 		.4byte	.LASF25
 1650 015e 01       		.byte	0x1
 1651 015f 3F01     		.2byte	0x13f
 1652 0161 6B000000 		.4byte	0x6b
 1653 0165 02       		.uleb128 0x2
 1654 0166 91       		.byte	0x91
 1655 0167 77       		.sleb128 -9
 1656 0168 00       		.byte	0
 1657 0169 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 58


 1658 016a A5010000 		.4byte	.LASF24
 1659 016e 01       		.byte	0x1
 1660 016f 6701     		.2byte	0x167
 1661 0171 00000000 		.4byte	.LFB6
 1662 0175 20000000 		.4byte	.LFE6-.LFB6
 1663 0179 01       		.uleb128 0x1
 1664 017a 9C       		.byte	0x9c
 1665 017b 8F010000 		.4byte	0x18f
 1666 017f 0C       		.uleb128 0xc
 1667 0180 41020000 		.4byte	.LASF26
 1668 0184 01       		.byte	0x1
 1669 0185 6701     		.2byte	0x167
 1670 0187 6B000000 		.4byte	0x6b
 1671 018b 02       		.uleb128 0x2
 1672 018c 91       		.byte	0x91
 1673 018d 77       		.sleb128 -9
 1674 018e 00       		.byte	0
 1675 018f 0D       		.uleb128 0xd
 1676 0190 FC000000 		.4byte	.LASF28
 1677 0194 01       		.byte	0x1
 1678 0195 8801     		.2byte	0x188
 1679 0197 6B000000 		.4byte	0x6b
 1680 019b 00000000 		.4byte	.LFB7
 1681 019f 1C000000 		.4byte	.LFE7-.LFB7
 1682 01a3 01       		.uleb128 0x1
 1683 01a4 9C       		.byte	0x9c
 1684 01a5 B9010000 		.4byte	0x1b9
 1685 01a9 0E       		.uleb128 0xe
 1686 01aa B0030000 		.4byte	.LASF27
 1687 01ae 01       		.byte	0x1
 1688 01af 8A01     		.2byte	0x18a
 1689 01b1 6B000000 		.4byte	0x6b
 1690 01b5 02       		.uleb128 0x2
 1691 01b6 91       		.byte	0x91
 1692 01b7 77       		.sleb128 -9
 1693 01b8 00       		.byte	0
 1694 01b9 0D       		.uleb128 0xd
 1695 01ba 41040000 		.4byte	.LASF29
 1696 01be 01       		.byte	0x1
 1697 01bf E501     		.2byte	0x1e5
 1698 01c1 6B000000 		.4byte	0x6b
 1699 01c5 00000000 		.4byte	.LFB8
 1700 01c9 24000000 		.4byte	.LFE8-.LFB8
 1701 01cd 01       		.uleb128 0x1
 1702 01ce 9C       		.byte	0x9c
 1703 01cf E3010000 		.4byte	0x1e3
 1704 01d3 0E       		.uleb128 0xe
 1705 01d4 3A040000 		.4byte	.LASF30
 1706 01d8 01       		.byte	0x1
 1707 01d9 E701     		.2byte	0x1e7
 1708 01db 6B000000 		.4byte	0x6b
 1709 01df 02       		.uleb128 0x2
 1710 01e0 91       		.byte	0x91
 1711 01e1 77       		.sleb128 -9
 1712 01e2 00       		.byte	0
 1713 01e3 0D       		.uleb128 0xd
 1714 01e4 55040000 		.4byte	.LASF31
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 59


 1715 01e8 01       		.byte	0x1
 1716 01e9 1402     		.2byte	0x214
 1717 01eb 6B000000 		.4byte	0x6b
 1718 01ef 00000000 		.4byte	.LFB9
 1719 01f3 44000000 		.4byte	.LFE9-.LFB9
 1720 01f7 01       		.uleb128 0x1
 1721 01f8 9C       		.byte	0x9c
 1722 01f9 1C020000 		.4byte	0x21c
 1723 01fd 0E       		.uleb128 0xe
 1724 01fe B0030000 		.4byte	.LASF27
 1725 0202 01       		.byte	0x1
 1726 0203 1602     		.2byte	0x216
 1727 0205 6B000000 		.4byte	0x6b
 1728 0209 02       		.uleb128 0x2
 1729 020a 91       		.byte	0x91
 1730 020b 77       		.sleb128 -9
 1731 020c 0E       		.uleb128 0xe
 1732 020d E0020000 		.4byte	.LASF32
 1733 0211 01       		.byte	0x1
 1734 0212 1702     		.2byte	0x217
 1735 0214 6B000000 		.4byte	0x6b
 1736 0218 02       		.uleb128 0x2
 1737 0219 91       		.byte	0x91
 1738 021a 76       		.sleb128 -10
 1739 021b 00       		.byte	0
 1740 021c 0F       		.uleb128 0xf
 1741 021d 6F020000 		.4byte	.LASF34
 1742 0221 01       		.byte	0x1
 1743 0222 7A02     		.2byte	0x27a
 1744 0224 77000000 		.4byte	0x77
 1745 0228 00000000 		.4byte	.LFB10
 1746 022c 20000000 		.4byte	.LFE10-.LFB10
 1747 0230 01       		.uleb128 0x1
 1748 0231 9C       		.byte	0x9c
 1749 0232 0D       		.uleb128 0xd
 1750 0233 99030000 		.4byte	.LASF35
 1751 0237 01       		.byte	0x1
 1752 0238 AB02     		.2byte	0x2ab
 1753 023a 6B000000 		.4byte	0x6b
 1754 023e 00000000 		.4byte	.LFB11
 1755 0242 2C000000 		.4byte	.LFE11-.LFB11
 1756 0246 01       		.uleb128 0x1
 1757 0247 9C       		.byte	0x9c
 1758 0248 5C020000 		.4byte	0x25c
 1759 024c 0E       		.uleb128 0xe
 1760 024d FA010000 		.4byte	.LASF36
 1761 0251 01       		.byte	0x1
 1762 0252 AE02     		.2byte	0x2ae
 1763 0254 6B000000 		.4byte	0x6b
 1764 0258 02       		.uleb128 0x2
 1765 0259 91       		.byte	0x91
 1766 025a 77       		.sleb128 -9
 1767 025b 00       		.byte	0
 1768 025c 10       		.uleb128 0x10
 1769 025d 1A030000 		.4byte	.LASF37
 1770 0261 01       		.byte	0x1
 1771 0262 F502     		.2byte	0x2f5
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 60


 1772 0264 00000000 		.4byte	.LFB12
 1773 0268 44000000 		.4byte	.LFE12-.LFB12
 1774 026c 01       		.uleb128 0x1
 1775 026d 9C       		.byte	0x9c
 1776 026e 82020000 		.4byte	0x282
 1777 0272 0E       		.uleb128 0xe
 1778 0273 29040000 		.4byte	.LASF22
 1779 0277 01       		.byte	0x1
 1780 0278 F702     		.2byte	0x2f7
 1781 027a 6B000000 		.4byte	0x6b
 1782 027e 02       		.uleb128 0x2
 1783 027f 91       		.byte	0x91
 1784 0280 77       		.sleb128 -9
 1785 0281 00       		.byte	0
 1786 0282 0B       		.uleb128 0xb
 1787 0283 2F030000 		.4byte	.LASF38
 1788 0287 01       		.byte	0x1
 1789 0288 2D03     		.2byte	0x32d
 1790 028a 00000000 		.4byte	.LFB13
 1791 028e 14000000 		.4byte	.LFE13-.LFB13
 1792 0292 01       		.uleb128 0x1
 1793 0293 9C       		.byte	0x9c
 1794 0294 A8020000 		.4byte	0x2a8
 1795 0298 0C       		.uleb128 0xc
 1796 0299 91010000 		.4byte	.LASF39
 1797 029d 01       		.byte	0x1
 1798 029e 2D03     		.2byte	0x32d
 1799 02a0 6B000000 		.4byte	0x6b
 1800 02a4 02       		.uleb128 0x2
 1801 02a5 91       		.byte	0x91
 1802 02a6 77       		.sleb128 -9
 1803 02a7 00       		.byte	0
 1804 02a8 0B       		.uleb128 0xb
 1805 02a9 A2020000 		.4byte	.LASF40
 1806 02ad 01       		.byte	0x1
 1807 02ae 5903     		.2byte	0x359
 1808 02b0 00000000 		.4byte	.LFB14
 1809 02b4 20000000 		.4byte	.LFE14-.LFB14
 1810 02b8 01       		.uleb128 0x1
 1811 02b9 9C       		.byte	0x9c
 1812 02ba CE020000 		.4byte	0x2ce
 1813 02be 0C       		.uleb128 0xc
 1814 02bf D8020000 		.4byte	.LASF41
 1815 02c3 01       		.byte	0x1
 1816 02c4 5903     		.2byte	0x359
 1817 02c6 6B000000 		.4byte	0x6b
 1818 02ca 02       		.uleb128 0x2
 1819 02cb 91       		.byte	0x91
 1820 02cc 77       		.sleb128 -9
 1821 02cd 00       		.byte	0
 1822 02ce 0B       		.uleb128 0xb
 1823 02cf B7020000 		.4byte	.LASF42
 1824 02d3 01       		.byte	0x1
 1825 02d4 6D03     		.2byte	0x36d
 1826 02d6 00000000 		.4byte	.LFB15
 1827 02da 20000000 		.4byte	.LFE15-.LFB15
 1828 02de 01       		.uleb128 0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 61


 1829 02df 9C       		.byte	0x9c
 1830 02e0 F4020000 		.4byte	0x2f4
 1831 02e4 0C       		.uleb128 0xc
 1832 02e5 D8020000 		.4byte	.LASF41
 1833 02e9 01       		.byte	0x1
 1834 02ea 6D03     		.2byte	0x36d
 1835 02ec 6B000000 		.4byte	0x6b
 1836 02f0 02       		.uleb128 0x2
 1837 02f1 91       		.byte	0x91
 1838 02f2 77       		.sleb128 -9
 1839 02f3 00       		.byte	0
 1840 02f4 0B       		.uleb128 0xb
 1841 02f5 E9020000 		.4byte	.LASF43
 1842 02f9 01       		.byte	0x1
 1843 02fa 8C03     		.2byte	0x38c
 1844 02fc 00000000 		.4byte	.LFB16
 1845 0300 20000000 		.4byte	.LFE16-.LFB16
 1846 0304 01       		.uleb128 0x1
 1847 0305 9C       		.byte	0x9c
 1848 0306 1A030000 		.4byte	0x31a
 1849 030a 0C       		.uleb128 0xc
 1850 030b 41020000 		.4byte	.LASF26
 1851 030f 01       		.byte	0x1
 1852 0310 8C03     		.2byte	0x38c
 1853 0312 6B000000 		.4byte	0x6b
 1854 0316 02       		.uleb128 0x2
 1855 0317 91       		.byte	0x91
 1856 0318 77       		.sleb128 -9
 1857 0319 00       		.byte	0
 1858 031a 0B       		.uleb128 0xb
 1859 031b 7E020000 		.4byte	.LASF44
 1860 031f 01       		.byte	0x1
 1861 0320 AE03     		.2byte	0x3ae
 1862 0322 00000000 		.4byte	.LFB17
 1863 0326 2C000000 		.4byte	.LFE17-.LFB17
 1864 032a 01       		.uleb128 0x1
 1865 032b 9C       		.byte	0x9c
 1866 032c 40030000 		.4byte	0x340
 1867 0330 0C       		.uleb128 0xc
 1868 0331 3C000000 		.4byte	.LASF45
 1869 0335 01       		.byte	0x1
 1870 0336 AE03     		.2byte	0x3ae
 1871 0338 6B000000 		.4byte	0x6b
 1872 033c 02       		.uleb128 0x2
 1873 033d 91       		.byte	0x91
 1874 033e 77       		.sleb128 -9
 1875 033f 00       		.byte	0
 1876 0340 0A       		.uleb128 0xa
 1877 0341 D4010000 		.4byte	.LASF46
 1878 0345 01       		.byte	0x1
 1879 0346 EB03     		.2byte	0x3eb
 1880 0348 6B000000 		.4byte	0x6b
 1881 034c 00000000 		.4byte	.LFB18
 1882 0350 18000000 		.4byte	.LFE18-.LFB18
 1883 0354 01       		.uleb128 0x1
 1884 0355 9C       		.byte	0x9c
 1885 0356 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 62


 1886 0357 47000000 		.4byte	.LASF47
 1887 035b 01       		.byte	0x1
 1888 035c 1104     		.2byte	0x411
 1889 035e 00000000 		.4byte	.LFB19
 1890 0362 34000000 		.4byte	.LFE19-.LFB19
 1891 0366 01       		.uleb128 0x1
 1892 0367 9C       		.byte	0x9c
 1893 0368 7C030000 		.4byte	0x37c
 1894 036c 0C       		.uleb128 0xc
 1895 036d 3C000000 		.4byte	.LASF45
 1896 0371 01       		.byte	0x1
 1897 0372 1104     		.2byte	0x411
 1898 0374 6B000000 		.4byte	0x6b
 1899 0378 02       		.uleb128 0x2
 1900 0379 91       		.byte	0x91
 1901 037a 77       		.sleb128 -9
 1902 037b 00       		.byte	0
 1903 037c 10       		.uleb128 0x10
 1904 037d 09030000 		.4byte	.LASF48
 1905 0381 01       		.byte	0x1
 1906 0382 7904     		.2byte	0x479
 1907 0384 00000000 		.4byte	.LFB20
 1908 0388 44000000 		.4byte	.LFE20-.LFB20
 1909 038c 01       		.uleb128 0x1
 1910 038d 9C       		.byte	0x9c
 1911 038e B1030000 		.4byte	0x3b1
 1912 0392 0C       		.uleb128 0xc
 1913 0393 56000000 		.4byte	.LASF49
 1914 0397 01       		.byte	0x1
 1915 0398 7904     		.2byte	0x479
 1916 039a B1030000 		.4byte	0x3b1
 1917 039e 02       		.uleb128 0x2
 1918 039f 91       		.byte	0x91
 1919 03a0 6C       		.sleb128 -20
 1920 03a1 0E       		.uleb128 0xe
 1921 03a2 20020000 		.4byte	.LASF50
 1922 03a6 01       		.byte	0x1
 1923 03a7 7B04     		.2byte	0x47b
 1924 03a9 77000000 		.4byte	0x77
 1925 03ad 02       		.uleb128 0x2
 1926 03ae 91       		.byte	0x91
 1927 03af 76       		.sleb128 -10
 1928 03b0 00       		.byte	0
 1929 03b1 11       		.uleb128 0x11
 1930 03b2 04       		.byte	0x4
 1931 03b3 B7030000 		.4byte	0x3b7
 1932 03b7 12       		.uleb128 0x12
 1933 03b8 91000000 		.4byte	0x91
 1934 03bc 10       		.uleb128 0x10
 1935 03bd 64040000 		.4byte	.LASF51
 1936 03c1 01       		.byte	0x1
 1937 03c2 A704     		.2byte	0x4a7
 1938 03c4 00000000 		.4byte	.LFB21
 1939 03c8 44000000 		.4byte	.LFE21-.LFB21
 1940 03cc 01       		.uleb128 0x1
 1941 03cd 9C       		.byte	0x9c
 1942 03ce 00040000 		.4byte	0x400
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 63


 1943 03d2 0C       		.uleb128 0xc
 1944 03d3 56000000 		.4byte	.LASF49
 1945 03d7 01       		.byte	0x1
 1946 03d8 A704     		.2byte	0x4a7
 1947 03da 00040000 		.4byte	0x400
 1948 03de 02       		.uleb128 0x2
 1949 03df 91       		.byte	0x91
 1950 03e0 6C       		.sleb128 -20
 1951 03e1 0C       		.uleb128 0xc
 1952 03e2 8F030000 		.4byte	.LASF52
 1953 03e6 01       		.byte	0x1
 1954 03e7 A704     		.2byte	0x4a7
 1955 03e9 6B000000 		.4byte	0x6b
 1956 03ed 02       		.uleb128 0x2
 1957 03ee 91       		.byte	0x91
 1958 03ef 6B       		.sleb128 -21
 1959 03f0 0E       		.uleb128 0xe
 1960 03f1 20020000 		.4byte	.LASF50
 1961 03f5 01       		.byte	0x1
 1962 03f6 AA04     		.2byte	0x4aa
 1963 03f8 6B000000 		.4byte	0x6b
 1964 03fc 02       		.uleb128 0x2
 1965 03fd 91       		.byte	0x91
 1966 03fe 77       		.sleb128 -9
 1967 03ff 00       		.byte	0
 1968 0400 11       		.uleb128 0x11
 1969 0401 04       		.byte	0x4
 1970 0402 06040000 		.4byte	0x406
 1971 0406 12       		.uleb128 0x12
 1972 0407 6B000000 		.4byte	0x6b
 1973 040b 10       		.uleb128 0x10
 1974 040c 5F010000 		.4byte	.LASF53
 1975 0410 01       		.byte	0x1
 1976 0411 CE04     		.2byte	0x4ce
 1977 0413 00000000 		.4byte	.LFB22
 1978 0417 34000000 		.4byte	.LFE22-.LFB22
 1979 041b 01       		.uleb128 0x1
 1980 041c 9C       		.byte	0x9c
 1981 041d 31040000 		.4byte	0x431
 1982 0421 0C       		.uleb128 0xc
 1983 0422 3C000000 		.4byte	.LASF45
 1984 0426 01       		.byte	0x1
 1985 0427 CE04     		.2byte	0x4ce
 1986 0429 6B000000 		.4byte	0x6b
 1987 042d 02       		.uleb128 0x2
 1988 042e 91       		.byte	0x91
 1989 042f 77       		.sleb128 -9
 1990 0430 00       		.byte	0
 1991 0431 0D       		.uleb128 0xd
 1992 0432 25010000 		.4byte	.LASF54
 1993 0436 01       		.byte	0x1
 1994 0437 F904     		.2byte	0x4f9
 1995 0439 6B000000 		.4byte	0x6b
 1996 043d 00000000 		.4byte	.LFB23
 1997 0441 40000000 		.4byte	.LFE23-.LFB23
 1998 0445 01       		.uleb128 0x1
 1999 0446 9C       		.byte	0x9c
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 64


 2000 0447 5B040000 		.4byte	0x45b
 2001 044b 0E       		.uleb128 0xe
 2002 044c FA010000 		.4byte	.LASF36
 2003 0450 01       		.byte	0x1
 2004 0451 FC04     		.2byte	0x4fc
 2005 0453 6B000000 		.4byte	0x6b
 2006 0457 02       		.uleb128 0x2
 2007 0458 91       		.byte	0x91
 2008 0459 77       		.sleb128 -9
 2009 045a 00       		.byte	0
 2010 045b 10       		.uleb128 0x10
 2011 045c 27000000 		.4byte	.LASF55
 2012 0460 01       		.byte	0x1
 2013 0461 4A05     		.2byte	0x54a
 2014 0463 00000000 		.4byte	.LFB24
 2015 0467 44000000 		.4byte	.LFE24-.LFB24
 2016 046b 01       		.uleb128 0x1
 2017 046c 9C       		.byte	0x9c
 2018 046d 81040000 		.4byte	0x481
 2019 0471 0E       		.uleb128 0xe
 2020 0472 29040000 		.4byte	.LASF22
 2021 0476 01       		.byte	0x1
 2022 0477 4C05     		.2byte	0x54c
 2023 0479 6B000000 		.4byte	0x6b
 2024 047d 02       		.uleb128 0x2
 2025 047e 91       		.byte	0x91
 2026 047f 77       		.sleb128 -9
 2027 0480 00       		.byte	0
 2028 0481 0B       		.uleb128 0xb
 2029 0482 5D000000 		.4byte	.LASF56
 2030 0486 01       		.byte	0x1
 2031 0487 A005     		.2byte	0x5a0
 2032 0489 00000000 		.4byte	.LFB25
 2033 048d 9C000000 		.4byte	.LFE25-.LFB25
 2034 0491 01       		.uleb128 0x1
 2035 0492 9C       		.byte	0x9c
 2036 0493 D2040000 		.4byte	0x4d2
 2037 0497 0C       		.uleb128 0xc
 2038 0498 BF010000 		.4byte	.LASF57
 2039 049c 01       		.byte	0x1
 2040 049d A005     		.2byte	0x5a0
 2041 049f 6B000000 		.4byte	0x6b
 2042 04a3 02       		.uleb128 0x2
 2043 04a4 91       		.byte	0x91
 2044 04a5 6F       		.sleb128 -17
 2045 04a6 13       		.uleb128 0x13
 2046 04a7 12000000 		.4byte	.LBB2
 2047 04ab 6C000000 		.4byte	.LBE2-.LBB2
 2048 04af 0E       		.uleb128 0xe
 2049 04b0 91020000 		.4byte	.LASF58
 2050 04b4 01       		.byte	0x1
 2051 04b5 A805     		.2byte	0x5a8
 2052 04b7 6B000000 		.4byte	0x6b
 2053 04bb 02       		.uleb128 0x2
 2054 04bc 91       		.byte	0x91
 2055 04bd 77       		.sleb128 -9
 2056 04be 0E       		.uleb128 0xe
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 65


 2057 04bf 56010000 		.4byte	.LASF59
 2058 04c3 01       		.byte	0x1
 2059 04c4 D005     		.2byte	0x5d0
 2060 04c6 6B000000 		.4byte	0x6b
 2061 04ca 05       		.uleb128 0x5
 2062 04cb 03       		.byte	0x3
 2063 04cc 01000000 		.4byte	txPeriod.5111
 2064 04d0 00       		.byte	0
 2065 04d1 00       		.byte	0
 2066 04d2 0B       		.uleb128 0xb
 2067 04d3 29020000 		.4byte	.LASF60
 2068 04d7 01       		.byte	0x1
 2069 04d8 2406     		.2byte	0x624
 2070 04da 00000000 		.4byte	.LFB26
 2071 04de 14000000 		.4byte	.LFE26-.LFB26
 2072 04e2 01       		.uleb128 0x1
 2073 04e3 9C       		.byte	0x9c
 2074 04e4 F8040000 		.4byte	0x4f8
 2075 04e8 0C       		.uleb128 0xc
 2076 04e9 91010000 		.4byte	.LASF39
 2077 04ed 01       		.byte	0x1
 2078 04ee 2406     		.2byte	0x624
 2079 04f0 6B000000 		.4byte	0x6b
 2080 04f4 02       		.uleb128 0x2
 2081 04f5 91       		.byte	0x91
 2082 04f6 77       		.sleb128 -9
 2083 04f7 00       		.byte	0
 2084 04f8 14       		.uleb128 0x14
 2085 04f9 80030000 		.4byte	.LASF64
 2086 04fd 01       		.byte	0x1
 2087 04fe 1B       		.byte	0x1b
 2088 04ff 6B000000 		.4byte	0x6b
 2089 0503 05       		.uleb128 0x5
 2090 0504 03       		.byte	0x3
 2091 0505 00000000 		.4byte	UART_1_initVar
 2092 0509 00       		.byte	0
 2093              		.section	.debug_abbrev,"",%progbits
 2094              	.Ldebug_abbrev0:
 2095 0000 01       		.uleb128 0x1
 2096 0001 11       		.uleb128 0x11
 2097 0002 01       		.byte	0x1
 2098 0003 25       		.uleb128 0x25
 2099 0004 0E       		.uleb128 0xe
 2100 0005 13       		.uleb128 0x13
 2101 0006 0B       		.uleb128 0xb
 2102 0007 03       		.uleb128 0x3
 2103 0008 0E       		.uleb128 0xe
 2104 0009 1B       		.uleb128 0x1b
 2105 000a 0E       		.uleb128 0xe
 2106 000b 55       		.uleb128 0x55
 2107 000c 17       		.uleb128 0x17
 2108 000d 11       		.uleb128 0x11
 2109 000e 01       		.uleb128 0x1
 2110 000f 10       		.uleb128 0x10
 2111 0010 17       		.uleb128 0x17
 2112 0011 00       		.byte	0
 2113 0012 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 66


 2114 0013 02       		.uleb128 0x2
 2115 0014 24       		.uleb128 0x24
 2116 0015 00       		.byte	0
 2117 0016 0B       		.uleb128 0xb
 2118 0017 0B       		.uleb128 0xb
 2119 0018 3E       		.uleb128 0x3e
 2120 0019 0B       		.uleb128 0xb
 2121 001a 03       		.uleb128 0x3
 2122 001b 0E       		.uleb128 0xe
 2123 001c 00       		.byte	0
 2124 001d 00       		.byte	0
 2125 001e 03       		.uleb128 0x3
 2126 001f 24       		.uleb128 0x24
 2127 0020 00       		.byte	0
 2128 0021 0B       		.uleb128 0xb
 2129 0022 0B       		.uleb128 0xb
 2130 0023 3E       		.uleb128 0x3e
 2131 0024 0B       		.uleb128 0xb
 2132 0025 03       		.uleb128 0x3
 2133 0026 08       		.uleb128 0x8
 2134 0027 00       		.byte	0
 2135 0028 00       		.byte	0
 2136 0029 04       		.uleb128 0x4
 2137 002a 16       		.uleb128 0x16
 2138 002b 00       		.byte	0
 2139 002c 03       		.uleb128 0x3
 2140 002d 0E       		.uleb128 0xe
 2141 002e 3A       		.uleb128 0x3a
 2142 002f 0B       		.uleb128 0xb
 2143 0030 3B       		.uleb128 0x3b
 2144 0031 05       		.uleb128 0x5
 2145 0032 49       		.uleb128 0x49
 2146 0033 13       		.uleb128 0x13
 2147 0034 00       		.byte	0
 2148 0035 00       		.byte	0
 2149 0036 05       		.uleb128 0x5
 2150 0037 35       		.uleb128 0x35
 2151 0038 00       		.byte	0
 2152 0039 49       		.uleb128 0x49
 2153 003a 13       		.uleb128 0x13
 2154 003b 00       		.byte	0
 2155 003c 00       		.byte	0
 2156 003d 06       		.uleb128 0x6
 2157 003e 2E       		.uleb128 0x2e
 2158 003f 00       		.byte	0
 2159 0040 3F       		.uleb128 0x3f
 2160 0041 19       		.uleb128 0x19
 2161 0042 03       		.uleb128 0x3
 2162 0043 0E       		.uleb128 0xe
 2163 0044 3A       		.uleb128 0x3a
 2164 0045 0B       		.uleb128 0xb
 2165 0046 3B       		.uleb128 0x3b
 2166 0047 0B       		.uleb128 0xb
 2167 0048 27       		.uleb128 0x27
 2168 0049 19       		.uleb128 0x19
 2169 004a 11       		.uleb128 0x11
 2170 004b 01       		.uleb128 0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 67


 2171 004c 12       		.uleb128 0x12
 2172 004d 06       		.uleb128 0x6
 2173 004e 40       		.uleb128 0x40
 2174 004f 18       		.uleb128 0x18
 2175 0050 9642     		.uleb128 0x2116
 2176 0052 19       		.uleb128 0x19
 2177 0053 00       		.byte	0
 2178 0054 00       		.byte	0
 2179 0055 07       		.uleb128 0x7
 2180 0056 2E       		.uleb128 0x2e
 2181 0057 00       		.byte	0
 2182 0058 3F       		.uleb128 0x3f
 2183 0059 19       		.uleb128 0x19
 2184 005a 03       		.uleb128 0x3
 2185 005b 0E       		.uleb128 0xe
 2186 005c 3A       		.uleb128 0x3a
 2187 005d 0B       		.uleb128 0xb
 2188 005e 3B       		.uleb128 0x3b
 2189 005f 0B       		.uleb128 0xb
 2190 0060 27       		.uleb128 0x27
 2191 0061 19       		.uleb128 0x19
 2192 0062 11       		.uleb128 0x11
 2193 0063 01       		.uleb128 0x1
 2194 0064 12       		.uleb128 0x12
 2195 0065 06       		.uleb128 0x6
 2196 0066 40       		.uleb128 0x40
 2197 0067 18       		.uleb128 0x18
 2198 0068 9742     		.uleb128 0x2117
 2199 006a 19       		.uleb128 0x19
 2200 006b 00       		.byte	0
 2201 006c 00       		.byte	0
 2202 006d 08       		.uleb128 0x8
 2203 006e 2E       		.uleb128 0x2e
 2204 006f 01       		.byte	0x1
 2205 0070 3F       		.uleb128 0x3f
 2206 0071 19       		.uleb128 0x19
 2207 0072 03       		.uleb128 0x3
 2208 0073 0E       		.uleb128 0xe
 2209 0074 3A       		.uleb128 0x3a
 2210 0075 0B       		.uleb128 0xb
 2211 0076 3B       		.uleb128 0x3b
 2212 0077 0B       		.uleb128 0xb
 2213 0078 27       		.uleb128 0x27
 2214 0079 19       		.uleb128 0x19
 2215 007a 11       		.uleb128 0x11
 2216 007b 01       		.uleb128 0x1
 2217 007c 12       		.uleb128 0x12
 2218 007d 06       		.uleb128 0x6
 2219 007e 40       		.uleb128 0x40
 2220 007f 18       		.uleb128 0x18
 2221 0080 9642     		.uleb128 0x2116
 2222 0082 19       		.uleb128 0x19
 2223 0083 01       		.uleb128 0x1
 2224 0084 13       		.uleb128 0x13
 2225 0085 00       		.byte	0
 2226 0086 00       		.byte	0
 2227 0087 09       		.uleb128 0x9
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 68


 2228 0088 34       		.uleb128 0x34
 2229 0089 00       		.byte	0
 2230 008a 03       		.uleb128 0x3
 2231 008b 0E       		.uleb128 0xe
 2232 008c 3A       		.uleb128 0x3a
 2233 008d 0B       		.uleb128 0xb
 2234 008e 3B       		.uleb128 0x3b
 2235 008f 0B       		.uleb128 0xb
 2236 0090 49       		.uleb128 0x49
 2237 0091 13       		.uleb128 0x13
 2238 0092 02       		.uleb128 0x2
 2239 0093 18       		.uleb128 0x18
 2240 0094 00       		.byte	0
 2241 0095 00       		.byte	0
 2242 0096 0A       		.uleb128 0xa
 2243 0097 2E       		.uleb128 0x2e
 2244 0098 00       		.byte	0
 2245 0099 3F       		.uleb128 0x3f
 2246 009a 19       		.uleb128 0x19
 2247 009b 03       		.uleb128 0x3
 2248 009c 0E       		.uleb128 0xe
 2249 009d 3A       		.uleb128 0x3a
 2250 009e 0B       		.uleb128 0xb
 2251 009f 3B       		.uleb128 0x3b
 2252 00a0 05       		.uleb128 0x5
 2253 00a1 27       		.uleb128 0x27
 2254 00a2 19       		.uleb128 0x19
 2255 00a3 49       		.uleb128 0x49
 2256 00a4 13       		.uleb128 0x13
 2257 00a5 11       		.uleb128 0x11
 2258 00a6 01       		.uleb128 0x1
 2259 00a7 12       		.uleb128 0x12
 2260 00a8 06       		.uleb128 0x6
 2261 00a9 40       		.uleb128 0x40
 2262 00aa 18       		.uleb128 0x18
 2263 00ab 9742     		.uleb128 0x2117
 2264 00ad 19       		.uleb128 0x19
 2265 00ae 00       		.byte	0
 2266 00af 00       		.byte	0
 2267 00b0 0B       		.uleb128 0xb
 2268 00b1 2E       		.uleb128 0x2e
 2269 00b2 01       		.byte	0x1
 2270 00b3 3F       		.uleb128 0x3f
 2271 00b4 19       		.uleb128 0x19
 2272 00b5 03       		.uleb128 0x3
 2273 00b6 0E       		.uleb128 0xe
 2274 00b7 3A       		.uleb128 0x3a
 2275 00b8 0B       		.uleb128 0xb
 2276 00b9 3B       		.uleb128 0x3b
 2277 00ba 05       		.uleb128 0x5
 2278 00bb 27       		.uleb128 0x27
 2279 00bc 19       		.uleb128 0x19
 2280 00bd 11       		.uleb128 0x11
 2281 00be 01       		.uleb128 0x1
 2282 00bf 12       		.uleb128 0x12
 2283 00c0 06       		.uleb128 0x6
 2284 00c1 40       		.uleb128 0x40
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 69


 2285 00c2 18       		.uleb128 0x18
 2286 00c3 9742     		.uleb128 0x2117
 2287 00c5 19       		.uleb128 0x19
 2288 00c6 01       		.uleb128 0x1
 2289 00c7 13       		.uleb128 0x13
 2290 00c8 00       		.byte	0
 2291 00c9 00       		.byte	0
 2292 00ca 0C       		.uleb128 0xc
 2293 00cb 05       		.uleb128 0x5
 2294 00cc 00       		.byte	0
 2295 00cd 03       		.uleb128 0x3
 2296 00ce 0E       		.uleb128 0xe
 2297 00cf 3A       		.uleb128 0x3a
 2298 00d0 0B       		.uleb128 0xb
 2299 00d1 3B       		.uleb128 0x3b
 2300 00d2 05       		.uleb128 0x5
 2301 00d3 49       		.uleb128 0x49
 2302 00d4 13       		.uleb128 0x13
 2303 00d5 02       		.uleb128 0x2
 2304 00d6 18       		.uleb128 0x18
 2305 00d7 00       		.byte	0
 2306 00d8 00       		.byte	0
 2307 00d9 0D       		.uleb128 0xd
 2308 00da 2E       		.uleb128 0x2e
 2309 00db 01       		.byte	0x1
 2310 00dc 3F       		.uleb128 0x3f
 2311 00dd 19       		.uleb128 0x19
 2312 00de 03       		.uleb128 0x3
 2313 00df 0E       		.uleb128 0xe
 2314 00e0 3A       		.uleb128 0x3a
 2315 00e1 0B       		.uleb128 0xb
 2316 00e2 3B       		.uleb128 0x3b
 2317 00e3 05       		.uleb128 0x5
 2318 00e4 27       		.uleb128 0x27
 2319 00e5 19       		.uleb128 0x19
 2320 00e6 49       		.uleb128 0x49
 2321 00e7 13       		.uleb128 0x13
 2322 00e8 11       		.uleb128 0x11
 2323 00e9 01       		.uleb128 0x1
 2324 00ea 12       		.uleb128 0x12
 2325 00eb 06       		.uleb128 0x6
 2326 00ec 40       		.uleb128 0x40
 2327 00ed 18       		.uleb128 0x18
 2328 00ee 9742     		.uleb128 0x2117
 2329 00f0 19       		.uleb128 0x19
 2330 00f1 01       		.uleb128 0x1
 2331 00f2 13       		.uleb128 0x13
 2332 00f3 00       		.byte	0
 2333 00f4 00       		.byte	0
 2334 00f5 0E       		.uleb128 0xe
 2335 00f6 34       		.uleb128 0x34
 2336 00f7 00       		.byte	0
 2337 00f8 03       		.uleb128 0x3
 2338 00f9 0E       		.uleb128 0xe
 2339 00fa 3A       		.uleb128 0x3a
 2340 00fb 0B       		.uleb128 0xb
 2341 00fc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 70


 2342 00fd 05       		.uleb128 0x5
 2343 00fe 49       		.uleb128 0x49
 2344 00ff 13       		.uleb128 0x13
 2345 0100 02       		.uleb128 0x2
 2346 0101 18       		.uleb128 0x18
 2347 0102 00       		.byte	0
 2348 0103 00       		.byte	0
 2349 0104 0F       		.uleb128 0xf
 2350 0105 2E       		.uleb128 0x2e
 2351 0106 00       		.byte	0
 2352 0107 3F       		.uleb128 0x3f
 2353 0108 19       		.uleb128 0x19
 2354 0109 03       		.uleb128 0x3
 2355 010a 0E       		.uleb128 0xe
 2356 010b 3A       		.uleb128 0x3a
 2357 010c 0B       		.uleb128 0xb
 2358 010d 3B       		.uleb128 0x3b
 2359 010e 05       		.uleb128 0x5
 2360 010f 27       		.uleb128 0x27
 2361 0110 19       		.uleb128 0x19
 2362 0111 49       		.uleb128 0x49
 2363 0112 13       		.uleb128 0x13
 2364 0113 11       		.uleb128 0x11
 2365 0114 01       		.uleb128 0x1
 2366 0115 12       		.uleb128 0x12
 2367 0116 06       		.uleb128 0x6
 2368 0117 40       		.uleb128 0x40
 2369 0118 18       		.uleb128 0x18
 2370 0119 9642     		.uleb128 0x2116
 2371 011b 19       		.uleb128 0x19
 2372 011c 00       		.byte	0
 2373 011d 00       		.byte	0
 2374 011e 10       		.uleb128 0x10
 2375 011f 2E       		.uleb128 0x2e
 2376 0120 01       		.byte	0x1
 2377 0121 3F       		.uleb128 0x3f
 2378 0122 19       		.uleb128 0x19
 2379 0123 03       		.uleb128 0x3
 2380 0124 0E       		.uleb128 0xe
 2381 0125 3A       		.uleb128 0x3a
 2382 0126 0B       		.uleb128 0xb
 2383 0127 3B       		.uleb128 0x3b
 2384 0128 05       		.uleb128 0x5
 2385 0129 27       		.uleb128 0x27
 2386 012a 19       		.uleb128 0x19
 2387 012b 11       		.uleb128 0x11
 2388 012c 01       		.uleb128 0x1
 2389 012d 12       		.uleb128 0x12
 2390 012e 06       		.uleb128 0x6
 2391 012f 40       		.uleb128 0x40
 2392 0130 18       		.uleb128 0x18
 2393 0131 9642     		.uleb128 0x2116
 2394 0133 19       		.uleb128 0x19
 2395 0134 01       		.uleb128 0x1
 2396 0135 13       		.uleb128 0x13
 2397 0136 00       		.byte	0
 2398 0137 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 71


 2399 0138 11       		.uleb128 0x11
 2400 0139 0F       		.uleb128 0xf
 2401 013a 00       		.byte	0
 2402 013b 0B       		.uleb128 0xb
 2403 013c 0B       		.uleb128 0xb
 2404 013d 49       		.uleb128 0x49
 2405 013e 13       		.uleb128 0x13
 2406 013f 00       		.byte	0
 2407 0140 00       		.byte	0
 2408 0141 12       		.uleb128 0x12
 2409 0142 26       		.uleb128 0x26
 2410 0143 00       		.byte	0
 2411 0144 49       		.uleb128 0x49
 2412 0145 13       		.uleb128 0x13
 2413 0146 00       		.byte	0
 2414 0147 00       		.byte	0
 2415 0148 13       		.uleb128 0x13
 2416 0149 0B       		.uleb128 0xb
 2417 014a 01       		.byte	0x1
 2418 014b 11       		.uleb128 0x11
 2419 014c 01       		.uleb128 0x1
 2420 014d 12       		.uleb128 0x12
 2421 014e 06       		.uleb128 0x6
 2422 014f 00       		.byte	0
 2423 0150 00       		.byte	0
 2424 0151 14       		.uleb128 0x14
 2425 0152 34       		.uleb128 0x34
 2426 0153 00       		.byte	0
 2427 0154 03       		.uleb128 0x3
 2428 0155 0E       		.uleb128 0xe
 2429 0156 3A       		.uleb128 0x3a
 2430 0157 0B       		.uleb128 0xb
 2431 0158 3B       		.uleb128 0x3b
 2432 0159 0B       		.uleb128 0xb
 2433 015a 49       		.uleb128 0x49
 2434 015b 13       		.uleb128 0x13
 2435 015c 3F       		.uleb128 0x3f
 2436 015d 19       		.uleb128 0x19
 2437 015e 02       		.uleb128 0x2
 2438 015f 18       		.uleb128 0x18
 2439 0160 00       		.byte	0
 2440 0161 00       		.byte	0
 2441 0162 00       		.byte	0
 2442              		.section	.debug_aranges,"",%progbits
 2443 0000 EC000000 		.4byte	0xec
 2444 0004 0200     		.2byte	0x2
 2445 0006 00000000 		.4byte	.Ldebug_info0
 2446 000a 04       		.byte	0x4
 2447 000b 00       		.byte	0
 2448 000c 0000     		.2byte	0
 2449 000e 0000     		.2byte	0
 2450 0010 00000000 		.4byte	.LFB0
 2451 0014 24000000 		.4byte	.LFE0-.LFB0
 2452 0018 00000000 		.4byte	.LFB1
 2453 001c 40000000 		.4byte	.LFE1-.LFB1
 2454 0020 00000000 		.4byte	.LFB2
 2455 0024 60000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 72


 2456 0028 00000000 		.4byte	.LFB3
 2457 002c 60000000 		.4byte	.LFE3-.LFB3
 2458 0030 00000000 		.4byte	.LFB4
 2459 0034 0E000000 		.4byte	.LFE4-.LFB4
 2460 0038 00000000 		.4byte	.LFB5
 2461 003c 14000000 		.4byte	.LFE5-.LFB5
 2462 0040 00000000 		.4byte	.LFB6
 2463 0044 20000000 		.4byte	.LFE6-.LFB6
 2464 0048 00000000 		.4byte	.LFB7
 2465 004c 1C000000 		.4byte	.LFE7-.LFB7
 2466 0050 00000000 		.4byte	.LFB8
 2467 0054 24000000 		.4byte	.LFE8-.LFB8
 2468 0058 00000000 		.4byte	.LFB9
 2469 005c 44000000 		.4byte	.LFE9-.LFB9
 2470 0060 00000000 		.4byte	.LFB10
 2471 0064 20000000 		.4byte	.LFE10-.LFB10
 2472 0068 00000000 		.4byte	.LFB11
 2473 006c 2C000000 		.4byte	.LFE11-.LFB11
 2474 0070 00000000 		.4byte	.LFB12
 2475 0074 44000000 		.4byte	.LFE12-.LFB12
 2476 0078 00000000 		.4byte	.LFB13
 2477 007c 14000000 		.4byte	.LFE13-.LFB13
 2478 0080 00000000 		.4byte	.LFB14
 2479 0084 20000000 		.4byte	.LFE14-.LFB14
 2480 0088 00000000 		.4byte	.LFB15
 2481 008c 20000000 		.4byte	.LFE15-.LFB15
 2482 0090 00000000 		.4byte	.LFB16
 2483 0094 20000000 		.4byte	.LFE16-.LFB16
 2484 0098 00000000 		.4byte	.LFB17
 2485 009c 2C000000 		.4byte	.LFE17-.LFB17
 2486 00a0 00000000 		.4byte	.LFB18
 2487 00a4 18000000 		.4byte	.LFE18-.LFB18
 2488 00a8 00000000 		.4byte	.LFB19
 2489 00ac 34000000 		.4byte	.LFE19-.LFB19
 2490 00b0 00000000 		.4byte	.LFB20
 2491 00b4 44000000 		.4byte	.LFE20-.LFB20
 2492 00b8 00000000 		.4byte	.LFB21
 2493 00bc 44000000 		.4byte	.LFE21-.LFB21
 2494 00c0 00000000 		.4byte	.LFB22
 2495 00c4 34000000 		.4byte	.LFE22-.LFB22
 2496 00c8 00000000 		.4byte	.LFB23
 2497 00cc 40000000 		.4byte	.LFE23-.LFB23
 2498 00d0 00000000 		.4byte	.LFB24
 2499 00d4 44000000 		.4byte	.LFE24-.LFB24
 2500 00d8 00000000 		.4byte	.LFB25
 2501 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2502 00e0 00000000 		.4byte	.LFB26
 2503 00e4 14000000 		.4byte	.LFE26-.LFB26
 2504 00e8 00000000 		.4byte	0
 2505 00ec 00000000 		.4byte	0
 2506              		.section	.debug_ranges,"",%progbits
 2507              	.Ldebug_ranges0:
 2508 0000 00000000 		.4byte	.LFB0
 2509 0004 24000000 		.4byte	.LFE0
 2510 0008 00000000 		.4byte	.LFB1
 2511 000c 40000000 		.4byte	.LFE1
 2512 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 73


 2513 0014 60000000 		.4byte	.LFE2
 2514 0018 00000000 		.4byte	.LFB3
 2515 001c 60000000 		.4byte	.LFE3
 2516 0020 00000000 		.4byte	.LFB4
 2517 0024 0E000000 		.4byte	.LFE4
 2518 0028 00000000 		.4byte	.LFB5
 2519 002c 14000000 		.4byte	.LFE5
 2520 0030 00000000 		.4byte	.LFB6
 2521 0034 20000000 		.4byte	.LFE6
 2522 0038 00000000 		.4byte	.LFB7
 2523 003c 1C000000 		.4byte	.LFE7
 2524 0040 00000000 		.4byte	.LFB8
 2525 0044 24000000 		.4byte	.LFE8
 2526 0048 00000000 		.4byte	.LFB9
 2527 004c 44000000 		.4byte	.LFE9
 2528 0050 00000000 		.4byte	.LFB10
 2529 0054 20000000 		.4byte	.LFE10
 2530 0058 00000000 		.4byte	.LFB11
 2531 005c 2C000000 		.4byte	.LFE11
 2532 0060 00000000 		.4byte	.LFB12
 2533 0064 44000000 		.4byte	.LFE12
 2534 0068 00000000 		.4byte	.LFB13
 2535 006c 14000000 		.4byte	.LFE13
 2536 0070 00000000 		.4byte	.LFB14
 2537 0074 20000000 		.4byte	.LFE14
 2538 0078 00000000 		.4byte	.LFB15
 2539 007c 20000000 		.4byte	.LFE15
 2540 0080 00000000 		.4byte	.LFB16
 2541 0084 20000000 		.4byte	.LFE16
 2542 0088 00000000 		.4byte	.LFB17
 2543 008c 2C000000 		.4byte	.LFE17
 2544 0090 00000000 		.4byte	.LFB18
 2545 0094 18000000 		.4byte	.LFE18
 2546 0098 00000000 		.4byte	.LFB19
 2547 009c 34000000 		.4byte	.LFE19
 2548 00a0 00000000 		.4byte	.LFB20
 2549 00a4 44000000 		.4byte	.LFE20
 2550 00a8 00000000 		.4byte	.LFB21
 2551 00ac 44000000 		.4byte	.LFE21
 2552 00b0 00000000 		.4byte	.LFB22
 2553 00b4 34000000 		.4byte	.LFE22
 2554 00b8 00000000 		.4byte	.LFB23
 2555 00bc 40000000 		.4byte	.LFE23
 2556 00c0 00000000 		.4byte	.LFB24
 2557 00c4 44000000 		.4byte	.LFE24
 2558 00c8 00000000 		.4byte	.LFB25
 2559 00cc 9C000000 		.4byte	.LFE25
 2560 00d0 00000000 		.4byte	.LFB26
 2561 00d4 14000000 		.4byte	.LFE26
 2562 00d8 00000000 		.4byte	0
 2563 00dc 00000000 		.4byte	0
 2564              		.section	.debug_line,"",%progbits
 2565              	.Ldebug_line0:
 2566 0000 E0020000 		.section	.debug_str,"MS",%progbits,1
 2566      02004300 
 2566      00000201 
 2566      FB0E0D00 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 74


 2566      01010101 
 2567              	.LASF62:
 2568 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2568      72617465 
 2568      645F536F 
 2568      75726365 
 2568      5C50536F 
 2569              	.LASF10:
 2570 0020 75696E74 		.ascii	"uint16\000"
 2570      313600
 2571              	.LASF55:
 2572 0027 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2572      5F315F43 
 2572      6C656172 
 2572      54784275 
 2572      66666572 
 2573              	.LASF45:
 2574 003c 74784461 		.ascii	"txDataByte\000"
 2574      74614279 
 2574      746500
 2575              	.LASF47:
 2576 0047 55415254 		.ascii	"UART_1_PutChar\000"
 2576      5F315F50 
 2576      75744368 
 2576      617200
 2577              	.LASF49:
 2578 0056 73747269 		.ascii	"string\000"
 2578      6E6700
 2579              	.LASF56:
 2580 005d 55415254 		.ascii	"UART_1_SendBreak\000"
 2580      5F315F53 
 2580      656E6442 
 2580      7265616B 
 2580      00
 2581              	.LASF61:
 2582 006e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2582      43313120 
 2582      352E342E 
 2582      31203230 
 2582      31363036 
 2583 00a1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2583      20726576 
 2583      6973696F 
 2583      6E203233 
 2583      37373135 
 2584 00d4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2584      66756E63 
 2584      74696F6E 
 2584      2D736563 
 2584      74696F6E 
 2585              	.LASF28:
 2586 00fc 55415254 		.ascii	"UART_1_ReadRxData\000"
 2586      5F315F52 
 2586      65616452 
 2586      78446174 
 2586      6100
 2587              	.LASF7:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 75


 2588 010e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2588      206C6F6E 
 2588      6720756E 
 2588      7369676E 
 2588      65642069 
 2589              	.LASF54:
 2590 0125 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2590      5F315F47 
 2590      65745478 
 2590      42756666 
 2590      65725369 
 2591              	.LASF6:
 2592 013c 6C6F6E67 		.ascii	"long long int\000"
 2592      206C6F6E 
 2592      6720696E 
 2592      7400
 2593              	.LASF0:
 2594 014a 7369676E 		.ascii	"signed char\000"
 2594      65642063 
 2594      68617200 
 2595              	.LASF59:
 2596 0156 74785065 		.ascii	"txPeriod\000"
 2596      72696F64 
 2596      00
 2597              	.LASF53:
 2598 015f 55415254 		.ascii	"UART_1_PutCRLF\000"
 2598      5F315F50 
 2598      75744352 
 2598      4C4600
 2599              	.LASF4:
 2600 016e 6C6F6E67 		.ascii	"long int\000"
 2600      20696E74 
 2600      00
 2601              	.LASF18:
 2602 0177 55415254 		.ascii	"UART_1_Start\000"
 2602      5F315F53 
 2602      74617274 
 2602      00
 2603              	.LASF9:
 2604 0184 75696E74 		.ascii	"uint8\000"
 2604      3800
 2605              	.LASF12:
 2606 018a 646F7562 		.ascii	"double\000"
 2606      6C6500
 2607              	.LASF39:
 2608 0191 61646472 		.ascii	"addressMode\000"
 2608      6573734D 
 2608      6F646500 
 2609              	.LASF25:
 2610 019d 636F6E74 		.ascii	"control\000"
 2610      726F6C00 
 2611              	.LASF24:
 2612 01a5 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2612      5F315F53 
 2612      65745278 
 2612      496E7465 
 2612      72727570 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 76


 2613              	.LASF57:
 2614 01bf 7265744D 		.ascii	"retMode\000"
 2614      6F646500 
 2615              	.LASF8:
 2616 01c7 756E7369 		.ascii	"unsigned int\000"
 2616      676E6564 
 2616      20696E74 
 2616      00
 2617              	.LASF46:
 2618 01d4 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2618      5F315F52 
 2618      65616454 
 2618      78537461 
 2618      74757300 
 2619              	.LASF5:
 2620 01e8 6C6F6E67 		.ascii	"long unsigned int\000"
 2620      20756E73 
 2620      69676E65 
 2620      6420696E 
 2620      7400
 2621              	.LASF36:
 2622 01fa 73697A65 		.ascii	"size\000"
 2622      00
 2623              	.LASF3:
 2624 01ff 73686F72 		.ascii	"short unsigned int\000"
 2624      7420756E 
 2624      7369676E 
 2624      65642069 
 2624      6E7400
 2625              	.LASF20:
 2626 0212 55415254 		.ascii	"UART_1_Enable\000"
 2626      5F315F45 
 2626      6E61626C 
 2626      6500
 2627              	.LASF50:
 2628 0220 62756649 		.ascii	"bufIndex\000"
 2628      6E646578 
 2628      00
 2629              	.LASF60:
 2630 0229 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2630      5F315F53 
 2630      65745478 
 2630      41646472 
 2630      6573734D 
 2631              	.LASF26:
 2632 0241 696E7453 		.ascii	"intSrc\000"
 2632      726300
 2633              	.LASF33:
 2634 0248 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2634      5F315F52 
 2634      65616443 
 2634      6F6E7472 
 2634      6F6C5265 
 2635              	.LASF21:
 2636 0263 55415254 		.ascii	"UART_1_Stop\000"
 2636      5F315F53 
 2636      746F7000 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 77


 2637              	.LASF34:
 2638 026f 55415254 		.ascii	"UART_1_GetByte\000"
 2638      5F315F47 
 2638      65744279 
 2638      746500
 2639              	.LASF44:
 2640 027e 55415254 		.ascii	"UART_1_WriteTxData\000"
 2640      5F315F57 
 2640      72697465 
 2640      54784461 
 2640      746100
 2641              	.LASF58:
 2642 0291 746D7053 		.ascii	"tmpStat\000"
 2642      74617400 
 2643              	.LASF17:
 2644 0299 73697A65 		.ascii	"sizetype\000"
 2644      74797065 
 2644      00
 2645              	.LASF40:
 2646 02a2 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2646      5F315F53 
 2646      65745278 
 2646      41646472 
 2646      65737331 
 2647              	.LASF42:
 2648 02b7 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2648      5F315F53 
 2648      65745278 
 2648      41646472 
 2648      65737332 
 2649              	.LASF16:
 2650 02cc 6C6F6E67 		.ascii	"long double\000"
 2650      20646F75 
 2650      626C6500 
 2651              	.LASF41:
 2652 02d8 61646472 		.ascii	"address\000"
 2652      65737300 
 2653              	.LASF32:
 2654 02e0 72785374 		.ascii	"rxStatus\000"
 2654      61747573 
 2654      00
 2655              	.LASF43:
 2656 02e9 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2656      5F315F53 
 2656      65745478 
 2656      496E7465 
 2656      72727570 
 2657              	.LASF11:
 2658 0303 666C6F61 		.ascii	"float\000"
 2658      7400
 2659              	.LASF48:
 2660 0309 55415254 		.ascii	"UART_1_PutString\000"
 2660      5F315F50 
 2660      75745374 
 2660      72696E67 
 2660      00
 2661              	.LASF37:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 78


 2662 031a 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2662      5F315F43 
 2662      6C656172 
 2662      52784275 
 2662      66666572 
 2663              	.LASF38:
 2664 032f 55415254 		.ascii	"UART_1_SetRxAddressMode\000"
 2664      5F315F53 
 2664      65745278 
 2664      41646472 
 2664      6573734D 
 2665              	.LASF15:
 2666 0347 72656738 		.ascii	"reg8\000"
 2666      00
 2667              	.LASF1:
 2668 034c 756E7369 		.ascii	"unsigned char\000"
 2668      676E6564 
 2668      20636861 
 2668      7200
 2669              	.LASF2:
 2670 035a 73686F72 		.ascii	"short int\000"
 2670      7420696E 
 2670      7400
 2671              	.LASF23:
 2672 0364 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2672      5F315F57 
 2672      72697465 
 2672      436F6E74 
 2672      726F6C52 
 2673              	.LASF64:
 2674 0380 55415254 		.ascii	"UART_1_initVar\000"
 2674      5F315F69 
 2674      6E697456 
 2674      617200
 2675              	.LASF52:
 2676 038f 62797465 		.ascii	"byteCount\000"
 2676      436F756E 
 2676      7400
 2677              	.LASF35:
 2678 0399 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2678      5F315F47 
 2678      65745278 
 2678      42756666 
 2678      65725369 
 2679              	.LASF27:
 2680 03b0 72784461 		.ascii	"rxData\000"
 2680      746100
 2681              	.LASF14:
 2682 03b7 63686172 		.ascii	"char\000"
 2682      00
 2683              	.LASF13:
 2684 03bc 63686172 		.ascii	"char8\000"
 2684      3800
 2685              	.LASF63:
 2686 03c2 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 2686      726F6772 
 2686      616D6D65 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccOnNkca.s 			page 79


 2686      5F536372 
 2686      69707473 
 2687 03f1 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 2687      5F435938 
 2687      434B4954 
 2687      5F303539 
 2687      2D6D6173 
 2688              	.LASF19:
 2689 041d 55415254 		.ascii	"UART_1_Init\000"
 2689      5F315F49 
 2689      6E697400 
 2690              	.LASF22:
 2691 0429 656E6162 		.ascii	"enableInterrupts\000"
 2691      6C65496E 
 2691      74657272 
 2691      75707473 
 2691      00
 2692              	.LASF30:
 2693 043a 73746174 		.ascii	"status\000"
 2693      757300
 2694              	.LASF29:
 2695 0441 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2695      5F315F52 
 2695      65616452 
 2695      78537461 
 2695      74757300 
 2696              	.LASF31:
 2697 0455 55415254 		.ascii	"UART_1_GetChar\000"
 2697      5F315F47 
 2697      65744368 
 2697      617200
 2698              	.LASF51:
 2699 0464 55415254 		.ascii	"UART_1_PutArray\000"
 2699      5F315F50 
 2699      75744172 
 2699      72617900 
 2700              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
