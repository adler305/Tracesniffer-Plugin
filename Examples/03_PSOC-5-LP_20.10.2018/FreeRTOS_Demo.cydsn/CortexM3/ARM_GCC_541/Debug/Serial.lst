ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Serial.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sniffIDFilter,13,4
  20              		.comm	buffer,4098,4
  21              		.comm	objectList,1704,4
  22              		.bss
  23              		.align	2
  24              	xSerialTxQueue:
  25 0000 00000000 		.space	4
  26              		.align	2
  27              	xSerialRxQueue:
  28 0004 00000000 		.space	4
  29              		.section	.text.xSerialPortInitMinimal,"ax",%progbits
  30              		.align	2
  31              		.global	xSerialPortInitMinimal
  32              		.thumb
  33              		.thumb_func
  34              		.type	xSerialPortInitMinimal, %function
  35              	xSerialPortInitMinimal:
  36              	.LFB68:
  37              		.file 1 "Serial.c"
   1:Serial.c      **** /*
   2:Serial.c      ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Serial.c      ****     All rights reserved
   4:Serial.c      **** 
   5:Serial.c      ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Serial.c      **** 
   7:Serial.c      ****     This file is part of the FreeRTOS distribution.
   8:Serial.c      **** 
   9:Serial.c      ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Serial.c      ****     the terms of the GNU General Public License (version 2) as published by the
  11:Serial.c      ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Serial.c      **** 
  13:Serial.c      ****     ***************************************************************************
  14:Serial.c      ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Serial.c      ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Serial.c      ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Serial.c      ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Serial.c      ****     ***************************************************************************
  19:Serial.c      **** 
  20:Serial.c      ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 2


  21:Serial.c      ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Serial.c      ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Serial.c      ****     link: http://www.freertos.org/a00114.html
  24:Serial.c      **** 
  25:Serial.c      ****     ***************************************************************************
  26:Serial.c      ****      *                                                                       *
  27:Serial.c      ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Serial.c      ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Serial.c      ****      *    platform software that is more than just the market leader, it     *
  30:Serial.c      ****      *    is the industry's de facto standard.                               *
  31:Serial.c      ****      *                                                                       *
  32:Serial.c      ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Serial.c      ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Serial.c      ****      *    tutorial book, reference manual, or both:                          *
  35:Serial.c      ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Serial.c      ****      *                                                                       *
  37:Serial.c      ****     ***************************************************************************
  38:Serial.c      **** 
  39:Serial.c      ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Serial.c      ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Serial.c      ****     defined configASSERT()?
  42:Serial.c      **** 
  43:Serial.c      ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Serial.c      ****     embedded software for free we request you assist our global community by
  45:Serial.c      ****     participating in the support forum.
  46:Serial.c      **** 
  47:Serial.c      ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Serial.c      ****     be as productive as possible as early as possible.  Now you can receive
  49:Serial.c      ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Serial.c      ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Serial.c      **** 
  52:Serial.c      ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Serial.c      ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Serial.c      ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Serial.c      **** 
  56:Serial.c      ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Serial.c      ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Serial.c      **** 
  59:Serial.c      ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Serial.c      ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Serial.c      ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Serial.c      **** 
  63:Serial.c      ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Serial.c      ****     engineered and independently SIL3 certified version for use in safety and
  65:Serial.c      ****     mission critical applications that require provable dependability.
  66:Serial.c      **** 
  67:Serial.c      ****     1 tab == 4 spaces!
  68:Serial.c      **** */
  69:Serial.c      **** 
  70:Serial.c      **** #include <device.h>
  71:Serial.c      **** #include "FreeRTOS.h"
  72:Serial.c      **** #include "queue.h"
  73:Serial.c      **** #include "task.h"
  74:Serial.c      **** #include "serial.h"
  75:Serial.c      **** /*---------------------------------------------------------------------------*/
  76:Serial.c      **** 
  77:Serial.c      **** #define serialSTRING_DELAY_TICKS		( portMAX_DELAY )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 3


  78:Serial.c      **** /*---------------------------------------------------------------------------*/
  79:Serial.c      **** 
  80:Serial.c      **** CY_ISR_PROTO( vUartRxISR );
  81:Serial.c      **** CY_ISR_PROTO( vUartTxISR );
  82:Serial.c      **** /*---------------------------------------------------------------------------*/
  83:Serial.c      **** 
  84:Serial.c      **** static QueueHandle_t xSerialTxQueue = NULL;
  85:Serial.c      **** static QueueHandle_t xSerialRxQueue = NULL;
  86:Serial.c      **** /*---------------------------------------------------------------------------*/
  87:Serial.c      **** 
  88:Serial.c      **** xComPortHandle xSerialPortInitMinimal( unsigned long ulWantedBaud, unsigned portBASE_TYPE uxQueueLe
  89:Serial.c      **** {
  38              		.loc 1 89 0
  39              		.cfi_startproc
  40              		@ args = 0, pretend = 0, frame = 8
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 82B0     		sub	sp, sp, #8
  47              		.cfi_def_cfa_offset 16
  48 0004 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
  51 0008 3960     		str	r1, [r7]
  90:Serial.c      **** 	/* Configure Rx. */
  91:Serial.c      **** 	xSerialRxQueue = xQueueCreate( uxQueueLength, sizeof( signed char ) );	
  52              		.loc 1 91 0
  53 000a 0022     		movs	r2, #0
  54 000c 0121     		movs	r1, #1
  55 000e 3868     		ldr	r0, [r7]
  56 0010 FFF7FEFF 		bl	xQueueGenericCreate
  57 0014 0246     		mov	r2, r0
  58 0016 134B     		ldr	r3, .L5
  59 0018 1A60     		str	r2, [r3]
  92:Serial.c      **** 	isr_UART1_RX_BYTE_RECEIVED_ClearPending();
  60              		.loc 1 92 0
  61 001a FFF7FEFF 		bl	isr_UART1_RX_BYTE_RECEIVED_ClearPending
  93:Serial.c      **** 	isr_UART1_RX_BYTE_RECEIVED_StartEx(vUartRxISR);
  62              		.loc 1 93 0
  63 001e 1248     		ldr	r0, .L5+4
  64 0020 FFF7FEFF 		bl	isr_UART1_RX_BYTE_RECEIVED_StartEx
  94:Serial.c      **** 
  95:Serial.c      **** 	/* Configure Tx */
  96:Serial.c      **** 	xSerialTxQueue = xQueueCreate( uxQueueLength, sizeof( signed char ) );
  65              		.loc 1 96 0
  66 0024 0022     		movs	r2, #0
  67 0026 0121     		movs	r1, #1
  68 0028 3868     		ldr	r0, [r7]
  69 002a FFF7FEFF 		bl	xQueueGenericCreate
  70 002e 0246     		mov	r2, r0
  71 0030 0E4B     		ldr	r3, .L5+8
  72 0032 1A60     		str	r2, [r3]
  97:Serial.c      **** 	isr_UART1_TX_BYTE_COMPLETE_ClearPending() ;
  73              		.loc 1 97 0
  74 0034 FFF7FEFF 		bl	isr_UART1_TX_BYTE_COMPLETE_ClearPending
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 4


  98:Serial.c      **** 	isr_UART1_TX_BYTE_COMPLETE_StartEx(vUartTxISR);
  75              		.loc 1 98 0
  76 0038 0D48     		ldr	r0, .L5+12
  77 003a FFF7FEFF 		bl	isr_UART1_TX_BYTE_COMPLETE_StartEx
  99:Serial.c      **** 
 100:Serial.c      **** 	/* Clear the interrupt modes for the Tx for the time being. */
 101:Serial.c      **** 	UART_1_SetTxInterruptMode( 0 );
  78              		.loc 1 101 0
  79 003e 0020     		movs	r0, #0
  80 0040 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 102:Serial.c      **** 
 103:Serial.c      **** 	/* Both configured successfully. */
 104:Serial.c      **** 	return ( xComPortHandle )( xSerialTxQueue && xSerialRxQueue );
  81              		.loc 1 104 0
  82 0044 094B     		ldr	r3, .L5+8
  83 0046 1B68     		ldr	r3, [r3]
  84 0048 002B     		cmp	r3, #0
  85 004a 05D0     		beq	.L2
  86              		.loc 1 104 0 is_stmt 0 discriminator 1
  87 004c 054B     		ldr	r3, .L5
  88 004e 1B68     		ldr	r3, [r3]
  89 0050 002B     		cmp	r3, #0
  90 0052 01D0     		beq	.L2
  91              		.loc 1 104 0 discriminator 3
  92 0054 0123     		movs	r3, #1
  93 0056 00E0     		b	.L3
  94              	.L2:
  95              		.loc 1 104 0 discriminator 4
  96 0058 0023     		movs	r3, #0
  97              	.L3:
 105:Serial.c      **** }
  98              		.loc 1 105 0 is_stmt 1 discriminator 6
  99 005a 1846     		mov	r0, r3
 100 005c 0837     		adds	r7, r7, #8
 101              		.cfi_def_cfa_offset 8
 102 005e BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0060 80BD     		pop	{r7, pc}
 106              	.L6:
 107 0062 00BF     		.align	2
 108              	.L5:
 109 0064 04000000 		.word	xSerialRxQueue
 110 0068 00000000 		.word	vUartRxISR
 111 006c 00000000 		.word	xSerialTxQueue
 112 0070 00000000 		.word	vUartTxISR
 113              		.cfi_endproc
 114              	.LFE68:
 115              		.size	xSerialPortInitMinimal, .-xSerialPortInitMinimal
 116              		.section	.text.vSerialPutString,"ax",%progbits
 117              		.align	2
 118              		.global	vSerialPutString
 119              		.thumb
 120              		.thumb_func
 121              		.type	vSerialPutString, %function
 122              	vSerialPutString:
 123              	.LFB69:
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 5


 106:Serial.c      **** /*---------------------------------------------------------------------------*/
 107:Serial.c      **** 
 108:Serial.c      **** void vSerialPutString( xComPortHandle pxPort, const signed char * const pcString, unsigned short us
 109:Serial.c      **** {
 124              		.loc 1 109 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 24
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 86B0     		sub	sp, sp, #24
 133              		.cfi_def_cfa_offset 32
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 136 0006 F860     		str	r0, [r7, #12]
 137 0008 B960     		str	r1, [r7, #8]
 138 000a 1346     		mov	r3, r2
 139 000c FB80     		strh	r3, [r7, #6]	@ movhi
 110:Serial.c      **** unsigned short usIndex = 0;
 140              		.loc 1 110 0
 141 000e 0023     		movs	r3, #0
 142 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 111:Serial.c      **** 
 112:Serial.c      **** 	for( usIndex = 0; usIndex < usStringLength; usIndex++ )
 143              		.loc 1 112 0
 144 0012 0023     		movs	r3, #0
 145 0014 FB82     		strh	r3, [r7, #22]	@ movhi
 146 0016 14E0     		b	.L8
 147              	.L11:
 113:Serial.c      **** 	{
 114:Serial.c      **** 		/* Check for pre-mature end of line. */
 115:Serial.c      **** 		if( '\0' == pcString[ usIndex ] )
 148              		.loc 1 115 0
 149 0018 FB8A     		ldrh	r3, [r7, #22]
 150 001a BA68     		ldr	r2, [r7, #8]
 151 001c 1344     		add	r3, r3, r2
 152 001e 93F90030 		ldrsb	r3, [r3]
 153 0022 002B     		cmp	r3, #0
 154 0024 12D0     		beq	.L12
 116:Serial.c      **** 		{
 117:Serial.c      **** 			break;
 118:Serial.c      **** 		}
 119:Serial.c      **** 		
 120:Serial.c      **** 		/* Send out, one character at a time. */
 121:Serial.c      **** 		if( pdTRUE != xSerialPutChar( NULL, pcString[ usIndex ], serialSTRING_DELAY_TICKS ) )
 155              		.loc 1 121 0
 156 0026 FB8A     		ldrh	r3, [r7, #22]
 157 0028 BA68     		ldr	r2, [r7, #8]
 158 002a 1344     		add	r3, r3, r2
 159 002c 93F90030 		ldrsb	r3, [r3]
 160 0030 4FF0FF32 		mov	r2, #-1
 161 0034 1946     		mov	r1, r3
 162 0036 0020     		movs	r0, #0
 163 0038 FFF7FEFF 		bl	xSerialPutChar
 112:Serial.c      **** 	{
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 6


 164              		.loc 1 112 0
 165 003c FB8A     		ldrh	r3, [r7, #22]
 166 003e 0133     		adds	r3, r3, #1
 167 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 168              	.L8:
 112:Serial.c      **** 	{
 169              		.loc 1 112 0 is_stmt 0 discriminator 1
 170 0042 FA8A     		ldrh	r2, [r7, #22]
 171 0044 FB88     		ldrh	r3, [r7, #6]
 172 0046 9A42     		cmp	r2, r3
 173 0048 E6D3     		bcc	.L11
 122:Serial.c      **** 		{
 123:Serial.c      **** 			/* Failed to send, this will be picked up in the receive comtest task. */
 124:Serial.c      **** 		}
 125:Serial.c      **** 	}
 126:Serial.c      **** }
 174              		.loc 1 126 0 is_stmt 1
 175 004a 00E0     		b	.L10
 176              	.L12:
 117:Serial.c      **** 		}
 177              		.loc 1 117 0
 178 004c 00BF     		nop
 179              	.L10:
 180              		.loc 1 126 0
 181 004e 00BF     		nop
 182 0050 1837     		adds	r7, r7, #24
 183              		.cfi_def_cfa_offset 8
 184 0052 BD46     		mov	sp, r7
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0054 80BD     		pop	{r7, pc}
 188              		.cfi_endproc
 189              	.LFE69:
 190              		.size	vSerialPutString, .-vSerialPutString
 191 0056 00BF     		.section	.text.xSerialGetChar,"ax",%progbits
 192              		.align	2
 193              		.global	xSerialGetChar
 194              		.thumb
 195              		.thumb_func
 196              		.type	xSerialGetChar, %function
 197              	xSerialGetChar:
 198              	.LFB70:
 127:Serial.c      **** /*---------------------------------------------------------------------------*/
 128:Serial.c      **** 
 129:Serial.c      **** signed portBASE_TYPE xSerialGetChar( xComPortHandle pxPort, signed char *pcRxedChar, TickType_t xBl
 130:Serial.c      **** {
 199              		.loc 1 130 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 24
 202              		@ frame_needed = 1, uses_anonymous_args = 0
 203 0000 80B5     		push	{r7, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 7, -8
 206              		.cfi_offset 14, -4
 207 0002 86B0     		sub	sp, sp, #24
 208              		.cfi_def_cfa_offset 32
 209 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 7


 210              		.cfi_def_cfa_register 7
 211 0006 F860     		str	r0, [r7, #12]
 212 0008 B960     		str	r1, [r7, #8]
 213 000a 7A60     		str	r2, [r7, #4]
 131:Serial.c      **** portBASE_TYPE xReturn = pdFALSE;
 214              		.loc 1 131 0
 215 000c 0023     		movs	r3, #0
 216 000e 7B61     		str	r3, [r7, #20]
 132:Serial.c      **** 
 133:Serial.c      **** 	if( pdTRUE == xQueueReceive( xSerialRxQueue, pcRxedChar, xBlockTime ) )
 217              		.loc 1 133 0
 218 0010 084B     		ldr	r3, .L16
 219 0012 1868     		ldr	r0, [r3]
 220 0014 0023     		movs	r3, #0
 221 0016 7A68     		ldr	r2, [r7, #4]
 222 0018 B968     		ldr	r1, [r7, #8]
 223 001a FFF7FEFF 		bl	xQueueGenericReceive
 224 001e 0346     		mov	r3, r0
 225 0020 012B     		cmp	r3, #1
 226 0022 01D1     		bne	.L14
 134:Serial.c      **** 	{
 135:Serial.c      **** 		/* Picked up a character. */
 136:Serial.c      **** 		xReturn = pdTRUE;
 227              		.loc 1 136 0
 228 0024 0123     		movs	r3, #1
 229 0026 7B61     		str	r3, [r7, #20]
 230              	.L14:
 137:Serial.c      **** 	}
 138:Serial.c      **** 	return xReturn;
 231              		.loc 1 138 0
 232 0028 7B69     		ldr	r3, [r7, #20]
 139:Serial.c      **** }
 233              		.loc 1 139 0
 234 002a 1846     		mov	r0, r3
 235 002c 1837     		adds	r7, r7, #24
 236              		.cfi_def_cfa_offset 8
 237 002e BD46     		mov	sp, r7
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 0030 80BD     		pop	{r7, pc}
 241              	.L17:
 242 0032 00BF     		.align	2
 243              	.L16:
 244 0034 04000000 		.word	xSerialRxQueue
 245              		.cfi_endproc
 246              	.LFE70:
 247              		.size	xSerialGetChar, .-xSerialGetChar
 248              		.section	.text.xSerialPutChar,"ax",%progbits
 249              		.align	2
 250              		.global	xSerialPutChar
 251              		.thumb
 252              		.thumb_func
 253              		.type	xSerialPutChar, %function
 254              	xSerialPutChar:
 255              	.LFB71:
 140:Serial.c      **** /*---------------------------------------------------------------------------*/
 141:Serial.c      **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 8


 142:Serial.c      **** signed portBASE_TYPE xSerialPutChar( xComPortHandle pxPort, signed char cOutChar, TickType_t xBlock
 143:Serial.c      **** {
 256              		.loc 1 143 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 24
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 86B0     		sub	sp, sp, #24
 265              		.cfi_def_cfa_offset 32
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 268 0006 F860     		str	r0, [r7, #12]
 269 0008 0B46     		mov	r3, r1
 270 000a 7A60     		str	r2, [r7, #4]
 271 000c FB72     		strb	r3, [r7, #11]
 144:Serial.c      **** portBASE_TYPE xReturn = pdFALSE;
 272              		.loc 1 144 0
 273 000e 0023     		movs	r3, #0
 274 0010 7B61     		str	r3, [r7, #20]
 145:Serial.c      **** 
 146:Serial.c      **** 	/* The ISR is processing characters is so just add to the end of the queue. */
 147:Serial.c      **** 	if( pdTRUE == xQueueSend( xSerialTxQueue, &cOutChar, xBlockTime ) )
 275              		.loc 1 147 0
 276 0012 0E4B     		ldr	r3, .L22
 277 0014 1868     		ldr	r0, [r3]
 278 0016 07F10B01 		add	r1, r7, #11
 279 001a 0023     		movs	r3, #0
 280 001c 7A68     		ldr	r2, [r7, #4]
 281 001e FFF7FEFF 		bl	xQueueGenericSend
 282 0022 0346     		mov	r3, r0
 283 0024 012B     		cmp	r3, #1
 284 0026 02D1     		bne	.L19
 148:Serial.c      **** 	{	
 149:Serial.c      **** 		xReturn = pdTRUE;
 285              		.loc 1 149 0
 286 0028 0123     		movs	r3, #1
 287 002a 7B61     		str	r3, [r7, #20]
 288 002c 01E0     		b	.L20
 289              	.L19:
 150:Serial.c      **** 	}
 151:Serial.c      **** 	else
 152:Serial.c      **** 	{
 153:Serial.c      **** 		/* The queue is probably full. */
 154:Serial.c      **** 		xReturn = pdFALSE;
 290              		.loc 1 154 0
 291 002e 0023     		movs	r3, #0
 292 0030 7B61     		str	r3, [r7, #20]
 293              	.L20:
 155:Serial.c      **** 	}
 156:Serial.c      **** 
 157:Serial.c      **** 	/* Make sure that the interrupt will fire in the case where:
 158:Serial.c      **** 	    Currently sending so the Tx Complete will fire.
 159:Serial.c      **** 	    Not sending so the Empty will fire.	*/
 160:Serial.c      **** 	taskENTER_CRITICAL();
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 9


 294              		.loc 1 160 0
 295 0032 FFF7FEFF 		bl	vPortEnterCritical
 161:Serial.c      **** 		UART_1_SetTxInterruptMode( UART_1_TX_STS_COMPLETE | UART_1_TX_STS_FIFO_EMPTY );
 296              		.loc 1 161 0
 297 0036 0320     		movs	r0, #3
 298 0038 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 162:Serial.c      **** 	taskEXIT_CRITICAL();
 299              		.loc 1 162 0
 300 003c FFF7FEFF 		bl	vPortExitCritical
 163:Serial.c      **** 	
 164:Serial.c      **** 	return xReturn;
 301              		.loc 1 164 0
 302 0040 7B69     		ldr	r3, [r7, #20]
 165:Serial.c      **** }
 303              		.loc 1 165 0
 304 0042 1846     		mov	r0, r3
 305 0044 1837     		adds	r7, r7, #24
 306              		.cfi_def_cfa_offset 8
 307 0046 BD46     		mov	sp, r7
 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 0048 80BD     		pop	{r7, pc}
 311              	.L23:
 312 004a 00BF     		.align	2
 313              	.L22:
 314 004c 00000000 		.word	xSerialTxQueue
 315              		.cfi_endproc
 316              	.LFE71:
 317              		.size	xSerialPutChar, .-xSerialPutChar
 318              		.section	.text.vUartRxISR,"ax",%progbits
 319              		.align	2
 320              		.global	vUartRxISR
 321              		.thumb
 322              		.thumb_func
 323              		.type	vUartRxISR, %function
 324              	vUartRxISR:
 325              	.LFB72:
 166:Serial.c      **** /*---------------------------------------------------------------------------*/
 167:Serial.c      **** 
 168:Serial.c      **** CY_ISR(vUartRxISR)
 169:Serial.c      **** {
 326              		.loc 1 169 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 24
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 86B0     		sub	sp, sp, #24
 335              		.cfi_def_cfa_offset 32
 336 0004 00AF     		add	r7, sp, #0
 337              		.cfi_def_cfa_register 7
 170:Serial.c      **** portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;
 338              		.loc 1 170 0
 339 0006 0023     		movs	r3, #0
 340 0008 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 10


 171:Serial.c      **** volatile unsigned char ucStatus = 0;
 341              		.loc 1 171 0
 342 000a 0023     		movs	r3, #0
 343 000c FB70     		strb	r3, [r7, #3]
 172:Serial.c      **** signed char cInChar = 0;
 344              		.loc 1 172 0
 345 000e 0023     		movs	r3, #0
 346 0010 BB70     		strb	r3, [r7, #2]
 173:Serial.c      **** unsigned long ulMask = 0;
 347              		.loc 1 173 0
 348 0012 0023     		movs	r3, #0
 349 0014 7B61     		str	r3, [r7, #20]
 174:Serial.c      **** 
 175:Serial.c      **** 	/* Read the status to acknowledge. */
 176:Serial.c      **** 	ucStatus = UART_1_ReadRxStatus();
 350              		.loc 1 176 0
 351 0016 FFF7FEFF 		bl	UART_1_ReadRxStatus
 352 001a 0346     		mov	r3, r0
 353 001c FB70     		strb	r3, [r7, #3]
 177:Serial.c      **** 
 178:Serial.c      **** 	/* Only interested in a character being received. */
 179:Serial.c      **** 	if( 0 != ( ucStatus & UART_1_RX_STS_FIFO_NOTEMPTY ) )
 354              		.loc 1 179 0
 355 001e FB78     		ldrb	r3, [r7, #3]
 356 0020 DBB2     		uxtb	r3, r3
 357 0022 03F02003 		and	r3, r3, #32
 358 0026 002B     		cmp	r3, #0
 359 0028 1ED0     		beq	.L25
 180:Serial.c      **** 	{
 181:Serial.c      **** 		/* Get the character. */
 182:Serial.c      **** 		cInChar = UART_1_GetChar();
 360              		.loc 1 182 0
 361 002a FFF7FEFF 		bl	UART_1_GetChar
 362 002e 0346     		mov	r3, r0
 363 0030 5BB2     		sxtb	r3, r3
 364 0032 BB70     		strb	r3, [r7, #2]
 365              	.LBB10:
 366              	.LBB11:
 367              		.file 2 "..\\Source\\portable\\GCC\\ARM_CM3/portmacro.h"
   1:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*
   2:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     All rights reserved
   4:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   5:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   7:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
   9:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  13:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  14:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 11


  19:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  20:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  25:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  26:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  27:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  32:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\Source\portable\GCC\ARM_CM3/portmacro.h ****      *                                                                       *
  37:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     ***************************************************************************
  38:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  39:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     defined configASSERT()?
  42:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  43:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     embedded software for free we request you assist our global community by
  45:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     participating in the support forum.
  46:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  47:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  52:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  56:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  59:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  63:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     mission critical applications that require provable dependability.
  66:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  67:..\Source\portable\GCC\ARM_CM3/portmacro.h ****     1 tab == 4 spaces!
  68:..\Source\portable\GCC\ARM_CM3/portmacro.h **** */
  69:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  70:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  71:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  72:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define PORTMACRO_H
  73:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  74:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef __cplusplus
  75:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern "C" {
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 12


  76:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
  77:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  78:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  79:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * Port specific definitions.
  80:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  81:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * given hardware and compiler.
  83:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *
  84:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  * These settings should not be altered.
  85:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  86:..\Source\portable\GCC\ARM_CM3/portmacro.h ****  */
  87:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  88:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Type definitions. */
  89:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCHAR		char
  90:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portFLOAT		float
  91:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDOUBLE		double
  92:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portLONG		long
  93:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSHORT		short
  94:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  96:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
  97:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef long BaseType_t;
  99:..\Source\portable\GCC\ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
 100:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 101:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
 103:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #else
 105:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
 106:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 108:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
 110:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 112:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 113:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 114:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specifics. */
 115:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 119:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 120:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Scheduler utilities. */
 121:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD() 															\
 122:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {																				\
 123:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 																				\
 126:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
 130:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 131:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 132:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 13


 133:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 137:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 138:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Critical section management. */
 139:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
 140:..\Source\portable\GCC\ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
 141:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 148:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 149:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 150:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:..\Source\portable\GCC\ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:..\Source\portable\GCC\ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 153:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 156:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 157:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 158:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 162:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 163:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 164:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 165:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 168:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 169:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 171:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 172:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 174:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 175:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 176:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		return ucReturn;
 178:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 179:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 180:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 181:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#endif
 184:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 185:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 189:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 14


 190:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 191:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 193:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 195:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 196:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 197:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifdef configASSERT
 198:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 201:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 202:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 203:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portNOP()
 204:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 205:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #define portINLINE	__inline
 206:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 207:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 208:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:..\Source\portable\GCC\ARM_CM3/portmacro.h **** #endif
 210:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 211:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 213:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:..\Source\portable\GCC\ARM_CM3/portmacro.h **** BaseType_t xReturn;
 215:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 216:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 219:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 221:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 222:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 223:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	else
 224:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	{
 225:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 226:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	}
 227:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 228:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return xReturn;
 229:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 230:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 231:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 232:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 233:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 235:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 236:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 237:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 238:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 239:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %0, %1												\n"	\
 240:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %0											\n" \
 241:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 242:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 243:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 244:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 245:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 246:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 15


 247:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 248:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 249:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 250:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 251:..\Source\portable\GCC\ARM_CM3/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 252:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 368              		.loc 2 253 0
 369              		.syntax unified
 370              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 371 0034 EFF31182 			mrs r2, basepri											
 372 0038 4FF0A003 		mov r3, #160												
 373 003c 83F31188 		msr basepri, r3											
 374 0040 BFF36F8F 		isb														
 375 0044 BFF34F8F 		dsb														
 376              	
 377              	@ 0 "" 2
 378              		.thumb
 379              		.syntax unified
 380 0048 FA60     		str	r2, [r7, #12]
 381 004a BB60     		str	r3, [r7, #8]
 254:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 255:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mrs %0, basepri											\n" \
 256:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	mov %1, %2												\n"	\
 257:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	msr basepri, %1											\n" \
 258:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	isb														\n" \
 259:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		"	dsb														\n" \
 260:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 261:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	);
 262:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 263:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 264:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	warnings. */
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	return ulOriginalBASEPRI;
 382              		.loc 2 265 0
 383 004c FB68     		ldr	r3, [r7, #12]
 384              	.LBE11:
 385              	.LBE10:
 183:Serial.c      **** 		
 184:Serial.c      **** 		/* Mask off the other RTOS interrupts to interact with the queue. */
 185:Serial.c      **** 		ulMask = portSET_INTERRUPT_MASK_FROM_ISR();
 386              		.loc 1 185 0
 387 004e 7B61     		str	r3, [r7, #20]
 186:Serial.c      **** 		{
 187:Serial.c      **** 			/* Try to deliver the character. */
 188:Serial.c      **** 			if( pdTRUE != xQueueSendFromISR( xSerialRxQueue, &cInChar, &xHigherPriorityTaskWoken ) )
 388              		.loc 1 188 0
 389 0050 0D4B     		ldr	r3, .L29
 390 0052 1868     		ldr	r0, [r3]
 391 0054 3A1D     		adds	r2, r7, #4
 392 0056 B91C     		adds	r1, r7, #2
 393 0058 0023     		movs	r3, #0
 394 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 395 005e 7B69     		ldr	r3, [r7, #20]
 396 0060 3B61     		str	r3, [r7, #16]
 397              	.LBB12:
 398              	.LBB13:
 266:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 16


 267:..\Source\portable\GCC\ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 268:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 
 269:..\Source\portable\GCC\ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 270:..\Source\portable\GCC\ARM_CM3/portmacro.h **** {
 271:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	__asm volatile
 399              		.loc 2 271 0
 400 0062 3B69     		ldr	r3, [r7, #16]
 401              		.syntax unified
 402              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 403 0064 83F31188 			msr basepri, r3	
 404              	@ 0 "" 2
 405              		.thumb
 406              		.syntax unified
 407              	.L25:
 408              	.LBE13:
 409              	.LBE12:
 189:Serial.c      **** 			{
 190:Serial.c      **** 				/* Run out of space. */
 191:Serial.c      **** 			}
 192:Serial.c      **** 		}
 193:Serial.c      **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( ulMask );
 194:Serial.c      **** 	}
 195:Serial.c      **** 
 196:Serial.c      **** 	/* If we delivered the character then a context switch might be required.
 197:Serial.c      **** 	xHigherPriorityTaskWoken was set to pdFALSE on interrupt entry.  If calling 
 198:Serial.c      **** 	xQueueSendFromISR() caused a task to unblock, and the unblocked task has
 199:Serial.c      **** 	a priority equal to or higher than the currently running task (the task this
 200:Serial.c      **** 	ISR interrupted), then xHigherPriorityTaskWoken will have been set to pdTRUE and
 201:Serial.c      **** 	portEND_SWITCHING_ISR() will request a context switch to the newly unblocked
 202:Serial.c      **** 	task. */
 203:Serial.c      **** 	portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 410              		.loc 1 203 0
 411 0068 7B68     		ldr	r3, [r7, #4]
 412 006a 002B     		cmp	r3, #0
 413 006c 07D0     		beq	.L28
 414              		.loc 1 203 0 is_stmt 0 discriminator 1
 415 006e 074B     		ldr	r3, .L29+4
 416 0070 4FF08052 		mov	r2, #268435456
 417 0074 1A60     		str	r2, [r3]
 418              		.syntax unified
 419              	@ 203 "Serial.c" 1
 420 0076 BFF34F8F 		dsb
 421              	@ 0 "" 2
 422              	@ 203 "Serial.c" 1
 423 007a BFF36F8F 		isb
 424              	@ 0 "" 2
 425              		.thumb
 426              		.syntax unified
 427              	.L28:
 204:Serial.c      **** }
 428              		.loc 1 204 0 is_stmt 1
 429 007e 00BF     		nop
 430 0080 1837     		adds	r7, r7, #24
 431              		.cfi_def_cfa_offset 8
 432 0082 BD46     		mov	sp, r7
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 17


 435 0084 80BD     		pop	{r7, pc}
 436              	.L30:
 437 0086 00BF     		.align	2
 438              	.L29:
 439 0088 04000000 		.word	xSerialRxQueue
 440 008c 04ED00E0 		.word	-536810236
 441              		.cfi_endproc
 442              	.LFE72:
 443              		.size	vUartRxISR, .-vUartRxISR
 444              		.section	.text.vUartTxISR,"ax",%progbits
 445              		.align	2
 446              		.global	vUartTxISR
 447              		.thumb
 448              		.thumb_func
 449              		.type	vUartTxISR, %function
 450              	vUartTxISR:
 451              	.LFB73:
 205:Serial.c      **** /*---------------------------------------------------------------------------*/
 206:Serial.c      **** 
 207:Serial.c      **** CY_ISR(vUartTxISR)
 208:Serial.c      **** {
 452              		.loc 1 208 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 24
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 86B0     		sub	sp, sp, #24
 461              		.cfi_def_cfa_offset 32
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 209:Serial.c      **** portBASE_TYPE xHigherPriorityTaskWoken = pdFALSE;
 464              		.loc 1 209 0
 465 0006 0023     		movs	r3, #0
 466 0008 7B60     		str	r3, [r7, #4]
 210:Serial.c      **** volatile unsigned char ucStatus = 0;
 467              		.loc 1 210 0
 468 000a 0023     		movs	r3, #0
 469 000c FB70     		strb	r3, [r7, #3]
 211:Serial.c      **** signed char cOutChar = 0;
 470              		.loc 1 211 0
 471 000e 0023     		movs	r3, #0
 472 0010 BB70     		strb	r3, [r7, #2]
 212:Serial.c      **** unsigned long ulMask = 0;
 473              		.loc 1 212 0
 474 0012 0023     		movs	r3, #0
 475 0014 7B61     		str	r3, [r7, #20]
 213:Serial.c      **** 
 214:Serial.c      **** 	/* Read the status to acknowledge. */
 215:Serial.c      **** 	ucStatus = UART_1_ReadTxStatus();
 476              		.loc 1 215 0
 477 0016 FFF7FEFF 		bl	UART_1_ReadTxStatus
 478 001a 0346     		mov	r3, r0
 479 001c FB70     		strb	r3, [r7, #3]
 216:Serial.c      **** 	
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 18


 217:Serial.c      **** 	/* Check to see whether this is a genuine interrupt. */
 218:Serial.c      **** 	if( ( 0 != ( ucStatus & UART_1_TX_STS_COMPLETE ) ) || ( 0 != ( ucStatus & UART_1_TX_STS_FIFO_EMPTY
 480              		.loc 1 218 0
 481 001e FB78     		ldrb	r3, [r7, #3]
 482 0020 DBB2     		uxtb	r3, r3
 483 0022 03F00103 		and	r3, r3, #1
 484 0026 002B     		cmp	r3, #0
 485 0028 05D1     		bne	.L32
 486              		.loc 1 218 0 is_stmt 0 discriminator 1
 487 002a FB78     		ldrb	r3, [r7, #3]
 488 002c DBB2     		uxtb	r3, r3
 489 002e 03F00203 		and	r3, r3, #2
 490 0032 002B     		cmp	r3, #0
 491 0034 29D0     		beq	.L33
 492              	.L32:
 493              	.LBB14:
 494              	.LBB15:
 253:..\Source\portable\GCC\ARM_CM3/portmacro.h **** 	(
 495              		.loc 2 253 0 is_stmt 1
 496              		.syntax unified
 497              	@ 253 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 498 0036 EFF31182 			mrs r2, basepri											
 499 003a 4FF0A003 		mov r3, #160												
 500 003e 83F31188 		msr basepri, r3											
 501 0042 BFF36F8F 		isb														
 502 0046 BFF34F8F 		dsb														
 503              	
 504              	@ 0 "" 2
 505              		.thumb
 506              		.syntax unified
 507 004a FA60     		str	r2, [r7, #12]
 508 004c BB60     		str	r3, [r7, #8]
 265:..\Source\portable\GCC\ARM_CM3/portmacro.h **** }
 509              		.loc 2 265 0
 510 004e FB68     		ldr	r3, [r7, #12]
 511              	.LBE15:
 512              	.LBE14:
 219:Serial.c      **** 	{	
 220:Serial.c      **** 		/* Mask off the other RTOS interrupts to interact with the queue. */
 221:Serial.c      **** 		ulMask = portSET_INTERRUPT_MASK_FROM_ISR();
 513              		.loc 1 221 0
 514 0050 7B61     		str	r3, [r7, #20]
 222:Serial.c      **** 		{
 223:Serial.c      **** 			if( pdTRUE == xQueueReceiveFromISR( xSerialTxQueue, &cOutChar, &xHigherPriorityTaskWoken ) )
 515              		.loc 1 223 0
 516 0052 154B     		ldr	r3, .L39
 517 0054 1B68     		ldr	r3, [r3]
 518 0056 3A1D     		adds	r2, r7, #4
 519 0058 B91C     		adds	r1, r7, #2
 520 005a 1846     		mov	r0, r3
 521 005c FFF7FEFF 		bl	xQueueReceiveFromISR
 522 0060 0346     		mov	r3, r0
 523 0062 012B     		cmp	r3, #1
 524 0064 09D1     		bne	.L35
 224:Serial.c      **** 			{
 225:Serial.c      **** 				/* Send the next character. */
 226:Serial.c      **** 				UART_1_PutChar( cOutChar );			
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 19


 525              		.loc 1 226 0
 526 0066 97F90230 		ldrsb	r3, [r7, #2]
 527 006a DBB2     		uxtb	r3, r3
 528 006c 1846     		mov	r0, r3
 529 006e FFF7FEFF 		bl	UART_1_PutChar
 227:Serial.c      **** 
 228:Serial.c      **** 				/* If we are firing, then the only interrupt we are interested in
 229:Serial.c      **** 				is the Complete. The application code will add the Empty interrupt
 230:Serial.c      **** 				when there is something else to be done. */
 231:Serial.c      **** 				UART_1_SetTxInterruptMode( UART_1_TX_STS_COMPLETE );
 530              		.loc 1 231 0
 531 0072 0120     		movs	r0, #1
 532 0074 FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 533 0078 02E0     		b	.L36
 534              	.L35:
 232:Serial.c      **** 			}
 233:Serial.c      **** 			else
 234:Serial.c      **** 			{
 235:Serial.c      **** 				/* There is no work left so disable the interrupt until the application 
 236:Serial.c      **** 				puts more into the queue. */
 237:Serial.c      **** 				UART_1_SetTxInterruptMode( 0 );
 535              		.loc 1 237 0
 536 007a 0020     		movs	r0, #0
 537 007c FFF7FEFF 		bl	UART_1_SetTxInterruptMode
 538              	.L36:
 539 0080 7B69     		ldr	r3, [r7, #20]
 540 0082 3B61     		str	r3, [r7, #16]
 541              	.LBB16:
 542              	.LBB17:
 543              		.loc 2 271 0
 544 0084 3B69     		ldr	r3, [r7, #16]
 545              		.syntax unified
 546              	@ 271 "..\Source\portable\GCC\ARM_CM3/portmacro.h" 1
 547 0086 83F31188 			msr basepri, r3	
 548              	@ 0 "" 2
 549              		.thumb
 550              		.syntax unified
 551              	.L33:
 552              	.LBE17:
 553              	.LBE16:
 238:Serial.c      **** 			}
 239:Serial.c      **** 		}
 240:Serial.c      **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( ulMask );
 241:Serial.c      **** 	}
 242:Serial.c      **** 
 243:Serial.c      **** 	/* If we delivered the character then a context switch might be required.
 244:Serial.c      **** 	xHigherPriorityTaskWoken was set to pdFALSE on interrupt entry.  If calling 
 245:Serial.c      **** 	xQueueSendFromISR() caused a task to unblock, and the unblocked task has
 246:Serial.c      **** 	a priority equal to or higher than the currently running task (the task this
 247:Serial.c      **** 	ISR interrupted), then xHigherPriorityTaskWoken will have been set to pdTRUE and
 248:Serial.c      **** 	portEND_SWITCHING_ISR() will request a context switch to the newly unblocked
 249:Serial.c      **** 	task. */
 250:Serial.c      **** 	portEND_SWITCHING_ISR( xHigherPriorityTaskWoken );
 554              		.loc 1 250 0
 555 008a 7B68     		ldr	r3, [r7, #4]
 556 008c 002B     		cmp	r3, #0
 557 008e 07D0     		beq	.L38
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 20


 558              		.loc 1 250 0 is_stmt 0 discriminator 1
 559 0090 064B     		ldr	r3, .L39+4
 560 0092 4FF08052 		mov	r2, #268435456
 561 0096 1A60     		str	r2, [r3]
 562              		.syntax unified
 563              	@ 250 "Serial.c" 1
 564 0098 BFF34F8F 		dsb
 565              	@ 0 "" 2
 566              	@ 250 "Serial.c" 1
 567 009c BFF36F8F 		isb
 568              	@ 0 "" 2
 569              		.thumb
 570              		.syntax unified
 571              	.L38:
 251:Serial.c      **** }
 572              		.loc 1 251 0 is_stmt 1
 573 00a0 00BF     		nop
 574 00a2 1837     		adds	r7, r7, #24
 575              		.cfi_def_cfa_offset 8
 576 00a4 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 00a6 80BD     		pop	{r7, pc}
 580              	.L40:
 581              		.align	2
 582              	.L39:
 583 00a8 00000000 		.word	xSerialTxQueue
 584 00ac 04ED00E0 		.word	-536810236
 585              		.cfi_endproc
 586              	.LFE73:
 587              		.size	vUartTxISR, .-vUartTxISR
 588              		.text
 589              	.Letext0:
 590              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 591              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 592              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 593              		.file 6 ".\\Tracer/sniffPayload.h"
 594              		.file 7 ".\\Tracer/selfFIFO.h"
 595              		.file 8 "..\\Source\\include/queue.h"
 596              		.file 9 "..\\Common\\include/serial.h"
 597              		.file 10 "Generated_Source\\PSoC5/core_cm3.h"
 598              		.file 11 ".\\Tracer/sniffTask.h"
 599              		.section	.debug_info,"",%progbits
 600              	.Ldebug_info0:
 601 0000 89050000 		.4byte	0x589
 602 0004 0400     		.2byte	0x4
 603 0006 00000000 		.4byte	.Ldebug_abbrev0
 604 000a 04       		.byte	0x4
 605 000b 01       		.uleb128 0x1
 606 000c 69000000 		.4byte	.LASF76
 607 0010 0C       		.byte	0xc
 608 0011 D1030000 		.4byte	.LASF77
 609 0015 3E040000 		.4byte	.LASF78
 610 0019 00000000 		.4byte	.Ldebug_ranges0+0
 611 001d 00000000 		.4byte	0
 612 0021 00000000 		.4byte	.Ldebug_line0
 613 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 21


 614 0026 01       		.byte	0x1
 615 0027 06       		.byte	0x6
 616 0028 60020000 		.4byte	.LASF0
 617 002c 03       		.uleb128 0x3
 618 002d D0010000 		.4byte	.LASF4
 619 0031 03       		.byte	0x3
 620 0032 1D       		.byte	0x1d
 621 0033 37000000 		.4byte	0x37
 622 0037 02       		.uleb128 0x2
 623 0038 01       		.byte	0x1
 624 0039 08       		.byte	0x8
 625 003a 2F020000 		.4byte	.LASF1
 626 003e 02       		.uleb128 0x2
 627 003f 02       		.byte	0x2
 628 0040 05       		.byte	0x5
 629 0041 45000000 		.4byte	.LASF2
 630 0045 02       		.uleb128 0x2
 631 0046 02       		.byte	0x2
 632 0047 07       		.byte	0x7
 633 0048 28030000 		.4byte	.LASF3
 634 004c 03       		.uleb128 0x3
 635 004d B8030000 		.4byte	.LASF5
 636 0051 03       		.byte	0x3
 637 0052 3F       		.byte	0x3f
 638 0053 57000000 		.4byte	0x57
 639 0057 02       		.uleb128 0x2
 640 0058 04       		.byte	0x4
 641 0059 05       		.byte	0x5
 642 005a A0010000 		.4byte	.LASF6
 643 005e 03       		.uleb128 0x3
 644 005f 00010000 		.4byte	.LASF7
 645 0063 03       		.byte	0x3
 646 0064 41       		.byte	0x41
 647 0065 69000000 		.4byte	0x69
 648 0069 02       		.uleb128 0x2
 649 006a 04       		.byte	0x4
 650 006b 07       		.byte	0x7
 651 006c CE020000 		.4byte	.LASF8
 652 0070 02       		.uleb128 0x2
 653 0071 08       		.byte	0x8
 654 0072 05       		.byte	0x5
 655 0073 87010000 		.4byte	.LASF9
 656 0077 02       		.uleb128 0x2
 657 0078 08       		.byte	0x8
 658 0079 07       		.byte	0x7
 659 007a 6C020000 		.4byte	.LASF10
 660 007e 04       		.uleb128 0x4
 661 007f 04       		.byte	0x4
 662 0080 05       		.byte	0x5
 663 0081 696E7400 		.ascii	"int\000"
 664 0085 02       		.uleb128 0x2
 665 0086 04       		.byte	0x4
 666 0087 07       		.byte	0x7
 667 0088 A5020000 		.4byte	.LASF11
 668 008c 03       		.uleb128 0x3
 669 008d 2E010000 		.4byte	.LASF12
 670 0091 04       		.byte	0x4
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 22


 671 0092 18       		.byte	0x18
 672 0093 2C000000 		.4byte	0x2c
 673 0097 03       		.uleb128 0x3
 674 0098 20030000 		.4byte	.LASF13
 675 009c 04       		.byte	0x4
 676 009d 2C       		.byte	0x2c
 677 009e 4C000000 		.4byte	0x4c
 678 00a2 03       		.uleb128 0x3
 679 00a3 9C020000 		.4byte	.LASF14
 680 00a7 04       		.byte	0x4
 681 00a8 30       		.byte	0x30
 682 00a9 5E000000 		.4byte	0x5e
 683 00ad 05       		.uleb128 0x5
 684 00ae 43030000 		.4byte	.LASF15
 685 00b2 05       		.byte	0x5
 686 00b3 9201     		.2byte	0x192
 687 00b5 37000000 		.4byte	0x37
 688 00b9 02       		.uleb128 0x2
 689 00ba 04       		.byte	0x4
 690 00bb 04       		.byte	0x4
 691 00bc 75010000 		.4byte	.LASF16
 692 00c0 02       		.uleb128 0x2
 693 00c1 08       		.byte	0x8
 694 00c2 04       		.byte	0x4
 695 00c3 81030000 		.4byte	.LASF17
 696 00c7 02       		.uleb128 0x2
 697 00c8 01       		.byte	0x1
 698 00c9 08       		.byte	0x8
 699 00ca 12030000 		.4byte	.LASF18
 700 00ce 02       		.uleb128 0x2
 701 00cf 08       		.byte	0x8
 702 00d0 04       		.byte	0x4
 703 00d1 1B020000 		.4byte	.LASF19
 704 00d5 02       		.uleb128 0x2
 705 00d6 04       		.byte	0x4
 706 00d7 07       		.byte	0x7
 707 00d8 4F000000 		.4byte	.LASF20
 708 00dc 06       		.uleb128 0x6
 709 00dd 04       		.byte	0x4
 710 00de 07       		.uleb128 0x7
 711 00df 01       		.byte	0x1
 712 00e0 37000000 		.4byte	0x37
 713 00e4 06       		.byte	0x6
 714 00e5 10       		.byte	0x10
 715 00e6 15010000 		.4byte	0x115
 716 00ea 08       		.uleb128 0x8
 717 00eb F7010000 		.4byte	.LASF21
 718 00ef 00       		.byte	0
 719 00f0 08       		.uleb128 0x8
 720 00f1 58000000 		.4byte	.LASF22
 721 00f5 01       		.byte	0x1
 722 00f6 08       		.uleb128 0x8
 723 00f7 FD010000 		.4byte	.LASF23
 724 00fb 02       		.byte	0x2
 725 00fc 08       		.uleb128 0x8
 726 00fd 88030000 		.4byte	.LASF24
 727 0101 03       		.byte	0x3
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 23


 728 0102 08       		.uleb128 0x8
 729 0103 C0010000 		.4byte	.LASF25
 730 0107 04       		.byte	0x4
 731 0108 08       		.uleb128 0x8
 732 0109 B3030000 		.4byte	.LASF26
 733 010d 05       		.byte	0x5
 734 010e 08       		.uleb128 0x8
 735 010f 64030000 		.4byte	.LASF27
 736 0113 06       		.byte	0x6
 737 0114 00       		.byte	0
 738 0115 03       		.uleb128 0x3
 739 0116 63010000 		.4byte	.LASF28
 740 011a 06       		.byte	0x6
 741 011b 10       		.byte	0x10
 742 011c DE000000 		.4byte	0xde
 743 0120 09       		.uleb128 0x9
 744 0121 04       		.byte	0x4
 745 0122 06       		.byte	0x6
 746 0123 86       		.byte	0x86
 747 0124 59010000 		.4byte	0x159
 748 0128 0A       		.uleb128 0xa
 749 0129 17030000 		.4byte	.LASF29
 750 012d 06       		.byte	0x6
 751 012e 87       		.byte	0x87
 752 012f 8C000000 		.4byte	0x8c
 753 0133 00       		.byte	0
 754 0134 0A       		.uleb128 0xa
 755 0135 00000000 		.4byte	.LASF30
 756 0139 06       		.byte	0x6
 757 013a 88       		.byte	0x88
 758 013b 8C000000 		.4byte	0x8c
 759 013f 01       		.byte	0x1
 760 0140 0A       		.uleb128 0xa
 761 0141 5E000000 		.4byte	.LASF31
 762 0145 06       		.byte	0x6
 763 0146 89       		.byte	0x89
 764 0147 15010000 		.4byte	0x115
 765 014b 02       		.byte	0x2
 766 014c 0A       		.uleb128 0xa
 767 014d 6E010000 		.4byte	.LASF32
 768 0151 06       		.byte	0x6
 769 0152 8A       		.byte	0x8a
 770 0153 8C000000 		.4byte	0x8c
 771 0157 03       		.byte	0x3
 772 0158 00       		.byte	0
 773 0159 03       		.uleb128 0x3
 774 015a B2020000 		.4byte	.LASF33
 775 015e 06       		.byte	0x6
 776 015f 8B       		.byte	0x8b
 777 0160 20010000 		.4byte	0x120
 778 0164 09       		.uleb128 0x9
 779 0165 0E       		.byte	0xe
 780 0166 06       		.byte	0x6
 781 0167 95       		.byte	0x95
 782 0168 91010000 		.4byte	0x191
 783 016c 0A       		.uleb128 0xa
 784 016d 2B000000 		.4byte	.LASF34
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 24


 785 0171 06       		.byte	0x6
 786 0172 96       		.byte	0x96
 787 0173 8C000000 		.4byte	0x8c
 788 0177 00       		.byte	0
 789 0178 0A       		.uleb128 0xa
 790 0179 42010000 		.4byte	.LASF35
 791 017d 06       		.byte	0x6
 792 017e 97       		.byte	0x97
 793 017f 8C000000 		.4byte	0x8c
 794 0183 01       		.byte	0x1
 795 0184 0A       		.uleb128 0xa
 796 0185 10020000 		.4byte	.LASF36
 797 0189 06       		.byte	0x6
 798 018a 98       		.byte	0x98
 799 018b 91010000 		.4byte	0x191
 800 018f 02       		.byte	0x2
 801 0190 00       		.byte	0
 802 0191 0B       		.uleb128 0xb
 803 0192 C7000000 		.4byte	0xc7
 804 0196 A1010000 		.4byte	0x1a1
 805 019a 0C       		.uleb128 0xc
 806 019b D5000000 		.4byte	0xd5
 807 019f 0B       		.byte	0xb
 808 01a0 00       		.byte	0
 809 01a1 03       		.uleb128 0x3
 810 01a2 7B010000 		.4byte	.LASF37
 811 01a6 06       		.byte	0x6
 812 01a7 99       		.byte	0x99
 813 01a8 64010000 		.4byte	0x164
 814 01ac 0D       		.uleb128 0xd
 815 01ad 1C01     		.2byte	0x11c
 816 01af 06       		.byte	0x6
 817 01b0 A3       		.byte	0xa3
 818 01b1 CE010000 		.4byte	0x1ce
 819 01b5 0A       		.uleb128 0xa
 820 01b6 0B010000 		.4byte	.LASF38
 821 01ba 06       		.byte	0x6
 822 01bb A4       		.byte	0xa4
 823 01bc 59010000 		.4byte	0x159
 824 01c0 00       		.byte	0
 825 01c1 0A       		.uleb128 0xa
 826 01c2 36010000 		.4byte	.LASF39
 827 01c6 06       		.byte	0x6
 828 01c7 A5       		.byte	0xa5
 829 01c8 CE010000 		.4byte	0x1ce
 830 01cc 04       		.byte	0x4
 831 01cd 00       		.byte	0
 832 01ce 0B       		.uleb128 0xb
 833 01cf A1010000 		.4byte	0x1a1
 834 01d3 DE010000 		.4byte	0x1de
 835 01d7 0C       		.uleb128 0xc
 836 01d8 D5000000 		.4byte	0xd5
 837 01dc 13       		.byte	0x13
 838 01dd 00       		.byte	0
 839 01de 03       		.uleb128 0x3
 840 01df FA030000 		.4byte	.LASF40
 841 01e3 06       		.byte	0x6
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 25


 842 01e4 A6       		.byte	0xa6
 843 01e5 AC010000 		.4byte	0x1ac
 844 01e9 0E       		.uleb128 0xe
 845 01ea 12040000 		.4byte	.LASF79
 846 01ee 0210     		.2byte	0x1002
 847 01f0 07       		.byte	0x7
 848 01f1 0C       		.byte	0xc
 849 01f2 1D020000 		.4byte	0x21d
 850 01f6 0A       		.uleb128 0xa
 851 01f7 58030000 		.4byte	.LASF41
 852 01fb 07       		.byte	0x7
 853 01fc 0D       		.byte	0xd
 854 01fd 1D020000 		.4byte	0x21d
 855 0201 00       		.byte	0
 856 0202 0F       		.uleb128 0xf
 857 0203 82010000 		.4byte	.LASF42
 858 0207 07       		.byte	0x7
 859 0208 0E       		.byte	0xe
 860 0209 8C000000 		.4byte	0x8c
 861 020d 0010     		.2byte	0x1000
 862 020f 0F       		.uleb128 0xf
 863 0210 25000000 		.4byte	.LASF43
 864 0214 07       		.byte	0x7
 865 0215 0F       		.byte	0xf
 866 0216 8C000000 		.4byte	0x8c
 867 021a 0110     		.2byte	0x1001
 868 021c 00       		.byte	0
 869 021d 0B       		.uleb128 0xb
 870 021e 8C000000 		.4byte	0x8c
 871 0222 2E020000 		.4byte	0x22e
 872 0226 10       		.uleb128 0x10
 873 0227 D5000000 		.4byte	0xd5
 874 022b FF0F     		.2byte	0xfff
 875 022d 00       		.byte	0
 876 022e 03       		.uleb128 0x3
 877 022f C3020000 		.4byte	.LASF44
 878 0233 02       		.byte	0x2
 879 0234 62       		.byte	0x62
 880 0235 57000000 		.4byte	0x57
 881 0239 03       		.uleb128 0x3
 882 023a 95010000 		.4byte	.LASF45
 883 023e 02       		.byte	0x2
 884 023f 69       		.byte	0x69
 885 0240 A2000000 		.4byte	0xa2
 886 0244 03       		.uleb128 0x3
 887 0245 DA010000 		.4byte	.LASF46
 888 0249 08       		.byte	0x8
 889 024a 58       		.byte	0x58
 890 024b DC000000 		.4byte	0xdc
 891 024f 03       		.uleb128 0x3
 892 0250 49030000 		.4byte	.LASF47
 893 0254 09       		.byte	0x9
 894 0255 49       		.byte	0x49
 895 0256 DC000000 		.4byte	0xdc
 896 025a 11       		.uleb128 0x11
 897 025b 50010000 		.4byte	.LASF80
 898 025f 02       		.byte	0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 26


 899 0260 F9       		.byte	0xf9
 900 0261 A2000000 		.4byte	0xa2
 901 0265 03       		.byte	0x3
 902 0266 81020000 		.4byte	0x281
 903 026a 12       		.uleb128 0x12
 904 026b 4E020000 		.4byte	.LASF48
 905 026f 02       		.byte	0x2
 906 0270 FB       		.byte	0xfb
 907 0271 A2000000 		.4byte	0xa2
 908 0275 12       		.uleb128 0x12
 909 0276 38000000 		.4byte	.LASF49
 910 027a 02       		.byte	0x2
 911 027b FB       		.byte	0xfb
 912 027c A2000000 		.4byte	0xa2
 913 0280 00       		.byte	0
 914 0281 13       		.uleb128 0x13
 915 0282 02030000 		.4byte	.LASF81
 916 0286 02       		.byte	0x2
 917 0287 0D01     		.2byte	0x10d
 918 0289 03       		.byte	0x3
 919 028a 9B020000 		.4byte	0x29b
 920 028e 14       		.uleb128 0x14
 921 028f A4030000 		.4byte	.LASF82
 922 0293 02       		.byte	0x2
 923 0294 0D01     		.2byte	0x10d
 924 0296 A2000000 		.4byte	0xa2
 925 029a 00       		.byte	0
 926 029b 15       		.uleb128 0x15
 927 029c 0E000000 		.4byte	.LASF55
 928 02a0 01       		.byte	0x1
 929 02a1 58       		.byte	0x58
 930 02a2 4F020000 		.4byte	0x24f
 931 02a6 00000000 		.4byte	.LFB68
 932 02aa 74000000 		.4byte	.LFE68-.LFB68
 933 02ae 01       		.uleb128 0x1
 934 02af 9C       		.byte	0x9c
 935 02b0 D1020000 		.4byte	0x2d1
 936 02b4 16       		.uleb128 0x16
 937 02b5 ED030000 		.4byte	.LASF50
 938 02b9 01       		.byte	0x1
 939 02ba 58       		.byte	0x58
 940 02bb 69000000 		.4byte	0x69
 941 02bf 02       		.uleb128 0x2
 942 02c0 91       		.byte	0x91
 943 02c1 74       		.sleb128 -12
 944 02c2 16       		.uleb128 0x16
 945 02c3 EB020000 		.4byte	.LASF51
 946 02c7 01       		.byte	0x1
 947 02c8 58       		.byte	0x58
 948 02c9 69000000 		.4byte	0x69
 949 02cd 02       		.uleb128 0x2
 950 02ce 91       		.byte	0x91
 951 02cf 70       		.sleb128 -16
 952 02d0 00       		.byte	0
 953 02d1 17       		.uleb128 0x17
 954 02d2 3D020000 		.4byte	.LASF63
 955 02d6 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 27


 956 02d7 6C       		.byte	0x6c
 957 02d8 00000000 		.4byte	.LFB69
 958 02dc 56000000 		.4byte	.LFE69-.LFB69
 959 02e0 01       		.uleb128 0x1
 960 02e1 9C       		.byte	0x9c
 961 02e2 1F030000 		.4byte	0x31f
 962 02e6 16       		.uleb128 0x16
 963 02e7 27010000 		.4byte	.LASF52
 964 02eb 01       		.byte	0x1
 965 02ec 6C       		.byte	0x6c
 966 02ed 4F020000 		.4byte	0x24f
 967 02f1 02       		.uleb128 0x2
 968 02f2 91       		.byte	0x91
 969 02f3 6C       		.sleb128 -20
 970 02f4 16       		.uleb128 0x16
 971 02f5 F7000000 		.4byte	.LASF53
 972 02f9 01       		.byte	0x1
 973 02fa 6C       		.byte	0x6c
 974 02fb 2A030000 		.4byte	0x32a
 975 02ff 02       		.uleb128 0x2
 976 0300 91       		.byte	0x91
 977 0301 68       		.sleb128 -24
 978 0302 16       		.uleb128 0x16
 979 0303 99040000 		.4byte	.LASF54
 980 0307 01       		.byte	0x1
 981 0308 6C       		.byte	0x6c
 982 0309 45000000 		.4byte	0x45
 983 030d 02       		.uleb128 0x2
 984 030e 91       		.byte	0x91
 985 030f 66       		.sleb128 -26
 986 0310 18       		.uleb128 0x18
 987 0311 3B030000 		.4byte	.LASF59
 988 0315 01       		.byte	0x1
 989 0316 6E       		.byte	0x6e
 990 0317 45000000 		.4byte	0x45
 991 031b 02       		.uleb128 0x2
 992 031c 91       		.byte	0x91
 993 031d 76       		.sleb128 -10
 994 031e 00       		.byte	0
 995 031f 19       		.uleb128 0x19
 996 0320 04       		.byte	0x4
 997 0321 25030000 		.4byte	0x325
 998 0325 1A       		.uleb128 0x1a
 999 0326 25000000 		.4byte	0x25
 1000 032a 1A       		.uleb128 0x1a
 1001 032b 1F030000 		.4byte	0x31f
 1002 032f 15       		.uleb128 0x15
 1003 0330 18010000 		.4byte	.LASF56
 1004 0334 01       		.byte	0x1
 1005 0335 81       		.byte	0x81
 1006 0336 57000000 		.4byte	0x57
 1007 033a 00000000 		.4byte	.LFB70
 1008 033e 38000000 		.4byte	.LFE70-.LFB70
 1009 0342 01       		.uleb128 0x1
 1010 0343 9C       		.byte	0x9c
 1011 0344 81030000 		.4byte	0x381
 1012 0348 16       		.uleb128 0x16
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 28


 1013 0349 27010000 		.4byte	.LASF52
 1014 034d 01       		.byte	0x1
 1015 034e 81       		.byte	0x81
 1016 034f 4F020000 		.4byte	0x24f
 1017 0353 02       		.uleb128 0x2
 1018 0354 91       		.byte	0x91
 1019 0355 6C       		.sleb128 -20
 1020 0356 16       		.uleb128 0x16
 1021 0357 E2030000 		.4byte	.LASF57
 1022 035b 01       		.byte	0x1
 1023 035c 81       		.byte	0x81
 1024 035d 81030000 		.4byte	0x381
 1025 0361 02       		.uleb128 0x2
 1026 0362 91       		.byte	0x91
 1027 0363 68       		.sleb128 -24
 1028 0364 16       		.uleb128 0x16
 1029 0365 E0020000 		.4byte	.LASF58
 1030 0369 01       		.byte	0x1
 1031 036a 81       		.byte	0x81
 1032 036b 39020000 		.4byte	0x239
 1033 036f 02       		.uleb128 0x2
 1034 0370 91       		.byte	0x91
 1035 0371 64       		.sleb128 -28
 1036 0372 18       		.uleb128 0x18
 1037 0373 DA030000 		.4byte	.LASF60
 1038 0377 01       		.byte	0x1
 1039 0378 83       		.byte	0x83
 1040 0379 57000000 		.4byte	0x57
 1041 037d 02       		.uleb128 0x2
 1042 037e 91       		.byte	0x91
 1043 037f 74       		.sleb128 -12
 1044 0380 00       		.byte	0
 1045 0381 19       		.uleb128 0x19
 1046 0382 04       		.byte	0x4
 1047 0383 25000000 		.4byte	0x25
 1048 0387 15       		.uleb128 0x15
 1049 0388 2F040000 		.4byte	.LASF61
 1050 038c 01       		.byte	0x1
 1051 038d 8E       		.byte	0x8e
 1052 038e 57000000 		.4byte	0x57
 1053 0392 00000000 		.4byte	.LFB71
 1054 0396 50000000 		.4byte	.LFE71-.LFB71
 1055 039a 01       		.uleb128 0x1
 1056 039b 9C       		.byte	0x9c
 1057 039c D9030000 		.4byte	0x3d9
 1058 03a0 16       		.uleb128 0x16
 1059 03a1 27010000 		.4byte	.LASF52
 1060 03a5 01       		.byte	0x1
 1061 03a6 8E       		.byte	0x8e
 1062 03a7 4F020000 		.4byte	0x24f
 1063 03ab 02       		.uleb128 0x2
 1064 03ac 91       		.byte	0x91
 1065 03ad 6C       		.sleb128 -20
 1066 03ae 16       		.uleb128 0x16
 1067 03af B7010000 		.4byte	.LASF62
 1068 03b3 01       		.byte	0x1
 1069 03b4 8E       		.byte	0x8e
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 29


 1070 03b5 25000000 		.4byte	0x25
 1071 03b9 02       		.uleb128 0x2
 1072 03ba 91       		.byte	0x91
 1073 03bb 6B       		.sleb128 -21
 1074 03bc 16       		.uleb128 0x16
 1075 03bd E0020000 		.4byte	.LASF58
 1076 03c1 01       		.byte	0x1
 1077 03c2 8E       		.byte	0x8e
 1078 03c3 39020000 		.4byte	0x239
 1079 03c7 02       		.uleb128 0x2
 1080 03c8 91       		.byte	0x91
 1081 03c9 64       		.sleb128 -28
 1082 03ca 18       		.uleb128 0x18
 1083 03cb DA030000 		.4byte	.LASF60
 1084 03cf 01       		.byte	0x1
 1085 03d0 90       		.byte	0x90
 1086 03d1 57000000 		.4byte	0x57
 1087 03d5 02       		.uleb128 0x2
 1088 03d6 91       		.byte	0x91
 1089 03d7 74       		.sleb128 -12
 1090 03d8 00       		.byte	0
 1091 03d9 17       		.uleb128 0x17
 1092 03da 19040000 		.4byte	.LASF64
 1093 03de 01       		.byte	0x1
 1094 03df A8       		.byte	0xa8
 1095 03e0 00000000 		.4byte	.LFB72
 1096 03e4 90000000 		.4byte	.LFE72-.LFB72
 1097 03e8 01       		.uleb128 0x1
 1098 03e9 9C       		.byte	0x9c
 1099 03ea 6D040000 		.4byte	0x46d
 1100 03ee 18       		.uleb128 0x18
 1101 03ef 83020000 		.4byte	.LASF65
 1102 03f3 01       		.byte	0x1
 1103 03f4 AA       		.byte	0xaa
 1104 03f5 57000000 		.4byte	0x57
 1105 03f9 02       		.uleb128 0x2
 1106 03fa 91       		.byte	0x91
 1107 03fb 64       		.sleb128 -28
 1108 03fc 18       		.uleb128 0x18
 1109 03fd F9020000 		.4byte	.LASF66
 1110 0401 01       		.byte	0x1
 1111 0402 AB       		.byte	0xab
 1112 0403 6D040000 		.4byte	0x46d
 1113 0407 02       		.uleb128 0x2
 1114 0408 91       		.byte	0x91
 1115 0409 63       		.sleb128 -29
 1116 040a 18       		.uleb128 0x18
 1117 040b 27020000 		.4byte	.LASF67
 1118 040f 01       		.byte	0x1
 1119 0410 AC       		.byte	0xac
 1120 0411 25000000 		.4byte	0x25
 1121 0415 02       		.uleb128 0x2
 1122 0416 91       		.byte	0x91
 1123 0417 62       		.sleb128 -30
 1124 0418 18       		.uleb128 0x18
 1125 0419 7A030000 		.4byte	.LASF68
 1126 041d 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 30


 1127 041e AD       		.byte	0xad
 1128 041f 69000000 		.4byte	0x69
 1129 0423 02       		.uleb128 0x2
 1130 0424 91       		.byte	0x91
 1131 0425 74       		.sleb128 -12
 1132 0426 1B       		.uleb128 0x1b
 1133 0427 5A020000 		.4byte	0x25a
 1134 042b 34000000 		.4byte	.LBB10
 1135 042f 1A000000 		.4byte	.LBE10-.LBB10
 1136 0433 01       		.byte	0x1
 1137 0434 B9       		.byte	0xb9
 1138 0435 54040000 		.4byte	0x454
 1139 0439 1C       		.uleb128 0x1c
 1140 043a 34000000 		.4byte	.LBB11
 1141 043e 1A000000 		.4byte	.LBE11-.LBB11
 1142 0442 1D       		.uleb128 0x1d
 1143 0443 6A020000 		.4byte	0x26a
 1144 0447 02       		.uleb128 0x2
 1145 0448 91       		.byte	0x91
 1146 0449 6C       		.sleb128 -20
 1147 044a 1D       		.uleb128 0x1d
 1148 044b 75020000 		.4byte	0x275
 1149 044f 02       		.uleb128 0x2
 1150 0450 91       		.byte	0x91
 1151 0451 68       		.sleb128 -24
 1152 0452 00       		.byte	0
 1153 0453 00       		.byte	0
 1154 0454 1E       		.uleb128 0x1e
 1155 0455 81020000 		.4byte	0x281
 1156 0459 62000000 		.4byte	.LBB12
 1157 045d 06000000 		.4byte	.LBE12-.LBB12
 1158 0461 01       		.byte	0x1
 1159 0462 C1       		.byte	0xc1
 1160 0463 1F       		.uleb128 0x1f
 1161 0464 8E020000 		.4byte	0x28e
 1162 0468 02       		.uleb128 0x2
 1163 0469 91       		.byte	0x91
 1164 046a 70       		.sleb128 -16
 1165 046b 00       		.byte	0
 1166 046c 00       		.byte	0
 1167 046d 20       		.uleb128 0x20
 1168 046e 37000000 		.4byte	0x37
 1169 0472 17       		.uleb128 0x17
 1170 0473 24040000 		.4byte	.LASF69
 1171 0477 01       		.byte	0x1
 1172 0478 CF       		.byte	0xcf
 1173 0479 00000000 		.4byte	.LFB73
 1174 047d B0000000 		.4byte	.LFE73-.LFB73
 1175 0481 01       		.uleb128 0x1
 1176 0482 9C       		.byte	0x9c
 1177 0483 06050000 		.4byte	0x506
 1178 0487 18       		.uleb128 0x18
 1179 0488 83020000 		.4byte	.LASF65
 1180 048c 01       		.byte	0x1
 1181 048d D1       		.byte	0xd1
 1182 048e 57000000 		.4byte	0x57
 1183 0492 02       		.uleb128 0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 31


 1184 0493 91       		.byte	0x91
 1185 0494 64       		.sleb128 -28
 1186 0495 18       		.uleb128 0x18
 1187 0496 F9020000 		.4byte	.LASF66
 1188 049a 01       		.byte	0x1
 1189 049b D2       		.byte	0xd2
 1190 049c 6D040000 		.4byte	0x46d
 1191 04a0 02       		.uleb128 0x2
 1192 04a1 91       		.byte	0x91
 1193 04a2 63       		.sleb128 -29
 1194 04a3 18       		.uleb128 0x18
 1195 04a4 B7010000 		.4byte	.LASF62
 1196 04a8 01       		.byte	0x1
 1197 04a9 D3       		.byte	0xd3
 1198 04aa 25000000 		.4byte	0x25
 1199 04ae 02       		.uleb128 0x2
 1200 04af 91       		.byte	0x91
 1201 04b0 62       		.sleb128 -30
 1202 04b1 18       		.uleb128 0x18
 1203 04b2 7A030000 		.4byte	.LASF68
 1204 04b6 01       		.byte	0x1
 1205 04b7 D4       		.byte	0xd4
 1206 04b8 69000000 		.4byte	0x69
 1207 04bc 02       		.uleb128 0x2
 1208 04bd 91       		.byte	0x91
 1209 04be 74       		.sleb128 -12
 1210 04bf 1B       		.uleb128 0x1b
 1211 04c0 5A020000 		.4byte	0x25a
 1212 04c4 36000000 		.4byte	.LBB14
 1213 04c8 1A000000 		.4byte	.LBE14-.LBB14
 1214 04cc 01       		.byte	0x1
 1215 04cd DD       		.byte	0xdd
 1216 04ce ED040000 		.4byte	0x4ed
 1217 04d2 1C       		.uleb128 0x1c
 1218 04d3 36000000 		.4byte	.LBB15
 1219 04d7 1A000000 		.4byte	.LBE15-.LBB15
 1220 04db 1D       		.uleb128 0x1d
 1221 04dc 6A020000 		.4byte	0x26a
 1222 04e0 02       		.uleb128 0x2
 1223 04e1 91       		.byte	0x91
 1224 04e2 6C       		.sleb128 -20
 1225 04e3 1D       		.uleb128 0x1d
 1226 04e4 75020000 		.4byte	0x275
 1227 04e8 02       		.uleb128 0x2
 1228 04e9 91       		.byte	0x91
 1229 04ea 68       		.sleb128 -24
 1230 04eb 00       		.byte	0
 1231 04ec 00       		.byte	0
 1232 04ed 1E       		.uleb128 0x1e
 1233 04ee 81020000 		.4byte	0x281
 1234 04f2 84000000 		.4byte	.LBB16
 1235 04f6 06000000 		.4byte	.LBE16-.LBB16
 1236 04fa 01       		.byte	0x1
 1237 04fb F0       		.byte	0xf0
 1238 04fc 1F       		.uleb128 0x1f
 1239 04fd 8E020000 		.4byte	0x28e
 1240 0501 02       		.uleb128 0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 32


 1241 0502 91       		.byte	0x91
 1242 0503 70       		.sleb128 -16
 1243 0504 00       		.byte	0
 1244 0505 00       		.byte	0
 1245 0506 18       		.uleb128 0x18
 1246 0507 E8010000 		.4byte	.LASF70
 1247 050b 01       		.byte	0x1
 1248 050c 54       		.byte	0x54
 1249 050d 44020000 		.4byte	0x244
 1250 0511 05       		.uleb128 0x5
 1251 0512 03       		.byte	0x3
 1252 0513 00000000 		.4byte	xSerialTxQueue
 1253 0517 18       		.uleb128 0x18
 1254 0518 C2030000 		.4byte	.LASF71
 1255 051c 01       		.byte	0x1
 1256 051d 55       		.byte	0x55
 1257 051e 44020000 		.4byte	0x244
 1258 0522 05       		.uleb128 0x5
 1259 0523 03       		.byte	0x3
 1260 0524 04000000 		.4byte	xSerialRxQueue
 1261 0528 21       		.uleb128 0x21
 1262 0529 05040000 		.4byte	.LASF72
 1263 052d 0A       		.byte	0xa
 1264 052e 9606     		.2byte	0x696
 1265 0530 34050000 		.4byte	0x534
 1266 0534 20       		.uleb128 0x20
 1267 0535 97000000 		.4byte	0x97
 1268 0539 0B       		.uleb128 0xb
 1269 053a 8C000000 		.4byte	0x8c
 1270 053e 49050000 		.4byte	0x549
 1271 0542 0C       		.uleb128 0xc
 1272 0543 D5000000 		.4byte	0xd5
 1273 0547 0C       		.byte	0xc
 1274 0548 00       		.byte	0
 1275 0549 22       		.uleb128 0x22
 1276 054a A9010000 		.4byte	.LASF73
 1277 054e 06       		.byte	0x6
 1278 054f 12       		.byte	0x12
 1279 0550 39050000 		.4byte	0x539
 1280 0554 05       		.uleb128 0x5
 1281 0555 03       		.byte	0x3
 1282 0556 00000000 		.4byte	sniffIDFilter
 1283 055a 22       		.uleb128 0x22
 1284 055b 5D030000 		.4byte	.LASF74
 1285 055f 07       		.byte	0x7
 1286 0560 10       		.byte	0x10
 1287 0561 E9010000 		.4byte	0x1e9
 1288 0565 05       		.uleb128 0x5
 1289 0566 03       		.byte	0x3
 1290 0567 00000000 		.4byte	buffer
 1291 056b 0B       		.uleb128 0xb
 1292 056c DE010000 		.4byte	0x1de
 1293 0570 7B050000 		.4byte	0x57b
 1294 0574 0C       		.uleb128 0xc
 1295 0575 D5000000 		.4byte	0xd5
 1296 0579 05       		.byte	0x5
 1297 057a 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 33


 1298 057b 22       		.uleb128 0x22
 1299 057c 99030000 		.4byte	.LASF75
 1300 0580 0B       		.byte	0xb
 1301 0581 0D       		.byte	0xd
 1302 0582 6B050000 		.4byte	0x56b
 1303 0586 05       		.uleb128 0x5
 1304 0587 03       		.byte	0x3
 1305 0588 00000000 		.4byte	objectList
 1306 058c 00       		.byte	0
 1307              		.section	.debug_abbrev,"",%progbits
 1308              	.Ldebug_abbrev0:
 1309 0000 01       		.uleb128 0x1
 1310 0001 11       		.uleb128 0x11
 1311 0002 01       		.byte	0x1
 1312 0003 25       		.uleb128 0x25
 1313 0004 0E       		.uleb128 0xe
 1314 0005 13       		.uleb128 0x13
 1315 0006 0B       		.uleb128 0xb
 1316 0007 03       		.uleb128 0x3
 1317 0008 0E       		.uleb128 0xe
 1318 0009 1B       		.uleb128 0x1b
 1319 000a 0E       		.uleb128 0xe
 1320 000b 55       		.uleb128 0x55
 1321 000c 17       		.uleb128 0x17
 1322 000d 11       		.uleb128 0x11
 1323 000e 01       		.uleb128 0x1
 1324 000f 10       		.uleb128 0x10
 1325 0010 17       		.uleb128 0x17
 1326 0011 00       		.byte	0
 1327 0012 00       		.byte	0
 1328 0013 02       		.uleb128 0x2
 1329 0014 24       		.uleb128 0x24
 1330 0015 00       		.byte	0
 1331 0016 0B       		.uleb128 0xb
 1332 0017 0B       		.uleb128 0xb
 1333 0018 3E       		.uleb128 0x3e
 1334 0019 0B       		.uleb128 0xb
 1335 001a 03       		.uleb128 0x3
 1336 001b 0E       		.uleb128 0xe
 1337 001c 00       		.byte	0
 1338 001d 00       		.byte	0
 1339 001e 03       		.uleb128 0x3
 1340 001f 16       		.uleb128 0x16
 1341 0020 00       		.byte	0
 1342 0021 03       		.uleb128 0x3
 1343 0022 0E       		.uleb128 0xe
 1344 0023 3A       		.uleb128 0x3a
 1345 0024 0B       		.uleb128 0xb
 1346 0025 3B       		.uleb128 0x3b
 1347 0026 0B       		.uleb128 0xb
 1348 0027 49       		.uleb128 0x49
 1349 0028 13       		.uleb128 0x13
 1350 0029 00       		.byte	0
 1351 002a 00       		.byte	0
 1352 002b 04       		.uleb128 0x4
 1353 002c 24       		.uleb128 0x24
 1354 002d 00       		.byte	0
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 34


 1355 002e 0B       		.uleb128 0xb
 1356 002f 0B       		.uleb128 0xb
 1357 0030 3E       		.uleb128 0x3e
 1358 0031 0B       		.uleb128 0xb
 1359 0032 03       		.uleb128 0x3
 1360 0033 08       		.uleb128 0x8
 1361 0034 00       		.byte	0
 1362 0035 00       		.byte	0
 1363 0036 05       		.uleb128 0x5
 1364 0037 16       		.uleb128 0x16
 1365 0038 00       		.byte	0
 1366 0039 03       		.uleb128 0x3
 1367 003a 0E       		.uleb128 0xe
 1368 003b 3A       		.uleb128 0x3a
 1369 003c 0B       		.uleb128 0xb
 1370 003d 3B       		.uleb128 0x3b
 1371 003e 05       		.uleb128 0x5
 1372 003f 49       		.uleb128 0x49
 1373 0040 13       		.uleb128 0x13
 1374 0041 00       		.byte	0
 1375 0042 00       		.byte	0
 1376 0043 06       		.uleb128 0x6
 1377 0044 0F       		.uleb128 0xf
 1378 0045 00       		.byte	0
 1379 0046 0B       		.uleb128 0xb
 1380 0047 0B       		.uleb128 0xb
 1381 0048 00       		.byte	0
 1382 0049 00       		.byte	0
 1383 004a 07       		.uleb128 0x7
 1384 004b 04       		.uleb128 0x4
 1385 004c 01       		.byte	0x1
 1386 004d 0B       		.uleb128 0xb
 1387 004e 0B       		.uleb128 0xb
 1388 004f 49       		.uleb128 0x49
 1389 0050 13       		.uleb128 0x13
 1390 0051 3A       		.uleb128 0x3a
 1391 0052 0B       		.uleb128 0xb
 1392 0053 3B       		.uleb128 0x3b
 1393 0054 0B       		.uleb128 0xb
 1394 0055 01       		.uleb128 0x1
 1395 0056 13       		.uleb128 0x13
 1396 0057 00       		.byte	0
 1397 0058 00       		.byte	0
 1398 0059 08       		.uleb128 0x8
 1399 005a 28       		.uleb128 0x28
 1400 005b 00       		.byte	0
 1401 005c 03       		.uleb128 0x3
 1402 005d 0E       		.uleb128 0xe
 1403 005e 1C       		.uleb128 0x1c
 1404 005f 0B       		.uleb128 0xb
 1405 0060 00       		.byte	0
 1406 0061 00       		.byte	0
 1407 0062 09       		.uleb128 0x9
 1408 0063 13       		.uleb128 0x13
 1409 0064 01       		.byte	0x1
 1410 0065 0B       		.uleb128 0xb
 1411 0066 0B       		.uleb128 0xb
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 35


 1412 0067 3A       		.uleb128 0x3a
 1413 0068 0B       		.uleb128 0xb
 1414 0069 3B       		.uleb128 0x3b
 1415 006a 0B       		.uleb128 0xb
 1416 006b 01       		.uleb128 0x1
 1417 006c 13       		.uleb128 0x13
 1418 006d 00       		.byte	0
 1419 006e 00       		.byte	0
 1420 006f 0A       		.uleb128 0xa
 1421 0070 0D       		.uleb128 0xd
 1422 0071 00       		.byte	0
 1423 0072 03       		.uleb128 0x3
 1424 0073 0E       		.uleb128 0xe
 1425 0074 3A       		.uleb128 0x3a
 1426 0075 0B       		.uleb128 0xb
 1427 0076 3B       		.uleb128 0x3b
 1428 0077 0B       		.uleb128 0xb
 1429 0078 49       		.uleb128 0x49
 1430 0079 13       		.uleb128 0x13
 1431 007a 38       		.uleb128 0x38
 1432 007b 0B       		.uleb128 0xb
 1433 007c 00       		.byte	0
 1434 007d 00       		.byte	0
 1435 007e 0B       		.uleb128 0xb
 1436 007f 01       		.uleb128 0x1
 1437 0080 01       		.byte	0x1
 1438 0081 49       		.uleb128 0x49
 1439 0082 13       		.uleb128 0x13
 1440 0083 01       		.uleb128 0x1
 1441 0084 13       		.uleb128 0x13
 1442 0085 00       		.byte	0
 1443 0086 00       		.byte	0
 1444 0087 0C       		.uleb128 0xc
 1445 0088 21       		.uleb128 0x21
 1446 0089 00       		.byte	0
 1447 008a 49       		.uleb128 0x49
 1448 008b 13       		.uleb128 0x13
 1449 008c 2F       		.uleb128 0x2f
 1450 008d 0B       		.uleb128 0xb
 1451 008e 00       		.byte	0
 1452 008f 00       		.byte	0
 1453 0090 0D       		.uleb128 0xd
 1454 0091 13       		.uleb128 0x13
 1455 0092 01       		.byte	0x1
 1456 0093 0B       		.uleb128 0xb
 1457 0094 05       		.uleb128 0x5
 1458 0095 3A       		.uleb128 0x3a
 1459 0096 0B       		.uleb128 0xb
 1460 0097 3B       		.uleb128 0x3b
 1461 0098 0B       		.uleb128 0xb
 1462 0099 01       		.uleb128 0x1
 1463 009a 13       		.uleb128 0x13
 1464 009b 00       		.byte	0
 1465 009c 00       		.byte	0
 1466 009d 0E       		.uleb128 0xe
 1467 009e 13       		.uleb128 0x13
 1468 009f 01       		.byte	0x1
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 36


 1469 00a0 03       		.uleb128 0x3
 1470 00a1 0E       		.uleb128 0xe
 1471 00a2 0B       		.uleb128 0xb
 1472 00a3 05       		.uleb128 0x5
 1473 00a4 3A       		.uleb128 0x3a
 1474 00a5 0B       		.uleb128 0xb
 1475 00a6 3B       		.uleb128 0x3b
 1476 00a7 0B       		.uleb128 0xb
 1477 00a8 01       		.uleb128 0x1
 1478 00a9 13       		.uleb128 0x13
 1479 00aa 00       		.byte	0
 1480 00ab 00       		.byte	0
 1481 00ac 0F       		.uleb128 0xf
 1482 00ad 0D       		.uleb128 0xd
 1483 00ae 00       		.byte	0
 1484 00af 03       		.uleb128 0x3
 1485 00b0 0E       		.uleb128 0xe
 1486 00b1 3A       		.uleb128 0x3a
 1487 00b2 0B       		.uleb128 0xb
 1488 00b3 3B       		.uleb128 0x3b
 1489 00b4 0B       		.uleb128 0xb
 1490 00b5 49       		.uleb128 0x49
 1491 00b6 13       		.uleb128 0x13
 1492 00b7 38       		.uleb128 0x38
 1493 00b8 05       		.uleb128 0x5
 1494 00b9 00       		.byte	0
 1495 00ba 00       		.byte	0
 1496 00bb 10       		.uleb128 0x10
 1497 00bc 21       		.uleb128 0x21
 1498 00bd 00       		.byte	0
 1499 00be 49       		.uleb128 0x49
 1500 00bf 13       		.uleb128 0x13
 1501 00c0 2F       		.uleb128 0x2f
 1502 00c1 05       		.uleb128 0x5
 1503 00c2 00       		.byte	0
 1504 00c3 00       		.byte	0
 1505 00c4 11       		.uleb128 0x11
 1506 00c5 2E       		.uleb128 0x2e
 1507 00c6 01       		.byte	0x1
 1508 00c7 03       		.uleb128 0x3
 1509 00c8 0E       		.uleb128 0xe
 1510 00c9 3A       		.uleb128 0x3a
 1511 00ca 0B       		.uleb128 0xb
 1512 00cb 3B       		.uleb128 0x3b
 1513 00cc 0B       		.uleb128 0xb
 1514 00cd 27       		.uleb128 0x27
 1515 00ce 19       		.uleb128 0x19
 1516 00cf 49       		.uleb128 0x49
 1517 00d0 13       		.uleb128 0x13
 1518 00d1 20       		.uleb128 0x20
 1519 00d2 0B       		.uleb128 0xb
 1520 00d3 01       		.uleb128 0x1
 1521 00d4 13       		.uleb128 0x13
 1522 00d5 00       		.byte	0
 1523 00d6 00       		.byte	0
 1524 00d7 12       		.uleb128 0x12
 1525 00d8 34       		.uleb128 0x34
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 37


 1526 00d9 00       		.byte	0
 1527 00da 03       		.uleb128 0x3
 1528 00db 0E       		.uleb128 0xe
 1529 00dc 3A       		.uleb128 0x3a
 1530 00dd 0B       		.uleb128 0xb
 1531 00de 3B       		.uleb128 0x3b
 1532 00df 0B       		.uleb128 0xb
 1533 00e0 49       		.uleb128 0x49
 1534 00e1 13       		.uleb128 0x13
 1535 00e2 00       		.byte	0
 1536 00e3 00       		.byte	0
 1537 00e4 13       		.uleb128 0x13
 1538 00e5 2E       		.uleb128 0x2e
 1539 00e6 01       		.byte	0x1
 1540 00e7 03       		.uleb128 0x3
 1541 00e8 0E       		.uleb128 0xe
 1542 00e9 3A       		.uleb128 0x3a
 1543 00ea 0B       		.uleb128 0xb
 1544 00eb 3B       		.uleb128 0x3b
 1545 00ec 05       		.uleb128 0x5
 1546 00ed 27       		.uleb128 0x27
 1547 00ee 19       		.uleb128 0x19
 1548 00ef 20       		.uleb128 0x20
 1549 00f0 0B       		.uleb128 0xb
 1550 00f1 01       		.uleb128 0x1
 1551 00f2 13       		.uleb128 0x13
 1552 00f3 00       		.byte	0
 1553 00f4 00       		.byte	0
 1554 00f5 14       		.uleb128 0x14
 1555 00f6 05       		.uleb128 0x5
 1556 00f7 00       		.byte	0
 1557 00f8 03       		.uleb128 0x3
 1558 00f9 0E       		.uleb128 0xe
 1559 00fa 3A       		.uleb128 0x3a
 1560 00fb 0B       		.uleb128 0xb
 1561 00fc 3B       		.uleb128 0x3b
 1562 00fd 05       		.uleb128 0x5
 1563 00fe 49       		.uleb128 0x49
 1564 00ff 13       		.uleb128 0x13
 1565 0100 00       		.byte	0
 1566 0101 00       		.byte	0
 1567 0102 15       		.uleb128 0x15
 1568 0103 2E       		.uleb128 0x2e
 1569 0104 01       		.byte	0x1
 1570 0105 3F       		.uleb128 0x3f
 1571 0106 19       		.uleb128 0x19
 1572 0107 03       		.uleb128 0x3
 1573 0108 0E       		.uleb128 0xe
 1574 0109 3A       		.uleb128 0x3a
 1575 010a 0B       		.uleb128 0xb
 1576 010b 3B       		.uleb128 0x3b
 1577 010c 0B       		.uleb128 0xb
 1578 010d 27       		.uleb128 0x27
 1579 010e 19       		.uleb128 0x19
 1580 010f 49       		.uleb128 0x49
 1581 0110 13       		.uleb128 0x13
 1582 0111 11       		.uleb128 0x11
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 38


 1583 0112 01       		.uleb128 0x1
 1584 0113 12       		.uleb128 0x12
 1585 0114 06       		.uleb128 0x6
 1586 0115 40       		.uleb128 0x40
 1587 0116 18       		.uleb128 0x18
 1588 0117 9642     		.uleb128 0x2116
 1589 0119 19       		.uleb128 0x19
 1590 011a 01       		.uleb128 0x1
 1591 011b 13       		.uleb128 0x13
 1592 011c 00       		.byte	0
 1593 011d 00       		.byte	0
 1594 011e 16       		.uleb128 0x16
 1595 011f 05       		.uleb128 0x5
 1596 0120 00       		.byte	0
 1597 0121 03       		.uleb128 0x3
 1598 0122 0E       		.uleb128 0xe
 1599 0123 3A       		.uleb128 0x3a
 1600 0124 0B       		.uleb128 0xb
 1601 0125 3B       		.uleb128 0x3b
 1602 0126 0B       		.uleb128 0xb
 1603 0127 49       		.uleb128 0x49
 1604 0128 13       		.uleb128 0x13
 1605 0129 02       		.uleb128 0x2
 1606 012a 18       		.uleb128 0x18
 1607 012b 00       		.byte	0
 1608 012c 00       		.byte	0
 1609 012d 17       		.uleb128 0x17
 1610 012e 2E       		.uleb128 0x2e
 1611 012f 01       		.byte	0x1
 1612 0130 3F       		.uleb128 0x3f
 1613 0131 19       		.uleb128 0x19
 1614 0132 03       		.uleb128 0x3
 1615 0133 0E       		.uleb128 0xe
 1616 0134 3A       		.uleb128 0x3a
 1617 0135 0B       		.uleb128 0xb
 1618 0136 3B       		.uleb128 0x3b
 1619 0137 0B       		.uleb128 0xb
 1620 0138 27       		.uleb128 0x27
 1621 0139 19       		.uleb128 0x19
 1622 013a 11       		.uleb128 0x11
 1623 013b 01       		.uleb128 0x1
 1624 013c 12       		.uleb128 0x12
 1625 013d 06       		.uleb128 0x6
 1626 013e 40       		.uleb128 0x40
 1627 013f 18       		.uleb128 0x18
 1628 0140 9642     		.uleb128 0x2116
 1629 0142 19       		.uleb128 0x19
 1630 0143 01       		.uleb128 0x1
 1631 0144 13       		.uleb128 0x13
 1632 0145 00       		.byte	0
 1633 0146 00       		.byte	0
 1634 0147 18       		.uleb128 0x18
 1635 0148 34       		.uleb128 0x34
 1636 0149 00       		.byte	0
 1637 014a 03       		.uleb128 0x3
 1638 014b 0E       		.uleb128 0xe
 1639 014c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 39


 1640 014d 0B       		.uleb128 0xb
 1641 014e 3B       		.uleb128 0x3b
 1642 014f 0B       		.uleb128 0xb
 1643 0150 49       		.uleb128 0x49
 1644 0151 13       		.uleb128 0x13
 1645 0152 02       		.uleb128 0x2
 1646 0153 18       		.uleb128 0x18
 1647 0154 00       		.byte	0
 1648 0155 00       		.byte	0
 1649 0156 19       		.uleb128 0x19
 1650 0157 0F       		.uleb128 0xf
 1651 0158 00       		.byte	0
 1652 0159 0B       		.uleb128 0xb
 1653 015a 0B       		.uleb128 0xb
 1654 015b 49       		.uleb128 0x49
 1655 015c 13       		.uleb128 0x13
 1656 015d 00       		.byte	0
 1657 015e 00       		.byte	0
 1658 015f 1A       		.uleb128 0x1a
 1659 0160 26       		.uleb128 0x26
 1660 0161 00       		.byte	0
 1661 0162 49       		.uleb128 0x49
 1662 0163 13       		.uleb128 0x13
 1663 0164 00       		.byte	0
 1664 0165 00       		.byte	0
 1665 0166 1B       		.uleb128 0x1b
 1666 0167 1D       		.uleb128 0x1d
 1667 0168 01       		.byte	0x1
 1668 0169 31       		.uleb128 0x31
 1669 016a 13       		.uleb128 0x13
 1670 016b 11       		.uleb128 0x11
 1671 016c 01       		.uleb128 0x1
 1672 016d 12       		.uleb128 0x12
 1673 016e 06       		.uleb128 0x6
 1674 016f 58       		.uleb128 0x58
 1675 0170 0B       		.uleb128 0xb
 1676 0171 59       		.uleb128 0x59
 1677 0172 0B       		.uleb128 0xb
 1678 0173 01       		.uleb128 0x1
 1679 0174 13       		.uleb128 0x13
 1680 0175 00       		.byte	0
 1681 0176 00       		.byte	0
 1682 0177 1C       		.uleb128 0x1c
 1683 0178 0B       		.uleb128 0xb
 1684 0179 01       		.byte	0x1
 1685 017a 11       		.uleb128 0x11
 1686 017b 01       		.uleb128 0x1
 1687 017c 12       		.uleb128 0x12
 1688 017d 06       		.uleb128 0x6
 1689 017e 00       		.byte	0
 1690 017f 00       		.byte	0
 1691 0180 1D       		.uleb128 0x1d
 1692 0181 34       		.uleb128 0x34
 1693 0182 00       		.byte	0
 1694 0183 31       		.uleb128 0x31
 1695 0184 13       		.uleb128 0x13
 1696 0185 02       		.uleb128 0x2
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 40


 1697 0186 18       		.uleb128 0x18
 1698 0187 00       		.byte	0
 1699 0188 00       		.byte	0
 1700 0189 1E       		.uleb128 0x1e
 1701 018a 1D       		.uleb128 0x1d
 1702 018b 01       		.byte	0x1
 1703 018c 31       		.uleb128 0x31
 1704 018d 13       		.uleb128 0x13
 1705 018e 11       		.uleb128 0x11
 1706 018f 01       		.uleb128 0x1
 1707 0190 12       		.uleb128 0x12
 1708 0191 06       		.uleb128 0x6
 1709 0192 58       		.uleb128 0x58
 1710 0193 0B       		.uleb128 0xb
 1711 0194 59       		.uleb128 0x59
 1712 0195 0B       		.uleb128 0xb
 1713 0196 00       		.byte	0
 1714 0197 00       		.byte	0
 1715 0198 1F       		.uleb128 0x1f
 1716 0199 05       		.uleb128 0x5
 1717 019a 00       		.byte	0
 1718 019b 31       		.uleb128 0x31
 1719 019c 13       		.uleb128 0x13
 1720 019d 02       		.uleb128 0x2
 1721 019e 18       		.uleb128 0x18
 1722 019f 00       		.byte	0
 1723 01a0 00       		.byte	0
 1724 01a1 20       		.uleb128 0x20
 1725 01a2 35       		.uleb128 0x35
 1726 01a3 00       		.byte	0
 1727 01a4 49       		.uleb128 0x49
 1728 01a5 13       		.uleb128 0x13
 1729 01a6 00       		.byte	0
 1730 01a7 00       		.byte	0
 1731 01a8 21       		.uleb128 0x21
 1732 01a9 34       		.uleb128 0x34
 1733 01aa 00       		.byte	0
 1734 01ab 03       		.uleb128 0x3
 1735 01ac 0E       		.uleb128 0xe
 1736 01ad 3A       		.uleb128 0x3a
 1737 01ae 0B       		.uleb128 0xb
 1738 01af 3B       		.uleb128 0x3b
 1739 01b0 05       		.uleb128 0x5
 1740 01b1 49       		.uleb128 0x49
 1741 01b2 13       		.uleb128 0x13
 1742 01b3 3F       		.uleb128 0x3f
 1743 01b4 19       		.uleb128 0x19
 1744 01b5 3C       		.uleb128 0x3c
 1745 01b6 19       		.uleb128 0x19
 1746 01b7 00       		.byte	0
 1747 01b8 00       		.byte	0
 1748 01b9 22       		.uleb128 0x22
 1749 01ba 34       		.uleb128 0x34
 1750 01bb 00       		.byte	0
 1751 01bc 03       		.uleb128 0x3
 1752 01bd 0E       		.uleb128 0xe
 1753 01be 3A       		.uleb128 0x3a
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 41


 1754 01bf 0B       		.uleb128 0xb
 1755 01c0 3B       		.uleb128 0x3b
 1756 01c1 0B       		.uleb128 0xb
 1757 01c2 49       		.uleb128 0x49
 1758 01c3 13       		.uleb128 0x13
 1759 01c4 3F       		.uleb128 0x3f
 1760 01c5 19       		.uleb128 0x19
 1761 01c6 02       		.uleb128 0x2
 1762 01c7 18       		.uleb128 0x18
 1763 01c8 00       		.byte	0
 1764 01c9 00       		.byte	0
 1765 01ca 00       		.byte	0
 1766              		.section	.debug_aranges,"",%progbits
 1767 0000 44000000 		.4byte	0x44
 1768 0004 0200     		.2byte	0x2
 1769 0006 00000000 		.4byte	.Ldebug_info0
 1770 000a 04       		.byte	0x4
 1771 000b 00       		.byte	0
 1772 000c 0000     		.2byte	0
 1773 000e 0000     		.2byte	0
 1774 0010 00000000 		.4byte	.LFB68
 1775 0014 74000000 		.4byte	.LFE68-.LFB68
 1776 0018 00000000 		.4byte	.LFB69
 1777 001c 56000000 		.4byte	.LFE69-.LFB69
 1778 0020 00000000 		.4byte	.LFB70
 1779 0024 38000000 		.4byte	.LFE70-.LFB70
 1780 0028 00000000 		.4byte	.LFB71
 1781 002c 50000000 		.4byte	.LFE71-.LFB71
 1782 0030 00000000 		.4byte	.LFB72
 1783 0034 90000000 		.4byte	.LFE72-.LFB72
 1784 0038 00000000 		.4byte	.LFB73
 1785 003c B0000000 		.4byte	.LFE73-.LFB73
 1786 0040 00000000 		.4byte	0
 1787 0044 00000000 		.4byte	0
 1788              		.section	.debug_ranges,"",%progbits
 1789              	.Ldebug_ranges0:
 1790 0000 00000000 		.4byte	.LFB68
 1791 0004 74000000 		.4byte	.LFE68
 1792 0008 00000000 		.4byte	.LFB69
 1793 000c 56000000 		.4byte	.LFE69
 1794 0010 00000000 		.4byte	.LFB70
 1795 0014 38000000 		.4byte	.LFE70
 1796 0018 00000000 		.4byte	.LFB71
 1797 001c 50000000 		.4byte	.LFE71
 1798 0020 00000000 		.4byte	.LFB72
 1799 0024 90000000 		.4byte	.LFE72
 1800 0028 00000000 		.4byte	.LFB73
 1801 002c B0000000 		.4byte	.LFE73
 1802 0030 00000000 		.4byte	0
 1803 0034 00000000 		.4byte	0
 1804              		.section	.debug_line,"",%progbits
 1805              	.Ldebug_line0:
 1806 0000 F3020000 		.section	.debug_str,"MS",%progbits,1
 1806      0200EF01 
 1806      00000201 
 1806      FB0E0D00 
 1806      01010101 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 42


 1807              	.LASF30:
 1808 0000 696E666F 		.ascii	"informationID\000"
 1808      726D6174 
 1808      696F6E49 
 1808      4400
 1809              	.LASF55:
 1810 000e 78536572 		.ascii	"xSerialPortInitMinimal\000"
 1810      69616C50 
 1810      6F727449 
 1810      6E69744D 
 1810      696E696D 
 1811              	.LASF43:
 1812 0025 77726974 		.ascii	"write\000"
 1812      6500
 1813              	.LASF34:
 1814 002b 6F626A65 		.ascii	"objectNumber\000"
 1814      63744E75 
 1814      6D626572 
 1814      00
 1815              	.LASF49:
 1816 0038 756C4E65 		.ascii	"ulNewBASEPRI\000"
 1816      77424153 
 1816      45505249 
 1816      00
 1817              	.LASF2:
 1818 0045 73686F72 		.ascii	"short int\000"
 1818      7420696E 
 1818      7400
 1819              	.LASF20:
 1820 004f 73697A65 		.ascii	"sizetype\000"
 1820      74797065 
 1820      00
 1821              	.LASF22:
 1822 0058 4D555445 		.ascii	"MUTEX\000"
 1822      5800
 1823              	.LASF31:
 1824 005e 6F626A65 		.ascii	"objectType\000"
 1824      63745479 
 1824      706500
 1825              	.LASF76:
 1826 0069 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1826      43313120 
 1826      352E342E 
 1826      31203230 
 1826      31363036 
 1827 009c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1827      20726576 
 1827      6973696F 
 1827      6E203233 
 1827      37373135 
 1828 00cf 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1828      66756E63 
 1828      74696F6E 
 1828      2D736563 
 1828      74696F6E 
 1829              	.LASF53:
 1830 00f7 70635374 		.ascii	"pcString\000"
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 43


 1830      72696E67 
 1830      00
 1831              	.LASF7:
 1832 0100 5F5F7569 		.ascii	"__uint32_t\000"
 1832      6E743332 
 1832      5F7400
 1833              	.LASF38:
 1834 010b 6F626A65 		.ascii	"objectHeader\000"
 1834      63744865 
 1834      61646572 
 1834      00
 1835              	.LASF56:
 1836 0118 78536572 		.ascii	"xSerialGetChar\000"
 1836      69616C47 
 1836      65744368 
 1836      617200
 1837              	.LASF52:
 1838 0127 7078506F 		.ascii	"pxPort\000"
 1838      727400
 1839              	.LASF12:
 1840 012e 75696E74 		.ascii	"uint8_t\000"
 1840      385F7400 
 1841              	.LASF39:
 1842 0136 6F626A65 		.ascii	"objectArray\000"
 1842      63744172 
 1842      72617900 
 1843              	.LASF35:
 1844 0142 6C656E4F 		.ascii	"lenObjectName\000"
 1844      626A6563 
 1844      744E616D 
 1844      6500
 1845              	.LASF80:
 1846 0150 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 1846      72745261 
 1846      69736542 
 1846      41534550 
 1846      524900
 1847              	.LASF28:
 1848 0163 4F626A65 		.ascii	"ObjectType\000"
 1848      63745479 
 1848      706500
 1849              	.LASF32:
 1850 016e 6C656E67 		.ascii	"length\000"
 1850      746800
 1851              	.LASF16:
 1852 0175 666C6F61 		.ascii	"float\000"
 1852      7400
 1853              	.LASF37:
 1854 017b 4F626A65 		.ascii	"Object\000"
 1854      637400
 1855              	.LASF42:
 1856 0182 72656164 		.ascii	"read\000"
 1856      00
 1857              	.LASF9:
 1858 0187 6C6F6E67 		.ascii	"long long int\000"
 1858      206C6F6E 
 1858      6720696E 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 44


 1858      7400
 1859              	.LASF45:
 1860 0195 5469636B 		.ascii	"TickType_t\000"
 1860      54797065 
 1860      5F7400
 1861              	.LASF6:
 1862 01a0 6C6F6E67 		.ascii	"long int\000"
 1862      20696E74 
 1862      00
 1863              	.LASF73:
 1864 01a9 736E6966 		.ascii	"sniffIDFilter\000"
 1864      66494446 
 1864      696C7465 
 1864      7200
 1865              	.LASF62:
 1866 01b7 634F7574 		.ascii	"cOutChar\000"
 1866      43686172 
 1866      00
 1867              	.LASF25:
 1868 01c0 52454355 		.ascii	"RECURSIVE_MUTEX\000"
 1868      52534956 
 1868      455F4D55 
 1868      54455800 
 1869              	.LASF4:
 1870 01d0 5F5F7569 		.ascii	"__uint8_t\000"
 1870      6E74385F 
 1870      7400
 1871              	.LASF46:
 1872 01da 51756575 		.ascii	"QueueHandle_t\000"
 1872      6548616E 
 1872      646C655F 
 1872      7400
 1873              	.LASF70:
 1874 01e8 78536572 		.ascii	"xSerialTxQueue\000"
 1874      69616C54 
 1874      78517565 
 1874      756500
 1875              	.LASF21:
 1876 01f7 51554555 		.ascii	"QUEUE\000"
 1876      4500
 1877              	.LASF23:
 1878 01fd 434F554E 		.ascii	"COUNTING_SEMAPHORE\000"
 1878      54494E47 
 1878      5F53454D 
 1878      4150484F 
 1878      524500
 1879              	.LASF36:
 1880 0210 6F626A65 		.ascii	"objectName\000"
 1880      63744E61 
 1880      6D6500
 1881              	.LASF19:
 1882 021b 6C6F6E67 		.ascii	"long double\000"
 1882      20646F75 
 1882      626C6500 
 1883              	.LASF67:
 1884 0227 63496E43 		.ascii	"cInChar\000"
 1884      68617200 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 45


 1885              	.LASF1:
 1886 022f 756E7369 		.ascii	"unsigned char\000"
 1886      676E6564 
 1886      20636861 
 1886      7200
 1887              	.LASF63:
 1888 023d 76536572 		.ascii	"vSerialPutString\000"
 1888      69616C50 
 1888      75745374 
 1888      72696E67 
 1888      00
 1889              	.LASF48:
 1890 024e 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 1890      6967696E 
 1890      616C4241 
 1890      53455052 
 1890      4900
 1891              	.LASF0:
 1892 0260 7369676E 		.ascii	"signed char\000"
 1892      65642063 
 1892      68617200 
 1893              	.LASF10:
 1894 026c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1894      206C6F6E 
 1894      6720756E 
 1894      7369676E 
 1894      65642069 
 1895              	.LASF65:
 1896 0283 78486967 		.ascii	"xHigherPriorityTaskWoken\000"
 1896      68657250 
 1896      72696F72 
 1896      69747954 
 1896      61736B57 
 1897              	.LASF14:
 1898 029c 75696E74 		.ascii	"uint32_t\000"
 1898      33325F74 
 1898      00
 1899              	.LASF11:
 1900 02a5 756E7369 		.ascii	"unsigned int\000"
 1900      676E6564 
 1900      20696E74 
 1900      00
 1901              	.LASF33:
 1902 02b2 4F626A65 		.ascii	"ObjectListHeader\000"
 1902      63744C69 
 1902      73744865 
 1902      61646572 
 1902      00
 1903              	.LASF44:
 1904 02c3 42617365 		.ascii	"BaseType_t\000"
 1904      54797065 
 1904      5F7400
 1905              	.LASF8:
 1906 02ce 6C6F6E67 		.ascii	"long unsigned int\000"
 1906      20756E73 
 1906      69676E65 
 1906      6420696E 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 46


 1906      7400
 1907              	.LASF58:
 1908 02e0 78426C6F 		.ascii	"xBlockTime\000"
 1908      636B5469 
 1908      6D6500
 1909              	.LASF51:
 1910 02eb 75785175 		.ascii	"uxQueueLength\000"
 1910      6575654C 
 1910      656E6774 
 1910      6800
 1911              	.LASF66:
 1912 02f9 75635374 		.ascii	"ucStatus\000"
 1912      61747573 
 1912      00
 1913              	.LASF81:
 1914 0302 76506F72 		.ascii	"vPortSetBASEPRI\000"
 1914      74536574 
 1914      42415345 
 1914      50524900 
 1915              	.LASF18:
 1916 0312 63686172 		.ascii	"char\000"
 1916      00
 1917              	.LASF29:
 1918 0317 7061636B 		.ascii	"packetID\000"
 1918      65744944 
 1918      00
 1919              	.LASF13:
 1920 0320 696E7433 		.ascii	"int32_t\000"
 1920      325F7400 
 1921              	.LASF3:
 1922 0328 73686F72 		.ascii	"short unsigned int\000"
 1922      7420756E 
 1922      7369676E 
 1922      65642069 
 1922      6E7400
 1923              	.LASF59:
 1924 033b 7573496E 		.ascii	"usIndex\000"
 1924      64657800 
 1925              	.LASF15:
 1926 0343 75696E74 		.ascii	"uint8\000"
 1926      3800
 1927              	.LASF47:
 1928 0349 78436F6D 		.ascii	"xComPortHandle\000"
 1928      506F7274 
 1928      48616E64 
 1928      6C6500
 1929              	.LASF41:
 1930 0358 64617461 		.ascii	"data\000"
 1930      00
 1931              	.LASF74:
 1932 035d 62756666 		.ascii	"buffer\000"
 1932      657200
 1933              	.LASF27:
 1934 0364 4E554D42 		.ascii	"NUMBER_OF_OBJECTTYPES\000"
 1934      45525F4F 
 1934      465F4F42 
 1934      4A454354 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 47


 1934      54595045 
 1935              	.LASF68:
 1936 037a 756C4D61 		.ascii	"ulMask\000"
 1936      736B00
 1937              	.LASF17:
 1938 0381 646F7562 		.ascii	"double\000"
 1938      6C6500
 1939              	.LASF24:
 1940 0388 42494E41 		.ascii	"BINARY_SEMAPHORE\000"
 1940      52595F53 
 1940      454D4150 
 1940      484F5245 
 1940      00
 1941              	.LASF75:
 1942 0399 6F626A65 		.ascii	"objectList\000"
 1942      63744C69 
 1942      737400
 1943              	.LASF82:
 1944 03a4 756C4E65 		.ascii	"ulNewMaskValue\000"
 1944      774D6173 
 1944      6B56616C 
 1944      756500
 1945              	.LASF26:
 1946 03b3 5441534B 		.ascii	"TASK\000"
 1946      00
 1947              	.LASF5:
 1948 03b8 5F5F696E 		.ascii	"__int32_t\000"
 1948      7433325F 
 1948      7400
 1949              	.LASF71:
 1950 03c2 78536572 		.ascii	"xSerialRxQueue\000"
 1950      69616C52 
 1950      78517565 
 1950      756500
 1951              	.LASF77:
 1952 03d1 53657269 		.ascii	"Serial.c\000"
 1952      616C2E63 
 1952      00
 1953              	.LASF60:
 1954 03da 78526574 		.ascii	"xReturn\000"
 1954      75726E00 
 1955              	.LASF57:
 1956 03e2 70635278 		.ascii	"pcRxedChar\000"
 1956      65644368 
 1956      617200
 1957              	.LASF50:
 1958 03ed 756C5761 		.ascii	"ulWantedBaud\000"
 1958      6E746564 
 1958      42617564 
 1958      00
 1959              	.LASF40:
 1960 03fa 4F626A65 		.ascii	"ObjectList\000"
 1960      63744C69 
 1960      737400
 1961              	.LASF72:
 1962 0405 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1962      52784275 
ARM GAS  C:\Users\THUNDE~1\AppData\Local\Temp\ccYfLlGQ.s 			page 48


 1962      66666572 
 1962      00
 1963              	.LASF79:
 1964 0412 42756666 		.ascii	"Buffer\000"
 1964      657200
 1965              	.LASF64:
 1966 0419 76556172 		.ascii	"vUartRxISR\000"
 1966      74527849 
 1966      535200
 1967              	.LASF69:
 1968 0424 76556172 		.ascii	"vUartTxISR\000"
 1968      74547849 
 1968      535200
 1969              	.LASF61:
 1970 042f 78536572 		.ascii	"xSerialPutChar\000"
 1970      69616C50 
 1970      75744368 
 1970      617200
 1971              	.LASF78:
 1972 043e 463A5C50 		.ascii	"F:\\Programme_Scripts\\PSOC Creator\\FreeRTOS\\Free"
 1972      726F6772 
 1972      616D6D65 
 1972      5F536372 
 1972      69707473 
 1973 046d 52544F53 		.ascii	"RTOS_CY8CKIT_059-master\\FreeRTOS_Demo.cydsn\000"
 1973      5F435938 
 1973      434B4954 
 1973      5F303539 
 1973      2D6D6173 
 1974              	.LASF54:
 1975 0499 75735374 		.ascii	"usStringLength\000"
 1975      72696E67 
 1975      4C656E67 
 1975      746800
 1976              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
